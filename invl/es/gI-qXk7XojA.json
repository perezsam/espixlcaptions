{
  "video_id": "gI-qXk7XojA",
  "title": "Boolean Logic & Logic Gates: Crash Course Computer Science #3",
  "json": [
    {
      "index": 1,
      "start_time": 3080.0,
      "end_time": 6240.0,
      "text": "¡Hola! Soy Carrie Anne, bienvenidos a Curso Rápido en Ciencias Computacionales"
    },
    {
      "index": 2,
      "start_time": 6250.0,
      "end_time": 10920.0,
      "text": "Hoy empezaremos a subir la escalera de la abstracción, y dejaremos atrás la simplicidad"
    },
    {
      "index": 3,
      "start_time": 10920.0,
      "end_time": 15340.0,
      "text": "de ser capaces de ver cada interruptor y engranaje para ganar"
    },
    {
      "index": 4,
      "start_time": 15340.0,
      "end_time": 16580.0,
      "text": "la habilidad de construir sistemas compeljos"
    },
    {
      "index": 5,
      "start_time": 16580.0,
      "end_time": 25360.0,
      "text": " "
    },
    {
      "index": 6,
      "start_time": 25640.0,
      "end_time": 30060.0,
      "text": "En el episodio anterior hablamos sobre como las computadoras evolucionaron de ser dispositivos electromecánicos,"
    },
    {
      "index": 7,
      "start_time": 30060.0,
      "end_time": 35070.0,
      "text": "con representaciones decimales de números - como los representados por los dientes de un engranaje"
    },
    {
      "index": 8,
      "start_time": 35070.0,
      "end_time": 39380.0,
      "text": "- a computadoras electrónicas con transistores que pueden encender y apagar el flujo de electricidad"
    },
    {
      "index": 9,
      "start_time": 39440.0,
      "end_time": 44100.0,
      "text": "Y afortunadamente, a pesar de tener solo dos estados de electricidad, pueden representar información importante."
    },
    {
      "index": 10,
      "start_time": 44180.0,
      "end_time": 48220.0,
      "text": "Este tipo de representación se llama Binaria -- la cual literalmente significa “de dos estados”, de la misma forma"
    },
    {
      "index": 11,
      "start_time": 48220.0,
      "end_time": 52250.0,
      "text": "en la que una bicicleta tiene dos llantas o un bípedo tiene dos piernas."
    },
    {
      "index": 12,
      "start_time": 52250.0,
      "end_time": 55670.0,
      "text": "Podrías pensar que dos estados nos son mucho con que trabajar, y ¡estás en lo correcto!"
    },
    {
      "index": 13,
      "start_time": 55670.0,
      "end_time": 59340.0,
      "text": "Pero eso es exactamente lo que necesitas para representar los valores “verdadero“ y “falso“"
    },
    {
      "index": 14,
      "start_time": 59340.0,
      "end_time": 63740.0,
      "text": "En las computadoras, el estado de “encendido“, cuando la electricidad fluye, representa verdadero"
    },
    {
      "index": 15,
      "start_time": 63740.0,
      "end_time": 66719.0,
      "text": "El estado apagado, sin flujo de electricidad, representa falso."
    },
    {
      "index": 16,
      "start_time": 66720.0,
      "end_time": 70549.0,
      "text": "También podemos escribir en binario con 1s y 0s en lugar de verdaderos o falsos -"
    },
    {
      "index": 17,
      "start_time": 70549.0,
      "end_time": 75180.0,
      "text": "estas son solo distintas expresiones de la misma señal- pero hablaremos más de esto en el siguiente episodio."
    },
    {
      "index": 18,
      "start_time": 75340.0,
      "end_time": 79300.0,
      "text": "Actualmente es posible usar a los transistores para más que solo"
    },
    {
      "index": 19,
      "start_time": 79300.0,
      "end_time": 82340.0,
      "text": "encender y apagar corriente eléctrica para distintos niveles de corriente"
    },
    {
      "index": 20,
      "start_time": 82340.0,
      "end_time": 87300.0,
      "text": "Algunas de las primeras computadoras electrónicas eran ternarias, es decir tenían tres estados, e incluso quinarias, usando 5 estados"
    },
    {
      "index": 21,
      "start_time": 87340.0,
      "end_time": 91320.0,
      "text": "El problema es que a más estados intermedios, más difícil mantenerlos separados"
    },
    {
      "index": 22,
      "start_time": 91320.0,
      "end_time": 95340.0,
      "text": "entre ellos - si la batería de tu teléfono inteligente se está acabando, o si hay un sonido eléctrico"
    },
    {
      "index": 23,
      "start_time": 95359.0,
      "end_time": 99880.0,
      "text": "porque alguien encendió un microondas cerca tuyo, las señales pueden mezclarse ... y este problema"
    },
    {
      "index": 24,
      "start_time": 99880.0,
      "end_time": 103889.0,
      "text": "solo empeora cuando los transistores cambian de estados millones de veces por segundo."
    },
    {
      "index": 25,
      "start_time": 103889.0,
      "end_time": 108499.0,
      "text": "Así que el ubicar dos señales lo más lejos posible la una de la otra, usando encendido y apagado, nos da"
    },
    {
      "index": 26,
      "start_time": 108500.0,
      "end_time": 111000.0,
      "text": "una señal más distintiva, minimizando estos problemas."
    },
    {
      "index": 27,
      "start_time": 111000.0,
      "end_time": 115780.0,
      "text": "Otro motivo para usar binario, es que una rama completa de las matemáticas que trataba"
    },
    {
      "index": 28,
      "start_time": 115780.0,
      "end_time": 118229.0,
      "text": "exclusivamente con valores verdaderos y falsos, ya existía."
    },
    {
      "index": 29,
      "start_time": 118229.0,
      "end_time": 121960.0,
      "text": "Y había investigado todas las reglas y operaciones necesarias para manipularlas"
    },
    {
      "index": 30,
      "start_time": 121960.0,
      "end_time": 123580.0,
      "text": "Se llama Álgebra Booleana"
    },
    {
      "index": 31,
      "start_time": 123600.0,
      "end_time": 129520.0,
      "text": "George Boole, cuyo nombre adoptó la Álgebra Booleana, fue un matemático Inglés autodidacta en los 1800s"
    },
    {
      "index": 32,
      "start_time": 129660.0,
      "end_time": 134040.0,
      "text": "El estaba interesado en representar declaraciones lógicas que iban “bajo, encima, y más allá“"
    },
    {
      "index": 33,
      "start_time": 134040.0,
      "end_time": 138040.0,
      "text": "del enfoque de Aristóteles a la lógica, el cual estaba basado en filosofía,"
    },
    {
      "index": 34,
      "start_time": 138040.0,
      "end_time": 142700.0,
      "text": "El enfoque de Boole permitía que la verdad sea formal y sistemáticamente probada, por medio de ecuaciones lógicas,"
    },
    {
      "index": 35,
      "start_time": 142700.0,
      "end_time": 147560.0,
      "text": "las mismas que introdujo en su primer libro “El Análisis Matemático de Lógica“ en 1847."
    },
    {
      "index": 36,
      "start_time": 147560.0,
      "end_time": 151760.0,
      "text": "En el álgebra normal -- el tipo de álgebra que probablemente aprendiste en la secundaria -- los valores de las variabes"
    },
    {
      "index": 37,
      "start_time": 151769.0,
      "end_time": 156530.0,
      "text": "son números, y las operaciones hechas con esos números son cosas como sumas o multiplicaciones."
    },
    {
      "index": 38,
      "start_time": 156530.0,
      "end_time": 161820.0,
      "text": "Pero en el Álgebra Booleana, los valores de las variables son verdaderas o falsas, y las operaciones son lógicas."
    },
    {
      "index": 39,
      "start_time": 161820.0,
      "end_time": 167760.0,
      "text": "Existen tres operaciones fundamentales en el Álgebra Booleana: NOT (no), AND (y), y OR (o)."
    },
    {
      "index": 40,
      "start_time": 167780.0,
      "end_time": 171400.0,
      "text": "Y estas operaciones resultan ser muy útiles, así que las vamos a ver individualmente."
    },
    {
      "index": 41,
      "start_time": 171400.0,
      "end_time": 175800.0,
      "text": "La operación NOT, toma un valor booleano, ya sea verdadero o falso, y lo niega."
    },
    {
      "index": 42,
      "start_time": 175860.0,
      "end_time": 178060.0,
      "text": "Cambia lo verdadero a falso y lo falso a verdadero."
    },
    {
      "index": 43,
      "start_time": 178060.0,
      "end_time": 181880.0,
      "text": "Podemos escribir una tabla lógica que muestre el valor original de cualquier entrada  (INPUT)"
    },
    {
      "index": 44,
      "start_time": 181890.0,
      "end_time": 184790.0,
      "text": "y el resultado después de aplicar  la operación en OUTPUT (salida)"
    },
    {
      "index": 45,
      "start_time": 184790.0,
      "end_time": 188969.0,
      "text": "Ahora aquí viene la parte divertida -- podeoms fácilmente construir lógica booleana con transistores"
    },
    {
      "index": 46,
      "start_time": 188969.0,
      "end_time": 193600.0,
      "text": "Como discutimos el episodio anterior, los transistores son pequeños interruptores controlados eléctricamente"
    },
    {
      "index": 47,
      "start_time": 193640.0,
      "end_time": 196820.0,
      "text": "Tienen 3 cables: dos electrodos y un cable de control"
    },
    {
      "index": 48,
      "start_time": 196820.0,
      "end_time": 201299.0,
      "text": "Cuando se aplica electricidad al cable de control, permite que el flujo de corriente vaya desde un"
    },
    {
      "index": 49,
      "start_time": 201300.0,
      "end_time": 204469.0,
      "text": "electrodo, a través del transistor, y hacia el otro electrodo"
    },
    {
      "index": 50,
      "start_time": 204469.0,
      "end_time": 209600.0,
      "text": "Esto es bastante parecido a la espita de un grifo, giras las manecilla y el agua fluye, la cierras, y el agua para."
    },
    {
      "index": 51,
      "start_time": 209640.0,
      "end_time": 214860.0,
      "text": "Puedes pensar en el cable de control como una entrada, y al cable que viene del electrodo inferior como la salida."
    },
    {
      "index": 52,
      "start_time": 214860.0,
      "end_time": 218340.0,
      "text": "Así, en un transistor tenemos una entrada y una salida."
    },
    {
      "index": 53,
      "start_time": 218359.0,
      "end_time": 222650.0,
      "text": "Si encendemos la entrada, la salida también se enciende porque la corriente puede fluir a través de ella."
    },
    {
      "index": 54,
      "start_time": 222650.0,
      "end_time": 226999.0,
      "text": "Si apagamos la entrada, la salida también se apaga y la corriente ya no puede pasar."
    },
    {
      "index": 55,
      "start_time": 226999.0,
      "end_time": 230410.0,
      "text": "O en términos booleanos, cuando la entrada es verdadera, la salida es verdadera."
    },
    {
      "index": 56,
      "start_time": 230410.0,
      "end_time": 233230.0,
      "text": "Y cuando la entrada es falsa, la salida también lo es."
    },
    {
      "index": 57,
      "start_time": 233230.0,
      "end_time": 235329.0,
      "text": "Esto también lo podemos mostrar en una tabla lógica."
    },
    {
      "index": 58,
      "start_time": 235329.0,
      "end_time": 238909.0,
      "text": "Este no es un circuito muy emocionante porque no está haciendo nada -- la entrada y"
    },
    {
      "index": 59,
      "start_time": 238909.0,
      "end_time": 240180.0,
      "text": "la salida son iguales."
    },
    {
      "index": 60,
      "start_time": 240180.0,
      "end_time": 243680.0,
      "text": "Pero podemos modificar este circuito un poco para crear un NOT."
    },
    {
      "index": 61,
      "start_time": 243680.0,
      "end_time": 247560.0,
      "text": "En lugar de tener el cable de salida al final del transistor, podemos situarlo antes."
    },
    {
      "index": 62,
      "start_time": 247560.0,
      "end_time": 251180.0,
      "text": "Si encendemos la entrada, el transistor permite que la corriente pase hacia  “tierra“."
    },
    {
      "index": 63,
      "start_time": 251180.0,
      "end_time": 254030.0,
      "text": "y la salida no recibirá esa corriente - así que estará apagada."
    },
    {
      "index": 64,
      "start_time": 254030.0,
      "end_time": 257930.0,
      "text": "En nuestra metáfora del agua, el equivalente de tierra sería que toda el agua en tu casa fluya"
    },
    {
      "index": 65,
      "start_time": 257930.0,
      "end_time": 261280.0,
      "text": "en una casa gigante, no habría suficiente presión para tu ducha."
    },
    {
      "index": 66,
      "start_time": 261279.99999999997,
      "end_time": 264320.0,
      "text": "En este caso, si la entrada está encendida, la salida está apagada."
    },
    {
      "index": 67,
      "start_time": 264320.0,
      "end_time": 268300.0,
      "text": "Pero cuando encendemos el transistor, la corriente no puede fluir hacia tierra"
    },
    {
      "index": 68,
      "start_time": 268300.0,
      "end_time": 271500.0,
      "text": "así que en su lugar, fluye a través de cable de salida."
    },
    {
      "index": 69,
      "start_time": 271500.0,
      "end_time": 274200.0,
      "text": "Así que la entrada estaría apagada y la salida encendida."
    },
    {
      "index": 70,
      "start_time": 274200.0,
      "end_time": 278820.0,
      "text": "Y esto encaja con nuestra tabla lógica para NOT, así que felicitaciones, acabamos de construir un circuito que computa NOT"
    },
    {
      "index": 71,
      "start_time": 278860.0,
      "end_time": 283640.0,
      "text": "Las llamamos gates (puertas) NOT, porque controlan el camino e nuestra corriente."
    },
    {
      "index": 72,
      "start_time": 283640.0,
      "end_time": 288220.0,
      "text": "La operacón Booleana AND toma dos entradas, pero tiene una sola salida."
    },
    {
      "index": 73,
      "start_time": 288220.0,
      "end_time": 291440.0,
      "text": "En este caso, la salida es solo verdadera si las dos entradas son verdaderas."
    },
    {
      "index": 74,
      "start_time": 291449.0,
      "end_time": 293000.0,
      "text": "Piensa que esto es como decir la verdad."
    },
    {
      "index": 75,
      "start_time": 293000.0,
      "end_time": 296009.0,
      "text": "Solo eres completamente honesto si no mientes ni un poco."
    },
    {
      "index": 76,
      "start_time": 296009.0,
      "end_time": 301220.0,
      "text": "Por ejemplo, tomemos la declaración  “Mi nombre es Carrie Anne AND (y) estoy usando un vestido azul “."
    },
    {
      "index": 77,
      "start_time": 301280.0,
      "end_time": 303640.0,
      "text": "Ambos argumentos son verdaderos, así que toda la declaración es verdadera."
    },
    {
      "index": 78,
      "start_time": 303640.0,
      "end_time": 308060.0,
      "text": "Pero si dijera,  “Mi nombre es Carrie Anne AND (y) estoy usando jeans“, sería falso"
    },
    {
      "index": 79,
      "start_time": 308069.0,
      "end_time": 309699.0,
      "text": "porque no estoy usando jeans"
    },
    {
      "index": 80,
      "start_time": 309699.0,
      "end_time": 310930.0,
      "text": "o vaqueros"
    },
    {
      "index": 81,
      "start_time": 310930.0,
      "end_time": 311949.0,
      "text": "si estás en España"
    },
    {
      "index": 82,
      "start_time": 311949.0,
      "end_time": 315919.0,
      "text": "La parte sobre mi nombre es verdadera, pero una verdad y un falso, sigue siendo falso"
    },
    {
      "index": 83,
      "start_time": 315919.0,
      "end_time": 319789.0,
      "text": "Si cambiara el orden de ese argumento, seguiría siendo falso obviamente, y si"
    },
    {
      "index": 84,
      "start_time": 319789.0,
      "end_time": 324530.0,
      "text": "te dijera dos mentiras, esas también son falsas, de esta manera podemos escribir este tipo de combinaciones."
    },
    {
      "index": 85,
      "start_time": 324530.0,
      "end_time": 325550.0,
      "text": "en la tabla."
    },
    {
      "index": 86,
      "start_time": 325550.0,
      "end_time": 330580.0,
      "text": "Para construir una puerta AND, necesitamos dos transistores conectados juntos para tener dos entradas"
    },
    {
      "index": 87,
      "start_time": 330580.0,
      "end_time": 331780.0,
      "text": "y una salida."
    },
    {
      "index": 88,
      "start_time": 331780.0,
      "end_time": 336700.0,
      "text": "Si encendemos únicamente el transistor A, la corriente no dejará de fluir porque la corriente es detenida por el transistor B."
    },
    {
      "index": 89,
      "start_time": 336700.0,
      "end_time": 340080.0,
      "text": "Alternativamente, si el transistor B está encendido, pero el transistor A está apagado,"
    },
    {
      "index": 90,
      "start_time": 340160.0,
      "end_time": 341780.0,
      "text": "pasa lo mismo, la corriente no puede pasar."
    },
    {
      "index": 91,
      "start_time": 341840.0,
      "end_time": 346740.0,
      "text": "Solo si el transistor A AND (ly) el B están encendidos, la salida tendrá corriente."
    },
    {
      "index": 92,
      "start_time": 346740.0,
      "end_time": 351860.0,
      "text": "La última operación booleana es OR (o) -- en la cual solo una entrada tiene que ser verdadera para que la salida sea verdadera."
    },
    {
      "index": 93,
      "start_time": 351960.0,
      "end_time": 355800.0,
      "text": "Por ejemplo, mi nombre es Margaret Hamilton OR (o) estoy usando un vestido azul."
    },
    {
      "index": 94,
      "start_time": 355800.0,
      "end_time": 359560.0,
      "text": "Este es un argumento verdadero porque a pesar de que lamentablemente no soy Margaret Hamilton,"
    },
    {
      "index": 95,
      "start_time": 359560.0,
      "end_time": 362940.0,
      "text": "estoy usando un vestido azul, así que todo la declaración es verdad."
    },
    {
      "index": 96,
      "start_time": 362940.0,
      "end_time": 366300.0,
      "text": "Una declaración OR también es verdadera si ambos argumentos son verdaderos"
    },
    {
      "index": 97,
      "start_time": 366320.0,
      "end_time": 369650.0,
      "text": "El único caso en que un argumento OR (o) es falso, es si ambas entradas son falsas."
    },
    {
      "index": 98,
      "start_time": 369650.0,
      "end_time": 372860.0,
      "text": "Construir una puerta OR de transistores, requiere algunos cables extra."
    },
    {
      "index": 99,
      "start_time": 372860.0,
      "end_time": 377520.0,
      "text": "En lugar de tener dos transistores en series - una detrás de otro - los tenemos en paralelo."
    },
    {
      "index": 100,
      "start_time": 377560.0,
      "end_time": 380460.0,
      "text": "Corremos cables desde la fuente de corriente actual a ambos transistores."
    },
    {
      "index": 101,
      "start_time": 380479.0,
      "end_time": 384940.0,
      "text": "Usamos este pequeño arco para mostrar que los cables saltan sobre los otros y no están conectados."
    },
    {
      "index": 102,
      "start_time": 384940.0,
      "end_time": 386280.0,
      "text": "aunque parezca que se cruzan."
    },
    {
      "index": 103,
      "start_time": 386280.0,
      "end_time": 390909.0,
      "text": "Si ambos transistores están apagados, la corriente no puede fluir hacía la salida,"
    },
    {
      "index": 104,
      "start_time": 390909.0,
      "end_time": 392280.0,
      "text": "es decir, la salida está apagada."
    },
    {
      "index": 105,
      "start_time": 392280.0,
      "end_time": 396409.0,
      "text": "Ahora, si encendemos solo el transistor A, la corriente puede fluir hacia la salida."
    },
    {
      "index": 106,
      "start_time": 396409.0,
      "end_time": 399880.0,
      "text": "Lo mismo pasa si el transistor A está apagado pero el transistor B está encendido."
    },
    {
      "index": 107,
      "start_time": 399880.0,
      "end_time": 403900.0,
      "text": "Básicamente si A OR (o) B están encendidos, la salida también lo está."
    },
    {
      "index": 108,
      "start_time": 403900.0,
      "end_time": 407660.0,
      "text": "Y si ambos transistores están encendidos, la salida también está encendida."
    },
    {
      "index": 109,
      "start_time": 407660.0,
      "end_time": 412129.0,
      "text": "Listo, ahora que entendemos a las puertas NOT, AND y OR, podemos dejar atrás"
    },
    {
      "index": 110,
      "start_time": 412129.0,
      "end_time": 414280.0,
      "text": "a los transistores y avanzar a un nivel más de abstracción."
    },
    {
      "index": 111,
      "start_time": 414280.0,
      "end_time": 418400.0,
      "text": "Los estándares que los ingenieros usan para estas puertas son un triángulo y un punto para NOT"
    },
    {
      "index": 112,
      "start_time": 418400.0,
      "end_time": 421200.0,
      "text": "una D para AND, y una nave espacial para OR."
    },
    {
      "index": 113,
      "start_time": 421200.0,
      "end_time": 423640.0,
      "text": "esos no son los nombres oficiales, pero así me gusta recordarlos."
    },
    {
      "index": 114,
      "start_time": 423640.0,
      "end_time": 427520.0,
      "text": "Representarlos y recordarlos de esta manera, nos permite construir componentes aún más grandes"
    },
    {
      "index": 115,
      "start_time": 427530.0,
      "end_time": 431940.0,
      "text": "pero manteniedno la complejidad relativamente igual - solo recuerda que"
    },
    {
      "index": 116,
      "start_time": 431949.0,
      "end_time": 433910.0,
      "text": "ese desorden de cables sigue allí."
    },
    {
      "index": 117,
      "start_time": 433910.0,
      "end_time": 440380.0,
      "text": "Por ejemplo, tenemos otra operación booleana útil en computación, llamada Exclusive OR, o XOR en más pequeña."
    },
    {
      "index": 118,
      "start_time": 440500.0,
      "end_time": 446750.0,
      "text": "XOR es como un OR normal, pero con una diferencia: si ambas entradas son verdaderas, la XOR es falsa."
    },
    {
      "index": 119,
      "start_time": 446750.0,
      "end_time": 451100.0,
      "text": "El único caso en que una XOR es verdadera es cuando solo una entrada es verdadera y la otra falsa."
    },
    {
      "index": 120,
      "start_time": 451100.0,
      "end_time": 455009.0,
      "text": "Es como cuando ordenas en un restaurante y tu plato puede venir con una ensalada o una sopa de acompañante"
    },
    {
      "index": 121,
      "start_time": 455009.0,
      "end_time": 456710.0,
      "text": "- lamentablemente no puedes tener las dos"
    },
    {
      "index": 122,
      "start_time": 456710.0,
      "end_time": 461020.0,
      "text": "Y construir esto con transistores es bastante confuso, pero podemos mostrar como se crea un XOR"
    },
    {
      "index": 123,
      "start_time": 461020.0,
      "end_time": 463040.0,
      "text": "partiendo de las tres puertas booleanas."
    },
    {
      "index": 124,
      "start_time": 463040.0,
      "end_time": 466240.0,
      "text": "Sabemos que tenemos dos entradas nuecamente. la A y la B, y una salida."
    },
    {
      "index": 125,
      "start_time": 466240.0,
      "end_time": 470700.0,
      "text": "Empecemos con la puerta OR, ya que su tabla de lógica es casi idéntica."
    },
    {
      "index": 126,
      "start_time": 470700.0,
      "end_time": 475200.0,
      "text": "Solo hay un problema - cuando A y B son verdaderos, la lógica es diferente de la de OR,"
    },
    {
      "index": 127,
      "start_time": 475210.0,
      "end_time": 476819.0,
      "text": "y necesitamos que la salida sea falsa."
    },
    {
      "index": 128,
      "start_time": 476819.0,
      "end_time": 479000.0,
      "text": "Para hacer esto necesitamos adicionar algunas puertas."
    },
    {
      "index": 129,
      "start_time": 479000.0,
      "end_time": 483430.0,
      "text": "Si añadimos una puerta AND y la salida es verdadera, la salida será verdadera."
    },
    {
      "index": 130,
      "start_time": 483430.0,
      "end_time": 484430.0,
      "text": "Esto no es lo que queremos."
    },
    {
      "index": 131,
      "start_time": 484430.0,
      "end_time": 487940.0,
      "text": "pero si añadimos NOT, esto la cambiaría inmediatamente a falsa."
    },
    {
      "index": 132,
      "start_time": 488060.0,
      "end_time": 493479.0,
      "text": "Listo, ahora si añadimos una puerta AND final y enviamos ese valor junto con la salida de"
    },
    {
      "index": 133,
      "start_time": 493479.0,
      "end_time": 499050.0,
      "text": "nuestra puerta OR original, la operación AND tomará los argumentos  “falso“ y  “verdadero “, y como AND necesita"
    },
    {
      "index": 134,
      "start_time": 499050.0,
      "end_time": 501060.0,
      "text": "que ambos valores sean verdaderos, la salida será falsa."
    },
    {
      "index": 135,
      "start_time": 501060.0,
      "end_time": 502819.0,
      "text": "Esa es la primera fila de nuestra tabla lógica."
    },
    {
      "index": 136,
      "start_time": 502819.0,
      "end_time": 506490.0,
      "text": "Si trabajamos con las siguientes combinaciones de entrada, podemos ver que la lógica de ese circuito"
    },
    {
      "index": 137,
      "start_time": 506490.0,
      "end_time": 508870.0,
      "text": "booleano, si implementa una operación Exclusive OR"
    },
    {
      "index": 138,
      "start_time": 508870.0,
      "end_time": 513090.0,
      "text": "Y XOR resulta ser un componente muy útil, al cual llegaremos en otro episodio,"
    },
    {
      "index": 139,
      "start_time": 513090.00000000006,
      "end_time": 518240.00000000006,
      "text": "tan útil de hecho, que los ingenieros también  le dieron su propio símbolo - una puerta OR con una sonrisa :)"
    },
    {
      "index": 140,
      "start_time": 518240.0,
      "end_time": 522330.0,
      "text": "Pero lo que es más importante es que ahora podemos poner a XOR, en nuestra caja de herramientas metafóricas y no tenemos que preocuparnos"
    },
    {
      "index": 141,
      "start_time": 522330.00000000006,
      "end_time": 526500.0,
      "text": "sobre las puertas de lógica individual que la conforman, o los transistores que conforman esas puertas,"
    },
    {
      "index": 142,
      "start_time": 526500.0,
      "end_time": 529200.0,
      "text": "o como los electrones fluyen a través de un semiconductor."
    },
    {
      "index": 143,
      "start_time": 529200.0,
      "end_time": 531300.0,
      "text": "Avanzando a un nivel más de abstracción."
    },
    {
      "index": 144,
      "start_time": 531310.0,
      "end_time": 535040.0,
      "text": "Cuando los ingenieros computacionales están diseñando procesadores, rara vez trabajan al nivel de transistores,"
    },
    {
      "index": 145,
      "start_time": 535040.0,
      "end_time": 539100.0,
      "text": "en su lugar, trabajan con bloques mucho más grandes, como puertas de lógica, y componentes incluso más grandes"
    },
    {
      "index": 146,
      "start_time": 539100.0,
      "end_time": 542340.0,
      "text": "fabricados de puertas de lógica, los cuales discutiremos en futuros episodios."
    },
    {
      "index": 147,
      "start_time": 542340.0,
      "end_time": 545811.0,
      "text": "Incluso si ya eres un programador de computadoras profesional, te preguntarás muy poco"
    },
    {
      "index": 148,
      "start_time": 545811.0,
      "end_time": 549710.0,
      "text": "sobre como se implementa en el mundo físico,"
    },
    {
      "index": 149,
      "start_time": 549710.0,
      "end_time": 551720.0,
      "text": "con estos componentes minúsculos, la lógica que estás programando."
    },
    {
      "index": 150,
      "start_time": 551720.0,
      "end_time": 555780.0,
      "text": "También hemos avanzado desde pensar en las señales eléctricas, hacia nuestra primera representación"
    },
    {
      "index": 151,
      "start_time": 555780.0,
      "end_time": 560270.0,
      "text": "de datos - verdaderos y falsos - e incluso hemos tenido un bocado de computación."
    },
    {
      "index": 152,
      "start_time": 560270.0,
      "end_time": 565320.0,
      "text": "Con solo las puertas de lógica en este episodio, podemos construir una máquina que evalúe declaraciones lógicas complejas,"
    },
    {
      "index": 153,
      "start_time": 565320.0,
      "end_time": 569480.0,
      "text": "como si “Nombre es John Green AND después de las 5pm OR es fin de semana"
    },
    {
      "index": 154,
      "start_time": 569480.0,
      "end_time": 573100.0,
      "text": "AND cerca de Pizza Hut“, entonces “John querrá pizza“ es igual a verdadero"
    },
    {
      "index": 155,
      "start_time": 573120.0,
      "end_time": 576080.0,
      "text": "Y con eso, muero de hambre, nos vemos la próxima semana"
    }
  ]
}