{
  "video_id": "ERYNyrfXjlg",
  "title": "GOTO 2016 • Exploring Swift Memory Layout • Mike Ash",
  "es": 0,
  "json": [
    {
      "index": 1,
      "start_time": 769.0,
      "end_time": 10976.0,
      "text": "(relaxed music)"
    },
    {
      "index": 2,
      "start_time": 10976.0,
      "end_time": 13586.0,
      "text": "- So we&#39;re gonna be talking about memory layout in Swift."
    },
    {
      "index": 3,
      "start_time": 13586.0,
      "end_time": 16228.0,
      "text": "As I&#39;m sure you know, Swift is Apple&#39;s brand new,"
    },
    {
      "index": 4,
      "start_time": 16228.000000000002,
      "end_time": 18543.0,
      "text": "magical, fancy programming language"
    },
    {
      "index": 5,
      "start_time": 18543.0,
      "end_time": 21441.0,
      "text": "and I&#39;m gonna go dive into it a little bit"
    },
    {
      "index": 6,
      "start_time": 21441.0,
      "end_time": 22913.0,
      "text": "and talk about the bits and bytes"
    },
    {
      "index": 7,
      "start_time": 22913.0,
      "end_time": 24253.0,
      "text": "and how it&#39;s all put together"
    },
    {
      "index": 8,
      "start_time": 24253.0,
      "end_time": 26940.0,
      "text": "and what stuff looks like in memory"
    },
    {
      "index": 9,
      "start_time": 26940.0,
      "end_time": 30341.0,
      "text": "when you actually run the code on a computer."
    },
    {
      "index": 10,
      "start_time": 30341.0,
      "end_time": 34544.0,
      "text": "Real brief about me, I&#39;m online at mikeash.com,"
    },
    {
      "index": 11,
      "start_time": 34544.0,
      "end_time": 36482.0,
      "text": "I have a blog where I do all sorts of crazy stuff"
    },
    {
      "index": 12,
      "start_time": 36482.0,
      "end_time": 38706.0,
      "text": "like this, I like to take things apart"
    },
    {
      "index": 13,
      "start_time": 38706.0,
      "end_time": 41994.0,
      "text": "and see how they tick and I&#39;ve got a bunch"
    },
    {
      "index": 14,
      "start_time": 41994.0,
      "end_time": 43590.0,
      "text": "of crazy Github projects which you should"
    },
    {
      "index": 15,
      "start_time": 43590.0,
      "end_time": 45145.0,
      "text": "probably never use for anything,"
    },
    {
      "index": 16,
      "start_time": 45145.0,
      "end_time": 48746.0,
      "text": "but are lots of fun to play with."
    },
    {
      "index": 17,
      "start_time": 48746.0,
      "end_time": 50848.0,
      "text": "I&#39;m on Twitter if you feel like following me."
    },
    {
      "index": 18,
      "start_time": 50848.0,
      "end_time": 53113.0,
      "text": "There&#39;s a picture of my cat because, you know,"
    },
    {
      "index": 19,
      "start_time": 53113.0,
      "end_time": 54710.0,
      "text": "the internet is all about cats"
    },
    {
      "index": 20,
      "start_time": 54710.0,
      "end_time": 57777.0,
      "text": "and we&#39;re fundamentally all about the internet these days."
    },
    {
      "index": 21,
      "start_time": 57777.0,
      "end_time": 60891.0,
      "text": "I fly gliders, just point of information,"
    },
    {
      "index": 22,
      "start_time": 60891.0,
      "end_time": 62699.0,
      "text": "it&#39;s a lot of fun."
    },
    {
      "index": 23,
      "start_time": 62699.0,
      "end_time": 66367.0,
      "text": "And the arrow is kinda pointing over here"
    },
    {
      "index": 24,
      "start_time": 66367.0,
      "end_time": 68386.0,
      "text": "so that&#39;s me, you know, I always put a photo"
    },
    {
      "index": 25,
      "start_time": 68386.0,
      "end_time": 70531.0,
      "text": "of myself on these slides and then afterwards I&#39;m like,"
    },
    {
      "index": 26,
      "start_time": 70531.0,
      "end_time": 72334.0,
      "text": "people can just look at me."
    },
    {
      "index": 27,
      "start_time": 72334.0,
      "end_time": 75786.0,
      "text": "So I decided I&#39;d stop doing that."
    },
    {
      "index": 28,
      "start_time": 75786.0,
      "end_time": 78774.0,
      "text": "So here&#39;s the plan; first I just wanna give"
    },
    {
      "index": 29,
      "start_time": 78774.0,
      "end_time": 80622.0,
      "text": "a quick overview of what memory is."
    },
    {
      "index": 30,
      "start_time": 80622.0,
      "end_time": 82346.0,
      "text": "I&#39;m sure you all know what memory is,"
    },
    {
      "index": 31,
      "start_time": 82346.0,
      "end_time": 84998.0,
      "text": "but it can help to get a little bit of perspective"
    },
    {
      "index": 32,
      "start_time": 84998.0,
      "end_time": 87399.0,
      "text": "and just tear it down, you know, go to the foundations,"
    },
    {
      "index": 33,
      "start_time": 87399.0,
      "end_time": 89248.0,
      "text": "revisit the fundamental stuff."
    },
    {
      "index": 34,
      "start_time": 89248.0,
      "end_time": 92099.0,
      "text": "Then I wrote a program that basically"
    },
    {
      "index": 35,
      "start_time": 92099.0,
      "end_time": 94035.0,
      "text": "is where I generated all this information,"
    },
    {
      "index": 36,
      "start_time": 94035.0,
      "end_time": 96311.0,
      "text": "it actually goes through, crawls, the program"
    },
    {
      "index": 37,
      "start_time": 96311.0,
      "end_time": 98243.0,
      "text": "starting from a particular value"
    },
    {
      "index": 38,
      "start_time": 98243.0,
      "end_time": 101989.0,
      "text": "and dumps everything out that are in those values in memory."
    },
    {
      "index": 39,
      "start_time": 101989.0,
      "end_time": 104670.0,
      "text": "And then finally I&#39;m gonna actually dive into"
    },
    {
      "index": 40,
      "start_time": 104670.0,
      "end_time": 106606.0,
      "text": "how Swift lays out stuff in memory,"
    },
    {
      "index": 41,
      "start_time": 106606.0,
      "end_time": 108414.0,
      "text": "what that program actually produces"
    },
    {
      "index": 42,
      "start_time": 108414.0,
      "end_time": 115630.0,
      "text": "and some contrast with how C does it and how C++ does it."
    },
    {
      "index": 43,
      "start_time": 115630.0,
      "end_time": 118491.0,
      "text": "So what is memory?"
    },
    {
      "index": 44,
      "start_time": 118491.0,
      "end_time": 125235.0,
      "text": "And fundamentally memory is what stops this from happening."
    },
    {
      "index": 45,
      "start_time": 125235.0,
      "end_time": 128138.0,
      "text": "So you gotta keep track of where you are essentially."
    },
    {
      "index": 46,
      "start_time": 128138.0,
      "end_time": 130150.0,
      "text": "You&#39;ve got a computational process"
    },
    {
      "index": 47,
      "start_time": 130150.0,
      "end_time": 133232.0,
      "text": "and you are at some state within that process at all times."
    },
    {
      "index": 48,
      "start_time": 133232.0,
      "end_time": 134327.0,
      "text": "And if you can&#39;t keep track of that"
    },
    {
      "index": 49,
      "start_time": 134327.0,
      "end_time": 137599.0,
      "text": "then you will just never get anywhere."
    },
    {
      "index": 50,
      "start_time": 137599.0,
      "end_time": 141176.0,
      "text": "So we don&#39;t wanna just endlessly repeat,"
    },
    {
      "index": 51,
      "start_time": 141176.0,
      "end_time": 143150.0,
      "text": "we wanna actually make progress"
    },
    {
      "index": 52,
      "start_time": 143150.0,
      "end_time": 144619.0,
      "text": "and that&#39;s what this is all about."
    },
    {
      "index": 53,
      "start_time": 144619.0,
      "end_time": 148231.0,
      "text": "So figuring out how to actually build hardware"
    },
    {
      "index": 54,
      "start_time": 148231.0,
      "end_time": 151423.0,
      "text": "which can remember things and store information"
    },
    {
      "index": 55,
      "start_time": 151423.0,
      "end_time": 153402.0,
      "text": "and dig it out later is kinda one of the fundamental"
    },
    {
      "index": 56,
      "start_time": 153402.0,
      "end_time": 154918.0,
      "text": "problems in computing and there&#39;s"
    },
    {
      "index": 57,
      "start_time": 154918.0,
      "end_time": 156349.0,
      "text": "lots of technologies along the way."
    },
    {
      "index": 58,
      "start_time": 156349.0,
      "end_time": 158455.0,
      "text": "Started out with vacuum tubes."
    },
    {
      "index": 59,
      "start_time": 158455.0,
      "end_time": 161307.0,
      "text": "You can imagine these things are like this big"
    },
    {
      "index": 60,
      "start_time": 161307.0,
      "end_time": 162941.0,
      "text": "and they&#39;re essentially like an incandescent light bulb"
    },
    {
      "index": 61,
      "start_time": 162941.0,
      "end_time": 165168.0,
      "text": "and each one holds one bit."
    },
    {
      "index": 62,
      "start_time": 165168.0,
      "end_time": 167231.0,
      "text": "So if you wanna actually store some reasonable"
    },
    {
      "index": 63,
      "start_time": 167231.0,
      "end_time": 169496.0,
      "text": "amount of data you&#39;re talking about"
    },
    {
      "index": 64,
      "start_time": 169496.0,
      "end_time": 172917.0,
      "text": "a room full of incredibly hot equipment."
    },
    {
      "index": 65,
      "start_time": 172917.0,
      "end_time": 175531.0,
      "text": "Later on there were mercury delay lines,"
    },
    {
      "index": 66,
      "start_time": 175531.0,
      "end_time": 177717.0,
      "text": "this is kind of a cool technology of a pipe,"
    },
    {
      "index": 67,
      "start_time": 177717.0,
      "end_time": 179146.0,
      "text": "you basically fill it with mercury,"
    },
    {
      "index": 68,
      "start_time": 179146.0,
      "end_time": 181209.0,
      "text": "you have a speaker or something like that on one end"
    },
    {
      "index": 69,
      "start_time": 181209.0,
      "end_time": 182805.0,
      "text": "and something like a microphone on the other end"
    },
    {
      "index": 70,
      "start_time": 182805.0,
      "end_time": 185361.0,
      "text": "and you pulse your data through it."
    },
    {
      "index": 71,
      "start_time": 185361.0,
      "end_time": 188475.0,
      "text": "And it takes time to travel and because of that"
    },
    {
      "index": 72,
      "start_time": 188475.0,
      "end_time": 191206.0,
      "text": "you can fit stuff in and store your information that way."
    },
    {
      "index": 73,
      "start_time": 191206.0,
      "end_time": 192885.0,
      "text": "And there was a fun little proposal,"
    },
    {
      "index": 74,
      "start_time": 192885.0,
      "end_time": 196161.0,
      "text": "somebody decided that gin would make a good medium for this,"
    },
    {
      "index": 75,
      "start_time": 196161.0,
      "end_time": 198598.0,
      "text": "had all the right chemical properties and whatever."
    },
    {
      "index": 76,
      "start_time": 198598.0,
      "end_time": 201161.0,
      "text": "As far as I can tell nobody ever built that,"
    },
    {
      "index": 77,
      "start_time": 201161.0,
      "end_time": 203891.0,
      "text": "but fun little aside."
    },
    {
      "index": 78,
      "start_time": 203891.0,
      "end_time": 206589.0,
      "text": "Magnetic core memory was an advancement of this stuff,"
    },
    {
      "index": 79,
      "start_time": 206589.0,
      "end_time": 209366.0,
      "text": "it was a very neat technology, you got little rings"
    },
    {
      "index": 80,
      "start_time": 209366.0,
      "end_time": 212103.0,
      "text": "of iron and you run wires through them"
    },
    {
      "index": 81,
      "start_time": 212103.0,
      "end_time": 215009.0,
      "text": "and depending on the electrical current"
    },
    {
      "index": 82,
      "start_time": 215009.0,
      "end_time": 216690.0,
      "text": "you send through them you can store data"
    },
    {
      "index": 83,
      "start_time": 216690.0,
      "end_time": 218288.0,
      "text": "or retrieve data by storing it"
    },
    {
      "index": 84,
      "start_time": 218288.0,
      "end_time": 220809.0,
      "text": "in the magnetic field in those rings."
    },
    {
      "index": 85,
      "start_time": 220809.0,
      "end_time": 222696.0,
      "text": "And so that was one ring per bit."
    },
    {
      "index": 86,
      "start_time": 222696.0,
      "end_time": 226109.0,
      "text": "And the state of the art of this in the 60s or 70s"
    },
    {
      "index": 87,
      "start_time": 226109.0,
      "end_time": 228625.0,
      "text": "was basically a cube about this big"
    },
    {
      "index": 88,
      "start_time": 228625.0,
      "end_time": 231897.0,
      "text": "could hold 32,000 bits of information"
    },
    {
      "index": 89,
      "start_time": 231897.0,
      "end_time": 234292.0,
      "text": "and then you can imagine this thing I&#39;ve got"
    },
    {
      "index": 90,
      "start_time": 234292.0,
      "end_time": 238207.0,
      "text": "in my hand can hold many gigabytes memory,"
    },
    {
      "index": 91,
      "start_time": 238207.0,
      "end_time": 239807.0,
      "text": "billions of bits."
    },
    {
      "index": 92,
      "start_time": 239807.0,
      "end_time": 243382.0,
      "text": "And so things have advanced a lot since then."
    },
    {
      "index": 93,
      "start_time": 243382.0,
      "end_time": 246612.0,
      "text": "So DRAM, dynamic RAM, basically silicon chips"
    },
    {
      "index": 94,
      "start_time": 246612.0,
      "end_time": 249802.0,
      "text": "is the state of the art today."
    },
    {
      "index": 95,
      "start_time": 249802.0,
      "end_time": 251904.0,
      "text": "Which we should all be incredibly thankful for"
    },
    {
      "index": 96,
      "start_time": 251904.0,
      "end_time": 254758.0,
      "text": "because it really makes our lives a lot easier."
    },
    {
      "index": 97,
      "start_time": 254758.0,
      "end_time": 258358.0,
      "text": "That fact that we can have these,"
    },
    {
      "index": 98,
      "start_time": 258358.0,
      "end_time": 261000.0,
      "text": "this allows us to store billion and billions"
    },
    {
      "index": 99,
      "start_time": 261000.0,
      "end_time": 263861.0,
      "text": "of bits of information all at once."
    },
    {
      "index": 100,
      "start_time": 263861.0,
      "end_time": 266296.0,
      "text": "And my phone is misbehaving, if you can"
    },
    {
      "index": 101,
      "start_time": 266296.0,
      "end_time": 271386.0,
      "text": "pardon me for just a moment here, there we go."
    },
    {
      "index": 102,
      "start_time": 271386.0,
      "end_time": 274029.0,
      "text": "Alright, so that&#39;s the hardware view of things,"
    },
    {
      "index": 103,
      "start_time": 274029.0,
      "end_time": 275671.0,
      "text": "we don&#39;t really care too much about hardware"
    },
    {
      "index": 104,
      "start_time": 275671.0,
      "end_time": 277276.0,
      "text": "most of the time if we&#39;re programming"
    },
    {
      "index": 105,
      "start_time": 277276.0,
      "end_time": 278878.0,
      "text": "because that all just works, we ignore it."
    },
    {
      "index": 106,
      "start_time": 278878.0,
      "end_time": 281614.0,
      "text": "So how does it look for a programmer?"
    },
    {
      "index": 107,
      "start_time": 281614.0,
      "end_time": 284015.0,
      "text": "So we&#39;ve got the fundamental unit of information"
    },
    {
      "index": 108,
      "start_time": 284015.0,
      "end_time": 286244.0,
      "text": "is the bit, that&#39;s a one or a zero."
    },
    {
      "index": 109,
      "start_time": 286244.0,
      "end_time": 289103.0,
      "text": "Traditionally we organize bits in groups of eight,"
    },
    {
      "index": 110,
      "start_time": 289103.0,
      "end_time": 295581.0,
      "text": "those are bytes, and memory is essentially"
    },
    {
      "index": 111,
      "start_time": 295581.0,
      "end_time": 298483.0,
      "text": "just a long sequence of bytes one after the other"
    },
    {
      "index": 112,
      "start_time": 298483.0,
      "end_time": 302681.0,
      "text": "just heading off into the mist."
    },
    {
      "index": 113,
      "start_time": 302681.0,
      "end_time": 308005.0,
      "text": "And they&#39;re arranged in a certain order,"
    },
    {
      "index": 114,
      "start_time": 308005.0,
      "end_time": 310364.0,
      "text": "every byte gets a number, that&#39;s called it&#39;s address."
    },
    {
      "index": 115,
      "start_time": 310364.0,
      "end_time": 312216.0,
      "text": "So we start at zero and then one and then two"
    },
    {
      "index": 116,
      "start_time": 312216.0,
      "end_time": 314574.0,
      "text": "and then three and then an 8,000,000,000 byte system"
    },
    {
      "index": 117,
      "start_time": 314574.0,
      "end_time": 321014.0,
      "text": "we&#39;ve got billions off in the distance."
    },
    {
      "index": 118,
      "start_time": 321014.0,
      "end_time": 323366.0,
      "text": "It can be, you can view these things"
    },
    {
      "index": 119,
      "start_time": 323366.0,
      "end_time": 325375.0,
      "text": "in different directions, often we view it"
    },
    {
      "index": 120,
      "start_time": 325375.0,
      "end_time": 327346.0,
      "text": "like this, organized by word instead of by byte."
    },
    {
      "index": 121,
      "start_time": 327346.0,
      "end_time": 330285.0,
      "text": "So a word is a vague term of the art"
    },
    {
      "index": 122,
      "start_time": 330285.0,
      "end_time": 333099.0,
      "text": "in computer science, but usually it means"
    },
    {
      "index": 123,
      "start_time": 333099.0,
      "end_time": 335659.0,
      "text": "a unit that&#39;s the size of a pointer."
    },
    {
      "index": 124,
      "start_time": 335659.0,
      "end_time": 338849.0,
      "text": "So on modern devices it&#39;s 64 bits or eight bytes."
    },
    {
      "index": 125,
      "start_time": 338849.0,
      "end_time": 341671.0,
      "text": "And it just heads off into infinity."
    },
    {
      "index": 126,
      "start_time": 341671.0,
      "end_time": 348442.0,
      "text": "So here I&#39;ve got the bytes addressed by eight."
    },
    {
      "index": 127,
      "start_time": 348442.0,
      "end_time": 352894.0,
      "text": "And we like hexadecimal."
    },
    {
      "index": 128,
      "start_time": 352894.0,
      "end_time": 355452.0,
      "text": "Hexadecimal is where you&#39;ve got base 16 addressing"
    },
    {
      "index": 129,
      "start_time": 355452.0,
      "end_time": 356838.0,
      "text": "instead of base eight."
    },
    {
      "index": 130,
      "start_time": 356838.0,
      "end_time": 358854.0,
      "text": "So zero through nine then A through F,"
    },
    {
      "index": 131,
      "start_time": 358854.0,
      "end_time": 360825.0,
      "text": "that&#39;s a nice multiple of two so everything"
    },
    {
      "index": 132,
      "start_time": 360825.0,
      "end_time": 362674.0,
      "text": "fits together nicely, it&#39;s kind of"
    },
    {
      "index": 133,
      "start_time": 362674.0,
      "end_time": 364231.0,
      "text": "the native language of computing."
    },
    {
      "index": 134,
      "start_time": 364231.0,
      "end_time": 366921.0,
      "text": "So it&#39;s the natural language to use here."
    },
    {
      "index": 135,
      "start_time": 366921.0,
      "end_time": 369269.0,
      "text": "And so I&#39;ve got the addresses done"
    },
    {
      "index": 136,
      "start_time": 369269.0,
      "end_time": 372378.0,
      "text": "in hexadecimal instead, zero, eight, 16 is 10,"
    },
    {
      "index": 137,
      "start_time": 372378.0,
      "end_time": 378263.0,
      "text": "24 and all that."
    },
    {
      "index": 138,
      "start_time": 378263.0,
      "end_time": 380989.0,
      "text": "And this is just the big picture"
    },
    {
      "index": 139,
      "start_time": 380989.0,
      "end_time": 382161.0,
      "text": "of what this whole thing looks like."
    },
    {
      "index": 140,
      "start_time": 382161.0,
      "end_time": 387286.0,
      "text": "If you zoomed out this is a Mac running on x86-64,"
    },
    {
      "index": 141,
      "start_time": 387286.0,
      "end_time": 388674.0,
      "text": "everything&#39;s a little bit different"
    },
    {
      "index": 142,
      "start_time": 388674.0,
      "end_time": 390653.0,
      "text": "and it&#39;s all very platform specific,"
    },
    {
      "index": 143,
      "start_time": 390653.0,
      "end_time": 394424.0,
      "text": "but essentially you&#39;ve got a gap of stuff"
    },
    {
      "index": 144,
      "start_time": 394424.0,
      "end_time": 397924.0,
      "text": "that doesn&#39;t exist, the first four gigabytes of memory"
    },
    {
      "index": 145,
      "start_time": 397924.0,
      "end_time": 401283.0,
      "text": "is not mapped, this doesn&#39;t take up any physical space"
    },
    {
      "index": 146,
      "start_time": 401283.0,
      "end_time": 403343.0,
      "text": "it&#39;s just an addressing trick."
    },
    {
      "index": 147,
      "start_time": 403343.0,
      "end_time": 406948.0,
      "text": "Then you&#39;ve got the user, your program essentially,"
    },
    {
      "index": 148,
      "start_time": 406948.0,
      "end_time": 409351.0,
      "text": "your memory is the green stuff."
    },
    {
      "index": 149,
      "start_time": 409351.0,
      "end_time": 410990.0,
      "text": "So you get a chunk that&#39;s for you"
    },
    {
      "index": 150,
      "start_time": 410990.0,
      "end_time": 413806.0,
      "text": "and then you&#39;ve got a nice, big, empty space after that"
    },
    {
      "index": 151,
      "start_time": 413806.0,
      "end_time": 415733.0,
      "text": "and then finally the kernel is down at the bottom."
    },
    {
      "index": 152,
      "start_time": 415733.0,
      "end_time": 418376.0,
      "text": "So you&#39;ve got this two to the 64th power bytes"
    },
    {
      "index": 153,
      "start_time": 418376.0,
      "end_time": 424091.0,
      "text": "which get sliced up and organized like this."
    },
    {
      "index": 154,
      "start_time": 424091.0,
      "end_time": 426911.0,
      "text": "And this is essentially how it looks"
    },
    {
      "index": 155,
      "start_time": 426911.0,
      "end_time": 430024.0,
      "text": "if you zoom in a little bit, so this is the same"
    },
    {
      "index": 156,
      "start_time": 430024.0,
      "end_time": 432003.0,
      "text": "picture as before except it&#39;s more realistic"
    },
    {
      "index": 157,
      "start_time": 432003.0,
      "end_time": 432836.0,
      "text": "because instead of starting at zero"
    },
    {
      "index": 158,
      "start_time": 432836.0,
      "end_time": 436335.0,
      "text": "we&#39;re starting at 4,000,000,000."
    },
    {
      "index": 159,
      "start_time": 436335.0,
      "end_time": 438522.0,
      "text": "We&#39;ve got pointers in memory, I&#39;m sure you&#39;re all familiar"
    },
    {
      "index": 160,
      "start_time": 438522.0,
      "end_time": 441386.0,
      "text": "with the term pointer, references."
    },
    {
      "index": 161,
      "start_time": 441386.0,
      "end_time": 443572.0,
      "text": "A pointer at this level is just a number."
    },
    {
      "index": 162,
      "start_time": 443572.0,
      "end_time": 445375.0,
      "text": "And it&#39;s a number that just happens to correspond"
    },
    {
      "index": 163,
      "start_time": 445375.0,
      "end_time": 448825.0,
      "text": "to the address of something else in memory."
    },
    {
      "index": 164,
      "start_time": 448825.0,
      "end_time": 452899.0,
      "text": "So here we&#39;ve got this thing up there,"
    },
    {
      "index": 165,
      "start_time": 452899.0,
      "end_time": 456137.0,
      "text": "that stores the address of this bit down there"
    },
    {
      "index": 166,
      "start_time": 456137.0,
      "end_time": 457865.0,
      "text": "and I just indicate that with an arrow."
    },
    {
      "index": 167,
      "start_time": 457865.0,
      "end_time": 459503.0,
      "text": "The arrow doesn&#39;t exist in reality,"
    },
    {
      "index": 168,
      "start_time": 459503.0,
      "end_time": 464590.0,
      "text": "it&#39;s just a number that we treat as if it were an arrow."
    },
    {
      "index": 169,
      "start_time": 464590.0,
      "end_time": 466723.0,
      "text": "And one more detail on all of this,"
    },
    {
      "index": 170,
      "start_time": 466723.0,
      "end_time": 471450.0,
      "text": "whoops, went too far, we in the most modern systems"
    },
    {
      "index": 171,
      "start_time": 471450.0,
      "end_time": 473515.0,
      "text": "store things in little-endian order"
    },
    {
      "index": 172,
      "start_time": 473515.0,
      "end_time": 475907.0,
      "text": "which is essentially the least significant part"
    },
    {
      "index": 173,
      "start_time": 475907.0,
      "end_time": 477960.0,
      "text": "of the number comes first."
    },
    {
      "index": 174,
      "start_time": 477960.0,
      "end_time": 482700.0,
      "text": "So it&#39;s as if you wrote 234 as 432,"
    },
    {
      "index": 175,
      "start_time": 482700.0,
      "end_time": 484425.0,
      "text": "everything&#39;s backwards, just one of those things"
    },
    {
      "index": 176,
      "start_time": 484425.0,
      "end_time": 486429.0,
      "text": "you just kinda have to learn to live with it"
    },
    {
      "index": 177,
      "start_time": 486429.0,
      "end_time": 491389.0,
      "text": "and read it that way, so."
    },
    {
      "index": 178,
      "start_time": 491389.0,
      "end_time": 495130.0,
      "text": "Memory is organized into, as far as we see it,"
    },
    {
      "index": 179,
      "start_time": 495130.0,
      "end_time": 497857.0,
      "text": "is organized into three fundamental parts."
    },
    {
      "index": 180,
      "start_time": 497857.0,
      "end_time": 500287.0,
      "text": "We&#39;ve got at the hardware level"
    },
    {
      "index": 181,
      "start_time": 500287.0,
      "end_time": 502847.0,
      "text": "it&#39;s just a big list of stuff."
    },
    {
      "index": 182,
      "start_time": 502847.0,
      "end_time": 505197.0,
      "text": "But the way we actually treat it,"
    },
    {
      "index": 183,
      "start_time": 505197.0,
      "end_time": 507883.0,
      "text": "parts of it have more specific purposes."
    },
    {
      "index": 184,
      "start_time": 507883.0,
      "end_time": 510703.0,
      "text": "So we&#39;ve got the stack which is where"
    },
    {
      "index": 185,
      "start_time": 510703.0,
      "end_time": 513681.0,
      "text": "all your local variables go when you write"
    },
    {
      "index": 186,
      "start_time": 513681.00000000006,
      "end_time": 516072.00000000006,
      "text": "variables that you&#39;re using in your computations"
    },
    {
      "index": 187,
      "start_time": 516072.0,
      "end_time": 518300.0,
      "text": "in a function, that goes on the stack"
    },
    {
      "index": 188,
      "start_time": 518299.99999999994,
      "end_time": 520187.99999999994,
      "text": "and it&#39;s called a stack because every time"
    },
    {
      "index": 189,
      "start_time": 520188.0,
      "end_time": 523217.0,
      "text": "you make a function call it adds that function&#39;s"
    },
    {
      "index": 190,
      "start_time": 523217.0,
      "end_time": 524559.0,
      "text": "local variables to it."
    },
    {
      "index": 191,
      "start_time": 524559.0,
      "end_time": 525827.0,
      "text": "And when you make another call it goes up"
    },
    {
      "index": 192,
      "start_time": 525827.0,
      "end_time": 527377.0,
      "text": "and another call it goes up and then when you"
    },
    {
      "index": 193,
      "start_time": 527377.0,
      "end_time": 528977.0,
      "text": "return from a function it goes back down,"
    },
    {
      "index": 194,
      "start_time": 528977.0,
      "end_time": 530779.0,
      "text": "back down, back down."
    },
    {
      "index": 195,
      "start_time": 530779.0,
      "end_time": 532506.0,
      "text": "So it&#39;s like a stack of things."
    },
    {
      "index": 196,
      "start_time": 532506.0,
      "end_time": 535241.0,
      "text": "You&#39;ve also got global data in your program."
    },
    {
      "index": 197,
      "start_time": 535241.0,
      "end_time": 538052.0,
      "text": "Those are essentially things that came along"
    },
    {
      "index": 198,
      "start_time": 538052.0,
      "end_time": 540450.0,
      "text": "as part of the program when you loaded it."
    },
    {
      "index": 199,
      "start_time": 540450.0,
      "end_time": 542756.0,
      "text": "So your global variables are part of that,"
    },
    {
      "index": 200,
      "start_time": 542756.0,
      "end_time": 545060.0,
      "text": "your string constants, your type metadata"
    },
    {
      "index": 201,
      "start_time": 545060.0,
      "end_time": 549136.0,
      "text": "in Swift, in other languages, just gets loaded"
    },
    {
      "index": 202,
      "start_time": 549136.0,
      "end_time": 550946.0,
      "text": "as part of that."
    },
    {
      "index": 203,
      "start_time": 550946.0,
      "end_time": 553548.0,
      "text": "And then you&#39;ve got the heap, and the heap is dynamically"
    },
    {
      "index": 204,
      "start_time": 553548.0,
      "end_time": 555862.0,
      "text": "allocated stuff, when you create a new object,"
    },
    {
      "index": 205,
      "start_time": 555862.0,
      "end_time": 558662.0,
      "text": "that allocates some memory that&#39;s on the heap."
    },
    {
      "index": 206,
      "start_time": 558662.0,
      "end_time": 560651.0,
      "text": "And these are things where basically"
    },
    {
      "index": 207,
      "start_time": 560651.0,
      "end_time": 562876.0,
      "text": "they don&#39;t live permanently, they&#39;ve got some lifetime"
    },
    {
      "index": 208,
      "start_time": 562876.0,
      "end_time": 564764.0,
      "text": "but they&#39;re not tied to a function, they&#39;re not"
    },
    {
      "index": 209,
      "start_time": 564764.0,
      "end_time": 567579.0,
      "text": "tied to your program, they come to life"
    },
    {
      "index": 210,
      "start_time": 567579.0,
      "end_time": 570774.0,
      "text": "and go away kind of arbitrarily."
    },
    {
      "index": 211,
      "start_time": 570774.0,
      "end_time": 572836.0,
      "text": "And that&#39;s essentially everything else."
    },
    {
      "index": 212,
      "start_time": 572836.0,
      "end_time": 574978.0,
      "text": "When you create a new object, when you allocate memory"
    },
    {
      "index": 213,
      "start_time": 574978.0,
      "end_time": 577079.0,
      "text": "manually, when you concatenate strings, whatever,"
    },
    {
      "index": 214,
      "start_time": 577079.0,
      "end_time": 579817.0,
      "text": "that&#39;s all on the heap."
    },
    {
      "index": 215,
      "start_time": 579817.0,
      "end_time": 584550.0,
      "text": "So that&#39;s kinda the overview, remind you what memory is,"
    },
    {
      "index": 216,
      "start_time": 584550.0,
      "end_time": 586898.0,
      "text": "what the whole deal is that we&#39;re talking about here."
    },
    {
      "index": 217,
      "start_time": 586898.0,
      "end_time": 589451.0,
      "text": "Let&#39;s get into dumping memory."
    },
    {
      "index": 218,
      "start_time": 589451.0,
      "end_time": 592097.0,
      "text": "Actually diving in and inspecting the contents,"
    },
    {
      "index": 219,
      "start_time": 592097.0,
      "end_time": 593569.0,
      "text": "seeing what&#39;s actually in there."
    },
    {
      "index": 220,
      "start_time": 593569.0,
      "end_time": 596224.0,
      "text": "So I&#39;m gonna explore this program that I wrote,"
    },
    {
      "index": 221,
      "start_time": 596224.0,
      "end_time": 600208.0,
      "text": "how it works, that actually goes in"
    },
    {
      "index": 222,
      "start_time": 600208.0,
      "end_time": 601976.0,
      "text": "and traces all this stuff out."
    },
    {
      "index": 223,
      "start_time": 601976.0,
      "end_time": 604453.0,
      "text": "If anyone wants to take a look at it"
    },
    {
      "index": 224,
      "start_time": 604453.0,
      "end_time": 606474.0,
      "text": "I&#39;ve got it up on Github, the Github address"
    },
    {
      "index": 225,
      "start_time": 606474.0,
      "end_time": 609626.0,
      "text": "is there, or there&#39;s a tiny URL below,"
    },
    {
      "index": 226,
      "start_time": 609626.0,
      "end_time": 612356.0,
      "text": "or if anyone likes really huge URLs you can"
    },
    {
      "index": 227,
      "start_time": 612356.0,
      "end_time": 614623.0,
      "text": "use that one at the bottom, but I&#39;m not"
    },
    {
      "index": 228,
      "start_time": 614623.0,
      "end_time": 617957.0,
      "text": "gonna wait for you to type it out."
    },
    {
      "index": 229,
      "start_time": 617957.0,
      "end_time": 620218.0,
      "text": "Just real quick, this uses Xcode 8 and Swift 3."
    },
    {
      "index": 230,
      "start_time": 620218.0,
      "end_time": 622697.0,
      "text": "If anyone&#39;s doing anything with Swift so far"
    },
    {
      "index": 231,
      "start_time": 622697.0,
      "end_time": 625960.0,
      "text": "you know that there have been a lot of versions"
    },
    {
      "index": 232,
      "start_time": 625960.0,
      "end_time": 627975.0,
      "text": "of it and they like to break compatibility."
    },
    {
      "index": 233,
      "start_time": 627975.0,
      "end_time": 632021.0,
      "text": "So last year was Swift 2, starting a couple of weeks ago"
    },
    {
      "index": 234,
      "start_time": 632021.0,
      "end_time": 634466.0,
      "text": "we&#39;ve got Swift 3 now and that&#39;s different."
    },
    {
      "index": 235,
      "start_time": 634466.0,
      "end_time": 641397.0,
      "text": "So if you wanna use that code you need this."
    },
    {
      "index": 236,
      "start_time": 641397.0,
      "end_time": 643032.0,
      "text": "So back to this."
    },
    {
      "index": 237,
      "start_time": 643032.0,
      "end_time": 645769.0,
      "text": "The kind of fundamental unit of this program"
    },
    {
      "index": 238,
      "start_time": 645769.0,
      "end_time": 648456.0,
      "text": "is a function that looks like this."
    },
    {
      "index": 239,
      "start_time": 648456.0,
      "end_time": 651561.0,
      "text": "And this is a function that works on an arbitrary type,"
    },
    {
      "index": 240,
      "start_time": 651561.0,
      "end_time": 654039.0,
      "text": "it takes a value and it&#39;s gonna return an array"
    },
    {
      "index": 241,
      "start_time": 654039.0,
      "end_time": 657312.0,
      "text": "of unsigned eight bit integers, or bytes."
    },
    {
      "index": 242,
      "start_time": 657312.0,
      "end_time": 662192.0,
      "text": "And we&#39;ll just use it as in the demo above,"
    },
    {
      "index": 243,
      "start_time": 662192.0,
      "end_time": 664423.0,
      "text": "you create a variable containing something,"
    },
    {
      "index": 244,
      "start_time": 664423.0,
      "end_time": 666689.0,
      "text": "any arbitrary thing, and then you just call this"
    },
    {
      "index": 245,
      "start_time": 666689.0,
      "end_time": 669034.0,
      "text": "and it&#39;ll hand you back the bytes that make it up."
    },
    {
      "index": 246,
      "start_time": 669034.0,
      "end_time": 670982.0,
      "text": "And that&#39;s going to serve as the foundation"
    },
    {
      "index": 247,
      "start_time": 670982.0,
      "end_time": 672460.0,
      "text": "for this whole program."
    },
    {
      "index": 248,
      "start_time": 672460.0,
      "end_time": 673719.0,
      "text": "And the question is, how do we"
    },
    {
      "index": 249,
      "start_time": 673719.0,
      "end_time": 676914.0,
      "text": "write this in Swift specifically?"
    },
    {
      "index": 250,
      "start_time": 676914.0,
      "end_time": 680318.0,
      "text": "This is a real quick overview of one possible implementation"
    },
    {
      "index": 251,
      "start_time": 680318.0,
      "end_time": 682662.0,
      "text": "which is not what the program actually uses,"
    },
    {
      "index": 252,
      "start_time": 682662.0,
      "end_time": 685311.0,
      "text": "but it kinda gets the ball rolling"
    },
    {
      "index": 253,
      "start_time": 685311.0,
      "end_time": 686695.0,
      "text": "as far as how this works."
    },
    {
      "index": 254,
      "start_time": 686695.0,
      "end_time": 689855.0,
      "text": "So the idea is you get the value,"
    },
    {
      "index": 255,
      "start_time": 689855.0,
      "end_time": 692415.0,
      "text": "you get it&#39;s size and because we know the type of the value,"
    },
    {
      "index": 256,
      "start_time": 692415.0,
      "end_time": 695400.0,
      "text": "this is a generic function in Swift"
    },
    {
      "index": 257,
      "start_time": 695400.0,
      "end_time": 697552.0,
      "text": "so it works on any type, but it knows"
    },
    {
      "index": 258,
      "start_time": 697552.0,
      "end_time": 700243.0,
      "text": "what type it&#39;s being called with at any given time."
    },
    {
      "index": 259,
      "start_time": 700243.0,
      "end_time": 702298.0,
      "text": "This memory layout type allows us"
    },
    {
      "index": 260,
      "start_time": 702298.0,
      "end_time": 704314.0,
      "text": "to get the actual size, so that tells us"
    },
    {
      "index": 261,
      "start_time": 704314.0,
      "end_time": 707548.0,
      "text": "how many bytes it is, so we know how long it is in memory."
    },
    {
      "index": 262,
      "start_time": 707548.0,
      "end_time": 711128.0,
      "text": "And then there&#39;s this built-in function in Swift"
    },
    {
      "index": 263,
      "start_time": 711128.0,
      "end_time": 713688.0,
      "text": "called with unsafe pointer."
    },
    {
      "index": 264,
      "start_time": 713688.0,
      "end_time": 715578.0,
      "text": "So you call that, you give it a variable"
    },
    {
      "index": 265,
      "start_time": 715578.0,
      "end_time": 718515.0,
      "text": "and it comes back and gives you a pointer to that variable."
    },
    {
      "index": 266,
      "start_time": 718515.0,
      "end_time": 721750.0,
      "text": "And once we have a pointer we can do things"
    },
    {
      "index": 267,
      "start_time": 721750.0,
      "end_time": 725068.0,
      "text": "like look at that pointer as if it were"
    },
    {
      "index": 268,
      "start_time": 725068.0,
      "end_time": 726416.0,
      "text": "a pointer of a different type."
    },
    {
      "index": 269,
      "start_time": 726416.0,
      "end_time": 728305.0,
      "text": "So imagine you have a pointer to an int"
    },
    {
      "index": 270,
      "start_time": 728305.0,
      "end_time": 732765.0,
      "text": "and we do this with memory rebound call here"
    },
    {
      "index": 271,
      "start_time": 732765.0,
      "end_time": 736161.0,
      "text": "which says, okay, pretend that this is not"
    },
    {
      "index": 272,
      "start_time": 736161.0,
      "end_time": 738561.0,
      "text": "a pointer to an integer, pretend this is a pointer"
    },
    {
      "index": 273,
      "start_time": 738561.0,
      "end_time": 741596.0,
      "text": "to bytes, and just work with me on this,"
    },
    {
      "index": 274,
      "start_time": 741596.0,
      "end_time": 745035.0,
      "text": "it&#39;s the same thing but it&#39;s a different type."
    },
    {
      "index": 275,
      "start_time": 745035.0,
      "end_time": 748571.0,
      "text": "Now go through and read it."
    },
    {
      "index": 276,
      "start_time": 748571.0,
      "end_time": 750168.0,
      "text": "So what this does, this takes a pointer"
    },
    {
      "index": 277,
      "start_time": 750168.0,
      "end_time": 752442.0,
      "text": "to whatever arbitrary thing you&#39;ve got"
    },
    {
      "index": 278,
      "start_time": 752442.0,
      "end_time": 754920.0,
      "text": "and says, alright, just pretend it&#39;s raw bytes,"
    },
    {
      "index": 279,
      "start_time": 754920.0,
      "end_time": 756478.0,
      "text": "interpret it that way."
    },
    {
      "index": 280,
      "start_time": 756478.0,
      "end_time": 759788.0,
      "text": "And then once we have that we can go through"
    },
    {
      "index": 281,
      "start_time": 759788.0,
      "end_time": 761884.0,
      "text": "and just read one by one and that&#39;s"
    },
    {
      "index": 282,
      "start_time": 761884.0,
      "end_time": 764744.0,
      "text": "a bit of a shortcut here, I just tell the system"
    },
    {
      "index": 283,
      "start_time": 764744.0,
      "end_time": 767559.0,
      "text": "to read it for me, there&#39;s no loop or anything like that."
    },
    {
      "index": 284,
      "start_time": 767559.0,
      "end_time": 770665.0,
      "text": "Unsafe buffer pointer basically lets me say"
    },
    {
      "index": 285,
      "start_time": 770665.0,
      "end_time": 773099.0,
      "text": "it&#39;s a container and then I can create an array from that"
    },
    {
      "index": 286,
      "start_time": 773099.0,
      "end_time": 775072.0,
      "text": "and it all just kind of happens."
    },
    {
      "index": 287,
      "start_time": 775072.0,
      "end_time": 777383.0,
      "text": "Swift let&#39;s you write short stuff like that."
    },
    {
      "index": 288,
      "start_time": 777383.0,
      "end_time": 780023.0,
      "text": "So real quick demo of what this produces."
    },
    {
      "index": 289,
      "start_time": 780023.0,
      "end_time": 783886.0,
      "text": "I created a variable that contains"
    },
    {
      "index": 290,
      "start_time": 783886.0,
      "end_time": 786648.0,
      "text": "one, two, three, four, five, six, seven, eight"
    },
    {
      "index": 291,
      "start_time": 786648.0,
      "end_time": 789673.0,
      "text": "and then I just dumped out 42, and if I print these things"
    },
    {
      "index": 292,
      "start_time": 789673.0,
      "end_time": 792787.0,
      "text": "then I get these results here."
    },
    {
      "index": 293,
      "start_time": 792787.0,
      "end_time": 794545.0,
      "text": "So you can see the first one prints out"
    },
    {
      "index": 294,
      "start_time": 794545.0,
      "end_time": 796860.0,
      "text": "exactly what we saw except it&#39;s backwards"
    },
    {
      "index": 295,
      "start_time": 796860.0,
      "end_time": 799469.0,
      "text": "because remember modern systems tend to do things backwards."
    },
    {
      "index": 296,
      "start_time": 799469.0,
      "end_time": 801174.0,
      "text": "So it prints out eight, seven, six, five, four,"
    },
    {
      "index": 297,
      "start_time": 801174.0,
      "end_time": 803992.0,
      "text": "three, two, one, zero and then 42 comes out"
    },
    {
      "index": 298,
      "start_time": 803992.0,
      "end_time": 805887.0,
      "text": "as 42 with a bunch of zeros after it"
    },
    {
      "index": 299,
      "start_time": 805887.0,
      "end_time": 811074.0,
      "text": "because it&#39;s a 64 bit integer."
    },
    {
      "index": 300,
      "start_time": 811074.0,
      "end_time": 814726.0,
      "text": "And just real quick, you don&#39;t need to actually follow this,"
    },
    {
      "index": 301,
      "start_time": 814726.0,
      "end_time": 817037.0,
      "text": "this is just some code I wrote"
    },
    {
      "index": 302,
      "start_time": 817037.0,
      "end_time": 818967.0,
      "text": "that I wanted to put up real quick."
    },
    {
      "index": 303,
      "start_time": 818967.0,
      "end_time": 820893.0,
      "text": "Hexadecimal is again the natural language"
    },
    {
      "index": 304,
      "start_time": 820893.0,
      "end_time": 822904.0,
      "text": "of low level computing."
    },
    {
      "index": 305,
      "start_time": 822904.0,
      "end_time": 825426.0,
      "text": "So this just takes an array of bytes"
    },
    {
      "index": 306,
      "start_time": 825426.0,
      "end_time": 827486.0,
      "text": "and dumps it out as a hexadecimal string"
    },
    {
      "index": 307,
      "start_time": 827486.0,
      "end_time": 829634.0,
      "text": "instead of as a sequence of decimal"
    },
    {
      "index": 308,
      "start_time": 829634.0,
      "end_time": 831358.0,
      "text": "integers like we saw before."
    },
    {
      "index": 309,
      "start_time": 831358.0,
      "end_time": 834002.0,
      "text": "So if we use that then we get this instead."
    },
    {
      "index": 310,
      "start_time": 834002.0,
      "end_time": 838626.0,
      "text": "Same basic thing except instead of printing"
    },
    {
      "index": 311,
      "start_time": 838626.0,
      "end_time": 840052.0,
      "text": "decimal we get hex."
    },
    {
      "index": 312,
      "start_time": 840052.0,
      "end_time": 841775.0,
      "text": "So one, two, three, four, five, six, seven, eight"
    },
    {
      "index": 313,
      "start_time": 841775.0,
      "end_time": 843622.0,
      "text": "comes out just as it did before"
    },
    {
      "index": 314,
      "start_time": 843622.0,
      "end_time": 847284.0,
      "text": "and then 42 comes out as 2a, since that&#39;s what 42"
    },
    {
      "index": 315,
      "start_time": 847284.0,
      "end_time": 849466.0,
      "text": "is in hexadecimal, followed by a bunch of zeros."
    },
    {
      "index": 316,
      "start_time": 849466.0,
      "end_time": 852152.0,
      "text": "So this let&#39;s us dump this stuff out"
    },
    {
      "index": 317,
      "start_time": 852152.0,
      "end_time": 854173.0,
      "text": "in a form that we can understand,"
    },
    {
      "index": 318,
      "start_time": 854173.0,
      "end_time": 859353.0,
      "text": "but that&#39;s still close to what the computer has."
    },
    {
      "index": 319,
      "start_time": 859353.0,
      "end_time": 861963.0,
      "text": "Alright, so if you got this where we can take a value"
    },
    {
      "index": 320,
      "start_time": 861963.0,
      "end_time": 864691.0,
      "text": "and see what&#39;s in it, but real programs"
    },
    {
      "index": 321,
      "start_time": 864691.0,
      "end_time": 867210.0,
      "text": "are more complicated than single values, right,"
    },
    {
      "index": 322,
      "start_time": 867210.0,
      "end_time": 868515.0,
      "text": "they&#39;ve got a lot more going on."
    },
    {
      "index": 323,
      "start_time": 868515.0,
      "end_time": 870445.0,
      "text": "Real programs look more like this."
    },
    {
      "index": 324,
      "start_time": 870445.0,
      "end_time": 873167.0,
      "text": "Okay, you&#39;ve got a value which contains a bunch of bytes"
    },
    {
      "index": 325,
      "start_time": 873167.0,
      "end_time": 875933.0,
      "text": "and some of those bytes are actually pointers"
    },
    {
      "index": 326,
      "start_time": 875933.0,
      "end_time": 877652.0,
      "text": "which point to other stuff and those point"
    },
    {
      "index": 327,
      "start_time": 877652.0,
      "end_time": 881768.0,
      "text": "to other things and you get this whole tree thing going on."
    },
    {
      "index": 328,
      "start_time": 881768.0,
      "end_time": 884914.0,
      "text": "So we want to be able to actually chase all this stuff down"
    },
    {
      "index": 329,
      "start_time": 884914.0,
      "end_time": 886178.0,
      "text": "in an automated fashion."
    },
    {
      "index": 330,
      "start_time": 886178.0,
      "end_time": 888320.0,
      "text": "The program needs to be able to actually"
    },
    {
      "index": 331,
      "start_time": 888320.0,
      "end_time": 890965.0,
      "text": "find all of this stuff."
    },
    {
      "index": 332,
      "start_time": 890965.0,
      "end_time": 892439.0,
      "text": "So how do we do that?"
    },
    {
      "index": 333,
      "start_time": 892439.0,
      "end_time": 894674.0,
      "text": "We start off with the knowledge that pointers"
    },
    {
      "index": 334,
      "start_time": 894674.0,
      "end_time": 897194.0,
      "text": "are just integers, alright, a pointer"
    },
    {
      "index": 335,
      "start_time": 897194.0,
      "end_time": 900007.0,
      "text": "is just an address, it&#39;s just a number"
    },
    {
      "index": 336,
      "start_time": 900007.0,
      "end_time": 904041.0,
      "text": "which we interpret as another location in memory."
    },
    {
      "index": 337,
      "start_time": 904041.0,
      "end_time": 906523.0,
      "text": "So I wrote a quick struct which gets used in the program,"
    },
    {
      "index": 338,
      "start_time": 906523.0,
      "end_time": 908290.0,
      "text": "all it is is it just contains an address"
    },
    {
      "index": 339,
      "start_time": 908290.0,
      "end_time": 911445.0,
      "text": "which is an unsigned integer, pointer sized integer."
    },
    {
      "index": 340,
      "start_time": 911445.0,
      "end_time": 914932.0,
      "text": "And wrapping it in a struct helps me keep things apart"
    },
    {
      "index": 341,
      "start_time": 914932.0,
      "end_time": 918209.0,
      "text": "so you don&#39;t confuse which parameters"
    },
    {
      "index": 342,
      "start_time": 918209.0,
      "end_time": 920856.0,
      "text": "are actually integers and which parameters"
    },
    {
      "index": 343,
      "start_time": 920856.0,
      "end_time": 922784.0,
      "text": "are integers which we are treating as pointers, right."
    },
    {
      "index": 344,
      "start_time": 922784.0,
      "end_time": 925304.0,
      "text": "Just make a new type so that the type system"
    },
    {
      "index": 345,
      "start_time": 925304.0,
      "end_time": 929452.0,
      "text": "helps us write program correctly."
    },
    {
      "index": 346,
      "start_time": 929452.0,
      "end_time": 931764.0,
      "text": "And then this bit of code essentially"
    },
    {
      "index": 347,
      "start_time": 931764.0,
      "end_time": 934457.0,
      "text": "takes an array of bytes, which we already know"
    },
    {
      "index": 348,
      "start_time": 934457.0,
      "end_time": 936049.0,
      "text": "how to obtain, we just wrote that function,"
    },
    {
      "index": 349,
      "start_time": 936049.0,
      "end_time": 938443.0,
      "text": "and it takes that array of bytes"
    },
    {
      "index": 350,
      "start_time": 938443.0,
      "end_time": 940626.0,
      "text": "and tries to scan for pointers in it."
    },
    {
      "index": 351,
      "start_time": 940626.0,
      "end_time": 942697.0,
      "text": "So again, a pointer is just an integer"
    },
    {
      "index": 352,
      "start_time": 942697.0,
      "end_time": 945136.0,
      "text": "that you happen to treat as an address."
    },
    {
      "index": 353,
      "start_time": 945136.0,
      "end_time": 947613.0,
      "text": "And we can&#39;t know how stuff is being treated"
    },
    {
      "index": 354,
      "start_time": 947613.0,
      "end_time": 949041.0,
      "text": "at this level because we just get"
    },
    {
      "index": 355,
      "start_time": 949041.0,
      "end_time": 951304.0,
      "text": "a bunch of bytes and we don&#39;t know what they mean."
    },
    {
      "index": 356,
      "start_time": 951304.0,
      "end_time": 953617.0,
      "text": "So we&#39;re just gonna kind of optimistically go through"
    },
    {
      "index": 357,
      "start_time": 953617.0,
      "end_time": 957414.0,
      "text": "and slice it up into chunks of eight bytes"
    },
    {
      "index": 358,
      "start_time": 957414.0,
      "end_time": 959264.0,
      "text": "and pull them all out and pretend, say,"
    },
    {
      "index": 359,
      "start_time": 959264.0,
      "end_time": 962025.0,
      "text": "what if these were pointers, what would that mean?"
    },
    {
      "index": 360,
      "start_time": 962025.0,
      "end_time": 966300.0,
      "text": "So that&#39;s what this does, we take this array of bytes"
    },
    {
      "index": 361,
      "start_time": 966300.0,
      "end_time": 969321.0,
      "text": "and we say, instead of treating it"
    },
    {
      "index": 362,
      "start_time": 969321.0,
      "end_time": 971715.0,
      "text": "as an array of bytes gives me a pointer"
    },
    {
      "index": 363,
      "start_time": 971715.0,
      "end_time": 974497.0,
      "text": "to it&#39;s contents and treat it as a pointer"
    },
    {
      "index": 364,
      "start_time": 974497.0,
      "end_time": 977688.0,
      "text": "to pointers, okay, which means that we can"
    },
    {
      "index": 365,
      "start_time": 977688.0,
      "end_time": 979999.0,
      "text": "essentially go through and say, read the first pointer"
    },
    {
      "index": 366,
      "start_time": 979999.0,
      "end_time": 982226.0,
      "text": "size chunk, read the second pointer size chunk,"
    },
    {
      "index": 367,
      "start_time": 982226.0,
      "end_time": 984589.0,
      "text": "read the third pointer size chunk."
    },
    {
      "index": 368,
      "start_time": 984589.0,
      "end_time": 989043.0,
      "text": "And then we take all of that and return it as an array."
    },
    {
      "index": 369,
      "start_time": 989043.0,
      "end_time": 991693.0,
      "text": "So this code essentially will just go through"
    },
    {
      "index": 370,
      "start_time": 991693.0,
      "end_time": 994347.0,
      "text": "this big array of bytes that we get from the thing before"
    },
    {
      "index": 371,
      "start_time": 994347.0,
      "end_time": 998000.0,
      "text": "and divide it up, which, like this."
    },
    {
      "index": 372,
      "start_time": 998000.0,
      "end_time": 999897.0,
      "text": "So this is a visual indication"
    },
    {
      "index": 373,
      "start_time": 999897.0,
      "end_time": 1002166.0,
      "text": "of what&#39;s going on with that code."
    },
    {
      "index": 374,
      "start_time": 1002170.0,
      "end_time": 1004652.0,
      "text": "So we give it a value, it returns"
    },
    {
      "index": 375,
      "start_time": 1004650.0,
      "end_time": 1006501.0,
      "text": "a bunch of bytes then we go through,"
    },
    {
      "index": 376,
      "start_time": 1006500.0,
      "end_time": 1009940.0,
      "text": "slice it up and get the individual pieces."
    },
    {
      "index": 377,
      "start_time": 1009940.0,
      "end_time": 1013764.0,
      "text": "And then we can start chasing those down."
    },
    {
      "index": 378,
      "start_time": 1013760.0,
      "end_time": 1017877.0,
      "text": "So we can read a value, grab all of it&#39;s bytes,"
    },
    {
      "index": 379,
      "start_time": 1017880.0,
      "end_time": 1019855.0,
      "text": "then we can grab all of the pointers"
    },
    {
      "index": 380,
      "start_time": 1019850.0,
      "end_time": 1021524.0,
      "text": "that those bytes might indicate."
    },
    {
      "index": 381,
      "start_time": 1021530.0,
      "end_time": 1023890.0,
      "text": "And then we can take those pointers"
    },
    {
      "index": 382,
      "start_time": 1023890.0,
      "end_time": 1025353.0,
      "text": "and repeat the process and essentially"
    },
    {
      "index": 383,
      "start_time": 1025349.9999999999,
      "end_time": 1027872.9999999999,
      "text": "that gives you the tree, you can in a loop"
    },
    {
      "index": 384,
      "start_time": 1027880.0000000001,
      "end_time": 1029853.0000000001,
      "text": "keep going through as long as you&#39;ve got pointers"
    },
    {
      "index": 385,
      "start_time": 1029849.9999999999,
      "end_time": 1031862.9999999999,
      "text": "to explore, you read their contents"
    },
    {
      "index": 386,
      "start_time": 1031859.9999999999,
      "end_time": 1033954.9999999999,
      "text": "and then you spit them out."
    },
    {
      "index": 387,
      "start_time": 1033960.0,
      "end_time": 1035552.0,
      "text": "The problem with this approach,"
    },
    {
      "index": 388,
      "start_time": 1035550.0,
      "end_time": 1037565.0,
      "text": "we don&#39;t know which pointers are actually pointers"
    },
    {
      "index": 389,
      "start_time": 1037560.0,
      "end_time": 1039114.0,
      "text": "and which pointers are just integers,"
    },
    {
      "index": 390,
      "start_time": 1039119.9999999999,
      "end_time": 1041135.9999999999,
      "text": "it might be the player&#39;s high score,"
    },
    {
      "index": 391,
      "start_time": 1041130.0000000001,
      "end_time": 1043365.0000000001,
      "text": "it might be the number of people who dislike you"
    },
    {
      "index": 392,
      "start_time": 1043369.9999999999,
      "end_time": 1045937.9999999999,
      "text": "or something like that and we don&#39;t know what they mean."
    },
    {
      "index": 393,
      "start_time": 1045940.0,
      "end_time": 1048841.0,
      "text": "And normally in a program when you try"
    },
    {
      "index": 394,
      "start_time": 1048840.0,
      "end_time": 1051397.0,
      "text": "to read from a pointer that&#39;s not actually a pointer,"
    },
    {
      "index": 395,
      "start_time": 1051390.0,
      "end_time": 1053322.0,
      "text": "it just is some illegal piece of memory,"
    },
    {
      "index": 396,
      "start_time": 1053330.0,
      "end_time": 1056186.0,
      "text": "then your program crashes which is good"
    },
    {
      "index": 397,
      "start_time": 1056180.0,
      "end_time": 1059246.0,
      "text": "in normal code because you don&#39;t want"
    },
    {
      "index": 398,
      "start_time": 1059250.0,
      "end_time": 1061483.0,
      "text": "to proceed when your program is that confused,"
    },
    {
      "index": 399,
      "start_time": 1061480.0,
      "end_time": 1064472.0,
      "text": "you want it to just stop and produce a crash log"
    },
    {
      "index": 400,
      "start_time": 1064470.0,
      "end_time": 1065734.0,
      "text": "or something like that."
    },
    {
      "index": 401,
      "start_time": 1065740.0,
      "end_time": 1067592.0,
      "text": "But in this code we want to be able"
    },
    {
      "index": 402,
      "start_time": 1067590.0,
      "end_time": 1070244.0,
      "text": "to keep going so we can explore this stuff."
    },
    {
      "index": 403,
      "start_time": 1070240.0,
      "end_time": 1072055.0,
      "text": "So we wanna be able to read from pointers"
    },
    {
      "index": 404,
      "start_time": 1072060.0,
      "end_time": 1076518.0,
      "text": "without crashing if they&#39;re bad."
    },
    {
      "index": 405,
      "start_time": 1076520.0,
      "end_time": 1079210.0,
      "text": "So on the Mac and on iOS we&#39;ve got this nice"
    },
    {
      "index": 406,
      "start_time": 1079210.0,
      "end_time": 1082617.0,
      "text": "low level function, Apple platforms use"
    },
    {
      "index": 407,
      "start_time": 1082610.0,
      "end_time": 1085892.0,
      "text": "a mach kernel highly modified and added onto stuff,"
    },
    {
      "index": 408,
      "start_time": 1085900.0,
      "end_time": 1088172.0,
      "text": "but the low level mach calls are still there"
    },
    {
      "index": 409,
      "start_time": 1088170.0,
      "end_time": 1093271.0,
      "text": "and there&#39;s a mach call called mach vm read overwrite."
    },
    {
      "index": 410,
      "start_time": 1093270.0,
      "end_time": 1095710.0,
      "text": "And essentially it&#39;s a system call"
    },
    {
      "index": 411,
      "start_time": 1095710.0,
      "end_time": 1097391.0,
      "text": "where you give it two pointers"
    },
    {
      "index": 412,
      "start_time": 1097390.0,
      "end_time": 1099366.0,
      "text": "and you say, I wanna copy this many bytes"
    },
    {
      "index": 413,
      "start_time": 1099360.0,
      "end_time": 1101337.0,
      "text": "from that pointer to this pointer."
    },
    {
      "index": 414,
      "start_time": 1101340.0,
      "end_time": 1103319.0,
      "text": "If you&#39;re familiar with the memcpy function"
    },
    {
      "index": 415,
      "start_time": 1103320.0,
      "end_time": 1105884.0,
      "text": "from the C standard library, it&#39;s exactly like that"
    },
    {
      "index": 416,
      "start_time": 1105890.0,
      "end_time": 1108830.0,
      "text": "except that if you give memcpy a bad pointer"
    },
    {
      "index": 417,
      "start_time": 1108820.0,
      "end_time": 1110668.0,
      "text": "your program crashes and if you give"
    },
    {
      "index": 418,
      "start_time": 1110670.0,
      "end_time": 1113186.0,
      "text": "mach vm read overwrite a bad pointer it&#39;s okay,"
    },
    {
      "index": 419,
      "start_time": 1113190.0,
      "end_time": 1115542.0,
      "text": "it returns an error because it&#39;s a system call,"
    },
    {
      "index": 420,
      "start_time": 1115540.0,
      "end_time": 1116969.0,
      "text": "it happens at the kernel level,"
    },
    {
      "index": 421,
      "start_time": 1116970.0,
      "end_time": 1119702.0,
      "text": "the kernel level can do all this checking safely"
    },
    {
      "index": 422,
      "start_time": 1119700.0,
      "end_time": 1121597.0,
      "text": "and so it can come back and say,"
    },
    {
      "index": 423,
      "start_time": 1121600.0,
      "end_time": 1125388.0,
      "text": "I couldn&#39;t do that because that is not a real pointer,"
    },
    {
      "index": 424,
      "start_time": 1125390.0,
      "end_time": 1127193.0,
      "text": "that was just a bunch of junk"
    },
    {
      "index": 425,
      "start_time": 1127190.0,
      "end_time": 1129917.0,
      "text": "and the address there doesn&#39;t exist."
    },
    {
      "index": 426,
      "start_time": 1129920.0,
      "end_time": 1135601.0,
      "text": "And so based on that we can go through"
    },
    {
      "index": 427,
      "start_time": 1135600.0,
      "end_time": 1139088.0,
      "text": "and reliably follow this tree without crashing"
    },
    {
      "index": 428,
      "start_time": 1139090.0,
      "end_time": 1142360.0,
      "text": "because we can essentially optimistically try"
    },
    {
      "index": 429,
      "start_time": 1142360.0,
      "end_time": 1144549.0,
      "text": "every pointer, pass it to this function"
    },
    {
      "index": 430,
      "start_time": 1144550.0,
      "end_time": 1146859.0,
      "text": "and then if it comes back and says there was an error,"
    },
    {
      "index": 431,
      "start_time": 1146850.0,
      "end_time": 1148913.0,
      "text": "that&#39;s fine, we just say, okay, couldn&#39;t follow that,"
    },
    {
      "index": 432,
      "start_time": 1148920.0,
      "end_time": 1150643.0,
      "text": "keep on going."
    },
    {
      "index": 433,
      "start_time": 1150640.0,
      "end_time": 1153020.0,
      "text": "This is a real quick, this is just a function prototype"
    },
    {
      "index": 434,
      "start_time": 1153020.0,
      "end_time": 1154871.0,
      "text": "what looks like it takes a task,"
    },
    {
      "index": 435,
      "start_time": 1154870.0,
      "end_time": 1158427.0,
      "text": "which is like a process, if you&#39;ve got the right permissions"
    },
    {
      "index": 436,
      "start_time": 1158430.0,
      "end_time": 1160286.0,
      "text": "on the Mac you can actually read from other processes"
    },
    {
      "index": 437,
      "start_time": 1160280.0,
      "end_time": 1162255.0,
      "text": "not your own which is sort of the foundations"
    },
    {
      "index": 438,
      "start_time": 1162260.0,
      "end_time": 1164488.0,
      "text": "of how you can build a debugger."
    },
    {
      "index": 439,
      "start_time": 1164490.0,
      "end_time": 1166556.0,
      "text": "It takes an address, it takes a length,"
    },
    {
      "index": 440,
      "start_time": 1166550.0,
      "end_time": 1168278.0,
      "text": "it takes a destination address"
    },
    {
      "index": 441,
      "start_time": 1168280.0,
      "end_time": 1170257.0,
      "text": "and it takes a pointer to something"
    },
    {
      "index": 442,
      "start_time": 1170260.0,
      "end_time": 1174672.0,
      "text": "where it will tell you how many bytes it actually read."
    },
    {
      "index": 443,
      "start_time": 1174670.0,
      "end_time": 1176812.0,
      "text": "So back at the beginning I showed"
    },
    {
      "index": 444,
      "start_time": 1176810.0,
      "end_time": 1178779.0,
      "text": "a function that would read from a pointer,"
    },
    {
      "index": 445,
      "start_time": 1178780.0,
      "end_time": 1181216.0,
      "text": "but it would crash if you gave it a bad pointer,"
    },
    {
      "index": 446,
      "start_time": 1181220.0,
      "end_time": 1184038.0,
      "text": "this will read from a pointer safely."
    },
    {
      "index": 447,
      "start_time": 1184040.0,
      "end_time": 1188193.0,
      "text": "So essentially it&#39;s just a wrapper around that mach call."
    },
    {
      "index": 448,
      "start_time": 1188190.0,
      "end_time": 1189368.0,
      "text": "It takes the pointer you give it,"
    },
    {
      "index": 449,
      "start_time": 1189370.0,
      "end_time": 1191183.0,
      "text": "it does a little bit of casting"
    },
    {
      "index": 450,
      "start_time": 1191180.0,
      "end_time": 1193275.0,
      "text": "to get it into the form that the system wants"
    },
    {
      "index": 451,
      "start_time": 1193270.0,
      "end_time": 1195082.0,
      "text": "and then it just makes that call."
    },
    {
      "index": 452,
      "start_time": 1195090.0,
      "end_time": 1197146.0,
      "text": "If it succeeds it returns and says,"
    },
    {
      "index": 453,
      "start_time": 1197140.0,
      "end_time": 1199245.0,
      "text": "hey, we did it, and if it doesn&#39;t"
    },
    {
      "index": 454,
      "start_time": 1199250.0,
      "end_time": 1202516.0,
      "text": "then it returns false, the caller can know"
    },
    {
      "index": 455,
      "start_time": 1202510.0,
      "end_time": 1204741.0,
      "text": "that it didn&#39;t work."
    },
    {
      "index": 456,
      "start_time": 1204740.0,
      "end_time": 1206631.0,
      "text": "And so that way based on this we can build"
    },
    {
      "index": 457,
      "start_time": 1206640.0,
      "end_time": 1213174.0,
      "text": "this whole recursive scanning system."
    },
    {
      "index": 458,
      "start_time": 1213170.0,
      "end_time": 1217460.0,
      "text": "Let&#39;s see, there we go, alright."
    },
    {
      "index": 459,
      "start_time": 1217460.0,
      "end_time": 1219941.0,
      "text": "So we can read this stuff safely,"
    },
    {
      "index": 460,
      "start_time": 1219940.0,
      "end_time": 1221625.0,
      "text": "but we need to know how much to read."
    },
    {
      "index": 461,
      "start_time": 1221620.0,
      "end_time": 1226421.0,
      "text": "The first value we read we can get the size of the type"
    },
    {
      "index": 462,
      "start_time": 1226430.0,
      "end_time": 1228324.0,
      "text": "because we know the type it compile time,"
    },
    {
      "index": 463,
      "start_time": 1228320.0,
      "end_time": 1230804.0,
      "text": "it&#39;s a generic function, we get that metadata"
    },
    {
      "index": 464,
      "start_time": 1230800.0,
      "end_time": 1234457.0,
      "text": "from the compiler, but after we start chasing pointers"
    },
    {
      "index": 465,
      "start_time": 1234460.0,
      "end_time": 1236268.0,
      "text": "we can&#39;t do that anymore because we&#39;re dealing"
    },
    {
      "index": 466,
      "start_time": 1236270.0,
      "end_time": 1238287.0,
      "text": "with arbitrary bags of bytes, we don&#39;t know"
    },
    {
      "index": 467,
      "start_time": 1238290.0,
      "end_time": 1240808.0,
      "text": "what this stuff is so we need to know,"
    },
    {
      "index": 468,
      "start_time": 1240800.0,
      "end_time": 1243488.0,
      "text": "we need to be able to at least guess"
    },
    {
      "index": 469,
      "start_time": 1243490.0,
      "end_time": 1245925.0,
      "text": "how many bytes to read at any given time,"
    },
    {
      "index": 470,
      "start_time": 1245930.0,
      "end_time": 1248673.0,
      "text": "when you chase these pointers through."
    },
    {
      "index": 471,
      "start_time": 1248670.0,
      "end_time": 1250589.0,
      "text": "For stuff that&#39;s on the heap, there&#39;s"
    },
    {
      "index": 472,
      "start_time": 1250590.0,
      "end_time": 1253062.0,
      "text": "the malloc size function, at least on the Mac"
    },
    {
      "index": 473,
      "start_time": 1253060.0,
      "end_time": 1255240.0,
      "text": "and on iOS, where you give it a pointer"
    },
    {
      "index": 474,
      "start_time": 1255240.0,
      "end_time": 1258015.0,
      "text": "and it comes back and says, there were actually"
    },
    {
      "index": 475,
      "start_time": 1258020.0,
      "end_time": 1260835.0,
      "text": "32 bytes allocated on the heap here."
    },
    {
      "index": 476,
      "start_time": 1260830.0,
      "end_time": 1263307.0,
      "text": "So we can call that and it comes back"
    },
    {
      "index": 477,
      "start_time": 1263310.0,
      "end_time": 1265880.0,
      "text": "and tells us exactly how much we can read."
    },
    {
      "index": 478,
      "start_time": 1265880.0,
      "end_time": 1267013.0,
      "text": "Which is great."
    },
    {
      "index": 479,
      "start_time": 1267010.0,
      "end_time": 1269033.0,
      "text": "And even better, this function"
    },
    {
      "index": 480,
      "start_time": 1269030.0,
      "end_time": 1271011.0,
      "text": "is tolerant of bad data, so if you give it something"
    },
    {
      "index": 481,
      "start_time": 1271020.0,
      "end_time": 1273036.0,
      "text": "that&#39;s not a pointer or you give it"
    },
    {
      "index": 482,
      "start_time": 1273030.0,
      "end_time": 1275002.0,
      "text": "a pointer to something that&#39;s legitimate,"
    },
    {
      "index": 483,
      "start_time": 1275000.0,
      "end_time": 1276928.0,
      "text": "but not allocated on the heap,"
    },
    {
      "index": 484,
      "start_time": 1276930.0,
      "end_time": 1278279.0,
      "text": "or you give it a pointer to something"
    },
    {
      "index": 485,
      "start_time": 1278280.0,
      "end_time": 1279668.0,
      "text": "in the middle of something else,"
    },
    {
      "index": 486,
      "start_time": 1279670.0,
      "end_time": 1281595.0,
      "text": "whatever, it doesn&#39;t care, it&#39;ll give you back zero."
    },
    {
      "index": 487,
      "start_time": 1281590.0,
      "end_time": 1283697.0,
      "text": "So it doesn&#39;t crash, which is really convenient"
    },
    {
      "index": 488,
      "start_time": 1283700.0,
      "end_time": 1285920.0,
      "text": "for our purposes."
    },
    {
      "index": 489,
      "start_time": 1285920.0,
      "end_time": 1288904.0,
      "text": "And finally, we&#39;ve got global variables,"
    },
    {
      "index": 490,
      "start_time": 1288900.0,
      "end_time": 1291084.0,
      "text": "code, things like that."
    },
    {
      "index": 491,
      "start_time": 1291090.0,
      "end_time": 1295293.0,
      "text": "Those are symbols in your app, there&#39;s the dladder function"
    },
    {
      "index": 492,
      "start_time": 1295290.0,
      "end_time": 1297801.0,
      "text": "where you give it an address and it comes back"
    },
    {
      "index": 493,
      "start_time": 1297800.0,
      "end_time": 1300617.0,
      "text": "and tells you what symbol is nearby."
    },
    {
      "index": 494,
      "start_time": 1300620.0,
      "end_time": 1303226.0,
      "text": "And so we can use that to check"
    },
    {
      "index": 495,
      "start_time": 1303220.0,
      "end_time": 1305570.0,
      "text": "to see if something is actually a symbol"
    },
    {
      "index": 496,
      "start_time": 1305570.0,
      "end_time": 1307757.0,
      "text": "and we can also use it to kind of extract"
    },
    {
      "index": 497,
      "start_time": 1307760.0,
      "end_time": 1309399.0,
      "text": "the size by essentially scanning."
    },
    {
      "index": 498,
      "start_time": 1309400.0,
      "end_time": 1311659.0,
      "text": "It gives you the symbol that comes"
    },
    {
      "index": 499,
      "start_time": 1311660.0,
      "end_time": 1314732.0,
      "text": "immediately before the pointer you give it."
    },
    {
      "index": 500,
      "start_time": 1314730.0,
      "end_time": 1317177.0,
      "text": "So you start from here and you say,"
    },
    {
      "index": 501,
      "start_time": 1317180.0,
      "end_time": 1318820.0,
      "text": "give me the symbol information"
    },
    {
      "index": 502,
      "start_time": 1318820.0,
      "end_time": 1320284.0,
      "text": "and if it comes back and says, yes,"
    },
    {
      "index": 503,
      "start_time": 1320280.0,
      "end_time": 1322173.0,
      "text": "I have symbol information, then advance it by one byte"
    },
    {
      "index": 504,
      "start_time": 1322180.0,
      "end_time": 1325163.0,
      "text": "and say, how &#39;bout here, how &#39;bout here,"
    },
    {
      "index": 505,
      "start_time": 1325160.0,
      "end_time": 1326459.0,
      "text": "how &#39;bout here, and just keep doing that"
    },
    {
      "index": 506,
      "start_time": 1326460.0,
      "end_time": 1327972.0,
      "text": "until it gives you a different answer"
    },
    {
      "index": 507,
      "start_time": 1327970.0,
      "end_time": 1330749.0,
      "text": "and then you know exactly how long that thing was."
    },
    {
      "index": 508,
      "start_time": 1330750.0,
      "end_time": 1332687.0,
      "text": "And as a bonus, it also gives you the names."
    },
    {
      "index": 509,
      "start_time": 1332690.0,
      "end_time": 1336554.0,
      "text": "So your function names, your global variable names,"
    },
    {
      "index": 510,
      "start_time": 1336550.0,
      "end_time": 1338560.0,
      "text": "things like that, those all pop out"
    },
    {
      "index": 511,
      "start_time": 1338560.0,
      "end_time": 1340833.0,
      "text": "of this API, and so we can use them"
    },
    {
      "index": 512,
      "start_time": 1340830.0,
      "end_time": 1344241.0,
      "text": "to annotate our scan and help us understand what&#39;s going on."
    },
    {
      "index": 513,
      "start_time": 1344240.0,
      "end_time": 1347061.0,
      "text": "Those names in Swift and also in C++ tend to"
    },
    {
      "index": 514,
      "start_time": 1347060.0,
      "end_time": 1349701.0,
      "text": "come up mangled because the compiler"
    },
    {
      "index": 515,
      "start_time": 1349710.0,
      "end_time": 1352227.0,
      "text": "tries to embed information about what the type is"
    },
    {
      "index": 516,
      "start_time": 1352220.0,
      "end_time": 1353982.0,
      "text": "besides just the name."
    },
    {
      "index": 517,
      "start_time": 1353980.0,
      "end_time": 1356085.0,
      "text": "So in C for example, if you have a function"
    },
    {
      "index": 518,
      "start_time": 1356090.0,
      "end_time": 1362239.0,
      "text": "called summon, the symbol name that it spits out"
    },
    {
      "index": 519,
      "start_time": 1362240.0,
      "end_time": 1364053.0,
      "text": "just says summon, and in Swift"
    },
    {
      "index": 520,
      "start_time": 1364050.0,
      "end_time": 1365863.0,
      "text": "if you have a function called summon"
    },
    {
      "index": 521,
      "start_time": 1365860.0,
      "end_time": 1367844.0,
      "text": "the symbol name comes out more like this"
    },
    {
      "index": 522,
      "start_time": 1367850.0,
      "end_time": 1369450.0,
      "text": "where you&#39;ve got a bunch of extra stuff on it"
    },
    {
      "index": 523,
      "start_time": 1369450.0,
      "end_time": 1371181.0,
      "text": "because it will not only include that name,"
    },
    {
      "index": 524,
      "start_time": 1371180.0,
      "end_time": 1372616.0,
      "text": "but it will also include the fact"
    },
    {
      "index": 525,
      "start_time": 1372620.0,
      "end_time": 1374679.0,
      "text": "that it takes two integers and returns a string"
    },
    {
      "index": 526,
      "start_time": 1374680.0,
      "end_time": 1376450.0,
      "text": "or whatever it actually is."
    },
    {
      "index": 527,
      "start_time": 1376440.0,
      "end_time": 1378364.0,
      "text": "So in order to help with that"
    },
    {
      "index": 528,
      "start_time": 1378370.0,
      "end_time": 1382201.0,
      "text": "there&#39;s the Swift demangle command that comes with Xcode."
    },
    {
      "index": 529,
      "start_time": 1382200.0,
      "end_time": 1384562.0,
      "text": "I imagine it&#39;s available in the Swift"
    },
    {
      "index": 530,
      "start_time": 1384560.0,
      "end_time": 1386655.0,
      "text": "open source tools as well."
    },
    {
      "index": 531,
      "start_time": 1386660.0,
      "end_time": 1389176.0,
      "text": "You give it a mangled symbol and it comes back"
    },
    {
      "index": 532,
      "start_time": 1389170.0,
      "end_time": 1391851.0,
      "text": "with something like this which is more readable."
    },
    {
      "index": 533,
      "start_time": 1391850.0,
      "end_time": 1394114.0,
      "text": "So in my code I just dump everything through that."
    },
    {
      "index": 534,
      "start_time": 1394120.0,
      "end_time": 1395880.0,
      "text": "Swift demangle is a very nice program"
    },
    {
      "index": 535,
      "start_time": 1395880.0,
      "end_time": 1397637.0,
      "text": "because if you give it something it doesn&#39;t understand"
    },
    {
      "index": 536,
      "start_time": 1397640.0,
      "end_time": 1399570.0,
      "text": "it just gives it back to you unmodified."
    },
    {
      "index": 537,
      "start_time": 1399560.0,
      "end_time": 1401119.0,
      "text": "So I could just feed everything through it"
    },
    {
      "index": 538,
      "start_time": 1401120.0,
      "end_time": 1403388.0,
      "text": "without having to fear that it would explode"
    },
    {
      "index": 539,
      "start_time": 1403390.0,
      "end_time": 1404819.0,
      "text": "or crash or something like that"
    },
    {
      "index": 540,
      "start_time": 1404820.0,
      "end_time": 1408302.0,
      "text": "on data that wasn&#39;t actually mangles Swift symbols."
    },
    {
      "index": 541,
      "start_time": 1408300.0,
      "end_time": 1410529.0,
      "text": "And then C++ has the same thing,"
    },
    {
      "index": 542,
      "start_time": 1410530.0,
      "end_time": 1413267.0,
      "text": "there&#39;s a tool called C++filt"
    },
    {
      "index": 543,
      "start_time": 1413270.0,
      "end_time": 1415161.0,
      "text": "which does the same job for C++ names"
    },
    {
      "index": 544,
      "start_time": 1415160.0,
      "end_time": 1418478.0,
      "text": "and it has the same semantics"
    },
    {
      "index": 545,
      "start_time": 1418480.0,
      "end_time": 1420746.0,
      "text": "where if you give it something it doesn&#39;t understand"
    },
    {
      "index": 546,
      "start_time": 1420740.0,
      "end_time": 1422547.0,
      "text": "it gives it back to you without changing it."
    },
    {
      "index": 547,
      "start_time": 1422550.0,
      "end_time": 1424268.0,
      "text": "So I could just pass every name"
    },
    {
      "index": 548,
      "start_time": 1424270.0,
      "end_time": 1429990.0,
      "text": "that I came across to these two tools."
    },
    {
      "index": 549,
      "start_time": 1429990.0,
      "end_time": 1432504.0,
      "text": "A lot of the data that we come across in memory"
    },
    {
      "index": 550,
      "start_time": 1432500.0,
      "end_time": 1434685.0,
      "text": "is actually strings, alright, textual information"
    },
    {
      "index": 551,
      "start_time": 1434690.0,
      "end_time": 1437925.0,
      "text": "like method names, like user input,"
    },
    {
      "index": 552,
      "start_time": 1437920.0,
      "end_time": 1440741.0,
      "text": "and it&#39;s useful to be able to find these."
    },
    {
      "index": 553,
      "start_time": 1440740.0,
      "end_time": 1442887.0,
      "text": "And the trouble is again, we&#39;re working"
    },
    {
      "index": 554,
      "start_time": 1442890.0,
      "end_time": 1445365.0,
      "text": "with these bags of bytes, we don&#39;t know what&#39;s going on"
    },
    {
      "index": 555,
      "start_time": 1445370.0,
      "end_time": 1448108.0,
      "text": "with them, they&#39;re just a sequence of data"
    },
    {
      "index": 556,
      "start_time": 1448100.0,
      "end_time": 1450417.0,
      "text": "and we want to be able to at least guess"
    },
    {
      "index": 557,
      "start_time": 1450420.0,
      "end_time": 1453915.0,
      "text": "at which sequences of data actually"
    },
    {
      "index": 558,
      "start_time": 1453920.0,
      "end_time": 1456355.0,
      "text": "represent text and which don&#39;t."
    },
    {
      "index": 559,
      "start_time": 1456350.0,
      "end_time": 1457945.0,
      "text": "And there&#39;s no way to do this reliably,"
    },
    {
      "index": 560,
      "start_time": 1457950.0,
      "end_time": 1460651.0,
      "text": "but a decent heuristic is to look for ASCII characters"
    },
    {
      "index": 561,
      "start_time": 1460650.0,
      "end_time": 1463801.0,
      "text": "and look for printable ASCII characters,"
    },
    {
      "index": 562,
      "start_time": 1463800.0,
      "end_time": 1466482.0,
      "text": "so zero through 31 in ASCII are control characters"
    },
    {
      "index": 563,
      "start_time": 1466480.0,
      "end_time": 1471724.0,
      "text": "which we don&#39;t expect to find"
    },
    {
      "index": 564,
      "start_time": 1471720.0,
      "end_time": 1474909.0,
      "text": "as part of text in a program, at least"
    },
    {
      "index": 565,
      "start_time": 1474910.0,
      "end_time": 1477054.0,
      "text": "not the text that we&#39;re interested in."
    },
    {
      "index": 566,
      "start_time": 1477060.0,
      "end_time": 1481142.0,
      "text": "And then stuff beyond 126 is either the delete character"
    },
    {
      "index": 567,
      "start_time": 1481140.0,
      "end_time": 1483988.0,
      "text": "in ASCII, or it&#39;s non-ASCII characters."
    },
    {
      "index": 568,
      "start_time": 1483990.0,
      "end_time": 1485798.0,
      "text": "So we look for printable ASCII characters"
    },
    {
      "index": 569,
      "start_time": 1485800.0,
      "end_time": 1489205.0,
      "text": "and we look for sequences of at least four."
    },
    {
      "index": 570,
      "start_time": 1489200.0,
      "end_time": 1492183.0,
      "text": "So the idea is that if you just have one"
    },
    {
      "index": 571,
      "start_time": 1492180.0,
      "end_time": 1494662.0,
      "text": "or two or three then it&#39;s likely"
    },
    {
      "index": 572,
      "start_time": 1494670.0,
      "end_time": 1496735.0,
      "text": "that&#39;s just some other data that just"
    },
    {
      "index": 573,
      "start_time": 1496730.0,
      "end_time": 1499340.0,
      "text": "coincidentally happened to look like text."
    },
    {
      "index": 574,
      "start_time": 1499340.0,
      "end_time": 1501489.0,
      "text": "And once you get up to four there&#39;s a decent chance"
    },
    {
      "index": 575,
      "start_time": 1501490.0,
      "end_time": 1503804.0,
      "text": "that it&#39;s something textually interesting,"
    },
    {
      "index": 576,
      "start_time": 1503800.0,
      "end_time": 1506653.0,
      "text": "and it&#39;s not a guarantee, but it&#39;s a decent"
    },
    {
      "index": 577,
      "start_time": 1506660.0,
      "end_time": 1508560.0,
      "text": "heuristic, it gives you good results."
    },
    {
      "index": 578,
      "start_time": 1508560.0,
      "end_time": 1510240.0,
      "text": "And this is code that just goes through"
    },
    {
      "index": 579,
      "start_time": 1510240.0,
      "end_time": 1512260.0,
      "text": "and implements that heuristic here."
    },
    {
      "index": 580,
      "start_time": 1512260.0,
      "end_time": 1513729.0,
      "text": "You give it an array of bytes"
    },
    {
      "index": 581,
      "start_time": 1513720.0,
      "end_time": 1516789.0,
      "text": "and it goes through, it splits that array"
    },
    {
      "index": 582,
      "start_time": 1516790.0,
      "end_time": 1520538.0,
      "text": "into chunks of continuous printable ASCII characters"
    },
    {
      "index": 583,
      "start_time": 1520540.0,
      "end_time": 1522313.0,
      "text": "and then filters out all the short ones"
    },
    {
      "index": 584,
      "start_time": 1522310.0,
      "end_time": 1523913.0,
      "text": "and gives you back the long ones."
    },
    {
      "index": 585,
      "start_time": 1523920.0,
      "end_time": 1526742.0,
      "text": "So we can run this on the byte arrays"
    },
    {
      "index": 586,
      "start_time": 1526740.0,
      "end_time": 1528458.0,
      "text": "that we get out of the scanner to see"
    },
    {
      "index": 587,
      "start_time": 1528460.0,
      "end_time": 1530609.0,
      "text": "what&#39;s going on in them."
    },
    {
      "index": 588,
      "start_time": 1530610.0,
      "end_time": 1534885.0,
      "text": "Alright, so those are the foundations of the program,"
    },
    {
      "index": 589,
      "start_time": 1534880.0,
      "end_time": 1537488.0,
      "text": "there&#39;s a bunch of bookkeeping that goes on in it"
    },
    {
      "index": 590,
      "start_time": 1537490.0,
      "end_time": 1539166.0,
      "text": "if you&#39;re interested in that part"
    },
    {
      "index": 591,
      "start_time": 1539170.0,
      "end_time": 1543662.0,
      "text": "look it up on Github, but those are the fundamental"
    },
    {
      "index": 592,
      "start_time": 1543660.0,
      "end_time": 1547028.0,
      "text": "pieces and we now know how to build all of that."
    },
    {
      "index": 593,
      "start_time": 1547030.0,
      "end_time": 1549211.0,
      "text": "And so we can read all of this stuff,"
    },
    {
      "index": 594,
      "start_time": 1549210.0,
      "end_time": 1550977.0,
      "text": "but we wanna be able to actually output it"
    },
    {
      "index": 595,
      "start_time": 1550970.0,
      "end_time": 1554175.0,
      "text": "in some form that&#39;s nice for the human to look at."
    },
    {
      "index": 596,
      "start_time": 1554180.0,
      "end_time": 1556531.0,
      "text": "So we could just dump it all in text form"
    },
    {
      "index": 597,
      "start_time": 1556530.0,
      "end_time": 1558215.0,
      "text": "or something like that, but it&#39;s gonna take"
    },
    {
      "index": 598,
      "start_time": 1558210.0,
      "end_time": 1559633.0,
      "text": "a lot of work to interpret."
    },
    {
      "index": 599,
      "start_time": 1559640.0,
      "end_time": 1562285.0,
      "text": "Ideally we want something more like this."
    },
    {
      "index": 600,
      "start_time": 1562280.0,
      "end_time": 1566270.0,
      "text": "And as an intermediate step I produce something like this"
    },
    {
      "index": 601,
      "start_time": 1566270.0,
      "end_time": 1568499.0,
      "text": "which is not very readable at all."
    },
    {
      "index": 602,
      "start_time": 1568500.0,
      "end_time": 1571396.0,
      "text": "But this is an open source program called Graphviz"
    },
    {
      "index": 603,
      "start_time": 1571400.0,
      "end_time": 1575519.0,
      "text": "and essentially you give it a list of nodes"
    },
    {
      "index": 604,
      "start_time": 1575520.0,
      "end_time": 1577749.0,
      "text": "and you give it a list of connections"
    },
    {
      "index": 605,
      "start_time": 1577750.0,
      "end_time": 1579431.0,
      "text": "and you say this node has this label"
    },
    {
      "index": 606,
      "start_time": 1579430.0,
      "end_time": 1580985.0,
      "text": "and it&#39;s connected to these nodes"
    },
    {
      "index": 607,
      "start_time": 1580980.0,
      "end_time": 1582831.0,
      "text": "and this node has this label and it&#39;s connected"
    },
    {
      "index": 608,
      "start_time": 1582830.0,
      "end_time": 1584385.0,
      "text": "to these nodes."
    },
    {
      "index": 609,
      "start_time": 1584390.0,
      "end_time": 1586945.0,
      "text": "And when you hand it over to that program"
    },
    {
      "index": 610,
      "start_time": 1586940.0,
      "end_time": 1588668.0,
      "text": "it hands you back stuff like this"
    },
    {
      "index": 611,
      "start_time": 1588670.0,
      "end_time": 1591067.0,
      "text": "which is really cool and readable"
    },
    {
      "index": 612,
      "start_time": 1591070.0,
      "end_time": 1592458.0,
      "text": "and you can go through and look."
    },
    {
      "index": 613,
      "start_time": 1592460.0,
      "end_time": 1594679.0,
      "text": "This is, I wrote a simple C program"
    },
    {
      "index": 614,
      "start_time": 1594680.0,
      "end_time": 1596654.0,
      "text": "that creates a little structure in memory"
    },
    {
      "index": 615,
      "start_time": 1596650.0,
      "end_time": 1598912.0,
      "text": "and then hands it off to my dumper program"
    },
    {
      "index": 616,
      "start_time": 1598910.0,
      "end_time": 1601293.0,
      "text": "and that generates the Graphviz stuff"
    },
    {
      "index": 617,
      "start_time": 1601290.0,
      "end_time": 1603526.0,
      "text": "and then Graphviz turns it into a PDF"
    },
    {
      "index": 618,
      "start_time": 1603530.0,
      "end_time": 1604798.0,
      "text": "which looks like this."
    },
    {
      "index": 619,
      "start_time": 1604800.0,
      "end_time": 1606439.0,
      "text": "So we can go through, we can read,"
    },
    {
      "index": 620,
      "start_time": 1606440.0,
      "end_time": 1608082.0,
      "text": "we can see we started off with a pointer up at the top,"
    },
    {
      "index": 621,
      "start_time": 1608080.0,
      "end_time": 1610727.0,
      "text": "that pointer points to some malloc memory"
    },
    {
      "index": 622,
      "start_time": 1610730.0,
      "end_time": 1612951.0,
      "text": "which contains this and those point to more"
    },
    {
      "index": 623,
      "start_time": 1612950.0,
      "end_time": 1614850.0,
      "text": "malloc memory which point to more malloc memory"
    },
    {
      "index": 624,
      "start_time": 1614850.0,
      "end_time": 1616622.0,
      "text": "and we&#39;ve got a couple of strings at the bottom"
    },
    {
      "index": 625,
      "start_time": 1616620.0,
      "end_time": 1618514.0,
      "text": "and we can go through and you can just see"
    },
    {
      "index": 626,
      "start_time": 1618510.0,
      "end_time": 1620910.0,
      "text": "this whole structure visually, which is cool,"
    },
    {
      "index": 627,
      "start_time": 1620910.0,
      "end_time": 1624054.0,
      "text": "so that helps us figure out what&#39;s going on."
    },
    {
      "index": 628,
      "start_time": 1624060.0,
      "end_time": 1629479.0,
      "text": "So that&#39;s the theory of how we&#39;re looking at these things."
    },
    {
      "index": 629,
      "start_time": 1629480.0,
      "end_time": 1632036.0,
      "text": "So let&#39;s actually go through and look at them"
    },
    {
      "index": 630,
      "start_time": 1632030.0,
      "end_time": 1634892.0,
      "text": "and see what&#39;s going on with this stuff."
    },
    {
      "index": 631,
      "start_time": 1634890.0,
      "end_time": 1637573.0,
      "text": "How does Swift represent things in memory?"
    },
    {
      "index": 632,
      "start_time": 1637580.0,
      "end_time": 1639387.0,
      "text": "How does C represent things in memory?"
    },
    {
      "index": 633,
      "start_time": 1639380.0,
      "end_time": 1641190.0,
      "text": "How does C++ represent things?"
    },
    {
      "index": 634,
      "start_time": 1641190.0,
      "end_time": 1644434.0,
      "text": "So quick notes, this is all very architecture specific,"
    },
    {
      "index": 635,
      "start_time": 1644440.0,
      "end_time": 1647710.0,
      "text": "I did this stuff on Mac on x86-64,"
    },
    {
      "index": 636,
      "start_time": 1647710.0,
      "end_time": 1651873.0,
      "text": "iOS 64 bit is likely to be very similar,"
    },
    {
      "index": 637,
      "start_time": 1651870.0,
      "end_time": 1655655.0,
      "text": "Swift on Linux 64 bit is likely to be similar,"
    },
    {
      "index": 638,
      "start_time": 1655660.0,
      "end_time": 1658056.0,
      "text": "but this is stuff that&#39;s very useful"
    },
    {
      "index": 639,
      "start_time": 1658050.0,
      "end_time": 1660402.0,
      "text": "for debugging, it&#39;s very useful for understanding"
    },
    {
      "index": 640,
      "start_time": 1660400.0,
      "end_time": 1662246.0,
      "text": "how the system works, it is not a good idea"
    },
    {
      "index": 641,
      "start_time": 1662250.0,
      "end_time": 1664695.0,
      "text": "to write any code that relies on this stuff"
    },
    {
      "index": 642,
      "start_time": 1664690.0,
      "end_time": 1667090.0,
      "text": "unless it&#39;s kind of a hobby project"
    },
    {
      "index": 643,
      "start_time": 1667090.0,
      "end_time": 1668640.0,
      "text": "or an experimental thing."
    },
    {
      "index": 644,
      "start_time": 1668650.0,
      "end_time": 1669915.0,
      "text": "You don&#39;t wanna write any production code"
    },
    {
      "index": 645,
      "start_time": 1669910.0,
      "end_time": 1672681.0,
      "text": "that relies on this stuff because offsets,"
    },
    {
      "index": 646,
      "start_time": 1672680.0,
      "end_time": 1675796.0,
      "text": "sizes, the meaning of various fields"
    },
    {
      "index": 647,
      "start_time": 1675800.0,
      "end_time": 1679450.0,
      "text": "is all subject to change from one release to the next."
    },
    {
      "index": 648,
      "start_time": 1679450.0,
      "end_time": 1683037.0,
      "text": "So it&#39;s really useful stuff, but you don&#39;t"
    },
    {
      "index": 649,
      "start_time": 1683030.0,
      "end_time": 1688498.0,
      "text": "want to incorporate this into that library"
    },
    {
      "index": 650,
      "start_time": 1688500.0,
      "end_time": 1696807.0,
      "text": "that you&#39;re writing for work that&#39;s gonna ship to users."
    },
    {
      "index": 651,
      "start_time": 1696810.0,
      "end_time": 1698820.0,
      "text": "Oh, my phone is not cooperating with me today."
    },
    {
      "index": 652,
      "start_time": 1698820.0,
      "end_time": 1699659.0,
      "text": "There we go."
    },
    {
      "index": 653,
      "start_time": 1699660.0,
      "end_time": 1701941.0,
      "text": "Alright, let&#39;s take a look at some C structs."
    },
    {
      "index": 654,
      "start_time": 1701940.0,
      "end_time": 1705131.0,
      "text": "C is very simple in how it lays things out in memory,"
    },
    {
      "index": 655,
      "start_time": 1705130.0,
      "end_time": 1707430.0,
      "text": "that&#39;s kind of it&#39;s appeal."
    },
    {
      "index": 656,
      "start_time": 1707430.0,
      "end_time": 1709359.0,
      "text": "And we&#39;ll take a look at this real quick,"
    },
    {
      "index": 657,
      "start_time": 1709360.0,
      "end_time": 1713646.0,
      "text": "I made a C struct which just contains three long fields,"
    },
    {
      "index": 658,
      "start_time": 1713650.0,
      "end_time": 1716007.0,
      "text": "x, y and z, I wrote a little bit of code"
    },
    {
      "index": 659,
      "start_time": 1716000.0,
      "end_time": 1717969.0,
      "text": "that fills them with one, two and three"
    },
    {
      "index": 660,
      "start_time": 1717970.0,
      "end_time": 1719570.0,
      "text": "and then I dumped out that memory"
    },
    {
      "index": 661,
      "start_time": 1719570.0,
      "end_time": 1721753.0,
      "text": "using my nice graphical dumper"
    },
    {
      "index": 662,
      "start_time": 1721750.0,
      "end_time": 1724735.0,
      "text": "and that&#39;s what we get up here in the bubble."
    },
    {
      "index": 663,
      "start_time": 1724740.0,
      "end_time": 1726212.0,
      "text": "And you can see that it essentially"
    },
    {
      "index": 664,
      "start_time": 1726210.0,
      "end_time": 1727761.0,
      "text": "just lays them out sequentially."
    },
    {
      "index": 665,
      "start_time": 1727760.0,
      "end_time": 1730106.0,
      "text": "We&#39;ve got one followed by two followed by three"
    },
    {
      "index": 666,
      "start_time": 1730110.0,
      "end_time": 1731126.0,
      "text": "and there&#39;s a bunch of empty space"
    },
    {
      "index": 667,
      "start_time": 1731120.0,
      "end_time": 1733136.0,
      "text": "because long is an eight byte value"
    },
    {
      "index": 668,
      "start_time": 1733140.0,
      "end_time": 1735109.0,
      "text": "and these are small numbers, so they have"
    },
    {
      "index": 669,
      "start_time": 1735110.0,
      "end_time": 1740073.0,
      "text": "a lot of leading zeroes and just puts them out one by one."
    },
    {
      "index": 670,
      "start_time": 1740070.0,
      "end_time": 1742801.0,
      "text": "It gets more interesting when you get different sizes."
    },
    {
      "index": 671,
      "start_time": 1742800.0,
      "end_time": 1746163.0,
      "text": "So this is a struct that has a bunch of fields"
    },
    {
      "index": 672,
      "start_time": 1746170.0,
      "end_time": 1748906.0,
      "text": "of different sizes, a through h, some of them are one byte,"
    },
    {
      "index": 673,
      "start_time": 1748900.0,
      "end_time": 1751837.0,
      "text": "that&#39;s a character, some of them are two bytes,"
    },
    {
      "index": 674,
      "start_time": 1751840.0,
      "end_time": 1754351.0,
      "text": "those are short, some of them are four, that&#39;s integers,"
    },
    {
      "index": 675,
      "start_time": 1754350.0,
      "end_time": 1757174.0,
      "text": "and some of them are eight bytes, that&#39;s long."
    },
    {
      "index": 676,
      "start_time": 1757170.0,
      "end_time": 1758934.0,
      "text": "And again, the compiler just lays them out one by one,"
    },
    {
      "index": 677,
      "start_time": 1758940.0,
      "end_time": 1760662.0,
      "text": "you can see one, two, three, four,"
    },
    {
      "index": 678,
      "start_time": 1760660.0,
      "end_time": 1763401.0,
      "text": "five, six, seven, eight, but if you look closely"
    },
    {
      "index": 679,
      "start_time": 1763400.0,
      "end_time": 1765575.0,
      "text": "you&#39;ll see that some of them take up more space"
    },
    {
      "index": 680,
      "start_time": 1765580.0,
      "end_time": 1767558.0,
      "text": "than they maybe ought to."
    },
    {
      "index": 681,
      "start_time": 1767550.0,
      "end_time": 1770084.0,
      "text": "Number three for example, three is one byte,"
    },
    {
      "index": 682,
      "start_time": 1770090.0,
      "end_time": 1773363.0,
      "text": "corresponds to c, that&#39;s a one byte field,"
    },
    {
      "index": 683,
      "start_time": 1773360.0,
      "end_time": 1775173.0,
      "text": "but if you look here you&#39;ve got three followed by zero"
    },
    {
      "index": 684,
      "start_time": 1775170.0,
      "end_time": 1777491.0,
      "text": "followed by four, so there&#39;s extra space in there."
    },
    {
      "index": 685,
      "start_time": 1777490.0,
      "end_time": 1782537.0,
      "text": "The reason for that is that struct fields get padded."
    },
    {
      "index": 686,
      "start_time": 1782540.0,
      "end_time": 1785439.0,
      "text": "The idea is that it&#39;s more efficient to access data"
    },
    {
      "index": 687,
      "start_time": 1785440.0,
      "end_time": 1787965.0,
      "text": "when it&#39;s on a memory address which is divisible"
    },
    {
      "index": 688,
      "start_time": 1787970.0,
      "end_time": 1790652.0,
      "text": "by it&#39;s size, or at least which is divisible"
    },
    {
      "index": 689,
      "start_time": 1790650.0,
      "end_time": 1793379.0,
      "text": "by whatever the hardware architecture likes for it to have."
    },
    {
      "index": 690,
      "start_time": 1793380.0,
      "end_time": 1795604.0,
      "text": "Typically it&#39;s its size."
    },
    {
      "index": 691,
      "start_time": 1795600.0,
      "end_time": 1797908.0,
      "text": "So a two byte value wants to be on an even"
    },
    {
      "index": 692,
      "start_time": 1797910.0,
      "end_time": 1799925.0,
      "text": "numbered address, four byte value wants"
    },
    {
      "index": 693,
      "start_time": 1799920.0,
      "end_time": 1802270.0,
      "text": "to be on an address divisible by four."
    },
    {
      "index": 694,
      "start_time": 1802270.0,
      "end_time": 1805089.0,
      "text": "And what the compiler does, this essentially wastes memory,"
    },
    {
      "index": 695,
      "start_time": 1805090.0,
      "end_time": 1808501.0,
      "text": "but it trades off memory against time"
    },
    {
      "index": 696,
      "start_time": 1808500.0,
      "end_time": 1810978.0,
      "text": "by expanding these fields a little bit,"
    },
    {
      "index": 697,
      "start_time": 1810980.0,
      "end_time": 1812795.0,
      "text": "adding some space between them when necessary"
    },
    {
      "index": 698,
      "start_time": 1812800.0,
      "end_time": 1814648.0,
      "text": "to make sure they all line up nicely"
    },
    {
      "index": 699,
      "start_time": 1814650.0,
      "end_time": 1818982.0,
      "text": "so that they&#39;re fast to access."
    },
    {
      "index": 700,
      "start_time": 1818980.0,
      "end_time": 1820877.0,
      "text": "And that&#39;s really it for C."
    },
    {
      "index": 701,
      "start_time": 1820870.0,
      "end_time": 1823434.0,
      "text": "C kinda has structs and that&#39;s about it"
    },
    {
      "index": 702,
      "start_time": 1823440.0,
      "end_time": 1825452.0,
      "text": "and it just lays things out sequentially"
    },
    {
      "index": 703,
      "start_time": 1825450.0,
      "end_time": 1827716.0,
      "text": "and there&#39;s no metadata, there&#39;s no"
    },
    {
      "index": 704,
      "start_time": 1827720.0,
      "end_time": 1830119.0,
      "text": "implicit pointers or anything like that."
    },
    {
      "index": 705,
      "start_time": 1830110.0,
      "end_time": 1832293.0,
      "text": "C, what you see is what you get."
    },
    {
      "index": 706,
      "start_time": 1832300.0,
      "end_time": 1834860.0,
      "text": "C++ gets more interesting though,"
    },
    {
      "index": 707,
      "start_time": 1834860.0,
      "end_time": 1836499.0,
      "text": "here&#39;s a simple C++ class, I&#39;ve got three"
    },
    {
      "index": 708,
      "start_time": 1836500.0,
      "end_time": 1839456.0,
      "text": "virtual methods on it."
    },
    {
      "index": 709,
      "start_time": 1839450.0,
      "end_time": 1843063.0,
      "text": "It&#39;s got one field, I create one and initialize it"
    },
    {
      "index": 710,
      "start_time": 1843070.0,
      "end_time": 1848040.0,
      "text": "and dump it out, and this is what I get."
    },
    {
      "index": 711,
      "start_time": 1848040.0,
      "end_time": 1850440.0,
      "text": "So we can see now it&#39;s not just one bubble,"
    },
    {
      "index": 712,
      "start_time": 1850440.0,
      "end_time": 1852375.0,
      "text": "it&#39;s got a bunch of different stuff."
    },
    {
      "index": 713,
      "start_time": 1852370.0,
      "end_time": 1854380.0,
      "text": "And I&#39;ll zoom it in so we can actually see"
    },
    {
      "index": 714,
      "start_time": 1854380.0,
      "end_time": 1857231.0,
      "text": "what&#39;s going on here."
    },
    {
      "index": 715,
      "start_time": 1857230.0,
      "end_time": 1859040.0,
      "text": "Up at the top is the actual object"
    },
    {
      "index": 716,
      "start_time": 1859040.0,
      "end_time": 1862207.0,
      "text": "and that&#39;s the thing I created which contains,"
    },
    {
      "index": 717,
      "start_time": 1862210.0,
      "end_time": 1864522.0,
      "text": "in it&#39;s single field it contains the value one."
    },
    {
      "index": 718,
      "start_time": 1864520.0,
      "end_time": 1866877.0,
      "text": "And we can see that it&#39;s got more than that."
    },
    {
      "index": 719,
      "start_time": 1866880.0,
      "end_time": 1868563.0,
      "text": "So it just had one field, but here"
    },
    {
      "index": 720,
      "start_time": 1868560.0,
      "end_time": 1870749.0,
      "text": "we&#39;ve got more stuff at the top."
    },
    {
      "index": 721,
      "start_time": 1870750.0,
      "end_time": 1873254.0,
      "text": "And the program explored this"
    },
    {
      "index": 722,
      "start_time": 1873250.0,
      "end_time": 1875983.0,
      "text": "and found that that thing at the top is a pointer"
    },
    {
      "index": 723,
      "start_time": 1875990.0,
      "end_time": 1878804.0,
      "text": "which points here, and then that points to more stuff."
    },
    {
      "index": 724,
      "start_time": 1878800.0,
      "end_time": 1882030.0,
      "text": "And so that thing at the top is a vtable pointer."
    },
    {
      "index": 725,
      "start_time": 1882030.0,
      "end_time": 1885317.0,
      "text": "So in C++ the way you do virtual method dispatch"
    },
    {
      "index": 726,
      "start_time": 1885320.0,
      "end_time": 1890022.0,
      "text": "is the first pointer sized chunk of an object"
    },
    {
      "index": 727,
      "start_time": 1890020.0,
      "end_time": 1893049.0,
      "text": "is a pointer to a vtable, which is a table"
    },
    {
      "index": 728,
      "start_time": 1893050.0,
      "end_time": 1894265.0,
      "text": "of function pointers."
    },
    {
      "index": 729,
      "start_time": 1894260.0,
      "end_time": 1897129.0,
      "text": "So when you call through to something like"
    },
    {
      "index": 730,
      "start_time": 1897130.0,
      "end_time": 1900539.0,
      "text": "object.x, what it actually does"
    },
    {
      "index": 731,
      "start_time": 1900540.0,
      "end_time": 1903188.0,
      "text": "is it uses that table to look up"
    },
    {
      "index": 732,
      "start_time": 1903190.0,
      "end_time": 1904955.0,
      "text": "the implementation of x for that object."
    },
    {
      "index": 733,
      "start_time": 1904950.0,
      "end_time": 1906840.0,
      "text": "And that&#39;s how inheritance is implemented."
    },
    {
      "index": 734,
      "start_time": 1906840.0,
      "end_time": 1909240.0,
      "text": "If you subclass something and override,"
    },
    {
      "index": 735,
      "start_time": 1909240.0,
      "end_time": 1911594.0,
      "text": "then that generates a new table"
    },
    {
      "index": 736,
      "start_time": 1911600.0,
      "end_time": 1916355.0,
      "text": "and that new table contains new entries"
    },
    {
      "index": 737,
      "start_time": 1916350.0,
      "end_time": 1918027.0,
      "text": "for those method implementations"
    },
    {
      "index": 738,
      "start_time": 1918030.0,
      "end_time": 1921431.0,
      "text": "so that the code knows what it needs to call."
    },
    {
      "index": 739,
      "start_time": 1921430.0,
      "end_time": 1923195.0,
      "text": "So here&#39;s an example of that."
    },
    {
      "index": 740,
      "start_time": 1923200.0,
      "end_time": 1925681.0,
      "text": "Quick C++ subclass, it inherits from the previous one,"
    },
    {
      "index": 741,
      "start_time": 1925680.0,
      "end_time": 1929871.0,
      "text": "it adds a new field, it adds a couple of new methods."
    },
    {
      "index": 742,
      "start_time": 1929870.0,
      "end_time": 1933701.0,
      "text": "And when you dump that out you get a little more stuff."
    },
    {
      "index": 743,
      "start_time": 1933700.0,
      "end_time": 1935552.0,
      "text": "And again, I&#39;ll zoom in."
    },
    {
      "index": 744,
      "start_time": 1935550.0,
      "end_time": 1937526.0,
      "text": "So here we&#39;ve got the object at the top,"
    },
    {
      "index": 745,
      "start_time": 1937530.0,
      "end_time": 1939967.0,
      "text": "like before you&#39;ve got this vtable pointer"
    },
    {
      "index": 746,
      "start_time": 1939960.0,
      "end_time": 1941891.0,
      "text": "and then you&#39;ve got the fields."
    },
    {
      "index": 747,
      "start_time": 1941900.0,
      "end_time": 1944591.0,
      "text": "And if you&#39;ll remember, field number one"
    },
    {
      "index": 748,
      "start_time": 1944590.0,
      "end_time": 1946275.0,
      "text": "was from the super class, field number two"
    },
    {
      "index": 749,
      "start_time": 1946270.0,
      "end_time": 1948536.0,
      "text": "is from the subclass, it just puts them sequentially."
    },
    {
      "index": 750,
      "start_time": 1948540.0,
      "end_time": 1951943.0,
      "text": "So the idea is that when the super class is doing stuff"
    },
    {
      "index": 751,
      "start_time": 1951940.0,
      "end_time": 1954116.0,
      "text": "it can look at it and it sees what it thinks"
    },
    {
      "index": 752,
      "start_time": 1954120.0,
      "end_time": 1956091.0,
      "text": "is itself and then the subclass data"
    },
    {
      "index": 753,
      "start_time": 1956090.0,
      "end_time": 1959155.0,
      "text": "gets laid out afterwards so there&#39;s no conflict there,"
    },
    {
      "index": 754,
      "start_time": 1959150.0,
      "end_time": 1960871.0,
      "text": "but they&#39;re just efficiently packed"
    },
    {
      "index": 755,
      "start_time": 1960870.0,
      "end_time": 1962295.0,
      "text": "in memory just the same."
    },
    {
      "index": 756,
      "start_time": 1962300.0,
      "end_time": 1965785.0,
      "text": "And then the vtable for the subclass gets longer"
    },
    {
      "index": 757,
      "start_time": 1965780.0,
      "end_time": 1967959.0,
      "text": "because there were five methods now,"
    },
    {
      "index": 758,
      "start_time": 1967960.0,
      "end_time": 1970266.0,
      "text": "we had three from the super class, two from the subclass"
    },
    {
      "index": 759,
      "start_time": 1970270.0,
      "end_time": 1972955.0,
      "text": "and then it just lists them sequentially."
    },
    {
      "index": 760,
      "start_time": 1972950.0,
      "end_time": 1976307.0,
      "text": "So every method just gets an index in this table."
    },
    {
      "index": 761,
      "start_time": 1976310.0,
      "end_time": 1978583.0,
      "text": "And the subclasses get the same table"
    },
    {
      "index": 762,
      "start_time": 1978580.0,
      "end_time": 1980677.0,
      "text": "as their super class, except they can be"
    },
    {
      "index": 763,
      "start_time": 1980680.0,
      "end_time": 1982739.0,
      "text": "potentially longer if there are more methods added"
    },
    {
      "index": 764,
      "start_time": 1982740.0,
      "end_time": 1985987.0,
      "text": "and entries get replaced to indicate overriding."
    },
    {
      "index": 765,
      "start_time": 1985990.0,
      "end_time": 1988725.0,
      "text": "Let&#39;s take a look at multiple inheritance,"
    },
    {
      "index": 766,
      "start_time": 1988720.0,
      "end_time": 1990315.0,
      "text": "this is where things get interesting."
    },
    {
      "index": 767,
      "start_time": 1990320.0,
      "end_time": 1992332.0,
      "text": "C++ allows a class to subclass"
    },
    {
      "index": 768,
      "start_time": 1992330.0,
      "end_time": 1995238.0,
      "text": "multiple classes simultaneously."
    },
    {
      "index": 769,
      "start_time": 1995240.0,
      "end_time": 1997426.0,
      "text": "So here&#39;s a second super class to go"
    },
    {
      "index": 770,
      "start_time": 1997420.0,
      "end_time": 1999517.0,
      "text": "along with our original."
    },
    {
      "index": 771,
      "start_time": 1999520.0,
      "end_time": 2001915.0,
      "text": "And here is a subclass of both."
    },
    {
      "index": 772,
      "start_time": 2001920.0,
      "end_time": 2004433.0,
      "text": "So each super class some methods,"
    },
    {
      "index": 773,
      "start_time": 2004430.0,
      "end_time": 2006496.0,
      "text": "each super class has a field, subclass has a field,"
    },
    {
      "index": 774,
      "start_time": 2006490.0,
      "end_time": 2009720.0,
      "text": "create it, fill it out with some data"
    },
    {
      "index": 775,
      "start_time": 2009720.0,
      "end_time": 2012327.0,
      "text": "and this is what we get."
    },
    {
      "index": 776,
      "start_time": 2012330.0,
      "end_time": 2015317.0,
      "text": "It&#39;s a little bit more complicated."
    },
    {
      "index": 777,
      "start_time": 2015320.0,
      "end_time": 2017206.0,
      "text": "The good news is that most of that"
    },
    {
      "index": 778,
      "start_time": 2017200.0,
      "end_time": 2019173.0,
      "text": "is runtime type information stuff"
    },
    {
      "index": 779,
      "start_time": 2019180.0,
      "end_time": 2023177.0,
      "text": "that we can kind of not look at too hard."
    },
    {
      "index": 780,
      "start_time": 2023170.0,
      "end_time": 2025769.0,
      "text": "Let&#39;s zoom in and see what&#39;s going on."
    },
    {
      "index": 781,
      "start_time": 2025770.0,
      "end_time": 2027916.0,
      "text": "So again, object is at the top"
    },
    {
      "index": 782,
      "start_time": 2027920.0,
      "end_time": 2030307.0,
      "text": "and we can see that it starts out similar."
    },
    {
      "index": 783,
      "start_time": 2030310.0,
      "end_time": 2032196.0,
      "text": "So it&#39;s got a vtable pointer followed by"
    },
    {
      "index": 784,
      "start_time": 2032190.0,
      "end_time": 2034167.0,
      "text": "that first field, which is one,"
    },
    {
      "index": 785,
      "start_time": 2034170.0,
      "end_time": 2035937.0,
      "text": "but then something interesting happens."
    },
    {
      "index": 786,
      "start_time": 2035940.0,
      "end_time": 2038459.0,
      "text": "Instead of doing just one, two, three,"
    },
    {
      "index": 787,
      "start_time": 2038450.0,
      "end_time": 2040169.0,
      "text": "laying out all the fields sequentially,"
    },
    {
      "index": 788,
      "start_time": 2040170.0,
      "end_time": 2041437.0,
      "text": "we get another vtable pointer"
    },
    {
      "index": 789,
      "start_time": 2041440.0,
      "end_time": 2043589.0,
      "text": "right in the middle of the object."
    },
    {
      "index": 790,
      "start_time": 2043590.0,
      "end_time": 2046318.0,
      "text": "And so this is how C implements multiple inheritance."
    },
    {
      "index": 791,
      "start_time": 2046320.0,
      "end_time": 2048173.0,
      "text": "We&#39;ve got one vtable pointer at the top,"
    },
    {
      "index": 792,
      "start_time": 2048170.0,
      "end_time": 2049889.0,
      "text": "we&#39;ve got another one over there."
    },
    {
      "index": 793,
      "start_time": 2049889.9999999998,
      "end_time": 2052705.9999999998,
      "text": "And the idea is that it&#39;s kind of like"
    },
    {
      "index": 794,
      "start_time": 2052710.0,
      "end_time": 2054433.0,
      "text": "two objects glued together."
    },
    {
      "index": 795,
      "start_time": 2054429.9999999998,
      "end_time": 2057620.9999999998,
      "text": "So if you take this first one here,"
    },
    {
      "index": 796,
      "start_time": 2057620.0,
      "end_time": 2060056.0,
      "text": "that&#39;s the vtable that indicates"
    },
    {
      "index": 797,
      "start_time": 2060060.0,
      "end_time": 2063634.0,
      "text": "it&#39;s an instance of that first super class,"
    },
    {
      "index": 798,
      "start_time": 2063630.0,
      "end_time": 2066398.0,
      "text": "and then the second super class gets laid out below it."
    },
    {
      "index": 799,
      "start_time": 2066400.0,
      "end_time": 2073031.0,
      "text": "And what happens normally in C and with simple C++ classes"
    },
    {
      "index": 800,
      "start_time": 2073030.0000000002,
      "end_time": 2076061.0000000002,
      "text": "if you cast between types it&#39;s got an instance"
    },
    {
      "index": 801,
      "start_time": 2076060.0,
      "end_time": 2078044.0,
      "text": "of a subclass, you say, treat this as if it"
    },
    {
      "index": 802,
      "start_time": 2078040.0,
      "end_time": 2079929.0,
      "text": "were an instance of its super class."
    },
    {
      "index": 803,
      "start_time": 2079929.9999999998,
      "end_time": 2082092.9999999998,
      "text": "This is just like some bookkeeping trickery, right,"
    },
    {
      "index": 804,
      "start_time": 2082100.0,
      "end_time": 2083648.0,
      "text": "you&#39;ve got the exact same pointer"
    },
    {
      "index": 805,
      "start_time": 2083639.9999999998,
      "end_time": 2087201.9999999998,
      "text": "and you just say, okay, pretend this means something else."
    },
    {
      "index": 806,
      "start_time": 2087210.0,
      "end_time": 2089272.0,
      "text": "But when you get multiple inheritance involved"
    },
    {
      "index": 807,
      "start_time": 2089270.0,
      "end_time": 2090873.0,
      "text": "suddenly things get a little more complicated."
    },
    {
      "index": 808,
      "start_time": 2090870.0,
      "end_time": 2093258.0,
      "text": "And if you say, take this pointer"
    },
    {
      "index": 809,
      "start_time": 2093260.0000000002,
      "end_time": 2095530.0000000002,
      "text": "and interpret it as a pointer to its super class,"
    },
    {
      "index": 810,
      "start_time": 2095530.0000000002,
      "end_time": 2097081.0000000002,
      "text": "what it will actually do is it will move"
    },
    {
      "index": 811,
      "start_time": 2097080.0,
      "end_time": 2097913.0,
      "text": "that pointer a little bit."
    },
    {
      "index": 812,
      "start_time": 2097910.0,
      "end_time": 2100719.0,
      "text": "So in this case it&#39;s going to add 16 to that address"
    },
    {
      "index": 813,
      "start_time": 2100720.0,
      "end_time": 2103534.0,
      "text": "and give you a pointer into the middle of this object."
    },
    {
      "index": 814,
      "start_time": 2103540.0,
      "end_time": 2104924.0,
      "text": "And because that vtable is right there,"
    },
    {
      "index": 815,
      "start_time": 2104920.0,
      "end_time": 2106982.0,
      "text": "it all just kinda works out."
    },
    {
      "index": 816,
      "start_time": 2106980.0,
      "end_time": 2110231.0,
      "text": "And it&#39;s a bit of a crazy system,"
    },
    {
      "index": 817,
      "start_time": 2110230.0,
      "end_time": 2112081.0,
      "text": "but it gets the job done."
    },
    {
      "index": 818,
      "start_time": 2112080.0,
      "end_time": 2114010.0,
      "text": "And so you can see the effect here"
    },
    {
      "index": 819,
      "start_time": 2114010.0,
      "end_time": 2116739.0,
      "text": "where you&#39;ve got essentially the vtable"
    },
    {
      "index": 820,
      "start_time": 2116740.0,
      "end_time": 2122366.0,
      "text": "for the subclass and each part of this object,"
    },
    {
      "index": 821,
      "start_time": 2122370.0,
      "end_time": 2124518.0,
      "text": "you&#39;ve got two vtables in the object,"
    },
    {
      "index": 822,
      "start_time": 2124520.0,
      "end_time": 2126500.0,
      "text": "each one points to a different part of this vtable"
    },
    {
      "index": 823,
      "start_time": 2126500.0,
      "end_time": 2128310.0,
      "text": "and everything just kinda lines up"
    },
    {
      "index": 824,
      "start_time": 2128310.0,
      "end_time": 2130332.0,
      "text": "with these multiple super classes"
    },
    {
      "index": 825,
      "start_time": 2130330.0,
      "end_time": 2131802.0,
      "text": "so it all just works out."
    },
    {
      "index": 826,
      "start_time": 2131800.0,
      "end_time": 2132933.0,
      "text": "Lots of compiled time trickery"
    },
    {
      "index": 827,
      "start_time": 2132930.0,
      "end_time": 2135875.0,
      "text": "and then the end effect is at runtime"
    },
    {
      "index": 828,
      "start_time": 2135880.0,
      "end_time": 2138273.0,
      "text": "everything is nicely laid out, friendly, and quick."
    },
    {
      "index": 829,
      "start_time": 2138270.0,
      "end_time": 2143025.0,
      "text": "Friendly for the computer, not for us,"
    },
    {
      "index": 830,
      "start_time": 2143030.0,
      "end_time": 2145089.0,
      "text": "but that&#39;s usually okay."
    },
    {
      "index": 831,
      "start_time": 2145090.0,
      "end_time": 2147154.0,
      "text": "So that&#39;s C++, you get crazy stuff with multiple"
    },
    {
      "index": 832,
      "start_time": 2147150.0,
      "end_time": 2150510.0,
      "text": "inheritance, but it&#39;s usually straightforward."
    },
    {
      "index": 833,
      "start_time": 2150510.0,
      "end_time": 2153575.0,
      "text": "Again, you get that vtable at the top"
    },
    {
      "index": 834,
      "start_time": 2153570.0,
      "end_time": 2155292.0,
      "text": "which tells you what kind of object it is"
    },
    {
      "index": 835,
      "start_time": 2155300.0,
      "end_time": 2157020.0,
      "text": "and then all the fields are just laid out."
    },
    {
      "index": 836,
      "start_time": 2157020.0,
      "end_time": 2159083.0,
      "text": "Sometimes you get padding depending on their sizes,"
    },
    {
      "index": 837,
      "start_time": 2159080.0,
      "end_time": 2161133.0,
      "text": "but it&#39;s just one after the other, after the other."
    },
    {
      "index": 838,
      "start_time": 2161130.0,
      "end_time": 2163228.0,
      "text": "Just in line."
    },
    {
      "index": 839,
      "start_time": 2163230.0,
      "end_time": 2165502.0,
      "text": "So let&#39;s move on the Swift now."
    },
    {
      "index": 840,
      "start_time": 2165500.0,
      "end_time": 2169079.0,
      "text": "And Swift starts out very simple like C and like C++."
    },
    {
      "index": 841,
      "start_time": 2169080.0,
      "end_time": 2171533.0,
      "text": "So just to get the ball rolling"
    },
    {
      "index": 842,
      "start_time": 2171530.0,
      "end_time": 2173883.0,
      "text": "I created an empty struct and you&#39;ll never guess"
    },
    {
      "index": 843,
      "start_time": 2173890.0,
      "end_time": 2176788.0,
      "text": "what it looks like, an empty struct contains nothing at all,"
    },
    {
      "index": 844,
      "start_time": 2176790.0,
      "end_time": 2178552.0,
      "text": "it&#39;s a zero size object."
    },
    {
      "index": 845,
      "start_time": 2178550.0,
      "end_time": 2181867.0,
      "text": "Interesting feature of this, it does still have an address"
    },
    {
      "index": 846,
      "start_time": 2181860.0,
      "end_time": 2184169.0,
      "text": "in memory even though it doesn&#39;t contain anything."
    },
    {
      "index": 847,
      "start_time": 2184170.0,
      "end_time": 2185889.0,
      "text": "The compiler still gives it an address"
    },
    {
      "index": 848,
      "start_time": 2185890.0,
      "end_time": 2188196.0,
      "text": "which I thought was kinda funny."
    },
    {
      "index": 849,
      "start_time": 2188200.0,
      "end_time": 2189881.0,
      "text": "It probably doesn&#39;t make a whole lot of sense"
    },
    {
      "index": 850,
      "start_time": 2189880.0,
      "end_time": 2193319.0,
      "text": "for the compiler to optimize for zero size structs"
    },
    {
      "index": 851,
      "start_time": 2193320.0,
      "end_time": 2196293.0,
      "text": "since we don&#39;t use those very much."
    },
    {
      "index": 852,
      "start_time": 2196290.0,
      "end_time": 2200022.0,
      "text": "Move on to a more realistic example,"
    },
    {
      "index": 853,
      "start_time": 2200020.0,
      "end_time": 2202629.0,
      "text": "more useful example, here&#39;s a struct with three fields."
    },
    {
      "index": 854,
      "start_time": 2202630.0,
      "end_time": 2205192.0,
      "text": "This is essentially the Swift equivalent"
    },
    {
      "index": 855,
      "start_time": 2205200.0,
      "end_time": 2208725.0,
      "text": "of that C example I did with the beginning."
    },
    {
      "index": 856,
      "start_time": 2208720.0,
      "end_time": 2210396.0,
      "text": "Three fields, one, two and three,"
    },
    {
      "index": 857,
      "start_time": 2210400.0,
      "end_time": 2214814.0,
      "text": "and it looks, this is the result, the output,"
    },
    {
      "index": 858,
      "start_time": 2214810.0,
      "end_time": 2216997.0,
      "text": "the way it&#39;s laid out in memory"
    },
    {
      "index": 859,
      "start_time": 2217000.0,
      "end_time": 2219512.0,
      "text": "looks a lot like the way it was laid out in memory in C."
    },
    {
      "index": 860,
      "start_time": 2219510.0,
      "end_time": 2221531.0,
      "text": "And in fact it doesn&#39;t just look like it,"
    },
    {
      "index": 861,
      "start_time": 2221530.0,
      "end_time": 2223256.0,
      "text": "it is exactly the same."
    },
    {
      "index": 862,
      "start_time": 2223260.0,
      "end_time": 2226967.0,
      "text": "These two are laid out in exactly the same way."
    },
    {
      "index": 863,
      "start_time": 2226960.0,
      "end_time": 2229317.0,
      "text": "So Swift is just laying it out one, two, three"
    },
    {
      "index": 864,
      "start_time": 2229320.0,
      "end_time": 2231292.0,
      "text": "in a row like that."
    },
    {
      "index": 865,
      "start_time": 2231290.0,
      "end_time": 2233263.0,
      "text": "There&#39;s no fancy metadata going on,"
    },
    {
      "index": 866,
      "start_time": 2233260.0,
      "end_time": 2236702.0,
      "text": "there&#39;s no extra stuff, it&#39;s just your fields."
    },
    {
      "index": 867,
      "start_time": 2236710.0,
      "end_time": 2241537.0,
      "text": "And then I did the same thing that I did before"
    },
    {
      "index": 868,
      "start_time": 2241530.0,
      "end_time": 2243590.0,
      "text": "with the multiple sizes."
    },
    {
      "index": 869,
      "start_time": 2243590.0,
      "end_time": 2245649.0,
      "text": "And again, we get the exact same result."
    },
    {
      "index": 870,
      "start_time": 2245650.0,
      "end_time": 2247120.0,
      "text": "So this is a complicated struct"
    },
    {
      "index": 871,
      "start_time": 2247120.0,
      "end_time": 2248892.0,
      "text": "with different fields of different sizes"
    },
    {
      "index": 872,
      "start_time": 2248900.0,
      "end_time": 2252472.0,
      "text": "and the output is exactly the same as it was in C."
    },
    {
      "index": 873,
      "start_time": 2252470.0,
      "end_time": 2255627.0,
      "text": "With one exception, you&#39;ll notice that after three,"
    },
    {
      "index": 874,
      "start_time": 2255620.0,
      "end_time": 2258021.0,
      "text": "you get one, two, three and then there&#39;s"
    },
    {
      "index": 875,
      "start_time": 2258020.0,
      "end_time": 2261265.0,
      "text": "this five f thing before four, that&#39;s just because"
    },
    {
      "index": 876,
      "start_time": 2261270.0,
      "end_time": 2263625.0,
      "text": "the padding that gets inserted"
    },
    {
      "index": 877,
      "start_time": 2263620.0,
      "end_time": 2265762.0,
      "text": "does not have to contain any particular value"
    },
    {
      "index": 878,
      "start_time": 2265770.0,
      "end_time": 2267531.0,
      "text": "because it doesn&#39;t mean anything."
    },
    {
      "index": 879,
      "start_time": 2267530.0,
      "end_time": 2269178.0,
      "text": "The padding is ignored."
    },
    {
      "index": 880,
      "start_time": 2269180.0,
      "end_time": 2270698.0,
      "text": "So before when I ran the thing on C"
    },
    {
      "index": 881,
      "start_time": 2270690.0,
      "end_time": 2272582.0,
      "text": "it just happened to contain zero"
    },
    {
      "index": 882,
      "start_time": 2272590.0,
      "end_time": 2273898.0,
      "text": "and when I ran it on this it just happened"
    },
    {
      "index": 883,
      "start_time": 2273890.0,
      "end_time": 2275322.0,
      "text": "to contain five f."
    },
    {
      "index": 884,
      "start_time": 2275330.0,
      "end_time": 2279911.0,
      "text": "So this is kinda like the junk DNA inside your program."
    },
    {
      "index": 885,
      "start_time": 2279910.0,
      "end_time": 2281549.0,
      "text": "But again, it&#39;s just laid out"
    },
    {
      "index": 886,
      "start_time": 2281550.0,
      "end_time": 2283818.0,
      "text": "exactly the same way C is, so there&#39;s no overhead,"
    },
    {
      "index": 887,
      "start_time": 2283810.0,
      "end_time": 2288064.0,
      "text": "it&#39;s very straightforward."
    },
    {
      "index": 888,
      "start_time": 2288070.0,
      "end_time": 2290206.0,
      "text": "Let&#39;s look at a little more complicated thing,"
    },
    {
      "index": 889,
      "start_time": 2290200.0,
      "end_time": 2292140.0,
      "text": "let&#39;s see how a Swift class looks."
    },
    {
      "index": 890,
      "start_time": 2292140.0,
      "end_time": 2297342.0,
      "text": "So simple thing, complicated result."
    },
    {
      "index": 891,
      "start_time": 2297350.0,
      "end_time": 2300041.0,
      "text": "It&#39;s not as bad as it looks."
    },
    {
      "index": 892,
      "start_time": 2300040.0,
      "end_time": 2302131.0,
      "text": "Essentially what you&#39;re getting in there"
    },
    {
      "index": 893,
      "start_time": 2302130.0,
      "end_time": 2304397.0,
      "text": "is that Swift has this whole hierarchy of stuff"
    },
    {
      "index": 894,
      "start_time": 2304400.0,
      "end_time": 2310162.0,
      "text": "and it knows what types mean at runtime."
    },
    {
      "index": 895,
      "start_time": 2310160.0,
      "end_time": 2314114.0,
      "text": "And I wanna zoom in a little bit so we can see the object,"
    },
    {
      "index": 896,
      "start_time": 2314110.0,
      "end_time": 2316459.0,
      "text": "but what all this other stuff is going on"
    },
    {
      "index": 897,
      "start_time": 2316460.0,
      "end_time": 2318605.0,
      "text": "is essentially it&#39;s saying that your class"
    },
    {
      "index": 898,
      "start_time": 2318600.0,
      "end_time": 2320912.0,
      "text": "is actually a subclass of this heap in"
    },
    {
      "index": 899,
      "start_time": 2320920.0,
      "end_time": 2322902.0,
      "text": "the Swift object class and then that class"
    },
    {
      "index": 900,
      "start_time": 2322900.0,
      "end_time": 2324913.0,
      "text": "has a metaclass and all that stuff."
    },
    {
      "index": 901,
      "start_time": 2324910.0,
      "end_time": 2326557.0,
      "text": "So there&#39;s all this metadata that&#39;s going on"
    },
    {
      "index": 902,
      "start_time": 2326560.0,
      "end_time": 2328876.0,
      "text": "that you can use to inspect objects"
    },
    {
      "index": 903,
      "start_time": 2328880.0,
      "end_time": 2330397.0,
      "text": "and things like that."
    },
    {
      "index": 904,
      "start_time": 2330390.0,
      "end_time": 2331948.0,
      "text": "But we can mostly ignore it."
    },
    {
      "index": 905,
      "start_time": 2331950.0,
      "end_time": 2333424.0,
      "text": "So if we ignore all that other stuff"
    },
    {
      "index": 906,
      "start_time": 2333420.0,
      "end_time": 2336148.0,
      "text": "and kind of zoom in, we look at the instance"
    },
    {
      "index": 907,
      "start_time": 2336150.0,
      "end_time": 2338742.0,
      "text": "of the object here and we can see the data"
    },
    {
      "index": 908,
      "start_time": 2338740.0,
      "end_time": 2341141.0,
      "text": "laid out in memory, one, two, three,"
    },
    {
      "index": 909,
      "start_time": 2341150.0,
      "end_time": 2343164.0,
      "text": "and there&#39;s a header above it which is similar"
    },
    {
      "index": 910,
      "start_time": 2343160.0,
      "end_time": 2345126.0,
      "text": "to the way C++ was."
    },
    {
      "index": 911,
      "start_time": 2345120.0,
      "end_time": 2347174.0,
      "text": "In C++ we had a vtable and then there were the fields,"
    },
    {
      "index": 912,
      "start_time": 2347180.0,
      "end_time": 2350754.0,
      "text": "and in Swift we have an isa pointer,"
    },
    {
      "index": 913,
      "start_time": 2350750.0,
      "end_time": 2352898.0,
      "text": "which is essentially the Swift equivallent"
    },
    {
      "index": 914,
      "start_time": 2352900.0,
      "end_time": 2354769.0,
      "text": "of a vtable, it points to the object&#39;s class,"
    },
    {
      "index": 915,
      "start_time": 2354770.0,
      "end_time": 2357673.0,
      "text": "then we&#39;ve got some other stuff"
    },
    {
      "index": 916,
      "start_time": 2357670.0,
      "end_time": 2359224.0,
      "text": "which I&#39;ll talk about in a moment"
    },
    {
      "index": 917,
      "start_time": 2359230.0,
      "end_time": 2360573.0,
      "text": "and then you&#39;ve got the fields."
    },
    {
      "index": 918,
      "start_time": 2360570.0,
      "end_time": 2362165.0,
      "text": "So you&#39;ve got the same arrangement of a header"
    },
    {
      "index": 919,
      "start_time": 2362170.0,
      "end_time": 2363854.0,
      "text": "followed by the fields just packed in memory."
    },
    {
      "index": 920,
      "start_time": 2363850.0,
      "end_time": 2369325.0,
      "text": "Nice, linear, fast, hardware friendly."
    },
    {
      "index": 921,
      "start_time": 2369320.0,
      "end_time": 2371419.0,
      "text": "And let&#39;s take a look at a little bit more"
    },
    {
      "index": 922,
      "start_time": 2371420.0,
      "end_time": 2374606.0,
      "text": "complicated class, this is the class equivalent"
    },
    {
      "index": 923,
      "start_time": 2374610.0,
      "end_time": 2376374.0,
      "text": "of that struct that I showed."
    },
    {
      "index": 924,
      "start_time": 2376370.0,
      "end_time": 2378559.0,
      "text": "And it ends up being the exact same thing"
    },
    {
      "index": 925,
      "start_time": 2378560.0,
      "end_time": 2381299.0,
      "text": "with that sort of header put at the top."
    },
    {
      "index": 926,
      "start_time": 2381300.0,
      "end_time": 2383073.0,
      "text": "So you&#39;ve got that isa pointer,"
    },
    {
      "index": 927,
      "start_time": 2383070.0,
      "end_time": 2385215.0,
      "text": "you&#39;ve got this other stuff which I&#39;ll get to."
    },
    {
      "index": 928,
      "start_time": 2385220.0,
      "end_time": 2386984.0,
      "text": "And then all the fields are just laid out"
    },
    {
      "index": 929,
      "start_time": 2386980.0,
      "end_time": 2389172.0,
      "text": "the exact same way they would be in a struct."
    },
    {
      "index": 930,
      "start_time": 2389180.0,
      "end_time": 2391111.0,
      "text": "Sequentially with some padding to make"
    },
    {
      "index": 931,
      "start_time": 2391110.0,
      "end_time": 2393586.0,
      "text": "everything line up nicely."
    },
    {
      "index": 932,
      "start_time": 2393580.0,
      "end_time": 2396149.0,
      "text": "So this is sort of the visual representation,"
    },
    {
      "index": 933,
      "start_time": 2396150.0,
      "end_time": 2398606.0,
      "text": "the abstract representation &#39;cause those hexadecimal"
    },
    {
      "index": 934,
      "start_time": 2398610.0,
      "end_time": 2401018.0,
      "text": "things get painful to read after awhile."
    },
    {
      "index": 935,
      "start_time": 2401010.0,
      "end_time": 2403118.0,
      "text": "So this is what they mean if you actually"
    },
    {
      "index": 936,
      "start_time": 2403120.0,
      "end_time": 2404920.0,
      "text": "go in and interpret it."
    },
    {
      "index": 937,
      "start_time": 2404920.0,
      "end_time": 2406898.0,
      "text": "You&#39;ve got the isa pointer, that other header field"
    },
    {
      "index": 938,
      "start_time": 2406900.0,
      "end_time": 2409550.0,
      "text": "that I didn&#39;t mention yet, those are retain counts,"
    },
    {
      "index": 939,
      "start_time": 2409550.0,
      "end_time": 2411484.0,
      "text": "you may or may not know Swift operates"
    },
    {
      "index": 940,
      "start_time": 2411490.0,
      "end_time": 2413531.0,
      "text": "using automatic reference counting."
    },
    {
      "index": 941,
      "start_time": 2413530.0,
      "end_time": 2415426.0,
      "text": "So it needs to count the number of references"
    },
    {
      "index": 942,
      "start_time": 2415420.0,
      "end_time": 2417818.0,
      "text": "to each object and in Swift those counts are stored"
    },
    {
      "index": 943,
      "start_time": 2417820.0,
      "end_time": 2421434.0,
      "text": "in the object itself as that second header field."
    },
    {
      "index": 944,
      "start_time": 2421430.0,
      "end_time": 2423873.0,
      "text": "And then your stored properties just get laid out"
    },
    {
      "index": 945,
      "start_time": 2423880.0,
      "end_time": 2427932.0,
      "text": "after that, the compiler just puts them one by one."
    },
    {
      "index": 946,
      "start_time": 2427930.0,
      "end_time": 2431831.0,
      "text": "And I did say retain counts, plural,"
    },
    {
      "index": 947,
      "start_time": 2431830.0,
      "end_time": 2433630.0,
      "text": "so there are actually two counts in a Swift object,"
    },
    {
      "index": 948,
      "start_time": 2433630.0,
      "end_time": 2435435.0,
      "text": "this is in interesting little feature"
    },
    {
      "index": 949,
      "start_time": 2435440.0,
      "end_time": 2436658.0,
      "text": "of the way the system works."
    },
    {
      "index": 950,
      "start_time": 2436650.0,
      "end_time": 2440049.0,
      "text": "There&#39;s the strong count and the weak count."
    },
    {
      "index": 951,
      "start_time": 2440050.0,
      "end_time": 2442586.0,
      "text": "So when you make a normal reference to a Swift object"
    },
    {
      "index": 952,
      "start_time": 2442590.0,
      "end_time": 2444650.0,
      "text": "that increments the strong count"
    },
    {
      "index": 953,
      "start_time": 2444650.0,
      "end_time": 2446463.0,
      "text": "and then if you make a weak reference"
    },
    {
      "index": 954,
      "start_time": 2446460.0,
      "end_time": 2448841.0,
      "text": "to an object that increments the weak count."
    },
    {
      "index": 955,
      "start_time": 2448840.0,
      "end_time": 2450862.0,
      "text": "And the idea is that when the strong count"
    },
    {
      "index": 956,
      "start_time": 2450860.0,
      "end_time": 2453425.0,
      "text": "goes to zero, if the weak count is non-zero"
    },
    {
      "index": 957,
      "start_time": 2453430.0,
      "end_time": 2457042.0,
      "text": "then the object is destroyed, but it&#39;s not deallocated"
    },
    {
      "index": 958,
      "start_time": 2457040.0,
      "end_time": 2461983.0,
      "text": "and that could be a talk by itself."
    },
    {
      "index": 959,
      "start_time": 2461980.0,
      "end_time": 2463288.0,
      "text": "I got a blog article about it if anyone"
    },
    {
      "index": 960,
      "start_time": 2463290.0,
      "end_time": 2464764.0,
      "text": "cares about exactly how that works."
    },
    {
      "index": 961,
      "start_time": 2464770.0,
      "end_time": 2466653.0,
      "text": "But that&#39;s essentially what we&#39;re seeing there."
    },
    {
      "index": 962,
      "start_time": 2466650.0,
      "end_time": 2468837.0,
      "text": "So there are two separate counts"
    },
    {
      "index": 963,
      "start_time": 2468840.0,
      "end_time": 2470268.0,
      "text": "packed into the same field."
    },
    {
      "index": 964,
      "start_time": 2470260.0,
      "end_time": 2474320.0,
      "text": "Each one I think is like 31 bits or something like that."
    },
    {
      "index": 965,
      "start_time": 2474320.0,
      "end_time": 2476710.0,
      "text": "And then let&#39;s look at that isa structure."
    },
    {
      "index": 966,
      "start_time": 2476710.0,
      "end_time": 2479447.0,
      "text": "So that isa structure in C++ the vtable"
    },
    {
      "index": 967,
      "start_time": 2479450.0,
      "end_time": 2481301.0,
      "text": "was just a list of method pointers."
    },
    {
      "index": 968,
      "start_time": 2481300.0,
      "end_time": 2483357.0,
      "text": "In Swift it&#39;s a little bit more complicated"
    },
    {
      "index": 969,
      "start_time": 2483360.0,
      "end_time": 2485969.0,
      "text": "partly because of Objective-C interopp."
    },
    {
      "index": 970,
      "start_time": 2485970.0,
      "end_time": 2489581.0,
      "text": "Swift has to work with Apple&#39;s Objective-C stuff"
    },
    {
      "index": 971,
      "start_time": 2489580.0,
      "end_time": 2492439.0,
      "text": "and in fact all Swift classes in memory"
    },
    {
      "index": 972,
      "start_time": 2492440.0,
      "end_time": 2494288.0,
      "text": "are also Objective-C classes."
    },
    {
      "index": 973,
      "start_time": 2494290.0,
      "end_time": 2496858.0,
      "text": "This fact is hidden from us sometimes."
    },
    {
      "index": 974,
      "start_time": 2496850.0,
      "end_time": 2499577.0,
      "text": "If you explicitly subclass in Objective-C class"
    },
    {
      "index": 975,
      "start_time": 2499580.0,
      "end_time": 2503374.0,
      "text": "then you can see it, if you use the at obj C"
    },
    {
      "index": 976,
      "start_time": 2503380.0,
      "end_time": 2505059.0,
      "text": "annotation you can see it."
    },
    {
      "index": 977,
      "start_time": 2505050.0,
      "end_time": 2507112.0,
      "text": "But even if you do none of that and you do"
    },
    {
      "index": 978,
      "start_time": 2507120.0,
      "end_time": 2509180.0,
      "text": "what looks like a pure Swift class,"
    },
    {
      "index": 979,
      "start_time": 2509180.0,
      "end_time": 2513178.0,
      "text": "it&#39;s actually an Objective-C class just the same."
    },
    {
      "index": 980,
      "start_time": 2513170.0,
      "end_time": 2515308.0,
      "text": "And just to be a little bit more accurate,"
    },
    {
      "index": 981,
      "start_time": 2515310.0,
      "end_time": 2517956.0,
      "text": "the first part of an object is not necessarily"
    },
    {
      "index": 982,
      "start_time": 2517960.0,
      "end_time": 2520443.0,
      "text": "the isa pointer, sometimes it&#39;s the isa pointer"
    },
    {
      "index": 983,
      "start_time": 2520440.0,
      "end_time": 2522308.0,
      "text": "along with some other junk."
    },
    {
      "index": 984,
      "start_time": 2522310.0,
      "end_time": 2525833.0,
      "text": "This is just a way to sort of efficiently pack"
    },
    {
      "index": 985,
      "start_time": 2525830.0,
      "end_time": 2527633.0,
      "text": "some metadata in there."
    },
    {
      "index": 986,
      "start_time": 2527640.0,
      "end_time": 2529729.0,
      "text": "Apple does this on iOS 64 bit,"
    },
    {
      "index": 987,
      "start_time": 2529720.0,
      "end_time": 2532028.0,
      "text": "I don&#39;t believe they do this on the Mac currently."
    },
    {
      "index": 988,
      "start_time": 2532030.0,
      "end_time": 2533664.0,
      "text": "This is all subject to change,"
    },
    {
      "index": 989,
      "start_time": 2533670.0,
      "end_time": 2535184.0,
      "text": "but basically they can put little"
    },
    {
      "index": 990,
      "start_time": 2535180.0,
      "end_time": 2536565.0,
      "text": "extra bits of information in there"
    },
    {
      "index": 991,
      "start_time": 2536560.0,
      "end_time": 2539403.0,
      "text": "like whether this object has ever had"
    },
    {
      "index": 992,
      "start_time": 2539410.0,
      "end_time": 2541259.0,
      "text": "any associated objects with it"
    },
    {
      "index": 993,
      "start_time": 2541260.0,
      "end_time": 2543366.0,
      "text": "that need to be cleaned up when its deallocated"
    },
    {
      "index": 994,
      "start_time": 2543360.0,
      "end_time": 2545461.0,
      "text": "and things like that."
    },
    {
      "index": 995,
      "start_time": 2545460.0,
      "end_time": 2547355.0,
      "text": "Just real quick detail there."
    },
    {
      "index": 996,
      "start_time": 2547360.0,
      "end_time": 2550814.0,
      "text": "So what do these class structures look like?"
    },
    {
      "index": 997,
      "start_time": 2550810.0,
      "end_time": 2554599.0,
      "text": "Since every Swift class is also an Objective-C class,"
    },
    {
      "index": 998,
      "start_time": 2554600.0,
      "end_time": 2556608.0,
      "text": "that means that we can look at Objective-C"
    },
    {
      "index": 999,
      "start_time": 2556610.0,
      "end_time": 2559177.0,
      "text": "class definitions to see what&#39;s going on."
    },
    {
      "index": 1000,
      "start_time": 2559180.0,
      "end_time": 2560740.0,
      "text": "And Objective-C class definitions"
    },
    {
      "index": 1001,
      "start_time": 2560740.0,
      "end_time": 2562882.0,
      "text": "are part of the Objective-C runtime"
    },
    {
      "index": 1002,
      "start_time": 2562880.0,
      "end_time": 2565102.0,
      "text": "which is open source, that&#39;s convenient."
    },
    {
      "index": 1003,
      "start_time": 2565100.0,
      "end_time": 2567950.0,
      "text": "So we can just look in runtime.h"
    },
    {
      "index": 1004,
      "start_time": 2567950.0,
      "end_time": 2571061.0,
      "text": "in the open source dump there."
    },
    {
      "index": 1005,
      "start_time": 2571060.0,
      "end_time": 2573585.0,
      "text": "And if we look there and we see what&#39;s going on,"
    },
    {
      "index": 1006,
      "start_time": 2573590.0,
      "end_time": 2575359.0,
      "text": "this is what we get."
    },
    {
      "index": 1007,
      "start_time": 2575360.0,
      "end_time": 2578428.0,
      "text": "So every class is also a valid object in memory."
    },
    {
      "index": 1008,
      "start_time": 2578420.0,
      "end_time": 2580677.0,
      "text": "So if you remember an object starts"
    },
    {
      "index": 1009,
      "start_time": 2580680.0,
      "end_time": 2582739.0,
      "text": "with an isa pointer, so that means every class"
    },
    {
      "index": 1010,
      "start_time": 2582740.0,
      "end_time": 2584458.0,
      "text": "starts with an isa pointer as well."
    },
    {
      "index": 1011,
      "start_time": 2584460.0,
      "end_time": 2585934.0,
      "text": "So every class is also an object,"
    },
    {
      "index": 1012,
      "start_time": 2585930.0,
      "end_time": 2588030.0,
      "text": "a class has a class, that&#39;s called the metaclass"
    },
    {
      "index": 1013,
      "start_time": 2588030.0,
      "end_time": 2589964.0,
      "text": "and you can follow that rabbit hole"
    },
    {
      "index": 1014,
      "start_time": 2589970.0,
      "end_time": 2591570.0,
      "text": "all the way down until you get very confused."
    },
    {
      "index": 1015,
      "start_time": 2591570.0,
      "end_time": 2595134.0,
      "text": "The class also stores super class."
    },
    {
      "index": 1016,
      "start_time": 2595130.0,
      "end_time": 2598034.0,
      "text": "So that allows you to follow the chain up"
    },
    {
      "index": 1017,
      "start_time": 2598030.0,
      "end_time": 2599968.0,
      "text": "and essentially explore the class hierarchy."
    },
    {
      "index": 1018,
      "start_time": 2599970.0,
      "end_time": 2602557.0,
      "text": "Class stores its name, it stores a bunch of other stuff,"
    },
    {
      "index": 1019,
      "start_time": 2602560.0,
      "end_time": 2604443.0,
      "text": "it stores how big it&#39;s objects are,"
    },
    {
      "index": 1020,
      "start_time": 2604440.0,
      "end_time": 2606414.0,
      "text": "it stores a list of instance variables"
    },
    {
      "index": 1021,
      "start_time": 2606420.0,
      "end_time": 2608607.0,
      "text": "and methods and it&#39;s got a cache"
    },
    {
      "index": 1022,
      "start_time": 2608600.0,
      "end_time": 2612171.0,
      "text": "which speeds up methods dispatch."
    },
    {
      "index": 1023,
      "start_time": 2612170.0,
      "end_time": 2614745.0,
      "text": "And then Swift classes take all of that"
    },
    {
      "index": 1024,
      "start_time": 2614750.0,
      "end_time": 2616429.0,
      "text": "and they add more stuff because Swift"
    },
    {
      "index": 1025,
      "start_time": 2616430.0,
      "end_time": 2617313.0,
      "text": "has more stuff going on."
    },
    {
      "index": 1026,
      "start_time": 2617310.0,
      "end_time": 2620840.0,
      "text": "So if you look in the Swift open source"
    },
    {
      "index": 1027,
      "start_time": 2620840.0,
      "end_time": 2622724.0,
      "text": "to see what&#39;s involved there,"
    },
    {
      "index": 1028,
      "start_time": 2622730.0,
      "end_time": 2624701.0,
      "text": "we&#39;ve got some flags, we&#39;ve got this offsets,"
    },
    {
      "index": 1029,
      "start_time": 2624700.0,
      "end_time": 2626923.0,
      "text": "a lot of bizarre stuff."
    },
    {
      "index": 1030,
      "start_time": 2626920.0,
      "end_time": 2631266.0,
      "text": "But essentially a Swift class is the Objective-C class"
    },
    {
      "index": 1031,
      "start_time": 2631260.0,
      "end_time": 2632931.0,
      "text": "with more stuff on the end."
    },
    {
      "index": 1032,
      "start_time": 2632940.0,
      "end_time": 2636818.0,
      "text": "And then, this is an interesting part,"
    },
    {
      "index": 1033,
      "start_time": 2636810.0,
      "end_time": 2642587.0,
      "text": "after all of those fields it&#39;s a list of methods again,"
    },
    {
      "index": 1034,
      "start_time": 2642590.0,
      "end_time": 2644599.0,
      "text": "an array of method implementation."
    },
    {
      "index": 1035,
      "start_time": 2644600.0,
      "end_time": 2648206.0,
      "text": "So essentially it&#39;s the C++ vtable approach again"
    },
    {
      "index": 1036,
      "start_time": 2648210.0,
      "end_time": 2651297.0,
      "text": "with some extra stuff at the top that we can ignore."
    },
    {
      "index": 1037,
      "start_time": 2651290.0,
      "end_time": 2653973.0,
      "text": "And so what that means is that when you do"
    },
    {
      "index": 1038,
      "start_time": 2653980.0,
      "end_time": 2656611.0,
      "text": "a method call in Swift it translates"
    },
    {
      "index": 1039,
      "start_time": 2656610.0,
      "end_time": 2658752.0,
      "text": "into essentially an array lookup."
    },
    {
      "index": 1040,
      "start_time": 2658750.0,
      "end_time": 2661864.0,
      "text": "So you write obj.method up here"
    },
    {
      "index": 1041,
      "start_time": 2661860.0,
      "end_time": 2666105.0,
      "text": "and that translates into code like this down here."
    },
    {
      "index": 1042,
      "start_time": 2666110.0,
      "end_time": 2667796.0,
      "text": "So essentially you take to object,"
    },
    {
      "index": 1043,
      "start_time": 2667790.0,
      "end_time": 2669595.0,
      "text": "you get that isa field out of it"
    },
    {
      "index": 1044,
      "start_time": 2669600.0,
      "end_time": 2671113.0,
      "text": "and then you just index into it"
    },
    {
      "index": 1045,
      "start_time": 2671110.0,
      "end_time": 2674286.0,
      "text": "to get the method pointer and then you jump to it."
    },
    {
      "index": 1046,
      "start_time": 2674290.0,
      "end_time": 2676480.0,
      "text": "You essentially make a function call based on that."
    },
    {
      "index": 1047,
      "start_time": 2676480.0,
      "end_time": 2683686.0,
      "text": "And so it&#39;s quick, it&#39;s efficient at runtime."
    },
    {
      "index": 1048,
      "start_time": 2683680.0,
      "end_time": 2685109.0,
      "text": "Let&#39;s take a look at what an object"
    },
    {
      "index": 1049,
      "start_time": 2685110.0,
      "end_time": 2687127.0,
      "text": "looks like when you subclass a bunch of stuff."
    },
    {
      "index": 1050,
      "start_time": 2687130.0,
      "end_time": 2690125.0,
      "text": "So I made a class, a subclass,"
    },
    {
      "index": 1051,
      "start_time": 2690120.0,
      "end_time": 2692470.0,
      "text": "a subclass of that and so forth four levels deep."
    },
    {
      "index": 1052,
      "start_time": 2692480.0,
      "end_time": 2695717.0,
      "text": "And it looks exactly the same."
    },
    {
      "index": 1053,
      "start_time": 2695710.0,
      "end_time": 2698658.0,
      "text": "So you&#39;ve got that isa pointer at that top"
    },
    {
      "index": 1054,
      "start_time": 2698660.0,
      "end_time": 2700509.0,
      "text": "which tells you what it is, you&#39;ve got"
    },
    {
      "index": 1055,
      "start_time": 2700510.0,
      "end_time": 2702156.0,
      "text": "the retain counts below that and then the field"
    },
    {
      "index": 1056,
      "start_time": 2702160.0,
      "end_time": 2704878.0,
      "text": "of all those classes just gets laid out sequentially."
    },
    {
      "index": 1057,
      "start_time": 2704870.0,
      "end_time": 2708536.0,
      "text": "Just like in C++ we saw before."
    },
    {
      "index": 1058,
      "start_time": 2708540.0,
      "end_time": 2710479.0,
      "text": "So at runtime it&#39;s very simple."
    },
    {
      "index": 1059,
      "start_time": 2710480.0,
      "end_time": 2712287.0,
      "text": "Even though the class hierarchy we looked at"
    },
    {
      "index": 1060,
      "start_time": 2712280.0,
      "end_time": 2715422.0,
      "text": "was kind of long and complex."
    },
    {
      "index": 1061,
      "start_time": 2715430.0,
      "end_time": 2718626.0,
      "text": "Let&#39;s take a look at arrays in Swift."
    },
    {
      "index": 1062,
      "start_time": 2718620.0,
      "end_time": 2721775.0,
      "text": "Arrays in Swift are value types"
    },
    {
      "index": 1063,
      "start_time": 2721780.0,
      "end_time": 2725697.0,
      "text": "which means that they act like primitives essentially"
    },
    {
      "index": 1064,
      "start_time": 2725700.0,
      "end_time": 2728982.0,
      "text": "when you assign x equals y that conceptually creates"
    },
    {
      "index": 1065,
      "start_time": 2728980.0,
      "end_time": 2731793.0,
      "text": "a new array which is codally separate from the original,"
    },
    {
      "index": 1066,
      "start_time": 2731790.0,
      "end_time": 2733937.0,
      "text": "this dump reveals that&#39;s essentially a lie,"
    },
    {
      "index": 1067,
      "start_time": 2733940.0,
      "end_time": 2736629.0,
      "text": "they are, in fact, reference types under the hood"
    },
    {
      "index": 1068,
      "start_time": 2736630.0,
      "end_time": 2738972.0,
      "text": "the way they&#39;re implemented."
    },
    {
      "index": 1069,
      "start_time": 2738970.0,
      "end_time": 2741494.0,
      "text": "So this array, one, two, three, four, five,"
    },
    {
      "index": 1070,
      "start_time": 2741490.0,
      "end_time": 2744607.0,
      "text": "if you actually look at it it&#39;s just a single pointer."
    },
    {
      "index": 1071,
      "start_time": 2744610.0,
      "end_time": 2746922.0,
      "text": "And that points to one, two, three, four"
    },
    {
      "index": 1072,
      "start_time": 2746920.0,
      "end_time": 2750317.0,
      "text": "and then five after that which ran off the end"
    },
    {
      "index": 1073,
      "start_time": 2750320.0,
      "end_time": 2752622.0,
      "text": "so it got truncated."
    },
    {
      "index": 1074,
      "start_time": 2752620.0,
      "end_time": 2754975.0,
      "text": "And so what&#39;s going on with that is every array"
    },
    {
      "index": 1075,
      "start_time": 2754980.0,
      "end_time": 2756577.0,
      "text": "that you work with is actually a pointer"
    },
    {
      "index": 1076,
      "start_time": 2756570.0,
      "end_time": 2759217.0,
      "text": "to the storage and when you make a new array"
    },
    {
      "index": 1077,
      "start_time": 2759220.0,
      "end_time": 2761107.0,
      "text": "you just get a new pointer to the storage,"
    },
    {
      "index": 1078,
      "start_time": 2761110.0,
      "end_time": 2763001.0,
      "text": "nothing really happens and it&#39;s only"
    },
    {
      "index": 1079,
      "start_time": 2763000.0,
      "end_time": 2764853.0,
      "text": "when you actually modify it, it will go in"
    },
    {
      "index": 1080,
      "start_time": 2764850.0,
      "end_time": 2766734.0,
      "text": "and it will see, oh, someone else references this,"
    },
    {
      "index": 1081,
      "start_time": 2766730.0,
      "end_time": 2769934.0,
      "text": "I will create a copy and then modify that copy."
    },
    {
      "index": 1082,
      "start_time": 2769940.0,
      "end_time": 2772038.0,
      "text": "So it still references under the hood,"
    },
    {
      "index": 1083,
      "start_time": 2772040.0,
      "end_time": 2773848.0,
      "text": "you just don&#39;t see it until you run"
    },
    {
      "index": 1084,
      "start_time": 2773840.0,
      "end_time": 2777151.0,
      "text": "a program like this, then you see it."
    },
    {
      "index": 1085,
      "start_time": 2777160.0,
      "end_time": 2778796.0,
      "text": "Let&#39;s take a look at protocol types,"
    },
    {
      "index": 1086,
      "start_time": 2778790.0,
      "end_time": 2780805.0,
      "text": "this is an interesting aspect of Swift."
    },
    {
      "index": 1087,
      "start_time": 2780810.0,
      "end_time": 2783375.0,
      "text": "So here&#39;s a Swift protocol, it&#39;s got three methods in it."
    },
    {
      "index": 1088,
      "start_time": 2783370.0,
      "end_time": 2786224.0,
      "text": "Here is a struct, which holds three instances"
    },
    {
      "index": 1089,
      "start_time": 2786230.0,
      "end_time": 2788214.0,
      "text": "of that protocol, right, you can use"
    },
    {
      "index": 1090,
      "start_time": 2788210.0,
      "end_time": 2790983.0,
      "text": "a protocol as a type itself and that can hold"
    },
    {
      "index": 1091,
      "start_time": 2790980.0,
      "end_time": 2798593.0,
      "text": "an instance of anything that implements that protocol."
    },
    {
      "index": 1092,
      "start_time": 2798590.0,
      "end_time": 2800988.0,
      "text": "Here is a struct which implements it,"
    },
    {
      "index": 1093,
      "start_time": 2800990.0,
      "end_time": 2805199.0,
      "text": "it&#39;s just got empty implementations of those three methods."
    },
    {
      "index": 1094,
      "start_time": 2805200.0,
      "end_time": 2807892.0,
      "text": "It&#39;s also got a field which is just an integer"
    },
    {
      "index": 1095,
      "start_time": 2807890.0,
      "end_time": 2809651.0,
      "text": "containing the strange hex value,"
    },
    {
      "index": 1096,
      "start_time": 2809660.0,
      "end_time": 2814084.0,
      "text": "that hex value will spell out the word small in ASCII,"
    },
    {
      "index": 1097,
      "start_time": 2814080.0,
      "end_time": 2816471.0,
      "text": "basically that&#39;s there so that when I do the dump"
    },
    {
      "index": 1098,
      "start_time": 2816470.0,
      "end_time": 2819066.0,
      "text": "we can identify it because it will search"
    },
    {
      "index": 1099,
      "start_time": 2819070.0,
      "end_time": 2822599.0,
      "text": "for that string, it will show it in the printing."
    },
    {
      "index": 1100,
      "start_time": 2822590.0,
      "end_time": 2825075.0,
      "text": "Here&#39;s another struct, this is a larger one,"
    },
    {
      "index": 1101,
      "start_time": 2825080.0,
      "end_time": 2826680.0,
      "text": "it&#39;s got four fields."
    },
    {
      "index": 1102,
      "start_time": 2826680.0,
      "end_time": 2828237.0,
      "text": "The first one spells out large"
    },
    {
      "index": 1103,
      "start_time": 2828240.0,
      "end_time": 2830393.0,
      "text": "and the other ones just contain one, two, and three"
    },
    {
      "index": 1104,
      "start_time": 2830390.0,
      "end_time": 2833247.0,
      "text": "repeated just so that they show up nicely."
    },
    {
      "index": 1105,
      "start_time": 2833250.0,
      "end_time": 2843181.0,
      "text": "And finally, here is a class, if this wants to advance,"
    },
    {
      "index": 1106,
      "start_time": 2843180.0,
      "end_time": 2851162.0,
      "text": "yeah, my wifi is not cooperating."
    },
    {
      "index": 1107,
      "start_time": 2851160.0,
      "end_time": 2856035.0,
      "text": "There&#39;s a class which, same as the struct essentially"
    },
    {
      "index": 1108,
      "start_time": 2856030.0,
      "end_time": 2858770.0,
      "text": "except it spells out class instead."
    },
    {
      "index": 1109,
      "start_time": 2858770.0,
      "end_time": 2861380.0,
      "text": "And so we wanna see how these get represented."
    },
    {
      "index": 1110,
      "start_time": 2861390.0,
      "end_time": 2864564.0,
      "text": "So here we create an instance of that protocol holder"
    },
    {
      "index": 1111,
      "start_time": 2864560.0,
      "end_time": 2867791.0,
      "text": "containing one instance of the small struct,"
    },
    {
      "index": 1112,
      "start_time": 2867790.0,
      "end_time": 2869558.0,
      "text": "one instance of the large struct"
    },
    {
      "index": 1113,
      "start_time": 2869560.0,
      "end_time": 2871242.0,
      "text": "and one instance of that class."
    },
    {
      "index": 1114,
      "start_time": 2871240.0,
      "end_time": 2873517.0,
      "text": "And if we dump it out here&#39;s what we get."
    },
    {
      "index": 1115,
      "start_time": 2873520.0,
      "end_time": 2876650.0,
      "text": "The larger view of this is very complicated,"
    },
    {
      "index": 1116,
      "start_time": 2876650.0,
      "end_time": 2881857.0,
      "text": "but we can see that struct in the list of strings"
    },
    {
      "index": 1117,
      "start_time": 2881850.0,
      "end_time": 2883818.0,
      "text": "that it found, it found small."
    },
    {
      "index": 1118,
      "start_time": 2883820.0,
      "end_time": 2885756.0,
      "text": "So we can tell from this that that small struct"
    },
    {
      "index": 1119,
      "start_time": 2885760.0,
      "end_time": 2888159.0,
      "text": "actually gets stored inline, that protocol,"
    },
    {
      "index": 1120,
      "start_time": 2888160.0,
      "end_time": 2890221.0,
      "text": "that field of protocol type is able to store"
    },
    {
      "index": 1121,
      "start_time": 2890220.0,
      "end_time": 2893203.0,
      "text": "that struct inline, but the large struct"
    },
    {
      "index": 1122,
      "start_time": 2893200.0,
      "end_time": 2895176.0,
      "text": "does not get stored inline and of course"
    },
    {
      "index": 1123,
      "start_time": 2895180.0,
      "end_time": 2899053.0,
      "text": "the class doesn&#39;t because the class is a reference."
    },
    {
      "index": 1124,
      "start_time": 2899050.0,
      "end_time": 2902661.0,
      "text": "And where did that large struct go?"
    },
    {
      "index": 1125,
      "start_time": 2902660.0,
      "end_time": 2905902.0,
      "text": "Because structs normally get stored inline,"
    },
    {
      "index": 1126,
      "start_time": 2905900.0,
      "end_time": 2907706.0,
      "text": "but this one was large, it ends up getting stored"
    },
    {
      "index": 1127,
      "start_time": 2907710.0,
      "end_time": 2910560.0,
      "text": "off on the side here if you chase the arrows around."
    },
    {
      "index": 1128,
      "start_time": 2910560.0,
      "end_time": 2915158.0,
      "text": "And essentially what happens is it&#39;s too big to fit."
    },
    {
      "index": 1129,
      "start_time": 2915160.0,
      "end_time": 2917599.0,
      "text": "The compiler can&#39;t know how big"
    },
    {
      "index": 1130,
      "start_time": 2917600.0,
      "end_time": 2919500.0,
      "text": "these things are gonna be so it places"
    },
    {
      "index": 1131,
      "start_time": 2919500.0,
      "end_time": 2921307.0,
      "text": "an arbitrary size limit and when you go over that limit"
    },
    {
      "index": 1132,
      "start_time": 2921300.0,
      "end_time": 2923777.0,
      "text": "then the compiler behind your back boxes it up,"
    },
    {
      "index": 1133,
      "start_time": 2923780.0,
      "end_time": 2926510.0,
      "text": "allocates something dynamically and stores it over here."
    },
    {
      "index": 1134,
      "start_time": 2926510.0,
      "end_time": 2932173.0,
      "text": "So here large gets stored off in the weeds somewhere."
    },
    {
      "index": 1135,
      "start_time": 2932170.0,
      "end_time": 2933726.0,
      "text": "If you chase it down you actually look"
    },
    {
      "index": 1136,
      "start_time": 2933730.0,
      "end_time": 2935908.0,
      "text": "at how these things are implemented."
    },
    {
      "index": 1137,
      "start_time": 2935910.0,
      "end_time": 2939179.0,
      "text": "A value of protocol type holds five fields."
    },
    {
      "index": 1138,
      "start_time": 2939180.0,
      "end_time": 2941408.0,
      "text": "It holds three arbitrary data fields"
    },
    {
      "index": 1139,
      "start_time": 2941400.0,
      "end_time": 2943497.0,
      "text": "and then it holds some type metadata"
    },
    {
      "index": 1140,
      "start_time": 2943500.0,
      "end_time": 2945180.0,
      "text": "which essentially tells you what it is"
    },
    {
      "index": 1141,
      "start_time": 2945180.0,
      "end_time": 2946938.0,
      "text": "and then it holds a witness table"
    },
    {
      "index": 1142,
      "start_time": 2946940.0,
      "end_time": 2949166.0,
      "text": "which is like a vtable for the protocol."
    },
    {
      "index": 1143,
      "start_time": 2949170.0,
      "end_time": 2951609.0,
      "text": "And those three data fields are given over"
    },
    {
      "index": 1144,
      "start_time": 2951600.0,
      "end_time": 2953417.0,
      "text": "to whatever the type needs them for."
    },
    {
      "index": 1145,
      "start_time": 2953420.0,
      "end_time": 2955267.0,
      "text": "So if you&#39;ve got a struct which holds"
    },
    {
      "index": 1146,
      "start_time": 2955270.0,
      "end_time": 2957334.0,
      "text": "that much stuff or less it gets stored inline"
    },
    {
      "index": 1147,
      "start_time": 2957330.0,
      "end_time": 2959091.0,
      "text": "very efficiently and everything is quick"
    },
    {
      "index": 1148,
      "start_time": 2959090.0,
      "end_time": 2961309.0,
      "text": "and as soon as you go over that limit,"
    },
    {
      "index": 1149,
      "start_time": 2961310.0,
      "end_time": 2963156.0,
      "text": "suddenly it has to get broken out,"
    },
    {
      "index": 1150,
      "start_time": 2963160.0,
      "end_time": 2965302.0,
      "text": "it gets boxed up, it gets allocated dynamically"
    },
    {
      "index": 1151,
      "start_time": 2965300.0,
      "end_time": 2967193.0,
      "text": "and you loose a lot of efficiency."
    },
    {
      "index": 1152,
      "start_time": 2967190.0,
      "end_time": 2968662.0,
      "text": "And this is all hidden from you,"
    },
    {
      "index": 1153,
      "start_time": 2968670.0,
      "end_time": 2971494.0,
      "text": "you don&#39;t notice it util your code gets slow."
    },
    {
      "index": 1154,
      "start_time": 2971490.0,
      "end_time": 2973338.0,
      "text": "So the witness table is basically a vtable,"
    },
    {
      "index": 1155,
      "start_time": 2973340.0,
      "end_time": 2975990.0,
      "text": "it&#39;s just an array of implementations"
    },
    {
      "index": 1156,
      "start_time": 2975990.0,
      "end_time": 2980028.0,
      "text": "just like the C++ vtable."
    },
    {
      "index": 1157,
      "start_time": 2980020.0,
      "end_time": 2982418.0,
      "text": "And so that means that when you make a method call"
    },
    {
      "index": 1158,
      "start_time": 2982420.0,
      "end_time": 2984477.0,
      "text": "on a protocol type it looks a lot like"
    },
    {
      "index": 1159,
      "start_time": 2984480.0,
      "end_time": 2988104.0,
      "text": "a method call on an object &#39;cause you&#39;ve got"
    },
    {
      "index": 1160,
      "start_time": 2988100.0,
      "end_time": 2990794.0,
      "text": "this special table just for the protocol."
    },
    {
      "index": 1161,
      "start_time": 2990800.0,
      "end_time": 2994909.0,
      "text": "So when you make a call you get a protocol"
    },
    {
      "index": 1162,
      "start_time": 2994910.0,
      "end_time": 2997138.0,
      "text": "type like that, you do p.g, make a call,"
    },
    {
      "index": 1163,
      "start_time": 2997140.0,
      "end_time": 2999989.0,
      "text": "it translates into something like this."
    },
    {
      "index": 1164,
      "start_time": 2999980.0,
      "end_time": 3003802.0,
      "text": "You just take that, you look up the table"
    },
    {
      "index": 1165,
      "start_time": 3003810.0,
      "end_time": 3006420.0,
      "text": "by looking up the fourth word in the protocol"
    },
    {
      "index": 1166,
      "start_time": 3006420.0,
      "end_time": 3009031.0,
      "text": "and then you use the offset in the table"
    },
    {
      "index": 1167,
      "start_time": 3009030.0,
      "end_time": 3010545.0,
      "text": "that you know about because the compiler"
    },
    {
      "index": 1168,
      "start_time": 3010540.0,
      "end_time": 3012345.0,
      "text": "just knows that it&#39;s that method"
    },
    {
      "index": 1169,
      "start_time": 3012350.0,
      "end_time": 3013695.0,
      "text": "and then you just make the call"
    },
    {
      "index": 1170,
      "start_time": 3013690.0,
      "end_time": 3015754.0,
      "text": "based on the function pointer."
    },
    {
      "index": 1171,
      "start_time": 3015760.0,
      "end_time": 3018611.0,
      "text": "And then if you have a struct that&#39;s too big"
    },
    {
      "index": 1172,
      "start_time": 3018610.0,
      "end_time": 3020383.0,
      "text": "it ends up looking like this, instead of having"
    },
    {
      "index": 1173,
      "start_time": 3020380.0,
      "end_time": 3022766.0,
      "text": "data fields, that first data field"
    },
    {
      "index": 1174,
      "start_time": 3022770.0,
      "end_time": 3024664.0,
      "text": "is actually a pointer to the real data."
    },
    {
      "index": 1175,
      "start_time": 3024660.0,
      "end_time": 3026252.0,
      "text": "So everything gets stored off over here,"
    },
    {
      "index": 1176,
      "start_time": 3026250.0,
      "end_time": 3028099.0,
      "text": "you&#39;ve got the table over there."
    },
    {
      "index": 1177,
      "start_time": 3028100.0,
      "end_time": 3030286.0,
      "text": "And then the methods here know"
    },
    {
      "index": 1178,
      "start_time": 3030290.0,
      "end_time": 3031636.0,
      "text": "that when they need to do their stuff"
    },
    {
      "index": 1179,
      "start_time": 3031630.0,
      "end_time": 3033810.0,
      "text": "they have to go up and chase that pointer"
    },
    {
      "index": 1180,
      "start_time": 3033810.0,
      "end_time": 3036826.0,
      "text": "and it&#39;s all just handled behind your back."
    },
    {
      "index": 1181,
      "start_time": 3036830.0,
      "end_time": 3042602.0,
      "text": "And this is not cooperating again, indeed, there we go."
    },
    {
      "index": 1182,
      "start_time": 3042600.0,
      "end_time": 3044789.0,
      "text": "Enums are a very interesting case in Swift."
    },
    {
      "index": 1183,
      "start_time": 3044790.0,
      "end_time": 3047448.0,
      "text": "So Swift has these high level enumeration types"
    },
    {
      "index": 1184,
      "start_time": 3047450.0,
      "end_time": 3051516.0,
      "text": "where you can have associated data and all that"
    },
    {
      "index": 1185,
      "start_time": 3051510.0,
      "end_time": 3053692.0,
      "text": "or they can just be very simple things."
    },
    {
      "index": 1186,
      "start_time": 3053700.0,
      "end_time": 3056592.0,
      "text": "Here is a simple case, just five cases,"
    },
    {
      "index": 1187,
      "start_time": 3056590.0,
      "end_time": 3060124.0,
      "text": "nothing associated with them, just A, B, C, D, and E."
    },
    {
      "index": 1188,
      "start_time": 3060120.0,
      "end_time": 3063060.0,
      "text": "Here&#39;s a struct which will hold those."
    },
    {
      "index": 1189,
      "start_time": 3063060.0,
      "end_time": 3067552.0,
      "text": "And the result is those get laid out very succinctly,"
    },
    {
      "index": 1190,
      "start_time": 3067550.0,
      "end_time": 3069611.0,
      "text": "zero, one, two, three, four, each one"
    },
    {
      "index": 1191,
      "start_time": 3069610.0,
      "end_time": 3071712.0,
      "text": "gets a different number, they&#39;re one byte long"
    },
    {
      "index": 1192,
      "start_time": 3071720.0,
      "end_time": 3073186.0,
      "text": "because we don&#39;t need more than one byte"
    },
    {
      "index": 1193,
      "start_time": 3073180.0,
      "end_time": 3074899.0,
      "text": "to represent five values and it&#39;s all"
    },
    {
      "index": 1194,
      "start_time": 3074900.0,
      "end_time": 3076415.0,
      "text": "very nice and compact."
    },
    {
      "index": 1195,
      "start_time": 3076420.0,
      "end_time": 3081038.0,
      "text": "Here is a version with a raw value"
    },
    {
      "index": 1196,
      "start_time": 3081030.0,
      "end_time": 3083596.0,
      "text": "so you can actually go through and tell Swift,"
    },
    {
      "index": 1197,
      "start_time": 3083600.0,
      "end_time": 3086131.0,
      "text": "I want my cases to correspond to specific values."
    },
    {
      "index": 1198,
      "start_time": 3086130.0,
      "end_time": 3088815.0,
      "text": "So what this does is it says A is one, B is two,"
    },
    {
      "index": 1199,
      "start_time": 3088820.0,
      "end_time": 3091876.0,
      "text": "C is three, D is four, E is five."
    },
    {
      "index": 1200,
      "start_time": 3091870.0,
      "end_time": 3093806.0,
      "text": "And let&#39;s see what that looks like."
    },
    {
      "index": 1201,
      "start_time": 3093810.0,
      "end_time": 3095619.0,
      "text": "And an interesting thing, it does not change."
    },
    {
      "index": 1202,
      "start_time": 3095620.0,
      "end_time": 3098311.0,
      "text": "It doesn&#39;t go one, two, three, four, five,"
    },
    {
      "index": 1203,
      "start_time": 3098310.0,
      "end_time": 3101662.0,
      "text": "it still goes zero, one, two, three, four."
    },
    {
      "index": 1204,
      "start_time": 3101660.0,
      "end_time": 3104092.0,
      "text": "Alright, running out of time here."
    },
    {
      "index": 1205,
      "start_time": 3104090.0,
      "end_time": 3110361.0,
      "text": "Real quick, if we just go through (clicks)"
    },
    {
      "index": 1206,
      "start_time": 3110360.0,
      "end_time": 3112548.0,
      "text": "for a string, you can do string raw values."
    },
    {
      "index": 1207,
      "start_time": 3112550.0,
      "end_time": 3115987.0,
      "text": "So A is whatever and then B, C, D, and E"
    },
    {
      "index": 1208,
      "start_time": 3115990.0,
      "end_time": 3119643.0,
      "text": "get defaults, those are just B, C, D, and E."
    },
    {
      "index": 1209,
      "start_time": 3119640.0,
      "end_time": 3122201.0,
      "text": "And those still are zero, one, two, three, four."
    },
    {
      "index": 1210,
      "start_time": 3122200.0,
      "end_time": 3124303.0,
      "text": "And essentially what&#39;s going on here"
    },
    {
      "index": 1211,
      "start_time": 3124310.0,
      "end_time": 3126659.0,
      "text": "is the raw value can be stored"
    },
    {
      "index": 1212,
      "start_time": 3126660.0,
      "end_time": 3128305.0,
      "text": "off in a separate table somewhere,"
    },
    {
      "index": 1213,
      "start_time": 3128300.0,
      "end_time": 3130639.0,
      "text": "the compiler knows about it, there&#39;s no per instance"
    },
    {
      "index": 1214,
      "start_time": 3130640.0,
      "end_time": 3133882.0,
      "text": "raw value of any kind, so it can just be"
    },
    {
      "index": 1215,
      "start_time": 3133880.0,
      "end_time": 3135682.0,
      "text": "zero, one, two, three, four and somewhere else"
    },
    {
      "index": 1216,
      "start_time": 3135680.0,
      "end_time": 3137787.0,
      "text": "there&#39;s a table that says zero is whatever,"
    },
    {
      "index": 1217,
      "start_time": 3137790.0,
      "end_time": 3142288.0,
      "text": "one is B, two is C, and so forth."
    },
    {
      "index": 1218,
      "start_time": 3142290.0,
      "end_time": 3145097.0,
      "text": "Alright, let&#39;s look at associated objects real quick."
    },
    {
      "index": 1219,
      "start_time": 3145090.0,
      "end_time": 3147408.0,
      "text": "This is just an enum, the first case"
    },
    {
      "index": 1220,
      "start_time": 3147410.0,
      "end_time": 3150860.0,
      "text": "has an object associated with it and the others do not."
    },
    {
      "index": 1221,
      "start_time": 3150860.0,
      "end_time": 3154438.0,
      "text": "And if we dump that out we find that it has expanded"
    },
    {
      "index": 1222,
      "start_time": 3154440.0,
      "end_time": 3156791.0,
      "text": "because it needs to be able to store that object pointer,"
    },
    {
      "index": 1223,
      "start_time": 3156790.0,
      "end_time": 3158727.0,
      "text": "but it has expanded intelligently."
    },
    {
      "index": 1224,
      "start_time": 3158730.0,
      "end_time": 3161806.0,
      "text": "So the first thing is just a raw object pointer"
    },
    {
      "index": 1225,
      "start_time": 3161800.0,
      "end_time": 3163692.0,
      "text": "and then the other ones are just small integers."
    },
    {
      "index": 1226,
      "start_time": 3163700.0,
      "end_time": 3165378.0,
      "text": "And the compiler&#39;s able to pack these"
    },
    {
      "index": 1227,
      "start_time": 3165380.0,
      "end_time": 3169361.0,
      "text": "so that it knows zero, two, four, and six"
    },
    {
      "index": 1228,
      "start_time": 3169360.0,
      "end_time": 3171119.0,
      "text": "can never be a valid pointer."
    },
    {
      "index": 1229,
      "start_time": 3171110.0,
      "end_time": 3173380.0,
      "text": "So it&#39;s able to use that to distinguish between those."
    },
    {
      "index": 1230,
      "start_time": 3173390.0,
      "end_time": 3178446.0,
      "text": "And then if we make it larger we have an enum"
    },
    {
      "index": 1231,
      "start_time": 3178440.0,
      "end_time": 3180626.0,
      "text": "with A, B, C, D, and E where they all"
    },
    {
      "index": 1232,
      "start_time": 3180630.0,
      "end_time": 3182858.0,
      "text": "have objects associated with them"
    },
    {
      "index": 1233,
      "start_time": 3182850.0,
      "end_time": 3184823.0,
      "text": "and suddenly everything gets bigger."
    },
    {
      "index": 1234,
      "start_time": 3184830.0,
      "end_time": 3187188.0,
      "text": "Every entry is a pointer followed by an integer."
    },
    {
      "index": 1235,
      "start_time": 3187190.0,
      "end_time": 3189373.0,
      "text": "So object pointer zero, object pointer one,"
    },
    {
      "index": 1236,
      "start_time": 3189370.0,
      "end_time": 3192148.0,
      "text": "object pointer two, object pointer three."
    },
    {
      "index": 1237,
      "start_time": 3192150.0,
      "end_time": 3194921.0,
      "text": "So the number that gets assigned to each enum case"
    },
    {
      "index": 1238,
      "start_time": 3194920.0,
      "end_time": 3198610.0,
      "text": "and the associated value essentially get laid out"
    },
    {
      "index": 1239,
      "start_time": 3198610.0,
      "end_time": 3200121.0,
      "text": "next to each other."
    },
    {
      "index": 1240,
      "start_time": 3200120.0,
      "end_time": 3203615.0,
      "text": "The compiler&#39;s able to pack them compactly"
    },
    {
      "index": 1241,
      "start_time": 3203610.0,
      "end_time": 3208027.0,
      "text": "for that one specific case, but not in the general sense."
    },
    {
      "index": 1242,
      "start_time": 3208030.0,
      "end_time": 3210178.0,
      "text": "Alright, so wrapping up, I&#39;m just gonna kinda"
    },
    {
      "index": 1243,
      "start_time": 3210180.0,
      "end_time": 3212156.0,
      "text": "skip through these real quick since we&#39;re behind on time."
    },
    {
      "index": 1244,
      "start_time": 3212160.0,
      "end_time": 3216568.0,
      "text": "We&#39;ve got real physical memory, we&#39;ve got conceptual memory"
    },
    {
      "index": 1245,
      "start_time": 3216560.0,
      "end_time": 3218537.0,
      "text": "and then we&#39;ve got sort of the actual,"
    },
    {
      "index": 1246,
      "start_time": 3218540.0,
      "end_time": 3221053.0,
      "text": "the architecture of it all."
    },
    {
      "index": 1247,
      "start_time": 3221050.0,
      "end_time": 3225078.0,
      "text": "C just lays things out nice and straightforward"
    },
    {
      "index": 1248,
      "start_time": 3225080.0,
      "end_time": 3227734.0,
      "text": "with a little padding."
    },
    {
      "index": 1249,
      "start_time": 3227740.0,
      "end_time": 3230391.0,
      "text": "C++ objects get a vtable at the top."
    },
    {
      "index": 1250,
      "start_time": 3230390.0,
      "end_time": 3232331.0,
      "text": "Swift objects get the same sort of thing,"
    },
    {
      "index": 1251,
      "start_time": 3232330.0,
      "end_time": 3233891.0,
      "text": "but with more stuff going on."
    },
    {
      "index": 1252,
      "start_time": 3233890.0,
      "end_time": 3238601.0,
      "text": "Protocol values end up taking up five words of memory,"
    },
    {
      "index": 1253,
      "start_time": 3238600.0,
      "end_time": 3240711.0,
      "text": "sometimes they can store data inline,"
    },
    {
      "index": 1254,
      "start_time": 3240710.0,
      "end_time": 3242844.0,
      "text": "but if you get too big they don&#39;t."
    },
    {
      "index": 1255,
      "start_time": 3242840.0,
      "end_time": 3248511.0,
      "text": "And enums end up being packed in many different ways"
    },
    {
      "index": 1256,
      "start_time": 3248510.0,
      "end_time": 3250615.0,
      "text": "depending on what&#39;s going on."
    },
    {
      "index": 1257,
      "start_time": 3250620.0,
      "end_time": 3254612.0,
      "text": "There&#39;s our quick sum up which I just said."
    },
    {
      "index": 1258,
      "start_time": 3254610.0,
      "end_time": 3258229.0,
      "text": "And so you can learn a lot by poking around."
    },
    {
      "index": 1259,
      "start_time": 3258230.0,
      "end_time": 3262196.0,
      "text": "It&#39;s a lot of fun and sometimes it&#39;s useful."
    },
    {
      "index": 1260,
      "start_time": 3262200.0,
      "end_time": 3263667.0,
      "text": "And as they asked me to remind you,"
    },
    {
      "index": 1261,
      "start_time": 3263660.0,
      "end_time": 3266089.0,
      "text": "and as I did before, remember to rate"
    },
    {
      "index": 1262,
      "start_time": 3266090.0,
      "end_time": 3268796.0,
      "text": "the session in the app and that&#39;s it."
    },
    {
      "index": 1263,
      "start_time": 3268800.0,
      "end_time": 3272373.0,
      "text": "So if there&#39;s questions we can,"
    },
    {
      "index": 1264,
      "start_time": 3272370.0,
      "end_time": 3278352.0,
      "text": "or if we have no time for questions or (laughs),"
    },
    {
      "index": 1265,
      "start_time": 3278350.0,
      "end_time": 3280570.0,
      "text": "okay, can you use Swift demangle"
    },
    {
      "index": 1266,
      "start_time": 3280570.0,
      "end_time": 3282833.0,
      "text": "with PO in Xcode when debugging?"
    },
    {
      "index": 1267,
      "start_time": 3282840.0,
      "end_time": 3285510.0,
      "text": "I don&#39;t think there&#39;s any built in way to do that,"
    },
    {
      "index": 1268,
      "start_time": 3285510.0,
      "end_time": 3288208.0,
      "text": "but what you can do is just copy, paste"
    },
    {
      "index": 1269,
      "start_time": 3288210.0,
      "end_time": 3290732.0,
      "text": "onto the command line, Swift demangle should be"
    },
    {
      "index": 1270,
      "start_time": 3290730.0,
      "end_time": 3292792.0,
      "text": "available in the terminal."
    },
    {
      "index": 1271,
      "start_time": 3292790.0,
      "end_time": 3295392.0,
      "text": "If you wanted to I&#39;m sure you could"
    },
    {
      "index": 1272,
      "start_time": 3295390.0,
      "end_time": 3297861.0,
      "text": "build a little script, LLDB is scriptable through Python"
    },
    {
      "index": 1273,
      "start_time": 3297860.0,
      "end_time": 3301268.0,
      "text": "so you could do that if that turned out to be useful."
    },
    {
      "index": 1274,
      "start_time": 3301270.0,
      "end_time": 3304924.0,
      "text": "Yes."
    },
    {
      "index": 1275,
      "start_time": 3304920.0,
      "end_time": 3307064.0,
      "text": "Okay, so the question is, any versus any object"
    },
    {
      "index": 1276,
      "start_time": 3307070.0,
      "end_time": 3309209.0,
      "text": "in Swift three and whether there are changes"
    },
    {
      "index": 1277,
      "start_time": 3309210.0,
      "end_time": 3311144.0,
      "text": "based on whether you import foundation?"
    },
    {
      "index": 1278,
      "start_time": 3311140.0,
      "end_time": 3313603.0,
      "text": "I don&#39;t think there would be changes in the layout"
    },
    {
      "index": 1279,
      "start_time": 3313600.0,
      "end_time": 3315656.0,
      "text": "based on what you import because there needs"
    },
    {
      "index": 1280,
      "start_time": 3315660.0,
      "end_time": 3317295.0,
      "text": "to be cross-compatibility between files"
    },
    {
      "index": 1281,
      "start_time": 3317290.0,
      "end_time": 3319601.0,
      "text": "that import foundation to files that don&#39;t."
    },
    {
      "index": 1282,
      "start_time": 3319610.0,
      "end_time": 3321216.0,
      "text": "So they would still need to be the same."
    },
    {
      "index": 1283,
      "start_time": 3321210.0,
      "end_time": 3326005.0,
      "text": "But any, in Swift 3 Objective-C objects"
    },
    {
      "index": 1284,
      "start_time": 3326010.0,
      "end_time": 3329075.0,
      "text": "as untyped objects now come in"
    },
    {
      "index": 1285,
      "start_time": 3329070.0,
      "end_time": 3331247.0,
      "text": "as any instead of any object, so there&#39;s definitely"
    },
    {
      "index": 1286,
      "start_time": 3331250.0,
      "end_time": 3333195.0,
      "text": "a change there, I believe that&#39;s just"
    },
    {
      "index": 1287,
      "start_time": 3333190.0,
      "end_time": 3335043.0,
      "text": "essentially a translation phase."
    },
    {
      "index": 1288,
      "start_time": 3335050.0,
      "end_time": 3337951.0,
      "text": "Any I think looks like one of the protocol types"
    },
    {
      "index": 1289,
      "start_time": 3337950.0,
      "end_time": 3340053.0,
      "text": "where it&#39;s a five word thing, it&#39;s got three"
    },
    {
      "index": 1290,
      "start_time": 3340050.0,
      "end_time": 3342280.0,
      "text": "inline and whatever and it&#39;s essentially"
    },
    {
      "index": 1291,
      "start_time": 3342280.0,
      "end_time": 3344047.0,
      "text": "storing things that way."
    },
    {
      "index": 1292,
      "start_time": 3344050.0,
      "end_time": 3346021.0,
      "text": "And then there&#39;s just a step where it takes"
    },
    {
      "index": 1293,
      "start_time": 3346020.0,
      "end_time": 3348038.0,
      "text": "that Objective-C pointer that comes in"
    },
    {
      "index": 1294,
      "start_time": 3348040.0,
      "end_time": 3350608.0,
      "text": "and just kind of puts it in one of those things."
    },
    {
      "index": 1295,
      "start_time": 3350600.0,
      "end_time": 3352580.0,
      "text": "The source code is online for my thing,"
    },
    {
      "index": 1296,
      "start_time": 3352580.0,
      "end_time": 3354425.0,
      "text": "it should run more or less out of the box,"
    },
    {
      "index": 1297,
      "start_time": 3354430.0,
      "end_time": 3358842.0,
      "text": "so if you wanna experiment and see what it does feel free."
    },
    {
      "index": 1298,
      "start_time": 3358840.0,
      "end_time": 3360980.0,
      "text": "Anything else?"
    },
    {
      "index": 1299,
      "start_time": 3360980.0,
      "end_time": 3361951.0,
      "text": "No?"
    },
    {
      "index": 1300,
      "start_time": 3361950.0,
      "end_time": 3363375.0,
      "text": "Alright, oh, yes?"
    },
    {
      "index": 1301,
      "start_time": 3363380.0,
      "end_time": 3364264.0,
      "text": "(inaudible)"
    },
    {
      "index": 1302,
      "start_time": 3364260.0,
      "end_time": 3365516.0,
      "text": "Sure."
    },
    {
      "index": 1303,
      "start_time": 3365520.0,
      "end_time": 3367161.0,
      "text": "Yeah, so question is about the new"
    },
    {
      "index": 1304,
      "start_time": 3367160.0,
      "end_time": 3369172.0,
      "text": "memory debugging facilities in Xcode 8"
    },
    {
      "index": 1305,
      "start_time": 3369170.0,
      "end_time": 3370851.0,
      "text": "and how it compares to my stuff."
    },
    {
      "index": 1306,
      "start_time": 3370850.0,
      "end_time": 3372655.0,
      "text": "So that new memory debugging stuff"
    },
    {
      "index": 1307,
      "start_time": 3372660.0,
      "end_time": 3374508.0,
      "text": "is really cool, you can go through"
    },
    {
      "index": 1308,
      "start_time": 3374500.0,
      "end_time": 3376384.0,
      "text": "and it will just essentially show you"
    },
    {
      "index": 1309,
      "start_time": 3376390.0,
      "end_time": 3377949.0,
      "text": "kind of graphs like I showed here"
    },
    {
      "index": 1310,
      "start_time": 3377950.0,
      "end_time": 3380356.0,
      "text": "except they&#39;re live which is really neat."
    },
    {
      "index": 1311,
      "start_time": 3380350.0,
      "end_time": 3381995.0,
      "text": "And I haven&#39;t played with it a ton,"
    },
    {
      "index": 1312,
      "start_time": 3382000.0,
      "end_time": 3383769.0,
      "text": "but I&#39;m sure it&#39;s gonna be really useful."
    },
    {
      "index": 1313,
      "start_time": 3383770.0,
      "end_time": 3386751.0,
      "text": "It&#39;s a little bit more limited from what little"
    },
    {
      "index": 1314,
      "start_time": 3386750.0,
      "end_time": 3389443.0,
      "text": "I have done with it, in that it tries to,"
    },
    {
      "index": 1315,
      "start_time": 3389440.0,
      "end_time": 3391665.0,
      "text": "well it&#39;s gotta work at runtime,"
    },
    {
      "index": 1316,
      "start_time": 3391670.0,
      "end_time": 3393818.0,
      "text": "so it has to be kind of limited in that respect."
    },
    {
      "index": 1317,
      "start_time": 3393810.0,
      "end_time": 3396289.0,
      "text": "I believe it will not trace like, C pointers"
    },
    {
      "index": 1318,
      "start_time": 3396290.0,
      "end_time": 3398381.0,
      "text": "and things like that, at least not"
    },
    {
      "index": 1319,
      "start_time": 3398390.0,
      "end_time": 3399895.0,
      "text": "beyond a certain point."
    },
    {
      "index": 1320,
      "start_time": 3399890.0,
      "end_time": 3403496.0,
      "text": "It&#39;s not gonna be tracing global symbols"
    },
    {
      "index": 1321,
      "start_time": 3403500.0,
      "end_time": 3404931.0,
      "text": "and things like that."
    },
    {
      "index": 1322,
      "start_time": 3404930.0,
      "end_time": 3407255.0,
      "text": "But as far as like, looking at plain Swift objects,"
    },
    {
      "index": 1323,
      "start_time": 3407250.0,
      "end_time": 3408937.0,
      "text": "it&#39;s really cool, it&#39;ll show you the trees,"
    },
    {
      "index": 1324,
      "start_time": 3408940.0,
      "end_time": 3410710.0,
      "text": "it&#39;ll show you this object points to that object."
    },
    {
      "index": 1325,
      "start_time": 3410710.0,
      "end_time": 3412221.0,
      "text": "And I think it&#39;s gonna skip over things"
    },
    {
      "index": 1326,
      "start_time": 3412220.0,
      "end_time": 3413768.0,
      "text": "like the pointers up to the classes,"
    },
    {
      "index": 1327,
      "start_time": 3413770.0,
      "end_time": 3415699.0,
      "text": "so it doesn&#39;t give you everything."
    },
    {
      "index": 1328,
      "start_time": 3415700.0,
      "end_time": 3417298.0,
      "text": "But for what you care about day to day,"
    },
    {
      "index": 1329,
      "start_time": 3417290.0,
      "end_time": 3421667.0,
      "text": "it looks really cool, really useful."
    },
    {
      "index": 1330,
      "start_time": 3421670.0,
      "end_time": 3423387.0,
      "text": "Alright, looks like that&#39;s it."
    },
    {
      "index": 1331,
      "start_time": 3423390.0,
      "end_time": 3424902.0,
      "text": "Thank you very much for coming"
    },
    {
      "index": 1332,
      "start_time": 3424900.0,
      "end_time": 3428220.0,
      "text": "and enjoy the rest of the conference."
    },
    {
      "index": 1333,
      "start_time": 3428220.0,
      "end_time": 3438220.0,
      "text": "(applause)"
    }
  ]
}