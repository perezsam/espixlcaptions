{
  "video_id": "U_DWTzWkHPA",
  "title": "Exceções",
  "es": 0,
  "json": [
    {
      "index": 1,
      "start_time": 360.0,
      "end_time": 3290.0,
      "text": "In the networking code, you may have noticed that there are different types"
    },
    {
      "index": 2,
      "start_time": 3290.0,
      "end_time": 6750.0,
      "text": "of exceptions, but you didn&#39;t know what they&#39;re for."
    },
    {
      "index": 3,
      "start_time": 6750.0,
      "end_time": 10500.0,
      "text": "Now we haven&#39;t formally talked about them, so let&#39;s do that now."
    },
    {
      "index": 4,
      "start_time": 10500.0,
      "end_time": 14080.0,
      "text": "The first time you saw and exception was in the first course in the nano degree"
    },
    {
      "index": 5,
      "start_time": 14080.0,
      "end_time": 17670.0,
      "text": "when we were building the Just Java coffee ordering app."
    },
    {
      "index": 6,
      "start_time": 17670.0,
      "end_time": 20740.0,
      "text": "Now the app ran into an exception and crashed."
    },
    {
      "index": 7,
      "start_time": 20740.0,
      "end_time": 24340.0,
      "text": "To debug the program, we opened up the Android logs"
    },
    {
      "index": 8,
      "start_time": 24340.0,
      "end_time": 29000.0,
      "text": "to reveal the stack trace and then discovered an IllegalStateException"
    },
    {
      "index": 9,
      "start_time": 29000.0,
      "end_time": 34480.0,
      "text": "was thrown when the submitOrder method could not be found in the main activity."
    },
    {
      "index": 10,
      "start_time": 34480.0,
      "end_time": 37760.0,
      "text": "Let&#39;s look at some documentation about exceptions."
    },
    {
      "index": 11,
      "start_time": 37760.0,
      "end_time": 41220.0,
      "text": "When the Java method fails, or runs into an unexpected state,"
    },
    {
      "index": 12,
      "start_time": 41220.0,
      "end_time": 45570.0,
      "text": "it can throw an exception, short for an exceptional event."
    },
    {
      "index": 13,
      "start_time": 45570.0,
      "end_time": 49020.0,
      "text": "Exceptions are basically errors, but they&#39;re also captured or"
    },
    {
      "index": 14,
      "start_time": 49020.0,
      "end_time": 53430.0,
      "text": "wrapped in actual instances of the exception class, which holds information"
    },
    {
      "index": 15,
      "start_time": 53430.0,
      "end_time": 57090.0,
      "text": "about what went wrong and what was happening in the system at the time."
    },
    {
      "index": 16,
      "start_time": 57090.0,
      "end_time": 58250.0,
      "text": "If you look here on the left for"
    },
    {
      "index": 17,
      "start_time": 58250.0,
      "end_time": 62130.0,
      "text": "example, you&#39;ll also notice that there are more specific types of exceptions"
    },
    {
      "index": 18,
      "start_time": 62130.0,
      "end_time": 65209.0,
      "text": "that actually extend from the Exceptions super class."
    },
    {
      "index": 19,
      "start_time": 65209.0,
      "end_time": 68760.0,
      "text": "A great example of inheritance in use in the Java framework."
    },
    {
      "index": 20,
      "start_time": 68760.0,
      "end_time": 69800.0,
      "text": "In other words,"
    },
    {
      "index": 21,
      "start_time": 69800.0,
      "end_time": 74380.0,
      "text": "all of these specific classes are subclasses of the base class Exception."
    },
    {
      "index": 22,
      "start_time": 74380.0,
      "end_time": 77820.0,
      "text": "For example, here we have an IllegalStateException or"
    },
    {
      "index": 23,
      "start_time": 77820.0,
      "end_time": 79780.0,
      "text": "a NullPointerException."
    },
    {
      "index": 24,
      "start_time": 79780.0,
      "end_time": 82710.0,
      "text": "We also saw the SecurityException earlier in this lesson,"
    },
    {
      "index": 25,
      "start_time": 82710.0,
      "end_time": 86180.0,
      "text": "when the Internet permission was missing from our Soonami App."
    },
    {
      "index": 26,
      "start_time": 86180.0,
      "end_time": 90050.0,
      "text": "Now you could create a new exception class for your own purposes."
    },
    {
      "index": 27,
      "start_time": 90050.0,
      "end_time": 93727.0,
      "text": "For example, we can create an InvalidEarthquakeException and"
    },
    {
      "index": 28,
      "start_time": 93727.0,
      "end_time": 95350.0,
      "text": "define it as we normally would."
    },
    {
      "index": 29,
      "start_time": 95350.0,
      "end_time": 96720.0,
      "text": "Create a custom class and"
    },
    {
      "index": 30,
      "start_time": 96720.0,
      "end_time": 101160.0,
      "text": "then have that custom class just extend from the base Exception class."
    },
    {
      "index": 31,
      "start_time": 101160.0,
      "end_time": 103910.0,
      "text": "&gt;From there, we can customize the Exception to hold say,"
    },
    {
      "index": 32,
      "start_time": 103910.0,
      "end_time": 108350.0,
      "text": "very specify information about an invalid earthquake scenario."
    },
    {
      "index": 33,
      "start_time": 108350.0,
      "end_time": 111900.0,
      "text": "So as a developer you can write a method that declares that it will"
    },
    {
      "index": 34,
      "start_time": 111900.0,
      "end_time": 113400.0,
      "text": "throw an exception."
    },
    {
      "index": 35,
      "start_time": 113400.0,
      "end_time": 117220.0,
      "text": "Meaning that the code inside that method either one, generates and"
    },
    {
      "index": 36,
      "start_time": 117220.0,
      "end_time": 121100.0,
      "text": "exception to indicate a unique condition, or two,"
    },
    {
      "index": 37,
      "start_time": 121100.0,
      "end_time": 125050.0,
      "text": "and more commonly, calls a method that throws an exception."
    },
    {
      "index": 38,
      "start_time": 125050.0,
      "end_time": 128840.0,
      "text": "Meaning that the Android runtime tried to execute some code, but ran into"
    },
    {
      "index": 39,
      "start_time": 128840.0,
      "end_time": 133750.0,
      "text": "a problem and therefore gave notice of the problem by throwing the exception."
    },
    {
      "index": 40,
      "start_time": 133750.0,
      "end_time": 137850.0,
      "text": "It&#39;s also important to note that if an exception is thrown, it also means"
    },
    {
      "index": 41,
      "start_time": 137850.0,
      "end_time": 142670.0,
      "text": "that the code following the line that caused the exception won&#39;t get executed."
    },
    {
      "index": 42,
      "start_time": 142670.0,
      "end_time": 145000.0,
      "text": "So how do you do this in Java code?"
    },
    {
      "index": 43,
      "start_time": 145000.0,
      "end_time": 147890.0,
      "text": "There are two distinctions that I&#39;d like you to pay attention to."
    },
    {
      "index": 44,
      "start_time": 147890.0,
      "end_time": 152049.0,
      "text": "Number one, anywhere in your Java code where you want to cause or"
    },
    {
      "index": 45,
      "start_time": 152049.0,
      "end_time": 155294.0,
      "text": "invoke an exception, you use the key word throw."
    },
    {
      "index": 46,
      "start_time": 155294.0,
      "end_time": 156916.0,
      "text": "Like in this example here,"
    },
    {
      "index": 47,
      "start_time": 156916.0,
      "end_time": 161010.0,
      "text": "where we want to throw an InvalidPurchase Exception(); because we"
    },
    {
      "index": 48,
      "start_time": 161010.0,
      "end_time": 165760.0,
      "text": "detected that something went wrong within our completePurchase() method."
    },
    {
      "index": 49,
      "start_time": 165760.0,
      "end_time": 168380.0,
      "text": "Number two, and this is much more subtle."
    },
    {
      "index": 50,
      "start_time": 168380.0,
      "end_time": 172940.0,
      "text": "Anytime our code throws an exception that isn&#39;t a descendant of the error or"
    },
    {
      "index": 51,
      "start_time": 172940.0,
      "end_time": 176920.0,
      "text": "runtime Exception classes, we must explicitly declare in our method&#39;s"
    },
    {
      "index": 52,
      "start_time": 176920.0,
      "end_time": 180350.0,
      "text": "signature that our method could throw such an exception."
    },
    {
      "index": 53,
      "start_time": 180350.0,
      "end_time": 184120.0,
      "text": "In Java programming speak, this is known as a checked exception and"
    },
    {
      "index": 54,
      "start_time": 184120.0,
      "end_time": 188120.0,
      "text": "has the implication that any code that calls or uses our method"
    },
    {
      "index": 55,
      "start_time": 188120.0,
      "end_time": 192440.0,
      "text": "must handle the exception i.e., call our method in a try block."
    },
    {
      "index": 56,
      "start_time": 192440.0,
      "end_time": 194660.0,
      "text": "This is enforced by the Java compiler,"
    },
    {
      "index": 57,
      "start_time": 194660.0,
      "end_time": 198740.0,
      "text": "in other words whoever calls the completePurchase method has to have"
    },
    {
      "index": 58,
      "start_time": 198740.0,
      "end_time": 203480.0,
      "text": "a backup plan if the InvalidPurchase Exception is thrown or occurs."
    },
    {
      "index": 59,
      "start_time": 203480.0,
      "end_time": 207290.0,
      "text": "We&#39;ll talk about how to handle exceptions in the next video."
    },
    {
      "index": 60,
      "start_time": 207290.0,
      "end_time": 210790.0,
      "text": "In case you&#39;d like to learn more about unchecked versus checked Eeceptions"
    },
    {
      "index": 61,
      "start_time": 210790.0,
      "end_time": 215040.0,
      "text": "in more detail, see the tutorial linked in the notes below this video."
    },
    {
      "index": 62,
      "start_time": 215040.0,
      "end_time": 216790.0,
      "text": "One more important note."
    },
    {
      "index": 63,
      "start_time": 216790.0,
      "end_time": 218700.0,
      "text": "Just because there&#39;s a standard framework for"
    },
    {
      "index": 64,
      "start_time": 218700.0,
      "end_time": 222000.0,
      "text": "how to use Exceptions in Java, it doesn&#39;t mean that you should throw"
    },
    {
      "index": 65,
      "start_time": 222000.0,
      "end_time": 224870.0,
      "text": "exceptions every time something goes wrong."
    },
    {
      "index": 66,
      "start_time": 224870.0,
      "end_time": 228130.0,
      "text": "This is where developer discretion comes into play."
    },
    {
      "index": 67,
      "start_time": 228130.0,
      "end_time": 232260.0,
      "text": "Ideally, if we discover a problem or a unique situation, we should try and"
    },
    {
      "index": 68,
      "start_time": 232260.0,
      "end_time": 234190.0,
      "text": "handle it gracefully in code."
    },
    {
      "index": 69,
      "start_time": 234190.0,
      "end_time": 237680.0,
      "text": "By just falling back to some reasonable default behavior for example, and"
    },
    {
      "index": 70,
      "start_time": 237680.0,
      "end_time": 240200.0,
      "text": "continuing executing if possible."
    },
    {
      "index": 71,
      "start_time": 240200.0,
      "end_time": 242810.0,
      "text": "We call this failing silently."
    },
    {
      "index": 72,
      "start_time": 242810.0,
      "end_time": 246680.0,
      "text": "However, should we deem that it be more detrimental to keep going with an error"
    },
    {
      "index": 73,
      "start_time": 246680.0,
      "end_time": 251030.0,
      "text": "state, then we may decide it&#39;s best to notify our calling code of the error"
    },
    {
      "index": 74,
      "start_time": 251030.0,
      "end_time": 252770.0,
      "text": "by throwing exception."
    },
    {
      "index": 75,
      "start_time": 252770.0,
      "end_time": 255050.0,
      "text": "We&#39;ve seen this in play already."
    },
    {
      "index": 76,
      "start_time": 255050.0,
      "end_time": 258459.0,
      "text": "In the case of our Soonami App, when we tried to request earthquake data from"
    },
    {
      "index": 77,
      "start_time": 258459.0,
      "end_time": 263040.0,
      "text": "the internet, the Android framework code threw a SecurityException."
    },
    {
      "index": 78,
      "start_time": 263040.0,
      "end_time": 265660.0,
      "text": "This is a case when it&#39;s better to throw an exception and"
    },
    {
      "index": 79,
      "start_time": 265660.0,
      "end_time": 269860.0,
      "text": "crash the app as opposed to continuing without the Internet permission."
    },
    {
      "index": 80,
      "start_time": 269860.0,
      "end_time": 272610.0,
      "text": "Now if the Android framework code had failed silently,"
    },
    {
      "index": 81,
      "start_time": 272610.0,
      "end_time": 275560.0,
      "text": "then we as developers would probably be super confused"
    },
    {
      "index": 82,
      "start_time": 275560.0,
      "end_time": 278600.0,
      "text": "as to why we did receive response from the server."
    },
    {
      "index": 83,
      "start_time": 278600.0,
      "end_time": 282010.0,
      "text": "In the case of the Soonami and Quick Report Apps, we won&#39;t actually be"
    },
    {
      "index": 84,
      "start_time": 282010.0,
      "end_time": 286210.0,
      "text": "creating our own custom exceptions or throwing exceptions intentionally."
    },
    {
      "index": 85,
      "start_time": 286210.0,
      "end_time": 290620.0,
      "text": "We will however be calling the Android framework code that does throw exception"
    },
    {
      "index": 86,
      "start_time": 290620.0,
      "end_time": 293330.0,
      "text": "and we&#39;ll need to handle those exceptions appropriately."
    },
    {
      "index": 87,
      "start_time": 293330.0,
      "end_time": 303330.0,
      "text": "Let&#39;s talk about that next."
    }
  ]
}