{
  "video_id": "PY9xSykods4",
  "title": "â˜… What are microservices?",
  "es": 0,
  "json": [
    {
      "index": 1,
      "start_time": 5460.0,
      "end_time": 9840.0,
      "text": "Hey there everyone! DJ here and unless you've been living under a rock, you've heard the"
    },
    {
      "index": 2,
      "start_time": 9840.0,
      "end_time": 16810.0,
      "text": "latest coding buzzword \"microservices\". Microservices, microservices, microservices. In this video"
    },
    {
      "index": 3,
      "start_time": 16810.0,
      "end_time": 22259.0,
      "text": "we'll go over what is a microservice, why people are moving to microservices, and finally"
    },
    {
      "index": 4,
      "start_time": 22259.0,
      "end_time": 30369.0,
      "text": "what you need to do to make an effective microservice."
    },
    {
      "index": 5,
      "start_time": 30369.0,
      "end_time": 35570.0,
      "text": "So what is a microservice? Ask 20 developers what is a microservice, and you're likely"
    },
    {
      "index": 6,
      "start_time": 35570.0,
      "end_time": 41629.0,
      "text": "to get 25 different answers. Here's my best answer. A microservice is basically a self"
    },
    {
      "index": 7,
      "start_time": 41629.0,
      "end_time": 46850.0,
      "text": "contained process that provides a unique business capability. Different microservices act in"
    },
    {
      "index": 8,
      "start_time": 46850.0,
      "end_time": 54579.0,
      "text": "concert as one larger system, but behind the scenes, it's microservices all the way."
    },
    {
      "index": 9,
      "start_time": 54579.0,
      "end_time": 60140.0,
      "text": "Take Amazon.com for instance. All we see is the website. Behind the scenes, Amazon has"
    },
    {
      "index": 10,
      "start_time": 60140.0,
      "end_time": 64170.0,
      "text": "a service for accepting orders, a service for determining a list of recommended items"
    },
    {
      "index": 11,
      "start_time": 64170.0,
      "end_time": 69530.0,
      "text": "to buy, a service to handle wish lists, a service for authenticating credit cards, and"
    },
    {
      "index": 12,
      "start_time": 69530.0,
      "end_time": 74250.0,
      "text": "so on. All of these services are really mini applications performing a single business"
    },
    {
      "index": 13,
      "start_time": 74250.0,
      "end_time": 75840.0,
      "text": "capability."
    },
    {
      "index": 14,
      "start_time": 75840.0,
      "end_time": 80740.0,
      "text": "What makes this organization interesting is, it is not organized around software layers."
    },
    {
      "index": 15,
      "start_time": 80740.0,
      "end_time": 86719.0,
      "text": "We don't need to create a web microservice, business logic microservice or database microservice."
    },
    {
      "index": 16,
      "start_time": 86719.0,
      "end_time": 92320.0,
      "text": "We are creating microservices around business capabilities. So we have a wish list microservice,"
    },
    {
      "index": 17,
      "start_time": 92320.0,
      "end_time": 96289.0,
      "text": "a order microservice, and a processing microservice."
    },
    {
      "index": 18,
      "start_time": 96289.0,
      "end_time": 99469.0,
      "text": "Microservices communicate with each other through a well-defined interface, usually"
    },
    {
      "index": 19,
      "start_time": 99469.0,
      "end_time": 104340.0,
      "text": "REST or a messaging queue. The communication is almost always stateless."
    },
    {
      "index": 20,
      "start_time": 104340.0,
      "end_time": 109590.0,
      "text": "The microservice data is federated as well. That means every microservice is responsible"
    },
    {
      "index": 21,
      "start_time": 109590.0,
      "end_time": 115170.0,
      "text": "for its own data model and data. I think that statement just caused heart palpitations for"
    },
    {
      "index": 22,
      "start_time": 115170.0,
      "end_time": 121460.0,
      "text": "some DBAs. There might be good business reasons to standardize the data platform for all microservices,"
    },
    {
      "index": 23,
      "start_time": 121460.0,
      "end_time": 126299.0,
      "text": "but the idea is if we're on the team building the microservice, we should know best which"
    },
    {
      "index": 24,
      "start_time": 126299.0,
      "end_time": 128289.0,
      "text": "persistence model we need."
    },
    {
      "index": 25,
      "start_time": 128288.99999999999,
      "end_time": 137300.0,
      "text": "It's the latest buzzword, so why not? Seriously though, microservices make our system loosely"
    },
    {
      "index": 26,
      "start_time": 137300.0,
      "end_time": 143770.0,
      "text": "coupled. If we need to upgrade, repair, or replace a microservice, we don't need to rebuild"
    },
    {
      "index": 27,
      "start_time": 143770.0,
      "end_time": 149080.0,
      "text": "our entire application. Just swap out the part that needs it. Rebuilding isn't a big"
    },
    {
      "index": 28,
      "start_time": 149080.0,
      "end_time": 155250.0,
      "text": "deal for a small desktop app, but it can be a killer for a whole enterprise system."
    },
    {
      "index": 29,
      "start_time": 155250.0,
      "end_time": 160080.0,
      "text": "Breaking our system into small parts also allows each microservice to focus on a single"
    },
    {
      "index": 30,
      "start_time": 160080.0,
      "end_time": 165970.0,
      "text": "business capability. One benefit of this is we can have a small team focused on a simple"
    },
    {
      "index": 31,
      "start_time": 165970.0,
      "end_time": 171700.0,
      "text": "task. Jeff Bezos from Amazon created the two pizza rule, the ideal size for a microservices"
    },
    {
      "index": 32,
      "start_time": 171700.0,
      "end_time": 173830.0,
      "text": "team is one you can feed with two pizzas."
    },
    {
      "index": 33,
      "start_time": 173830.0,
      "end_time": 175200.0,
      "text": "Single benefit capabilities also help drive the focus of what our group is trying to accomplish."
    },
    {
      "index": 34,
      "start_time": 175200.0,
      "end_time": 176750.0,
      "text": "It becomes very easy to determine if a feature is in or out if our goal is focused."
    },
    {
      "index": 35,
      "start_time": 176750.0,
      "end_time": 181670.0,
      "text": "A simple interface means we can use different languages and tools. If we've got a great"
    },
    {
      "index": 36,
      "start_time": 181670.0,
      "end_time": 185920.0,
      "text": "well-defined interface, it doesn't matter what language or architecture we use. We could"
    },
    {
      "index": 37,
      "start_time": 185920.0,
      "end_time": 190790.0,
      "text": "write our service in Visual Basic if we wanted. As long as we publish how other services are"
    },
    {
      "index": 38,
      "start_time": 190790.0,
      "end_time": 195790.0,
      "text": "to communicate with our service, we're good to go. That's why the most common methods"
    },
    {
      "index": 39,
      "start_time": 195790.0,
      "end_time": 207330.0,
      "text": "for communication between mircoservices are HTTP and messaging. Everybody supports that."
    },
    {
      "index": 40,
      "start_time": 207330.0,
      "end_time": 212450.0,
      "text": "So what makes a great microservice? We've touched upon a few things already."
    },
    {
      "index": 41,
      "start_time": 212450.0,
      "end_time": 218010.0,
      "text": "First, I'll say it again. It focuses on a single business capability. That isn't to"
    },
    {
      "index": 42,
      "start_time": 218010.0,
      "end_time": 223200.0,
      "text": "say it does only one thing. Just one business thing. It does not mean we divide into a web"
    },
    {
      "index": 43,
      "start_time": 223200.0,
      "end_time": 229400.0,
      "text": "capability, logic capability, and database capability. That's going back to what we had"
    },
    {
      "index": 44,
      "start_time": 229400.0,
      "end_time": 231640.0,
      "text": "before."
    },
    {
      "index": 45,
      "start_time": 231640.0,
      "end_time": 237710.0,
      "text": "Each microservice should have it's own datastore. This limits what can change under the microservice."
    },
    {
      "index": 46,
      "start_time": 237710.0,
      "end_time": 242600.0,
      "text": "If another group is responsible for the data model, they can also change the data model."
    },
    {
      "index": 47,
      "start_time": 242600.0,
      "end_time": 247350.0,
      "text": "That can force downstream changes for many microservice teams. Changes that might not"
    },
    {
      "index": 48,
      "start_time": 247350.0,
      "end_time": 250900.0,
      "text": "help our team at all."
    },
    {
      "index": 49,
      "start_time": 250900.0,
      "end_time": 256979.0,
      "text": "Make communication stateless. If our communication is stateless, we can add more copies of the"
    },
    {
      "index": 50,
      "start_time": 256978.99999999997,
      "end_time": 261369.99999999997,
      "text": "microservice at will. Stateless communication gives our microservice the ability to scale"
    },
    {
      "index": 51,
      "start_time": 261370.0,
      "end_time": 266099.0,
      "text": "effortlessly. Each interaction with our microservice can be handled by a different instance."
    },
    {
      "index": 52,
      "start_time": 266099.0,
      "end_time": 273270.0,
      "text": "Since the communication is stateless, great microservices should be able to continue if"
    },
    {
      "index": 53,
      "start_time": 273270.0,
      "end_time": 281330.0,
      "text": "another microservice fails. That means if we can't communicate with another service,"
    },
    {
      "index": 54,
      "start_time": 281330.0,
      "end_time": 285629.0,
      "text": "our service should be able to make due. If we're trying to get a list of suggested titles"
    },
    {
      "index": 55,
      "start_time": 285629.0,
      "end_time": 290770.0,
      "text": "from another service, we'll have a default ready just incase. Our service should never"
    },
    {
      "index": 56,
      "start_time": 290770.0,
      "end_time": 294060.0,
      "text": "break, just because another service broke."
    },
    {
      "index": 57,
      "start_time": 294060.0,
      "end_time": 301490.0,
      "text": "Finally, a good team makes a good microservice. We need all parts represented. That's a designer,"
    },
    {
      "index": 58,
      "start_time": 301490.0,
      "end_time": 308199.0,
      "text": "web developer, coder, database admin, and operations all on our microservice team. Not"
    },
    {
      "index": 59,
      "start_time": 308199.0,
      "end_time": 314020.0,
      "text": "representatives. On the team. It's everyone we need to make a fully functional application."
    },
    {
      "index": 60,
      "start_time": 314020.0,
      "end_time": 319270.0,
      "text": "Up to two pizzas of course. And that doesn't mean find lots of developers who hate pizza."
    },
    {
      "index": 61,
      "start_time": 319270.0,
      "end_time": 324360.0,
      "text": "Hey! Thanks for watching the video. If you like what you're seeing or have any questions,"
    },
    {
      "index": 62,
      "start_time": 324360.0,
      "end_time": 329530.0,
      "text": "let me know in the comments or on DeegeU.com! New videos come out each week, so make sure"
    },
    {
      "index": 63,
      "start_time": 329530.0,
      "end_time": 335909.0,
      "text": "you subscribe. You don't want to miss a video! In fact, lets go watch another DeegeU video."
    },
    {
      "index": 64,
      "start_time": 335909.0,
      "end_time": 345909.0,
      "text": "See you there!"
    }
  ]
}