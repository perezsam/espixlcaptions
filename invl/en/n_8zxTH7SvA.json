{
  "video_id": "n_8zxTH7SvA",
  "title": "CS50 2017 - Lecture 8 - Python",
  "es": 0,
  "json": [
    {
      "index": 1,
      "start_time": 0.0,
      "end_time": 3416.0,
      "text": "[MUSIC PLAYING]"
    },
    {
      "index": 2,
      "start_time": 10248.0,
      "end_time": 11340.0,
      "text": "DAVID MALAN: All right."
    },
    {
      "index": 3,
      "start_time": 11340.0,
      "end_time": 15750.0,
      "text": "This is CS50, and this is the day before our test, of course."
    },
    {
      "index": 4,
      "start_time": 15750.0,
      "end_time": 17700.0,
      "text": "But this is lecture 8, in which we&#39;re actually"
    },
    {
      "index": 5,
      "start_time": 17700.0,
      "end_time": 20490.0,
      "text": "going to finally transition from C, this lower-level language"
    },
    {
      "index": 6,
      "start_time": 20490.0,
      "end_time": 22470.0,
      "text": "that we&#39;ve been spending quite some time to."
    },
    {
      "index": 7,
      "start_time": 22470.0,
      "end_time": 25470.0,
      "text": "And the goal today isn&#39;t so much to focus on Python per se,"
    },
    {
      "index": 8,
      "start_time": 25470.0,
      "end_time": 28770.0,
      "text": "but honestly to do what we hope will be one of the most empowering aspects"
    },
    {
      "index": 9,
      "start_time": 28770.0,
      "end_time": 32720.0,
      "text": "of the class, which is to emphasize that this has not been a semester learning"
    },
    {
      "index": 10,
      "start_time": 32720.0,
      "end_time": 34830.0,
      "text": "C. This has been a semester learning programming,"
    },
    {
      "index": 11,
      "start_time": 34830.0,
      "end_time": 37769.0,
      "text": "a certain type of programming called procedural or imperative programming."
    },
    {
      "index": 12,
      "start_time": 37770.0,
      "end_time": 40800.0,
      "text": "But more on that in another higher-level class perhaps."
    },
    {
      "index": 13,
      "start_time": 40800.0,
      "end_time": 42989.0,
      "text": "But really, that this class is about ultimately teaching"
    },
    {
      "index": 14,
      "start_time": 42990.0,
      "end_time": 45330.0,
      "text": "yourself to learn new languages."
    },
    {
      "index": 15,
      "start_time": 45330.0,
      "end_time": 48540.0,
      "text": "And indeed, what you&#39;ll find is that as we explore some of the features"
    },
    {
      "index": 16,
      "start_time": 48540.0,
      "end_time": 50750.0,
      "text": "and the syntax of Python, odds are today,"
    },
    {
      "index": 17,
      "start_time": 50750.0,
      "end_time": 53876.0,
      "text": "it might look as cryptic as C did just a few weeks ago."
    },
    {
      "index": 18,
      "start_time": 53876.0,
      "end_time": 56250.0,
      "text": "But you&#39;ll find that once you start recognizing patterns,"
    },
    {
      "index": 19,
      "start_time": 56250.0,
      "end_time": 61410.0,
      "text": "as you have with C, it will be all the more accessible and all the more useful"
    },
    {
      "index": 20,
      "start_time": 61410.0,
      "end_time": 63370.0,
      "text": "when solving some problems."
    },
    {
      "index": 21,
      "start_time": 63370.0,
      "end_time": 67770.0,
      "text": "So unrelatedly, just earlier this week, I happened to be in Mountain View"
    },
    {
      "index": 22,
      "start_time": 67770.0,
      "end_time": 68789.0,
      "text": "with some of the team."
    },
    {
      "index": 23,
      "start_time": 68790.0,
      "end_time": 71730.0,
      "text": "And you might recall from last lecture at Harvard"
    },
    {
      "index": 24,
      "start_time": 71730.0,
      "end_time": 75210.0,
      "text": "we offered this glimpse of one of the earliest racks of servers"
    },
    {
      "index": 25,
      "start_time": 75210.0,
      "end_time": 76740.0,
      "text": "that Google itself had."
    },
    {
      "index": 26,
      "start_time": 76740.0,
      "end_time": 78690.0,
      "text": "Well, turns out they changed buildings."
    },
    {
      "index": 27,
      "start_time": 78690.0,
      "end_time": 81780.0,
      "text": "But we happened to stumble upon the actual display."
    },
    {
      "index": 28,
      "start_time": 81780.0,
      "end_time": 84390.0,
      "text": "So pictured here is a photo from my own phone,"
    },
    {
      "index": 29,
      "start_time": 84390.0,
      "end_time": 86800.0,
      "text": "which was actually really cool to see."
    },
    {
      "index": 30,
      "start_time": 86800.0,
      "end_time": 89551.0,
      "text": "So inside of this, you&#39;ll see all of the old hard drives they&#39;ve used."
    },
    {
      "index": 31,
      "start_time": 89552.0,
      "end_time": 91260.0,
      "text": "We actually looked at some of the labels."
    },
    {
      "index": 32,
      "start_time": 91260.0,
      "end_time": 94120.0,
      "text": "And indeed, hard drives manufactured in 1999,"
    },
    {
      "index": 33,
      "start_time": 94120.0,
      "end_time": 96540.0,
      "text": "which is when Google started getting some of its momentum."
    },
    {
      "index": 34,
      "start_time": 96540.0,
      "end_time": 98290.0,
      "text": "You can see the green circuit boards here,"
    },
    {
      "index": 35,
      "start_time": 98290.0,
      "end_time": 101190.0,
      "text": "on which would be CPUs and other things, potentially."
    },
    {
      "index": 36,
      "start_time": 101190.0,
      "end_time": 103170.0,
      "text": "So if you&#39;d like a stroll down memory lane,"
    },
    {
      "index": 37,
      "start_time": 103170.0,
      "end_time": 106920.0,
      "text": "feel free to read up on this on Wikipedia or even on the excerpts here."
    },
    {
      "index": 38,
      "start_time": 106920.0,
      "end_time": 110480.0,
      "text": "And then strangely enough, at the conference some of us were at"
    },
    {
      "index": 39,
      "start_time": 110480.0,
      "end_time": 114150.0,
      "text": "did we discover this-- perhaps the biggest duck debugger made up"
    },
    {
      "index": 40,
      "start_time": 114150.0,
      "end_time": 118410.0,
      "text": "of smaller duck debuggers, one of whom was our own."
    },
    {
      "index": 41,
      "start_time": 118410.0,
      "end_time": 120780.0,
      "text": "So that, too, was how we spent this past week."
    },
    {
      "index": 42,
      "start_time": 120780.0,
      "end_time": 121440.0,
      "text": "All right."
    },
    {
      "index": 43,
      "start_time": 121440.0,
      "end_time": 123981.0,
      "text": "So how are we going to spend this week and the weeks to come?"
    },
    {
      "index": 44,
      "start_time": 123981.0,
      "end_time": 126660.0,
      "text": "So you&#39;ll recall that when we transitioned from Scratch to C,"
    },
    {
      "index": 45,
      "start_time": 126660.0,
      "end_time": 129279.0,
      "text": "we drew a couple of comparisons between syntax and features."
    },
    {
      "index": 46,
      "start_time": 129279.0,
      "end_time": 131820.0,
      "text": "And I thought it&#39;d be useful to take that same approach here,"
    },
    {
      "index": 47,
      "start_time": 131820.0,
      "end_time": 134910.0,
      "text": "really to emphasize that most of the ideas we&#39;re going to explore today"
    },
    {
      "index": 48,
      "start_time": 134910.0,
      "end_time": 135940.0,
      "text": "are themselves not new."
    },
    {
      "index": 49,
      "start_time": 135940.0,
      "end_time": 137850.0,
      "text": "It&#39;s just how you express them and how you"
    },
    {
      "index": 50,
      "start_time": 137850.0,
      "end_time": 140670.0,
      "text": "write the syntax in the language known as Python that&#39;s"
    },
    {
      "index": 51,
      "start_time": 140670.0,
      "end_time": 143730.0,
      "text": "indeed going to be different from Scratch, from C,"
    },
    {
      "index": 52,
      "start_time": 143730.0,
      "end_time": 145290.0,
      "text": "and now here we are with Python."
    },
    {
      "index": 53,
      "start_time": 145290.0,
      "end_time": 150239.0,
      "text": "So back in the day, in week 0, when you wanted to say something in Scratch,"
    },
    {
      "index": 54,
      "start_time": 150240.0,
      "end_time": 152980.0,
      "text": "you would literally use this blue purple puzzle piece, say hello."
    },
    {
      "index": 55,
      "start_time": 152980.0,
      "end_time": 155209.0,
      "text": "And we called that a function or a statement."
    },
    {
      "index": 56,
      "start_time": 155210.0,
      "end_time": 156681.0,
      "text": "It was some kind of verb action."
    },
    {
      "index": 57,
      "start_time": 156681.0,
      "end_time": 159180.0,
      "text": "And in C, of course, it looked a little something like this."
    },
    {
      "index": 58,
      "start_time": 159180.0,
      "end_time": 163180.0,
      "text": "Henceforth, starting today in Python, it&#39;s going to look like this."
    },
    {
      "index": 59,
      "start_time": 163180.0,
      "end_time": 165330.0,
      "text": "So before, after."
    },
    {
      "index": 60,
      "start_time": 165330.0,
      "end_time": 167100.0,
      "text": "Before, after."
    },
    {
      "index": 61,
      "start_time": 167100.0,
      "end_time": 169359.0,
      "text": "So it&#39;s pretty easy to visually diff these two things."
    },
    {
      "index": 62,
      "start_time": 169360.0,
      "end_time": 170760.0,
      "text": "But what are just a couple of the differences"
    },
    {
      "index": 63,
      "start_time": 170760.0,
      "end_time": 172350.0,
      "text": "that jump out at you immediately?"
    },
    {
      "index": 64,
      "start_time": 172350.0,
      "end_time": 174400.0,
      "text": "C, Python."
    },
    {
      "index": 65,
      "start_time": 177216.0,
      "end_time": 179840.0,
      "text": "So there&#39;s no more backslash n, it would seem, in this context."
    },
    {
      "index": 66,
      "start_time": 179840.0,
      "end_time": 182340.0,
      "text": "So that&#39;s kind of a nice relief to not have to type anymore."
    },
    {
      "index": 67,
      "start_time": 182340.0,
      "end_time": 184440.0,
      "text": "What else seems to be different?"
    },
    {
      "index": 68,
      "start_time": 184440.0,
      "end_time": 185590.0,
      "text": "No semicolon, thank god."
    },
    {
      "index": 69,
      "start_time": 185590.0,
      "end_time": 186900.0,
      "text": "Right?"
    },
    {
      "index": 70,
      "start_time": 186900.0,
      "end_time": 187740.0,
      "text": "Perhaps the stupidest source of frustration"
    },
    {
      "index": 71,
      "start_time": 187740.0,
      "end_time": 190323.0,
      "text": "that you might have experienced by just omitting one of those."
    },
    {
      "index": 72,
      "start_time": 190323.0,
      "end_time": 191778.0,
      "text": "And someone over here?"
    },
    {
      "index": 73,
      "start_time": 191778.0,
      "end_time": 195950.0,
      "text": "Yeah, so printf is now just print, which is pretty reasonable unto itself."
    },
    {
      "index": 74,
      "start_time": 195950.0,
      "end_time": 198179.0,
      "text": "So these are terribly minor differences."
    },
    {
      "index": 75,
      "start_time": 198180.0,
      "end_time": 200810.0,
      "text": "But it&#39;s sort of testament to the kinds of mental adjustments"
    },
    {
      "index": 76,
      "start_time": 200810.0,
      "end_time": 202800.0,
      "text": "you&#39;re going to have to start to make."
    },
    {
      "index": 77,
      "start_time": 202800.0,
      "end_time": 204630.0,
      "text": "Fortunately, thus far we&#39;ve seen that you can start leaving things off,"
    },
    {
      "index": 78,
      "start_time": 204630.0,
      "end_time": 207963.0,
      "text": "which is actually a guiding principle of Python in that one of its goals is it&#39;s"
    },
    {
      "index": 79,
      "start_time": 207963.0,
      "end_time": 211440.0,
      "text": "meant to be easier to write than some of its predecessors, among them C."
    },
    {
      "index": 80,
      "start_time": 211440.0,
      "end_time": 215499.0,
      "text": "So in C we might have implemented this hello, world program that"
    },
    {
      "index": 81,
      "start_time": 215499.0,
      "end_time": 218790.0,
      "text": "actually ran when you clicked the green flag using code like that at the right."
    },
    {
      "index": 82,
      "start_time": 218790.0,
      "end_time": 221730.0,
      "text": "And this was, if those of you who had no programming experience coming"
    },
    {
      "index": 83,
      "start_time": 221730.0,
      "end_time": 224730.0,
      "text": "in to CS50, what probably looked like the proverbial Greek to you"
    },
    {
      "index": 84,
      "start_time": 224730.0,
      "end_time": 226260.0,
      "text": "just a few weeks ago."
    },
    {
      "index": 85,
      "start_time": 226260.0,
      "end_time": 228510.0,
      "text": "And we teased apart what those various lines meant."
    },
    {
      "index": 86,
      "start_time": 228510.0,
      "end_time": 229950.0,
      "text": "But in Python, guess what?"
    },
    {
      "index": 87,
      "start_time": 229950.0,
      "end_time": 233489.0,
      "text": "If you want to write a program whose purpose in life is to say, hello, well,"
    },
    {
      "index": 88,
      "start_time": 233490.0,
      "end_time": 235440.0,
      "text": "just write def main."
    },
    {
      "index": 89,
      "start_time": 235440.0,
      "end_time": 236520.0,
      "text": "Print hello, world."
    },
    {
      "index": 90,
      "start_time": 236520.0,
      "end_time": 238775.0,
      "text": "So it&#39;s a little similarly structured."
    },
    {
      "index": 91,
      "start_time": 238775.0,
      "end_time": 244710.0,
      "text": "And in fact, it does not lack for some of the more arcane syntax here."
    },
    {
      "index": 92,
      "start_time": 244710.0,
      "end_time": 247180.0,
      "text": "But we&#39;ll see soon what this actually means."
    },
    {
      "index": 93,
      "start_time": 247180.0,
      "end_time": 249495.0,
      "text": "But it&#39;s a little simpler than the one before."
    },
    {
      "index": 94,
      "start_time": 249495.0,
      "end_time": 250620.0,
      "text": "And let&#39;s tease this apart."
    },
    {
      "index": 95,
      "start_time": 250620.0,
      "end_time": 253230.0,
      "text": "So def here simply means define me, a function."
    },
    {
      "index": 96,
      "start_time": 253230.0,
      "end_time": 256140.0,
      "text": "So whereas in C we&#39;ve historically seen that you specify"
    },
    {
      "index": 97,
      "start_time": 256140.0,
      "end_time": 258419.0,
      "text": "the type that the function should return,"
    },
    {
      "index": 98,
      "start_time": 258420.00000000003,
      "end_time": 260570.00000000003,
      "text": "we&#39;re not going to do that in Python anymore."
    },
    {
      "index": 99,
      "start_time": 260570.0,
      "end_time": 262320.0,
      "text": "Python still has data types, but we&#39;re not"
    },
    {
      "index": 100,
      "start_time": 262320.0,
      "end_time": 265107.0,
      "text": "going to explicitly mention what data types we&#39;re using."
    },
    {
      "index": 101,
      "start_time": 265107.0,
      "end_time": 266940.0,
      "text": "Meanwhile, here is the name of the function."
    },
    {
      "index": 102,
      "start_time": 266940.0,
      "end_time": 268773.0,
      "text": "And main would be a convention, but it&#39;s not"
    },
    {
      "index": 103,
      "start_time": 268773.0,
      "end_time": 272950.0,
      "text": "built into the language in the same way as it is in C, as we shall see."
    },
    {
      "index": 104,
      "start_time": 272950.0,
      "end_time": 275760.0,
      "text": "Meanwhile, this silly incantation is just"
    },
    {
      "index": 105,
      "start_time": 275760.0,
      "end_time": 277620.0,
      "text": "a way of ensuring that the default function"
    },
    {
      "index": 106,
      "start_time": 277620.0,
      "end_time": 281340.0,
      "text": "to be executed in a Python program is indeed going to be called main."
    },
    {
      "index": 107,
      "start_time": 281340.0,
      "end_time": 283710.0,
      "text": "But more on that when we actually start creating."
    },
    {
      "index": 108,
      "start_time": 283710.0,
      "end_time": 286260.0,
      "text": "But this is perhaps the most subtle but most important"
    },
    {
      "index": 109,
      "start_time": 286260.0,
      "end_time": 287894.0,
      "text": "difference, at least early on."
    },
    {
      "index": 110,
      "start_time": 287894.0,
      "end_time": 289560.0,
      "text": "And it&#39;s even hard to see at this scale."
    },
    {
      "index": 111,
      "start_time": 289560.0,
      "end_time": 294201.0,
      "text": "But notice the colons both here and here that I&#39;ve highlighted now in yellow,"
    },
    {
      "index": 112,
      "start_time": 294201.0,
      "end_time": 295950.0,
      "text": "and these dots, which are not to be typed,"
    },
    {
      "index": 113,
      "start_time": 295950.0,
      "end_time": 298158.0,
      "text": "but are just meant to draw your attention to the fact"
    },
    {
      "index": 114,
      "start_time": 298158.0,
      "end_time": 300850.0,
      "text": "that I hit the space bar four times in those locations."
    },
    {
      "index": 115,
      "start_time": 300850.0,
      "end_time": 304890.0,
      "text": "So if you have ever sort of gotten some feedback from your TA or TF"
    },
    {
      "index": 116,
      "start_time": 304890.0,
      "end_time": 309300.0,
      "text": "that your style could be better, closer to 5 out of 5, because of lack"
    },
    {
      "index": 117,
      "start_time": 309300.0,
      "end_time": 311400.0,
      "text": "of indentation or pretty formatting, Python&#39;s"
    },
    {
      "index": 118,
      "start_time": 311400.0,
      "end_time": 313200.0,
      "text": "actually gonna help us out with this."
    },
    {
      "index": 119,
      "start_time": 313200.0,
      "end_time": 317969.0,
      "text": "So Python code will not run if you have not invented things properly."
    },
    {
      "index": 120,
      "start_time": 317970.0,
      "end_time": 322440.0,
      "text": "So gone are the curly braces that encapsulate related lines of code"
    },
    {
      "index": 121,
      "start_time": 322440.0,
      "end_time": 324330.0,
      "text": "within some block of functionality."
    },
    {
      "index": 122,
      "start_time": 324330.0,
      "end_time": 327780.0,
      "text": "And instead, they&#39;re replaced generally with this general structure."
    },
    {
      "index": 123,
      "start_time": 327780.0,
      "end_time": 330359.0,
      "text": "You have a colon, and then below that and indented"
    },
    {
      "index": 124,
      "start_time": 330360.0,
      "end_time": 334200.0,
      "text": "are all of the lines that are somehow related to that earlier line of code."
    },
    {
      "index": 125,
      "start_time": 334200.0,
      "end_time": 336700.0,
      "text": "And the indentation must be consistent."
    },
    {
      "index": 126,
      "start_time": 336700.0,
      "end_time": 338969.0,
      "text": "So even though your own eye might not quite"
    },
    {
      "index": 127,
      "start_time": 338970.0,
      "end_time": 343140.0,
      "text": "distinguish four spaces from three, the Python environment will."
    },
    {
      "index": 128,
      "start_time": 343140.0,
      "end_time": 345180.0,
      "text": "And so this will actually help implicitly"
    },
    {
      "index": 129,
      "start_time": 345180.0,
      "end_time": 347490.0,
      "text": "enforce better style, perhaps, than might"
    },
    {
      "index": 130,
      "start_time": 347490.0,
      "end_time": 350649.0,
      "text": "have been easily done from the get-go."
    },
    {
      "index": 131,
      "start_time": 350649.0,
      "end_time": 352940.0,
      "text": "So then, of course, in Scratch, we had a forever block,"
    },
    {
      "index": 132,
      "start_time": 352940.0,
      "end_time": 355342.0,
      "text": "which says, hello, world forever, much like in C, we"
    },
    {
      "index": 133,
      "start_time": 355342.0,
      "end_time": 356550.0,
      "text": "could implement it like this."
    },
    {
      "index": 134,
      "start_time": 356550.0,
      "end_time": 358799.0,
      "text": "Now there&#39;s actually a pretty clean mapping in Python."
    },
    {
      "index": 135,
      "start_time": 358799.0,
      "end_time": 361500.0,
      "text": "We already know we can get rid of the semicolon."
    },
    {
      "index": 136,
      "start_time": 361500.0,
      "end_time": 363990.0,
      "text": "We already know we can get rid of the curly braces."
    },
    {
      "index": 137,
      "start_time": 363990.0,
      "end_time": 365970.0,
      "text": "We&#39;re going to have to add in a colon."
    },
    {
      "index": 138,
      "start_time": 365970.0,
      "end_time": 368370.0,
      "text": "But it turns out we can get rid of a little more, too."
    },
    {
      "index": 139,
      "start_time": 368370.0,
      "end_time": 374460.0,
      "text": "So what more is absent from this translation of hello, world to Python?"
    },
    {
      "index": 140,
      "start_time": 374460.0,
      "end_time": 377460.0,
      "text": "This one&#39;s more subtle."
    },
    {
      "index": 141,
      "start_time": 377460.0,
      "end_time": 378920.0,
      "text": "So we definitely got rid of the curly braces,"
    },
    {
      "index": 142,
      "start_time": 378920.0,
      "end_time": 380858.0,
      "text": "relying now just on indentation."
    },
    {
      "index": 143,
      "start_time": 384310.0,
      "end_time": 386330.0,
      "text": "OK, so there&#39;s no parentheses around while."
    },
    {
      "index": 144,
      "start_time": 386330.0,
      "end_time": 389469.0,
      "text": "And so this, too, is actually meant to be a feature of Python."
    },
    {
      "index": 145,
      "start_time": 389470.0,
      "end_time": 393310.0,
      "text": "If you don&#39;t logically need parentheses to enforce order of operations,"
    },
    {
      "index": 146,
      "start_time": 393310.0,
      "end_time": 396820.0,
      "text": "like in arithmetic or the like, then don&#39;t use them"
    },
    {
      "index": 147,
      "start_time": 396820.0,
      "end_time": 397540.0,
      "text": "because they&#39;re just a distraction."
    },
    {
      "index": 148,
      "start_time": 397540.0,
      "end_time": 398623.0,
      "text": "They&#39;re just more to type."
    },
    {
      "index": 149,
      "start_time": 398623.0,
      "end_time": 401865.0,
      "text": "And the code now is just visually cleaner and easier to read."
    },
    {
      "index": 150,
      "start_time": 401865.0,
      "end_time": 403240.0,
      "text": "There&#39;s a minor difference, too--"
    },
    {
      "index": 151,
      "start_time": 403240.0,
      "end_time": 405550.0,
      "text": "True and False are going to be capitalized in Python."
    },
    {
      "index": 152,
      "start_time": 405550.0,
      "end_time": 407407.0,
      "text": "But that&#39;s a fairly incidental detail."
    },
    {
      "index": 153,
      "start_time": 407407.0,
      "end_time": 409990.0,
      "text": "But notice this kind of captures already the spirit of Python."
    },
    {
      "index": 154,
      "start_time": 409990.0,
      "end_time": 412299.0,
      "text": "It&#39;s not a huge leap to go from one to the other."
    },
    {
      "index": 155,
      "start_time": 412299.0,
      "end_time": 414340.0,
      "text": "But we&#39;ve just kind of started to get rid of some"
    },
    {
      "index": 156,
      "start_time": 414340.0,
      "end_time": 417381.0,
      "text": "of the clutter and the stuff that never really intellectually added much,"
    },
    {
      "index": 157,
      "start_time": 417381.0,
      "end_time": 419890.0,
      "text": "and if anything was annoying to have to remember early on."
    },
    {
      "index": 158,
      "start_time": 419890.0,
      "end_time": 421479.0,
      "text": "So True here is our Boolean."
    },
    {
      "index": 159,
      "start_time": 421480.0,
      "end_time": 423880.0,
      "text": "And now we have a finite number of iterations."
    },
    {
      "index": 160,
      "start_time": 423880.0,
      "end_time": 426130.0,
      "text": "We might want to say hello, world exactly 50 times."
    },
    {
      "index": 161,
      "start_time": 426130.0,
      "end_time": 429320.0,
      "text": "In C, this was a crazy mess if you wanted to do this."
    },
    {
      "index": 162,
      "start_time": 429320.0,
      "end_time": 431980.0,
      "text": "You&#39;d have to initialize a variable with which to count up to,"
    },
    {
      "index": 163,
      "start_time": 431980.0,
      "end_time": 434981.0,
      "text": "but not including 50, plus plussing along the way and so forth."
    },
    {
      "index": 164,
      "start_time": 434981.0,
      "end_time": 436855.0,
      "text": "In Python, it&#39;s going to be a little cleaner."
    },
    {
      "index": 165,
      "start_time": 436855.0,
      "end_time": 439720.0,
      "text": "And we&#39;ll come back to what this means exactly."
    },
    {
      "index": 166,
      "start_time": 439720.0,
      "end_time": 443900.0,
      "text": "But if you kind of read it from left to right, it kind of says what you mean."
    },
    {
      "index": 167,
      "start_time": 443900.0,
      "end_time": 444400.0,
      "text": "Right?"
    },
    {
      "index": 168,
      "start_time": 444400.0,
      "end_time": 446890.0,
      "text": "For i in the range of 50."
    },
    {
      "index": 169,
      "start_time": 446890.0,
      "end_time": 449169.0,
      "text": "So i is probably going to be a variable."
    },
    {
      "index": 170,
      "start_time": 449170.0,
      "end_time": 450970.0,
      "text": "And notice we&#39;re not mentioning its type."
    },
    {
      "index": 171,
      "start_time": 450970.0,
      "end_time": 454180.0,
      "text": "It&#39;s going to be implied by whatever the context is, which in this case"
    },
    {
      "index": 172,
      "start_time": 454180.0,
      "end_time": 456730.0,
      "text": "has to do, apparently, with numbers, per the 50."
    },
    {
      "index": 173,
      "start_time": 456730.0,
      "end_time": 459184.0,
      "text": "Range is actually going to be a data type unto itself."
    },
    {
      "index": 174,
      "start_time": 459184.0,
      "end_time": 460600.0,
      "text": "It&#39;s a little funky in that sense."
    },
    {
      "index": 175,
      "start_time": 460600.0,
      "end_time": 461830.0,
      "text": "It&#39;s called a class."
    },
    {
      "index": 176,
      "start_time": 461830.0,
      "end_time": 466599.0,
      "text": "But this essentially is a special feature of Python that, unlike in C,"
    },
    {
      "index": 177,
      "start_time": 466600.0,
      "end_time": 470380.0,
      "text": "where if you want to iterate over an array of values or 50 such values,"
    },
    {
      "index": 178,
      "start_time": 470380.0,
      "end_time": 472840.0,
      "text": "you would literally have an array of 50 values."
    },
    {
      "index": 179,
      "start_time": 472840.0,
      "end_time": 475489.0,
      "text": "Range is kind of cool in that it kind of stands there."
    },
    {
      "index": 180,
      "start_time": 475490.0,
      "end_time": 478880.0,
      "text": "And every time you iterate through a loop, it hands you the next number,"
    },
    {
      "index": 181,
      "start_time": 478880.0,
      "end_time": 482690.0,
      "text": "but just one at a time, thereby using maybe as little as one"
    },
    {
      "index": 182,
      "start_time": 482690.0,
      "end_time": 486270.0,
      "text": "50th the amount of memory because it only has to keep one number around"
    },
    {
      "index": 183,
      "start_time": 486270.0,
      "end_time": 486770.0,
      "text": "at a time."
    },
    {
      "index": 184,
      "start_time": 486770.0,
      "end_time": 488520.0,
      "text": "And there&#39;s a bit more overhead than that."
    },
    {
      "index": 185,
      "start_time": 488520.0,
      "end_time": 490780.0,
      "text": "It&#39;s not a perfect savings, quite so."
    },
    {
      "index": 186,
      "start_time": 490780.0,
      "end_time": 495669.0,
      "text": "But this just says for i in range 50, and that&#39;s"
    },
    {
      "index": 187,
      "start_time": 495670.0,
      "end_time": 499270.0,
      "text": "going to implicitly count from 0 up through 49."
    },
    {
      "index": 188,
      "start_time": 499270.0,
      "end_time": 503200.0,
      "text": "And meanwhile, what&#39;s below it is what&#39;s going to get printed this time."
    },
    {
      "index": 189,
      "start_time": 503200.0,
      "end_time": 506620.0,
      "text": "So meanwhile, here was one of our bigger Scratch blocks early on."
    },
    {
      "index": 190,
      "start_time": 506620.0,
      "end_time": 510100.0,
      "text": "And i translates pretty literally to code in C."
    },
    {
      "index": 191,
      "start_time": 510100.0,
      "end_time": 512710.0,
      "text": "And you can perhaps guess, if you&#39;ve never"
    },
    {
      "index": 192,
      "start_time": 512710.00000000006,
      "end_time": 517590.00000000006,
      "text": "seen Python before today, what the Python code might now look like."
    },
    {
      "index": 193,
      "start_time": 517580.00000000006,
      "end_time": 519130.00000000006,
      "text": "If this here on the right is the C code, what"
    },
    {
      "index": 194,
      "start_time": 519130.0,
      "end_time": 521840.0,
      "text": "are some of the features syntactically that we&#39;re about to throw away?"
    },
    {
      "index": 195,
      "start_time": 521840.00000000006,
      "end_time": 522590.00000000006,
      "text": "Yeah."
    },
    {
      "index": 196,
      "start_time": 522580.00000000006,
      "end_time": 524650.0,
      "text": "AUDIENCE: You can throw away the curly braces and the parentheses."
    },
    {
      "index": 197,
      "start_time": 524650.0,
      "end_time": 527275.0,
      "text": "DAVID MALAN: Curly braces and parentheses are going to go away."
    },
    {
      "index": 198,
      "start_time": 527275.0,
      "end_time": 529120.0,
      "text": "What else might go away?"
    },
    {
      "index": 199,
      "start_time": 529120.0,
      "end_time": 532550.0,
      "text": "The semicolons are going to go away."
    },
    {
      "index": 200,
      "start_time": 532550.0,
      "end_time": 534849.0,
      "text": "The backslash n inside of the print statements."
    },
    {
      "index": 201,
      "start_time": 534850.0,
      "end_time": 536500.0,
      "text": "Great."
    },
    {
      "index": 202,
      "start_time": 536500.0,
      "end_time": 539830.0,
      "text": "One more thing, I think."
    },
    {
      "index": 203,
      "start_time": 539830.0,
      "end_time": 541450.0,
      "text": "The if."
    },
    {
      "index": 204,
      "start_time": 541450.0,
      "end_time": 543424.0,
      "text": "So we don&#39;t strictly need the parentheses"
    },
    {
      "index": 205,
      "start_time": 543424.0,
      "end_time": 545590.0,
      "text": "because it&#39;s not like I&#39;m combining things logically"
    },
    {
      "index": 206,
      "start_time": 545590.0,
      "end_time": 548500.0,
      "text": "like this or that or this and that."
    },
    {
      "index": 207,
      "start_time": 548500.0,
      "end_time": 550180.0,
      "text": "So it should suffice to get rid of those two."
    },
    {
      "index": 208,
      "start_time": 550180.0,
      "end_time": 552280.0,
      "text": "And there&#39;s a couple of other tweaks we&#39;re going to have to make here."
    },
    {
      "index": 209,
      "start_time": 552280.0,
      "end_time": 554959.0,
      "text": "But indeed, the code&#39;s going to be a lot tighter, so to speak."
    },
    {
      "index": 210,
      "start_time": 554960.0,
      "end_time": 556960.0,
      "text": "Now you&#39;re just going to say what you mean here."
    },
    {
      "index": 211,
      "start_time": 556960.0,
      "end_time": 558168.0,
      "text": "And there is one weird thing."
    },
    {
      "index": 212,
      "start_time": 558168.0,
      "end_time": 560800.0,
      "text": "And it&#39;s not a typo."
    },
    {
      "index": 213,
      "start_time": 560800.0,
      "end_time": 563560.0,
      "text": "What apparently are we going to have to start knowing now?"
    },
    {
      "index": 214,
      "start_time": 563560.0,
      "end_time": 564470.0,
      "text": "Elif whatever."
    },
    {
      "index": 215,
      "start_time": 564470.0,
      "end_time": 566480.0,
      "text": "So elif is not a typo."
    },
    {
      "index": 216,
      "start_time": 566480.0,
      "end_time": 569940.0,
      "text": "It&#39;s indeed how you express the notion of else-if."
    },
    {
      "index": 217,
      "start_time": 569940.0,
      "end_time": 571100.0,
      "text": "But otherwise, everything is exactly the same."
    },
    {
      "index": 218,
      "start_time": 571100.0,
      "end_time": 571926.0,
      "text": "And notice the colons."
    },
    {
      "index": 219,
      "start_time": 571926.0,
      "end_time": 573970.0,
      "text": "Frankly, ironically, whereas previously it"
    },
    {
      "index": 220,
      "start_time": 573970.0,
      "end_time": 576940.0,
      "text": "might have been annoying to occasionally forget a semicolon,"
    },
    {
      "index": 221,
      "start_time": 576940.0,
      "end_time": 578830.0,
      "text": "now the colons my take on that role."
    },
    {
      "index": 222,
      "start_time": 578830.0,
      "end_time": 581980.0,
      "text": "But at least everything below them is meant to be indented."
    },
    {
      "index": 223,
      "start_time": 581980.0,
      "end_time": 585880.0,
      "text": "So here&#39;s a fundamental difference beyond the sort of silly syntactic"
    },
    {
      "index": 224,
      "start_time": 585880.0,
      "end_time": 587950.0,
      "text": "differences of this and, say, other languages--"
    },
    {
      "index": 225,
      "start_time": 587950.0,
      "end_time": 592900.0,
      "text": "the flow of work that we&#39;ve been using thus far has been essentially this"
    },
    {
      "index": 226,
      "start_time": 592900.0,
      "end_time": 595950.0,
      "text": "in C. You write source code in a file generally ending in .c."
    },
    {
      "index": 227,
      "start_time": 595950.0,
      "end_time": 600602.0,
      "text": "You run a compiler, which, as a quick check, is called clang."
    },
    {
      "index": 228,
      "start_time": 600602.0,
      "end_time": 601810.0,
      "text": "So it&#39;s not technically make."
    },
    {
      "index": 229,
      "start_time": 601810.0,
      "end_time": 604300.0,
      "text": "Make is just this helpful build utility that"
    },
    {
      "index": 230,
      "start_time": 604300.0,
      "end_time": 605730.0,
      "text": "automates the process of calling clang."
    },
    {
      "index": 231,
      "start_time": 605730.0,
      "end_time": 607960.0,
      "text": "So clang is, strictly speaking, the compiler."
    },
    {
      "index": 232,
      "start_time": 607960.0,
      "end_time": 611470.0,
      "text": "And clang outputs zeros and ones, otherwise known as machine code."
    },
    {
      "index": 233,
      "start_time": 611470.0,
      "end_time": 615310.0,
      "text": "And your computer-- Mac, PC, whatever-- has a CPU, Central Processing"
    },
    {
      "index": 234,
      "start_time": 615310.0,
      "end_time": 618990.0,
      "text": "Unit inside, made by Intel or some other company."
    },
    {
      "index": 235,
      "start_time": 618100.0,
      "end_time": 620590.0,
      "text": "And that&#39;s CPU is hardwired to understand"
    },
    {
      "index": 236,
      "start_time": 620590.0,
      "end_time": 625330.0,
      "text": "certain patterns of bits, zeros and ones, otherwise known as machine code."
    },
    {
      "index": 237,
      "start_time": 625330.0,
      "end_time": 627430.0,
      "text": "So that&#39;s been our world in C."
    },
    {
      "index": 238,
      "start_time": 627430.0,
      "end_time": 631150.0,
      "text": "With Python-- so the code that you might have compiled in C,"
    },
    {
      "index": 239,
      "start_time": 631150.0,
      "end_time": 632860.0,
      "text": "for instance, might have been this, which"
    },
    {
      "index": 240,
      "start_time": 632860.0,
      "end_time": 634750.0,
      "text": "we said we run clang on like this."
    },
    {
      "index": 241,
      "start_time": 634750.0,
      "end_time": 637540.0,
      "text": "And if you don&#39;t specify a default file name as output,"
    },
    {
      "index": 242,
      "start_time": 637540.0,
      "end_time": 640480.0,
      "text": "you&#39;ll instead just get in your file all of the zeros and ones,"
    },
    {
      "index": 243,
      "start_time": 640480.0,
      "end_time": 643990.0,
      "text": "which can then be executed by way of ./a.out,"
    },
    {
      "index": 244,
      "start_time": 643990.0,
      "end_time": 647270.0,
      "text": "the default name for the assembler&#39;s output here."
    },
    {
      "index": 245,
      "start_time": 647270.0,
      "end_time": 653199.0,
      "text": "So in Python, though, the world gets here, too, a little simpler, as well."
    },
    {
      "index": 246,
      "start_time": 653200.0,
      "end_time": 656740.0,
      "text": "So we just now have source code and an interpreter."
    },
    {
      "index": 247,
      "start_time": 656740.0,
      "end_time": 659140.0,
      "text": "So there&#39;s no machine code, it would seem."
    },
    {
      "index": 248,
      "start_time": 659140.0,
      "end_time": 660730.0,
      "text": "There&#39;s no compiler, it would seem."
    },
    {
      "index": 249,
      "start_time": 660730.0,
      "end_time": 662800.0,
      "text": "And frankly, there&#39;s one fewer arrow, which"
    },
    {
      "index": 250,
      "start_time": 662800.0,
      "end_time": 665434.0,
      "text": "suggests to me that the process of running Python code itself"
    },
    {
      "index": 251,
      "start_time": 665434.0,
      "end_time": 667100.0,
      "text": "is actually going to be a little easier."
    },
    {
      "index": 252,
      "start_time": 667100.0,
      "end_time": 669400.0,
      "text": "Running C code has typically been two steps."
    },
    {
      "index": 253,
      "start_time": 669400.0,
      "end_time": 672490.0,
      "text": "You rerun clang, or via make you run clang."
    },
    {
      "index": 254,
      "start_time": 672490.0,
      "end_time": 673617.0,
      "text": "Then you run the program."
    },
    {
      "index": 255,
      "start_time": 673617.0,
      "end_time": 674199.0,
      "text": "And it&#39;s fine."
    },
    {
      "index": 256,
      "start_time": 674200.0,
      "end_time": 674950.0,
      "text": "It&#39;s not all that hard."
    },
    {
      "index": 257,
      "start_time": 674950.0,
      "end_time": 675741.0,
      "text": "But it&#39;s two steps."
    },
    {
      "index": 258,
      "start_time": 675741.0,
      "end_time": 678850.0,
      "text": "Why not reduce to two steps what you could instead do in one?"
    },
    {
      "index": 259,
      "start_time": 678850.0,
      "end_time": 680500.0,
      "text": "And we&#39;ll see exactly what this means."
    },
    {
      "index": 260,
      "start_time": 680500.0,
      "end_time": 682960.0,
      "text": "Now, technically, that&#39;s a bit of an oversimplification."
    },
    {
      "index": 261,
      "start_time": 682960.0,
      "end_time": 684918.0,
      "text": "Technically, underneath the hood, if you wanted"
    },
    {
      "index": 262,
      "start_time": 684918.0,
      "end_time": 689530.0,
      "text": "to run a program like this that simply prints out hello, world,"
    },
    {
      "index": 263,
      "start_time": 689530.0,
      "end_time": 693370.0,
      "text": "you would simply run python hello.py."
    },
    {
      "index": 264,
      "start_time": 693370.0,
      "end_time": 696760.0,
      "text": "And the result of that would be to see hello, world on the screen,"
    },
    {
      "index": 265,
      "start_time": 696760.0,
      "end_time": 698000.0,
      "text": "as we&#39;ll soon see."
    },
    {
      "index": 266,
      "start_time": 698000.0,
      "end_time": 701150.0,
      "text": "But technically, underneath the hood, there is some other stuff going on."
    },
    {
      "index": 267,
      "start_time": 701150.0,
      "end_time": 703000.0,
      "text": "So there actually kind of is a compiler."
    },
    {
      "index": 268,
      "start_time": 703000.0,
      "end_time": 704770.0,
      "text": "But there&#39;s not something called machine code, per se."
    },
    {
      "index": 269,
      "start_time": 704770.0,
      "end_time": 705699.0,
      "text": "It&#39;s called bytecode."
    },
    {
      "index": 270,
      "start_time": 705700.0,
      "end_time": 708100.0,
      "text": "There&#39;s even something called a Python virtual machine."
    },
    {
      "index": 271,
      "start_time": 708100.0,
      "end_time": 711100.0,
      "text": "But all of this is abstracted away for us,"
    },
    {
      "index": 272,
      "start_time": 711100.0,
      "end_time": 713440.0,
      "text": "certainly for the sake of today&#39;s conversation,"
    },
    {
      "index": 273,
      "start_time": 713440.0,
      "end_time": 715690.0,
      "text": "but also in the real world, more generally."
    },
    {
      "index": 274,
      "start_time": 715690.0,
      "end_time": 717630.0,
      "text": "Humans have gotten better over the decades"
    },
    {
      "index": 275,
      "start_time": 717630.0,
      "end_time": 721450.0,
      "text": "at writing software and writing tools via which we can write software."
    },
    {
      "index": 276,
      "start_time": 721450.0,
      "end_time": 723760.0,
      "text": "And so a lot of the more manual processes"
    },
    {
      "index": 277,
      "start_time": 723760.0,
      "end_time": 725770.0,
      "text": "and a lot of the lower-level details that we&#39;ve"
    },
    {
      "index": 278,
      "start_time": 725770.0,
      "end_time": 729130.0,
      "text": "been focusing on, if not struggling on, in C, start to go away."
    },
    {
      "index": 279,
      "start_time": 729130.0,
      "end_time": 732820.0,
      "text": "Because much like in week 0, where we started layering on idea after idea--"
    },
    {
      "index": 280,
      "start_time": 732820.0,
      "end_time": 735580.0,
      "text": "zeros and ones, ASCII, colors, and whatnot--"
    },
    {
      "index": 281,
      "start_time": 735580.0,
      "end_time": 738970.0,
      "text": "similarly with our actual tools are we&#39;re going to start to do the same."
    },
    {
      "index": 282,
      "start_time": 738970.0,
      "end_time": 744460.0,
      "text": "So whereas in actuality what&#39;s going on underneath the hood is"
    },
    {
      "index": 283,
      "start_time": 744460.0,
      "end_time": 748900.0,
      "text": "this process here, we can start to think about it,"
    },
    {
      "index": 284,
      "start_time": 748900.0,
      "end_time": 750400.0,
      "text": "really, as something quite simpler."
    },
    {
      "index": 285,
      "start_time": 750400.0,
      "end_time": 752860.0,
      "text": "Now, if you&#39;re curious, and if you take some higher-level class"
    },
    {
      "index": 286,
      "start_time": 752860.0,
      "end_time": 756100.0,
      "text": "like CS61 or another, you&#39;ll actually talk"
    },
    {
      "index": 287,
      "start_time": 756100.0,
      "end_time": 758720.0,
      "text": "about things like bytecode and assembly code and the like."
    },
    {
      "index": 288,
      "start_time": 758720.0,
      "end_time": 760720.0,
      "text": "And we saw a glimpse of the latter a bit ago."
    },
    {
      "index": 289,
      "start_time": 760720.0,
      "end_time": 762670.0,
      "text": "This happens to be an intermediate language"
    },
    {
      "index": 290,
      "start_time": 762670.0,
      "end_time": 767000.0,
      "text": "that Python source code is converted into before it&#39;s run by the computer."
    },
    {
      "index": 291,
      "start_time": 767000.0,
      "end_time": 771200.0,
      "text": "But again, we&#39;re going to turn a blind eye to those lower-level details."
    },
    {
      "index": 292,
      "start_time": 771200.0,
      "end_time": 773500.0,
      "text": "So here are some of the tools now in our toolkit."
    },
    {
      "index": 293,
      "start_time": 773500.0,
      "end_time": 776380.0,
      "text": "In Python, there are data types, though as of now we&#39;ve"
    },
    {
      "index": 294,
      "start_time": 776380.0,
      "end_time": 779849.0,
      "text": "not seen any examples whereby I specify what types of values"
    },
    {
      "index": 295,
      "start_time": 779849.0,
      "end_time": 782140.0,
      "text": "are going to be in my variables or what types of values"
    },
    {
      "index": 296,
      "start_time": 782140.0,
      "end_time": 783610.0,
      "text": "a function&#39;s going to return."
    },
    {
      "index": 297,
      "start_time": 783610.0,
      "end_time": 785290.0,
      "text": "But they are there."
    },
    {
      "index": 298,
      "start_time": 785290.0,
      "end_time": 787360.0,
      "text": "Everything is sort of loosely typed in that"
    },
    {
      "index": 299,
      "start_time": 787360.0,
      "end_time": 791360.0,
      "text": "whatever you want a variable to be, it will just take on that data type,"
    },
    {
      "index": 300,
      "start_time": 791360.0,
      "end_time": 793540.0,
      "text": "whether it&#39;s an int or string or the like."
    },
    {
      "index": 301,
      "start_time": 793540.0,
      "end_time": 795400.0,
      "text": "It&#39;s not going to be the full word string."
    },
    {
      "index": 302,
      "start_time": 795400.0,
      "end_time": 797590.0,
      "text": "In Python, it&#39;s literally called str."
    },
    {
      "index": 303,
      "start_time": 797590.0,
      "end_time": 802340.0,
      "text": "But there are some familiar types here-- bool and float and int and others."
    },
    {
      "index": 304,
      "start_time": 802340.0,
      "end_time": 806320.0,
      "text": "And, in fact, among the others, as we&#39;ll soon see, are features like range."
    },
    {
      "index": 305,
      "start_time": 806320.0,
      "end_time": 810400.0,
      "text": "But before that, note too that we&#39;ll provide for at least our first foray"
    },
    {
      "index": 306,
      "start_time": 810400.0,
      "end_time": 813200.0,
      "text": "into Python a few familiar functions."
    },
    {
      "index": 307,
      "start_time": 813200.0,
      "end_time": 816640.0,
      "text": "So Python has different mechanisms than C for getting input from the user."
    },
    {
      "index": 308,
      "start_time": 816640.0,
      "end_time": 821500.0,
      "text": "We&#39;ve abstracted some of those details away in a new CS50 library for Python"
    },
    {
      "index": 309,
      "start_time": 821500.0,
      "end_time": 824170.0,
      "text": "that you&#39;ll really just use one or few times before"
    },
    {
      "index": 310,
      "start_time": 824170.0,
      "end_time": 827645.0,
      "text": "we transition away from even that, but will give you functions like get_char,"
    },
    {
      "index": 311,
      "start_time": 827645.0,
      "end_time": 830770.0,
      "text": "get_float, get_int, get_string that handle all the requisite error checking"
    },
    {
      "index": 312,
      "start_time": 830770.0,
      "end_time": 832870.0,
      "text": "so that at least for your first few programs,"
    },
    {
      "index": 313,
      "start_time": 832870.0,
      "end_time": 835180.0,
      "text": "you can just start to get some real work done"
    },
    {
      "index": 314,
      "start_time": 835180.0,
      "end_time": 838949.0,
      "text": "without diving into underneath the hood there."
    },
    {
      "index": 315,
      "start_time": 838950.0,
      "end_time": 841370.0,
      "text": "And then lastly, here are some other tools in our toolkit."
    },
    {
      "index": 316,
      "start_time": 841370.0,
      "end_time": 843900.0,
      "text": "And we&#39;ll just scratch the surface of some of these today."
    },
    {
      "index": 317,
      "start_time": 843900.0,
      "end_time": 848329.0,
      "text": "But what&#39;s nice about Python and what&#39;s nice about higher-level languages more"
    },
    {
      "index": 318,
      "start_time": 848330.0,
      "end_time": 851330.0,
      "text": "generally-- like more modern languages that learned lessons from older"
    },
    {
      "index": 319,
      "start_time": 851330.0,
      "end_time": 852650.0,
      "text": "languages like C--"
    },
    {
      "index": 320,
      "start_time": 852650.0,
      "end_time": 856875.0,
      "text": "is that you get so much more for free, so much more out of the box."
    },
    {
      "index": 321,
      "start_time": 856875.0,
      "end_time": 858500.0,
      "text": "There&#39;s so much more of a kitchen sink."
    },
    {
      "index": 322,
      "start_time": 858500.0,
      "end_time": 861860.0,
      "text": "There&#39;s so many metaphors we can use here, all of which speak to the fact"
    },
    {
      "index": 323,
      "start_time": 861860.0,
      "end_time": 865550.0,
      "text": "that Python has more features than C, much like Java,"
    },
    {
      "index": 324,
      "start_time": 865550.0,
      "end_time": 869600.0,
      "text": "if you took AP CS or something else, had than C."
    },
    {
      "index": 325,
      "start_time": 869600.0,
      "end_time": 873319.0,
      "text": "So does Python have a whole toolkit for representing complex numbers,"
    },
    {
      "index": 326,
      "start_time": 873320.0,
      "end_time": 876650.0,
      "text": "for representing dictionaries, otherwise implemented as hash tables,"
    },
    {
      "index": 327,
      "start_time": 876650.0,
      "end_time": 879890.0,
      "text": "as you now know; lists, which is kind of synonymous with an array."
    },
    {
      "index": 328,
      "start_time": 879890.0,
      "end_time": 883819.0,
      "text": "But a list is an array that can sort of automatically grow and shrink."
    },
    {
      "index": 329,
      "start_time": 883820.0,
      "end_time": 887400.0,
      "text": "We don&#39;t have to jump through hoops as we did in C. Range we&#39;ve seen briefly,"
    },
    {
      "index": 330,
      "start_time": 887400.0,
      "end_time": 890329.0,
      "text": "which just hands you back one number after another in some range, ideally"
    },
    {
      "index": 331,
      "start_time": 890330.0,
      "end_time": 891262.0,
      "text": "for iteration."
    },
    {
      "index": 332,
      "start_time": 891262.0,
      "end_time": 892969.0,
      "text": "Set is the notion from mathematics, where"
    },
    {
      "index": 333,
      "start_time": 892970.0,
      "end_time": 895430.0,
      "text": "if you want to put bunches of things into a data structure"
    },
    {
      "index": 334,
      "start_time": 895430.0,
      "end_time": 898189.0,
      "text": "and you want to make sure you have only one of each such thing"
    },
    {
      "index": 335,
      "start_time": 898190.0,
      "end_time": 900260.0,
      "text": "without duplicates, you can use a set."
    },
    {
      "index": 336,
      "start_time": 900260.0,
      "end_time": 902210.0,
      "text": "And a tuple is also a mathematical notion,"
    },
    {
      "index": 337,
      "start_time": 902210.0,
      "end_time": 906740.0,
      "text": "typically where you can combine related things without complicating things"
    },
    {
      "index": 338,
      "start_time": 906740.0,
      "end_time": 908300.0,
      "text": "with actual structs."
    },
    {
      "index": 339,
      "start_time": 908300.0,
      "end_time": 911720.0,
      "text": "Like, x, y is a common paradigm in lots of programs-- graphics,"
    },
    {
      "index": 340,
      "start_time": 911720.0,
      "end_time": 914494.0,
      "text": "or videos, or certainly math and graphing itself."
    },
    {
      "index": 341,
      "start_time": 914494.0,
      "end_time": 916910.0,
      "text": "You don&#39;t really need a whole full-fledged data structure."
    },
    {
      "index": 342,
      "start_time": 916910.0,
      "end_time": 919880.0,
      "text": "You might just want to say, x, y."
    },
    {
      "index": 343,
      "start_time": 919880.0,
      "end_time": 922490.0,
      "text": "And so Python gives us that kind of expressiveness."
    },
    {
      "index": 344,
      "start_time": 922490.0,
      "end_time": 925880.0,
      "text": "So let&#39;s actually now dive in with that quick mapping"
    },
    {
      "index": 345,
      "start_time": 925880.0,
      "end_time": 929990.0,
      "text": "from one world to the other and focus on what you can actually do with Python."
    },
    {
      "index": 346,
      "start_time": 929990.0,
      "end_time": 932150.0,
      "text": "So here I am in the familiar CS50 IDE."
    },
    {
      "index": 347,
      "start_time": 932150.0,
      "end_time": 934270.0,
      "text": "Much like we have pre-installed for you clang"
    },
    {
      "index": 348,
      "start_time": 934270.0,
      "end_time": 938240.0,
      "text": "and make and other tools, we&#39;ve also installed for you a program."
    },
    {
      "index": 349,
      "start_time": 938240.0,
      "end_time": 941720.0,
      "text": "That program is called Python, which is a little confusing at first glance"
    },
    {
      "index": 350,
      "start_time": 941720.0,
      "end_time": 944510.0,
      "text": "because Python is apparently the name of the language."
    },
    {
      "index": 351,
      "start_time": 944510.0,
      "end_time": 946250.0,
      "text": "But it&#39;s also the name of the program."
    },
    {
      "index": 352,
      "start_time": 946250.0,
      "end_time": 947930.0,
      "text": "And here&#39;s where Python is different."
    },
    {
      "index": 353,
      "start_time": 947930.0,
      "end_time": 950599.0,
      "text": "Whereas C is again compiled, and you use something"
    },
    {
      "index": 354,
      "start_time": 950600.0,
      "end_time": 952502.0,
      "text": "like clang to convert it to machine code,"
    },
    {
      "index": 355,
      "start_time": 952502.0,
      "end_time": 955459.0,
      "text": "Python is both the name of the language and the name of the program you"
    },
    {
      "index": 356,
      "start_time": 955460.0,
      "end_time": 958160.0,
      "text": "use to interpret the language."
    },
    {
      "index": 357,
      "start_time": 958160.0,
      "end_time": 961100.0,
      "text": "So pre-installed in CS50 IDE, and frankly, these days,"
    },
    {
      "index": 358,
      "start_time": 961100.0,
      "end_time": 964220.0,
      "text": "probably on your own Macs or PCs, even if you don&#39;t know it,"
    },
    {
      "index": 359,
      "start_time": 964220.0,
      "end_time": 968240.0,
      "text": "is a program called Python that if fed Python source code as input"
    },
    {
      "index": 360,
      "start_time": 968240.0,
      "end_time": 970100.0,
      "text": "will do what that code says."
    },
    {
      "index": 361,
      "start_time": 970100.0,
      "end_time": 972750.0,
      "text": "So let&#39;s go ahead and try something just like that."
    },
    {
      "index": 362,
      "start_time": 972750.0,
      "end_time": 976310.0,
      "text": "Let me go ahead and save a file preemptively as hello.py."
    },
    {
      "index": 363,
      "start_time": 976310.0,
      "end_time": 979880.0,
      "text": "So .py will be the convention now instead of .c."
    },
    {
      "index": 364,
      "start_time": 979880.0,
      "end_time": 982560.0,
      "text": "And I&#39;m going to go ahead and actually keep this pretty simple."
    },
    {
      "index": 365,
      "start_time": 982560.0,
      "end_time": 984267.0,
      "text": "I&#39;m just going to print the first thing--"
    },
    {
      "index": 366,
      "start_time": 984268.0,
      "end_time": 984870.0,
      "text": "muscle memory."
    },
    {
      "index": 367,
      "start_time": 984870.0,
      "end_time": 986430.0,
      "text": "So it&#39;s not printf anymore."
    },
    {
      "index": 368,
      "start_time": 986430.0,
      "end_time": 988729.0,
      "text": "It&#39;s just hello, world."
    },
    {
      "index": 369,
      "start_time": 988730.0,
      "end_time": 990380.0,
      "text": "Save, done."
    },
    {
      "index": 370,
      "start_time": 990380.0,
      "end_time": 992570.0,
      "text": "That&#39;s going to be my first program in Python."
    },
    {
      "index": 371,
      "start_time": 992570.0,
      "end_time": 993700.0,
      "text": "Why?"
    },
    {
      "index": 372,
      "start_time": 993700.0,
      "end_time": 994490.0,
      "text": "It&#39;s one line of code."
    },
    {
      "index": 373,
      "start_time": 994490.0,
      "end_time": 998780.0,
      "text": "It&#39;s consistent with the features I&#39;ve claimed Python has."
    },
    {
      "index": 374,
      "start_time": 998780.0,
      "end_time": 1000370.0,
      "text": "So how do I run it?"
    },
    {
      "index": 375,
      "start_time": 1000370.0,
      "end_time": 1003970.0,
      "text": "Well, in C, we would have done, like, make hello."
    },
    {
      "index": 376,
      "start_time": 1003970.0,
      "end_time": 1007440.0,
      "text": "But make knows nothing about this because make is typically used with C,"
    },
    {
      "index": 377,
      "start_time": 1007440.0,
      "end_time": 1009640.0,
      "text": "at least in this context here."
    },
    {
      "index": 378,
      "start_time": 1009640.0,
      "end_time": 1013990.0,
      "text": "So maybe it&#39;s, like, ./hello.py."
    },
    {
      "index": 379,
      "start_time": 1013990.0,
      "end_time": 1014530.0,
      "text": "No."
    },
    {
      "index": 380,
      "start_time": 1014530.0,
      "end_time": 1016449.0,
      "text": "It seems I don&#39;t have permission there."
    },
    {
      "index": 381,
      "start_time": 1016450.0,
      "end_time": 1020990.0,
      "text": "But there&#39;s a step that I teased us with earlier on just the slide alone."
    },
    {
      "index": 382,
      "start_time": 1020990.0,
      "end_time": 1024212.0,
      "text": "How do I go about running a program, did I say?"
    },
    {
      "index": 383,
      "start_time": 1024210.0,
      "end_time": 1025327.0,
      "text": "AUDIENCE: Python hello.py."
    },
    {
      "index": 384,
      "start_time": 1025329.9999999999,
      "end_time": 1026790.9999999999,
      "text": "DAVID MALAN: Yeah."
    },
    {
      "index": 385,
      "start_time": 1026790.0,
      "end_time": 1027578.0,
      "text": "I have to be a little more explicit."
    },
    {
      "index": 386,
      "start_time": 1027579.9999999999,
      "end_time": 1030761.9999999999,
      "text": "So python, which is the name of the interpreter that understands Python."
    },
    {
      "index": 387,
      "start_time": 1030760.0,
      "end_time": 1032348.0,
      "text": "And now I need to feed it some input."
    },
    {
      "index": 388,
      "start_time": 1032349.9999999999,
      "end_time": 1034526.9999999999,
      "text": "And we know from our time in C that programs"
    },
    {
      "index": 389,
      "start_time": 1034530.0,
      "end_time": 1035863.0,
      "text": "can take command-line arguments."
    },
    {
      "index": 390,
      "start_time": 1035859.9999999999,
      "end_time": 1037751.9999999999,
      "text": "And indeed, this program itself does, Python."
    },
    {
      "index": 391,
      "start_time": 1037750.0,
      "end_time": 1040150.0,
      "text": "You just give it the name of a program to run."
    },
    {
      "index": 392,
      "start_time": 1040150.0000000001,
      "end_time": 1043329.0000000001,
      "text": "And there it is, our very first program."
    },
    {
      "index": 393,
      "start_time": 1043329.9999999999,
      "end_time": 1044754.9999999999,
      "text": "So that&#39;s all fine and good."
    },
    {
      "index": 394,
      "start_time": 1044760.0,
      "end_time": 1047385.0,
      "text": "But what if I wanted to do something a little more interesting,"
    },
    {
      "index": 395,
      "start_time": 1047380.0000000001,
      "end_time": 1049340.0,
      "text": "like getting a string from the user?"
    },
    {
      "index": 396,
      "start_time": 1049340.0,
      "end_time": 1052810.0,
      "text": "Well, turns out in Python, in CS50 IDE especially,"
    },
    {
      "index": 397,
      "start_time": 1052810.0,
      "end_time": 1058370.0,
      "text": "I can do something like this. s gets get_string."
    },
    {
      "index": 398,
      "start_time": 1058370.0,
      "end_time": 1061840.0,
      "text": "And I can ask someone, for instance, for their name, like this."
    },
    {
      "index": 399,
      "start_time": 1061840.0,
      "end_time": 1064330.0,
      "text": "Now, CS50 IDE is already yelling at me--"
    },
    {
      "index": 400,
      "start_time": 1064330.0,
      "end_time": 1066850.0,
      "text": "undefined variable get_string."
    },
    {
      "index": 401,
      "start_time": 1066850.0,
      "end_time": 1070310.0,
      "text": "and let&#39;s actually see if maybe it&#39;s just buggy."
    },
    {
      "index": 402,
      "start_time": 1070310.0,
      "end_time": 1070810.0,
      "text": "No."
    },
    {
      "index": 403,
      "start_time": 1070810.0,
      "end_time": 1073710.0,
      "text": "So this is a little more arcane than usual."
    },
    {
      "index": 404,
      "start_time": 1073710.0,
      "end_time": 1076600.0,
      "text": "But traceback, most recent call last."
    },
    {
      "index": 405,
      "start_time": 1076600.0,
      "end_time": 1079510.0,
      "text": "File \"hello.py,\" line 2, in module-- whatever that is."
    },
    {
      "index": 406,
      "start_time": 1079510.0,
      "end_time": 1081160.0,
      "text": "So I see a line of code from line 2."
    },
    {
      "index": 407,
      "start_time": 1081160.0,
      "end_time": 1083530.0,
      "text": "NameError-- name get_string is not defined."
    },
    {
      "index": 408,
      "start_time": 1083530.0,
      "end_time": 1086240.0,
      "text": "This is not the same language we&#39;ve seen before,"
    },
    {
      "index": 409,
      "start_time": 1086240.0,
      "end_time": 1089810.0,
      "text": "but what does this feel reminiscent of?"
    },
    {
      "index": 410,
      "start_time": 1089810.0,
      "end_time": 1093800.0,
      "text": "Yeah, like in the past, when you&#39;ve forgotten cs50.h,"
    },
    {
      "index": 411,
      "start_time": 1093800.0,
      "end_time": 1096271.0,
      "text": "you&#39;ve gotten something about an undeclared identifier, something"
    },
    {
      "index": 412,
      "start_time": 1096270.0,
      "end_time": 1096769.0,
      "text": "like that."
    },
    {
      "index": 413,
      "start_time": 1096770.0,
      "end_time": 1100190.0,
      "text": "It just didn&#39;t understand something related to the CS50 library."
    },
    {
      "index": 414,
      "start_time": 1100190.0,
      "end_time": 1103790.0,
      "text": "So in C, we would have done include cs50.h."
    },
    {
      "index": 415,
      "start_time": 1103790.0,
      "end_time": 1106370.0,
      "text": "That&#39;s no longer germane because now we&#39;re in Python."
    },
    {
      "index": 416,
      "start_time": 1106370.0,
      "end_time": 1108800.0,
      "text": "But it&#39;s somewhat similar in spirit."
    },
    {
      "index": 417,
      "start_time": 1108800.0,
      "end_time": 1115129.0,
      "text": "Now I&#39;m going to say instead from cs50 import get_string, and now save that."
    },
    {
      "index": 418,
      "start_time": 1115130.0,
      "end_time": 1118650.0,
      "text": "And hopefully momentarily, the errors will go away as the IDE realizes,"
    },
    {
      "index": 419,
      "start_time": 1118650.0,
      "end_time": 1121340.0,
      "text": "oh, you&#39;ve now imported the CS50 library,"
    },
    {
      "index": 420,
      "start_time": 1121340.0,
      "end_time": 1124874.0,
      "text": "specifically a method or function, rather, inside of it called get_string."
    },
    {
      "index": 421,
      "start_time": 1124870.0,
      "end_time": 1127396.0,
      "text": "So there, too, it&#39;s different syntax, but it kind of"
    },
    {
      "index": 422,
      "start_time": 1127400.0,
      "end_time": 1129710.0,
      "text": "says what it means-- from cs50, which is apparently the name of the library,"
    },
    {
      "index": 423,
      "start_time": 1129710.0,
      "end_time": 1131660.0,
      "text": "import a function called get_string."
    },
    {
      "index": 424,
      "start_time": 1131660.0,
      "end_time": 1134810.0,
      "text": "Now if I go ahead and rerun python hello.py,"
    },
    {
      "index": 425,
      "start_time": 1134810.0,
      "end_time": 1137129.0,
      "text": "I can go ahead and type in, say, Maria&#39;s name"
    },
    {
      "index": 426,
      "start_time": 1137130.0,
      "end_time": 1141590.0,
      "text": "and ignore her altogether because I need to make a fix here."
    },
    {
      "index": 427,
      "start_time": 1141590.0,
      "end_time": 1143120.0,
      "text": "What&#39;s the obvious bug--"
    },
    {
      "index": 428,
      "start_time": 1143120.0,
      "end_time": 1145745.0,
      "text": "obvious now, to me-- in the program?"
    },
    {
      "index": 429,
      "start_time": 1145750.0,
      "end_time": 1148204.0,
      "text": "AUDIENCE: You need to include the variable for s."
    },
    {
      "index": 430,
      "start_time": 1148200.0,
      "end_time": 1148950.0,
      "text": "DAVID MALAN: Yeah."
    },
    {
      "index": 431,
      "start_time": 1148950.0,
      "end_time": 1152670.0,
      "text": "So I need to include s, which I got on line 3,"
    },
    {
      "index": 432,
      "start_time": 1152670.0,
      "end_time": 1155140.0,
      "text": "but didn&#39;t thereafter use in any way."
    },
    {
      "index": 433,
      "start_time": 1155140.0,
      "end_time": 1158730.0,
      "text": "So this is going to be wrong, of course, because that&#39;s going to say,"
    },
    {
      "index": 434,
      "start_time": 1158730.0,
      "end_time": 1160290.0,
      "text": "literally, hello s."
    },
    {
      "index": 435,
      "start_time": 1160290.0,
      "end_time": 1162946.0,
      "text": "This is kind of how we used to do it."
    },
    {
      "index": 436,
      "start_time": 1162950.0,
      "end_time": 1164704.0,
      "text": "And then we would put in s."
    },
    {
      "index": 437,
      "start_time": 1164700.0,
      "end_time": 1165270.0,
      "text": "But this is not printf."
    },
    {
      "index": 438,
      "start_time": 1165270.0,
      "end_time": 1165940.0,
      "text": "This is print."
    },
    {
      "index": 439,
      "start_time": 1165940.0,
      "end_time": 1167400.0,
      "text": "So the world is a little different."
    },
    {
      "index": 440,
      "start_time": 1167400.0,
      "end_time": 1170280.0,
      "text": "And it turns out we can do this in a couple of different ways."
    },
    {
      "index": 441,
      "start_time": 1170280.0,
      "end_time": 1174120.0,
      "text": "Perhaps the easiest, if least obvious, would"
    },
    {
      "index": 442,
      "start_time": 1174120.0,
      "end_time": 1181110.0,
      "text": "be something like this, where I could simply say hello,"
    },
    {
      "index": 443,
      "start_time": 1181110.0,
      "end_time": 1184200.0,
      "text": "open curly brace, close curly brace."
    },
    {
      "index": 444,
      "start_time": 1184200.0,
      "end_time": 1187230.0,
      "text": "And then inside of there, simply specify the name of the variable"
    },
    {
      "index": 445,
      "start_time": 1187230.0,
      "end_time": 1188370.0,
      "text": "that I want to plug in."
    },
    {
      "index": 446,
      "start_time": 1188370.0,
      "end_time": 1190169.0,
      "text": "And that&#39;s not quite all the way there."
    },
    {
      "index": 447,
      "start_time": 1190170.0,
      "end_time": 1192520.0,
      "text": "Let me go ahead and run this once more."
    },
    {
      "index": 448,
      "start_time": 1192520.0,
      "end_time": 1194460.0,
      "text": "Now if I type in Maria&#39;s name, oh."
    },
    {
      "index": 449,
      "start_time": 1194460.0,
      "end_time": 1195960.0,
      "text": "Still not quite right."
    },
    {
      "index": 450,
      "start_time": 1195960.0,
      "end_time": 1199560.0,
      "text": "I need to actually tell Python that this is a special type of string."
    },
    {
      "index": 451,
      "start_time": 1199560.0,
      "end_time": 1203250.0,
      "text": "It&#39;s a formatted string, similar in spirit to what printf expected."
    },
    {
      "index": 452,
      "start_time": 1203250.0,
      "end_time": 1206160.0,
      "text": "And the way you do this, even though it&#39;s a little different from C,"
    },
    {
      "index": 453,
      "start_time": 1206160.0,
      "end_time": 1207930.0,
      "text": "is you just say f."
    },
    {
      "index": 454,
      "start_time": 1207930.0,
      "end_time": 1208830.0,
      "text": "This is an f string."
    },
    {
      "index": 455,
      "start_time": 1208830.0,
      "end_time": 1211710.0,
      "text": "So literally before the quotes, you write the letter f."
    },
    {
      "index": 456,
      "start_time": 1211710.0,
      "end_time": 1214230.0,
      "text": "And then if I now run this program here, i&#39;m"
    },
    {
      "index": 457,
      "start_time": 1214230.0,
      "end_time": 1218130.0,
      "text": "going to actually see Maria&#39;s name as hello, Maria."
    },
    {
      "index": 458,
      "start_time": 1218130.0,
      "end_time": 1219807.0,
      "text": "And I&#39;ll take care of that red X later."
    },
    {
      "index": 459,
      "start_time": 1219810.0,
      "end_time": 1220893.0,
      "text": "So that&#39;s a format string."
    },
    {
      "index": 460,
      "start_time": 1220890.0,
      "end_time": 1221973.0,
      "text": "And there&#39;s one other way."
    },
    {
      "index": 461,
      "start_time": 1221970.0,
      "end_time": 1226497.0,
      "text": "And this is not very obvious, I would say."
    },
    {
      "index": 462,
      "start_time": 1226500.0,
      "end_time": 1229419.0,
      "text": "You might also see in online documentation something like this."
    },
    {
      "index": 463,
      "start_time": 1229420.0,
      "end_time": 1231630.0,
      "text": "And let&#39;s just tease this apart for just a second."
    },
    {
      "index": 464,
      "start_time": 1231630.0,
      "end_time": 1234270.0,
      "text": "It turns out in Python that what I&#39;ve highlighted in green"
    },
    {
      "index": 465,
      "start_time": 1234270.0,
      "end_time": 1237750.0,
      "text": "here is known as a string, otherwise known as a str."
    },
    {
      "index": 466,
      "start_time": 1237750.0,
      "end_time": 1240300.0,
      "text": "str is the name of this data type."
    },
    {
      "index": 467,
      "start_time": 1240300.0,
      "end_time": 1244350.0,
      "text": "Well, unlike in C, where string was kind of a white lie, where it was just"
    },
    {
      "index": 468,
      "start_time": 1244350.0,
      "end_time": 1246810.0,
      "text": "a pointer at the end of the day, a string"
    },
    {
      "index": 469,
      "start_time": 1246810.0,
      "end_time": 1250320.0,
      "text": "is actually a first-class object in Python, which means"
    },
    {
      "index": 470,
      "start_time": 1250320.0,
      "end_time": 1252419.0,
      "text": "it&#39;s not just a sequence of characters."
    },
    {
      "index": 471,
      "start_time": 1252420.0,
      "end_time": 1256170.0,
      "text": "It has built-in functionality, built-in features."
    },
    {
      "index": 472,
      "start_time": 1256170.0,
      "end_time": 1260190.0,
      "text": "So much like a struct in C had multiple things inside of it,"
    },
    {
      "index": 473,
      "start_time": 1260190.0,
      "end_time": 1264270.0,
      "text": "so does a string in Python have multiple things inside of it,"
    },
    {
      "index": 474,
      "start_time": 1264270.0,
      "end_time": 1269350.0,
      "text": "not just the sequence of characters, but functions that can actually do things."
    },
    {
      "index": 475,
      "start_time": 1269350.0,
      "end_time": 1272550.0,
      "text": "And it turns out you access those functions by way of the same dot"
    },
    {
      "index": 476,
      "start_time": 1272550.0,
      "end_time": 1274919.0,
      "text": "operator as in C. And then you would only"
    },
    {
      "index": 477,
      "start_time": 1274920.0,
      "end_time": 1278670.0,
      "text": "know from the documentation or examples in class what functions are inside"
    },
    {
      "index": 478,
      "start_time": 1278670.0,
      "end_time": 1279810.0,
      "text": "of the string object."
    },
    {
      "index": 479,
      "start_time": 1279810.0,
      "end_time": 1281340.0,
      "text": "But one of them is format."
    },
    {
      "index": 480,
      "start_time": 1281340.0,
      "end_time": 1283673.0,
      "text": "And that&#39;s just a function that takes an argument-- what"
    },
    {
      "index": 481,
      "start_time": 1283670.0,
      "end_time": 1286257.0,
      "text": "do you want to plug into the string to the left of the dot?"
    },
    {
      "index": 482,
      "start_time": 1286260.0,
      "end_time": 1289500.0,
      "text": "And so simply by specifying, hey, Python,"
    },
    {
      "index": 483,
      "start_time": 1289500.0,
      "end_time": 1292800.0,
      "text": "here&#39;s a string with a placeholder."
    },
    {
      "index": 484,
      "start_time": 1292800.0,
      "end_time": 1296100.0,
      "text": "Inside of this string is a built-in function-- otherwise known"
    },
    {
      "index": 485,
      "start_time": 1296100.0,
      "end_time": 1299379.0,
      "text": "as a method, when a function is inside some object or structure--"
    },
    {
      "index": 486,
      "start_time": 1299380.0,
      "end_time": 1301200.0,
      "text": "pass in the value s."
    },
    {
      "index": 487,
      "start_time": 1301200.0,
      "end_time": 1305580.0,
      "text": "So if I now go ahead and rerun this after saving my changes,"
    },
    {
      "index": 488,
      "start_time": 1305580.0,
      "end_time": 1309478.0,
      "text": "I should now see that Maria&#39;s name is still plugged in."
    },
    {
      "index": 489,
      "start_time": 1309480.0,
      "end_time": 1310201.0,
      "text": "So that&#39;s it."
    },
    {
      "index": 490,
      "start_time": 1310200.0,
      "end_time": 1313200.0,
      "text": "But a simple idea that now even strings have"
    },
    {
      "index": 491,
      "start_time": 1313200.0,
      "end_time": 1315180.0,
      "text": "things inside of them besides the characters alone,"
    },
    {
      "index": 492,
      "start_time": 1315180.0,
      "end_time": 1317310.0,
      "text": "and you can access that via the dots."
    },
    {
      "index": 493,
      "start_time": 1317310.0,
      "end_time": 1321399.0,
      "text": "So let&#39;s go ahead now and ramp things up to a more familiar example from a while"
    },
    {
      "index": 494,
      "start_time": 1321400.0,
      "end_time": 1321900.0,
      "text": "back."
    },
    {
      "index": 495,
      "start_time": 1321900.0,
      "end_time": 1325140.0,
      "text": "Let me go ahead and open up two side-by-side windows"
    },
    {
      "index": 496,
      "start_time": 1325140.0,
      "end_time": 1327370.0,
      "text": "and see if we can&#39;t translate one to the other."
    },
    {
      "index": 497,
      "start_time": 1327370.0,
      "end_time": 1332729.0,
      "text": "I&#39;m going to go ahead and open up, for instance, int.c from some time ago."
    },
    {
      "index": 498,
      "start_time": 1332730.0,
      "end_time": 1337200.0,
      "text": "So you might recall from int.c, we had this program, whose purpose in life"
    },
    {
      "index": 499,
      "start_time": 1337200.0,
      "end_time": 1340950.0,
      "text": "was to get an integer from the user and actually now plug it into printf,"
    },
    {
      "index": 500,
      "start_time": 1340950.0,
      "end_time": 1342900.0,
      "text": "and then print it out."
    },
    {
      "index": 501,
      "start_time": 1342900.0,
      "end_time": 1344790.0,
      "text": "So what&#39;s going to be different now in Python?"
    },
    {
      "index": 502,
      "start_time": 1344790.0,
      "end_time": 1348960.0,
      "text": "Well in Python, if I go ahead and implement this as, say, int.py,"
    },
    {
      "index": 503,
      "start_time": 1348960.0,
      "end_time": 1351250.0,
      "text": "I&#39;m going to go ahead and do the following."
    },
    {
      "index": 504,
      "start_time": 1351250.0,
      "end_time": 1353820.0,
      "text": "Let me scroll down to kind of line things up roughly."
    },
    {
      "index": 505,
      "start_time": 1353820.0,
      "end_time": 1359520.0,
      "text": "I can go ahead and say def main, as I saw in the slides before."
    },
    {
      "index": 506,
      "start_time": 1359520.0,
      "end_time": 1364770.0,
      "text": "And then over here, I can say i gets get_int, quote, unquote, integer."
    },
    {
      "index": 507,
      "start_time": 1364770.0,
      "end_time": 1368920.0,
      "text": "And then down here, I&#39;m going to say not printf but print, quote, unquote,"
    },
    {
      "index": 508,
      "start_time": 1368920.0,
      "end_time": 1372400.0,
      "text": "\"hello,\" and then the placeholder."
    },
    {
      "index": 509,
      "start_time": 1372400.0,
      "end_time": 1376200.0,
      "text": "What&#39;s the simplest way to do this now, per our past example?"
    },
    {
      "index": 510,
      "start_time": 1376200.0,
      "end_time": 1378810.0,
      "text": "Curly brace i."
    },
    {
      "index": 511,
      "start_time": 1378810.0,
      "end_time": 1382560.0,
      "text": "And then I just need to be super clear this is a special f string or format"
    },
    {
      "index": 512,
      "start_time": 1382560.0,
      "end_time": 1384419.0,
      "text": "string, into which you can plug in values."
    },
    {
      "index": 513,
      "start_time": 1384420.0,
      "end_time": 1386490.0,
      "text": "And now I&#39;m going to go ahead and save that."
    },
    {
      "index": 514,
      "start_time": 1386490.0,
      "end_time": 1388950.0,
      "text": "And I&#39;ve got most of the pieces together,"
    },
    {
      "index": 515,
      "start_time": 1388950.0,
      "end_time": 1393840.0,
      "text": "ignoring, for now, the red X. So what more remains to be done?"
    },
    {
      "index": 516,
      "start_time": 1393840.0,
      "end_time": 1397510.0,
      "text": "I&#39;ve made one same mistake as before."
    },
    {
      "index": 517,
      "start_time": 1397510.0,
      "end_time": 1401250.0,
      "text": "Yeah, so the get_int. so up here, really the equivalent of line 3"
    },
    {
      "index": 518,
      "start_time": 1401250.0,
      "end_time": 1406440.0,
      "text": "would be from cs50 import get_int this time."
    },
    {
      "index": 519,
      "start_time": 1406440.0,
      "end_time": 1407160.0,
      "text": "Saving that."
    },
    {
      "index": 520,
      "start_time": 1407160.0,
      "end_time": 1412977.0,
      "text": "And now if in my terminal window I go ahead and run python of int.py--"
    },
    {
      "index": 521,
      "start_time": 1412980.0,
      "end_time": 1415723.0,
      "text": "hmm."
    },
    {
      "index": 522,
      "start_time": 1415720.0,
      "end_time": 1418960.0,
      "text": "That seems strange."
    },
    {
      "index": 523,
      "start_time": 1418960.0,
      "end_time": 1422200.0,
      "text": "It&#39;s not an error, in terms of, like, erroneous output."
    },
    {
      "index": 524,
      "start_time": 1422200.0,
      "end_time": 1423620.0,
      "text": "Just nothing happened."
    },
    {
      "index": 525,
      "start_time": 1423620.0,
      "end_time": 1427109.0,
      "text": "So why might this be?"
    },
    {
      "index": 526,
      "start_time": 1427110.0,
      "end_time": 1430150.0,
      "text": "How might you go about troubleshooting this, even with very little Python"
    },
    {
      "index": 527,
      "start_time": 1430150.0,
      "end_time": 1432300.0,
      "text": "under your belt?"
    },
    {
      "index": 528,
      "start_time": 1432300.0,
      "end_time": 1433470.0,
      "text": "Was that a hand, or no?"
    },
    {
      "index": 529,
      "start_time": 1433470.0,
      "end_time": 1434130.0,
      "text": "No?"
    },
    {
      "index": 530,
      "start_time": 1434130.0,
      "end_time": 1435210.0,
      "text": "OK."
    },
    {
      "index": 531,
      "start_time": 1435210.0,
      "end_time": 1435790.0,
      "text": "Yeah?"
    },
    {
      "index": 532,
      "start_time": 1435790.0,
      "end_time": 1437272.0,
      "text": "AUDIENCE: Is there a line break?"
    },
    {
      "index": 533,
      "start_time": 1437270.0,
      "end_time": 1438728.0,
      "text": "DAVID MALAN: Is there a line break?"
    },
    {
      "index": 534,
      "start_time": 1438730.0,
      "end_time": 1439450.0,
      "text": "That&#39;s OK."
    },
    {
      "index": 535,
      "start_time": 1439450.0,
      "end_time": 1441520.0,
      "text": "I was just doing that to kind of make everything line up."
    },
    {
      "index": 536,
      "start_time": 1441520.0,
      "end_time": 1442395.0,
      "text": "But it&#39;s no big deal."
    },
    {
      "index": 537,
      "start_time": 1442400.0,
      "end_time": 1446115.0,
      "text": "Everything&#39;s indented properly, which is the important aesthetic."
    },
    {
      "index": 538,
      "start_time": 1446110.0,
      "end_time": 1446806.0,
      "text": "Yeah."
    },
    {
      "index": 539,
      "start_time": 1446810.0,
      "end_time": 1448393.0,
      "text": "AUDIENCE: We didn&#39;t call the function."
    },
    {
      "index": 540,
      "start_time": 1448390.0,
      "end_time": 1449590.0,
      "text": "DAVID MALAN: We didn&#39;t call the function."
    },
    {
      "index": 541,
      "start_time": 1449590.0,
      "end_time": 1452590.0,
      "text": "And this is where Python&#39;s a little different from C. In C, recall,"
    },
    {
      "index": 542,
      "start_time": 1452590.0,
      "end_time": 1454540.0,
      "text": "main just gets called automatically for you."
    },
    {
      "index": 543,
      "start_time": 1454540.0,
      "end_time": 1457629.0,
      "text": "Humans years ago decided that shall be the default name of a function."
    },
    {
      "index": 544,
      "start_time": 1457630.0,
      "end_time": 1461410.0,
      "text": "In Python, line 6 here, calling something main is just a convention."
    },
    {
      "index": 545,
      "start_time": 1461410.0,
      "end_time": 1464260.0,
      "text": "I could have called it foo or bar or any other word."
    },
    {
      "index": 546,
      "start_time": 1464260.0,
      "end_time": 1465760.0,
      "text": "It has no special meaning."
    },
    {
      "index": 547,
      "start_time": 1465760.0,
      "end_time": 1468100.0,
      "text": "And so in Python, if you want to actually call main,"
    },
    {
      "index": 548,
      "start_time": 1468100.0,
      "end_time": 1469760.0,
      "text": "you need to do something, frankly, that&#39;s,"
    },
    {
      "index": 549,
      "start_time": 1469760.0,
      "end_time": 1472720.0,
      "text": "I think, one of the stupider distractions early on."
    },
    {
      "index": 550,
      "start_time": 1472720.0,
      "end_time": 1474340.0,
      "text": "But you have to literally say this--"
    },
    {
      "index": 551,
      "start_time": 1474340.0,
      "end_time": 1480270.0,
      "text": "if the name of this file happens to equal something that&#39;s"
    },
    {
      "index": 552,
      "start_time": 1480270.0,
      "end_time": 1483639.0,
      "text": "specially called main, then call main."
    },
    {
      "index": 553,
      "start_time": 1483640.0,
      "end_time": 1487750.0,
      "text": "So long story short, when you run the Python interpreter on a file,"
    },
    {
      "index": 554,
      "start_time": 1487750.0,
      "end_time": 1492610.0,
      "text": "as we&#39;ve been doing with python, space, int.py or hello.py,"
    },
    {
      "index": 555,
      "start_time": 1492610.0,
      "end_time": 1497320.0,
      "text": "there is a special global variable that your program has access to called"
    },
    {
      "index": 556,
      "start_time": 1497320.0,
      "end_time": 1500290.0,
      "text": "__name__."
    },
    {
      "index": 557,
      "start_time": 1500290.0,
      "end_time": 1504730.0,
      "text": "And if that default name happens to be __main__,"
    },
    {
      "index": 558,
      "start_time": 1504730.0,
      "end_time": 1510860.0,
      "text": "then you know that you have the ability to call any function you want"
    },
    {
      "index": 559,
      "start_time": 1510860.0,
      "end_time": 1511699.0,
      "text": "by default."
    },
    {
      "index": 560,
      "start_time": 1511700.0,
      "end_time": 1513850.0,
      "text": "So for now, much like we did in week one,"
    },
    {
      "index": 561,
      "start_time": 1513850.0,
      "end_time": 1517290.0,
      "text": "where we glossed over certain details that just weren&#39;t all that interesting,"
    },
    {
      "index": 562,
      "start_time": 1517290.0,
      "end_time": 1520510.0,
      "text": "lines 11 and 12, for now, let&#39;s consider not all that interesting."
    },
    {
      "index": 563,
      "start_time": 1520510.0,
      "end_time": 1522970.0,
      "text": "But it&#39;s how we&#39;re going to kick-start these programs."
    },
    {
      "index": 564,
      "start_time": 1522970.0,
      "end_time": 1527800.0,
      "text": "Because now if I run python, space, int.py, type in a great number--"
    },
    {
      "index": 565,
      "start_time": 1527800.0,
      "end_time": 1530400.0,
      "text": "hello, 42."
    },
    {
      "index": 566,
      "start_time": 1530500.0,
      "end_time": 1532870.0,
      "text": "That&#39;s the meaning of life, the universe, and everything."
    },
    {
      "index": 567,
      "start_time": 1532870.0,
      "end_time": 1535495.0,
      "text": "So let&#39;s now actually do something more powerful"
    },
    {
      "index": 568,
      "start_time": 1535490.0,
      "end_time": 1537365.0,
      "text": "than just getting a single int from the user."
    },
    {
      "index": 569,
      "start_time": 1537370.0,
      "end_time": 1540610.0,
      "text": "Let me go ahead and close off this one and close off this one"
    },
    {
      "index": 570,
      "start_time": 1540610.0,
      "end_time": 1547429.0,
      "text": "and open up, say, ints.c after splitting my window again into two windows here."
    },
    {
      "index": 571,
      "start_time": 1547430.0,
      "end_time": 1548950.0,
      "text": "And let&#39;s open ints.c."
    },
    {
      "index": 572,
      "start_time": 1548950.0,
      "end_time": 1553720.0,
      "text": "So this one was a little different in that we did some arithmetic."
    },
    {
      "index": 573,
      "start_time": 1553720.0,
      "end_time": 1557260.0,
      "text": "And so here is going to be another difference in Python."
    },
    {
      "index": 574,
      "start_time": 1557260.0,
      "end_time": 1560410.0,
      "text": "Here&#39;s what we did in C. And what was curious or worth"
    },
    {
      "index": 575,
      "start_time": 1560410.0,
      "end_time": 1563747.0,
      "text": "noting about math in C?"
    },
    {
      "index": 576,
      "start_time": 1563750.0,
      "end_time": 1566833.0,
      "text": "Which of these did not quite behave as you might expect in the real world?"
    },
    {
      "index": 577,
      "start_time": 1570300.0,
      "end_time": 1570830.0,
      "text": "Division?"
    },
    {
      "index": 578,
      "start_time": 1570830.0,
      "end_time": 1571330.0,
      "text": "Yeah, why?"
    },
    {
      "index": 579,
      "start_time": 1571330.0,
      "end_time": 1574465.0,
      "text": "What did division do?"
    },
    {
      "index": 580,
      "start_time": 1574460.0,
      "end_time": 1576384.0,
      "text": "Yeah, it chopped off or rounded down."
    },
    {
      "index": 581,
      "start_time": 1576390.0,
      "end_time": 1579910.0,
      "text": "It floored the value by throwing away everything after the decimal point."
    },
    {
      "index": 582,
      "start_time": 1579910.0,
      "end_time": 1583410.0,
      "text": "So this line here, 18, where it&#39;s such-and-such divided by such-and-such"
    },
    {
      "index": 583,
      "start_time": 1583410.0,
      "end_time": 1584680.0,
      "text": "is such-and-such."
    },
    {
      "index": 584,
      "start_time": 1584680.0,
      "end_time": 1587400.0,
      "text": "And we literally just said x divided by y."
    },
    {
      "index": 585,
      "start_time": 1587400.0,
      "end_time": 1591180.0,
      "text": "If you divided, for instance, 1 divided by 2 in grade school, hopefully,"
    },
    {
      "index": 586,
      "start_time": 1591180.0,
      "end_time": 1594120.0,
      "text": "you would get the value 1/2 or 0.5."
    },
    {
      "index": 587,
      "start_time": 1594120.0,
      "end_time": 1595620.0,
      "text": "But in C, what did we get instead?"
    },
    {
      "index": 588,
      "start_time": 1595620.0,
      "end_time": 1596370.0,
      "text": "AUDIENCE: Zero."
    },
    {
      "index": 589,
      "start_time": 1596370.0,
      "end_time": 1597120.0,
      "text": "DAVID MALAN: Zero."
    },
    {
      "index": 590,
      "start_time": 1597120.0,
      "end_time": 1600290.0,
      "text": "So it gets truncated to an int, the closest int"
    },
    {
      "index": 591,
      "start_time": 1600290.0,
      "end_time": 1603990.0,
      "text": "without a decimal point being 0 because 0.5 is really 0.5."
    },
    {
      "index": 592,
      "start_time": 1603990.0,
      "end_time": 1605760.0,
      "text": "And thus we had that effect."
    },
    {
      "index": 593,
      "start_time": 1605760.0,
      "end_time": 1608950.0,
      "text": "So in Python, things are going to be similar in spirit."
    },
    {
      "index": 594,
      "start_time": 1608950.0,
      "end_time": 1613800.0,
      "text": "But this is kind of a feature that was fixed or a bug that was fixed."
    },
    {
      "index": 595,
      "start_time": 1613800.0,
      "end_time": 1616919.0,
      "text": "In Python-- let me go ahead here and open up an example"
    },
    {
      "index": 596,
      "start_time": 1616920.0,
      "end_time": 1621000.0,
      "text": "I wrote in advance called ints.py, which is actually"
    },
    {
      "index": 597,
      "start_time": 1621000.0,
      "end_time": 1622810.0,
      "text": "now going to look like this."
    },
    {
      "index": 598,
      "start_time": 1622810.0,
      "end_time": 1627330.0,
      "text": "So the Python equivalent now, which I&#39;ve roughly line up,"
    },
    {
      "index": 599,
      "start_time": 1627330.0,
      "end_time": 1628809.0,
      "text": "looks a little different."
    },
    {
      "index": 600,
      "start_time": 1628810.0,
      "end_time": 1631601.0,
      "text": "And there&#39;s a few distractions because we have all these f strings."
    },
    {
      "index": 601,
      "start_time": 1631600.0,
      "end_time": 1632639.0,
      "text": "Now in the way."
    },
    {
      "index": 602,
      "start_time": 1632640.0,
      "end_time": 1635100.0,
      "text": "But notice I&#39;m just plugging in x&#39;s and y&#39;s."
    },
    {
      "index": 603,
      "start_time": 1635100.0,
      "end_time": 1639580.0,
      "text": "But what&#39;s a new feature, apparently, in Python, arithmetically?"
    },
    {
      "index": 604,
      "start_time": 1639580.0,
      "end_time": 1640939.0,
      "text": "So floor division."
    },
    {
      "index": 605,
      "start_time": 1640940.0,
      "end_time": 1644500.0,
      "text": "So this was the more proper term for what C has been doing all this time."
    },
    {
      "index": 606,
      "start_time": 1644500.0,
      "end_time": 1649180.0,
      "text": "In C, when you use use the slash and you divide one number by another,"
    },
    {
      "index": 607,
      "start_time": 1649180.0,
      "end_time": 1652210.0,
      "text": "it divides, and then floors it to the nearest int."
    },
    {
      "index": 608,
      "start_time": 1652210.0,
      "end_time": 1654910.0,
      "text": "In Python, if you want that same old-school feature,"
    },
    {
      "index": 609,
      "start_time": 1654910.0,
      "end_time": 1658280.0,
      "text": "you&#39;re going to now use slash slash, not to be confused with the C comment."
    },
    {
      "index": 610,
      "start_time": 1658280.0,
      "end_time": 1662570.0,
      "text": "And if you want division to work the way you always knew it did in grade school,"
    },
    {
      "index": 611,
      "start_time": 1662570.0,
      "end_time": 1664659.0,
      "text": "you continue using just the slash."
    },
    {
      "index": 612,
      "start_time": 1664660.0,
      "end_time": 1667520.0,
      "text": "So a minor point, but one of the differences to keep in mind."
    },
    {
      "index": 613,
      "start_time": 1667520.0,
      "end_time": 1671920.0,
      "text": "So if we actually run this here in Python, if I go into source 8 today"
    },
    {
      "index": 614,
      "start_time": 1671920.0,
      "end_time": 1677590.0,
      "text": "and our week&#39;s directory for week 1, and I run Python ints.py,"
    },
    {
      "index": 615,
      "start_time": 1677590.0,
      "end_time": 1680230.0,
      "text": "here now we&#39;re going to see 1 and 2."
    },
    {
      "index": 616,
      "start_time": 1680230.0,
      "end_time": 1685240.0,
      "text": "And there&#39;s all of the values that we would expect to see."
    },
    {
      "index": 617,
      "start_time": 1685240.0,
      "end_time": 1685870.0,
      "text": "All right."
    },
    {
      "index": 618,
      "start_time": 1685870.0,
      "end_time": 1690280.0,
      "text": "So without dwelling too much on this, let&#39;s fast forward to something"
    },
    {
      "index": 619,
      "start_time": 1690280.0,
      "end_time": 1692450.0,
      "text": "more powerful like conditions."
    },
    {
      "index": 620,
      "start_time": 1692450.0,
      "end_time": 1695950.0,
      "text": "So in Python, if we want to do something only conditionally,"
    },
    {
      "index": 621,
      "start_time": 1695950.0,
      "end_time": 1701200.0,
      "text": "laying out my browser like this, let me go ahead and open up, let&#39;s say,"
    },
    {
      "index": 622,
      "start_time": 1701200.0,
      "end_time": 1703720.0,
      "text": "conditions.py."
    },
    {
      "index": 623,
      "start_time": 1703720.0,
      "end_time": 1708890.0,
      "text": "Sorry, conditions.c, which once upon a time looked like this."
    },
    {
      "index": 624,
      "start_time": 1708890.0,
      "end_time": 1712900.0,
      "text": "So in this example here, notice that we have"
    },
    {
      "index": 625,
      "start_time": 1712900.0,
      "end_time": 1715510.0,
      "text": "a program that gets two ints from the user,"
    },
    {
      "index": 626,
      "start_time": 1715510.0,
      "end_time": 1718720.0,
      "text": "and then just compares x and y and x and y and prints out"
    },
    {
      "index": 627,
      "start_time": 1718720.0,
      "end_time": 1721840.0,
      "text": "whether they&#39;re greater than, less than, or equal to, ultimately."
    },
    {
      "index": 628,
      "start_time": 1721840.0,
      "end_time": 1724610.0,
      "text": "So let&#39;s actually do this one from scratch over here on the right."
    },
    {
      "index": 629,
      "start_time": 1724610.0,
      "end_time": 1727399.0,
      "text": "So let me go ahead and save this as conditions.py."
    },
    {
      "index": 630,
      "start_time": 1727400.0,
      "end_time": 1729400.0,
      "text": "And then at the top, what&#39;s the very first thing"
    },
    {
      "index": 631,
      "start_time": 1729400.0,
      "end_time": 1732595.0,
      "text": "I&#39;m going to apparently now need?"
    },
    {
      "index": 632,
      "start_time": 1732590.0,
      "end_time": 1734795.0,
      "text": "Yeah, so the CS50 library."
    },
    {
      "index": 633,
      "start_time": 1734800.0,
      "end_time": 1738429.0,
      "text": "So from cs50 import-- it looks like get_int is the one we want this time."
    },
    {
      "index": 634,
      "start_time": 1738430.0,
      "end_time": 1741730.0,
      "text": "Now, how do I go about getting an int?"
    },
    {
      "index": 635,
      "start_time": 1741730.0,
      "end_time": 1744389.0,
      "text": "Or what&#39;s the translation of line 9 on the left"
    },
    {
      "index": 636,
      "start_time": 1744390.0,
      "end_time": 1745930.0,
      "text": "to the right-hand side of the screen?"
    },
    {
      "index": 637,
      "start_time": 1751290.0,
      "end_time": 1754385.0,
      "text": "x equals get_into of the same prompt."
    },
    {
      "index": 638,
      "start_time": 1757000.0,
      "end_time": 1759730.0,
      "text": "OK, what comes next, if I line it up roughly here?"
    },
    {
      "index": 639,
      "start_time": 1759730.0,
      "end_time": 1763600.0,
      "text": "y gets get_int of quote, unquote, y."
    },
    {
      "index": 640,
      "start_time": 1763600.0,
      "end_time": 1766120.0,
      "text": "And what&#39;s down here?"
    },
    {
      "index": 641,
      "start_time": 1766120.0,
      "end_time": 1766870.0,
      "text": "The condition."
    },
    {
      "index": 642,
      "start_time": 1766870.0,
      "end_time": 1770302.0,
      "text": "So if x less than y?"
    },
    {
      "index": 643,
      "start_time": 1770300.0,
      "end_time": 1771508.0,
      "text": "No parentheses are necessary."
    },
    {
      "index": 644,
      "start_time": 1771510.0,
      "end_time": 1773551.0,
      "text": "It&#39;s not wrong to put them, but it&#39;s unnecessary."
    },
    {
      "index": 645,
      "start_time": 1773550.0,
      "end_time": 1776809.0,
      "text": "And now enters a word into our terminology--"
    },
    {
      "index": 646,
      "start_time": 1776810.0,
      "end_time": 1778504.0,
      "text": "it&#39;s not Pythonic, so to speak."
    },
    {
      "index": 647,
      "start_time": 1778510.0,
      "end_time": 1780135.0,
      "text": "If you don&#39;t need them, don&#39;t put them."
    },
    {
      "index": 648,
      "start_time": 1780130.0,
      "end_time": 1782750.0,
      "text": "So if x is indeed less than y, what do we want to do?"
    },
    {
      "index": 649,
      "start_time": 1782750.0,
      "end_time": 1787760.0,
      "text": "We want to print x is less than y, yes?"
    },
    {
      "index": 650,
      "start_time": 1787760.0,
      "end_time": 1788410.0,
      "text": "No."
    },
    {
      "index": 651,
      "start_time": 1788410.0,
      "end_time": 1788944.0,
      "text": "OK."
    },
    {
      "index": 652,
      "start_time": 1788940.0,
      "end_time": 1789606.0,
      "text": "All right, good."
    },
    {
      "index": 653,
      "start_time": 1789610.0,
      "end_time": 1793000.0,
      "text": "So else if x--"
    },
    {
      "index": 654,
      "start_time": 1793000.0,
      "end_time": 1794170.0,
      "text": "OK, good."
    },
    {
      "index": 655,
      "start_time": 1794170.0,
      "end_time": 1794670.0,
      "text": "Right."
    },
    {
      "index": 656,
      "start_time": 1794670.0,
      "end_time": 1802900.0,
      "text": "So, kind of goofily, elif, then go ahead and print out x is greater than y."
    },
    {
      "index": 657,
      "start_time": 1802900.0,
      "end_time": 1805900.0,
      "text": "And as an aside, I actually did that accidentally."
    },
    {
      "index": 658,
      "start_time": 1805900.0,
      "end_time": 1809800.0,
      "text": "But it turns out in Python, too, you can use double quotes or single quotes."
    },
    {
      "index": 659,
      "start_time": 1809800.0,
      "end_time": 1813242.0,
      "text": "Either is fine, whereas in C, single quotes had a very specific meaning,"
    },
    {
      "index": 660,
      "start_time": 1813240.0,
      "end_time": 1813948.0,
      "text": "which meant what?"
    },
    {
      "index": 661,
      "start_time": 1813950.0,
      "end_time": 1814870.0,
      "text": "AUDIENCE: Char."
    },
    {
      "index": 662,
      "start_time": 1814870.0,
      "end_time": 1815620.0,
      "text": "DAVID MALAN: Char."
    },
    {
      "index": 663,
      "start_time": 1815620.0,
      "end_time": 1816969.0,
      "text": "So single characters."
    },
    {
      "index": 664,
      "start_time": 1816970.0,
      "end_time": 1819130.0,
      "text": "And double quotes meant strings, sequence"
    },
    {
      "index": 665,
      "start_time": 1819130.0,
      "end_time": 1823300.0,
      "text": "of characters, which meant zero or more characters, followed by backslash 0."
    },
    {
      "index": 666,
      "start_time": 1823300.0,
      "end_time": 1824746.0,
      "text": "In Python, all of that is gone."
    },
    {
      "index": 667,
      "start_time": 1824750.0,
      "end_time": 1826708.0,
      "text": "Single quotes and double quotes are equivalent."
    },
    {
      "index": 668,
      "start_time": 1826700.0,
      "end_time": 1830134.0,
      "text": "I&#39;ll almost always use double quotes, just for consistency, as should you,"
    },
    {
      "index": 669,
      "start_time": 1830140.0,
      "end_time": 1832810.0,
      "text": "for consistency, within your own files."
    },
    {
      "index": 670,
      "start_time": 1832810.0,
      "end_time": 1836500.0,
      "text": "But sometimes it&#39;s useful to drop into one or the other if you nest,"
    },
    {
      "index": 671,
      "start_time": 1836500.0,
      "end_time": 1839210.0,
      "text": "for instance, quote marks, as you might have once in a while in C"
    },
    {
      "index": 672,
      "start_time": 1839210.0,
      "end_time": 1839710.0,
      "text": "OK."
    },
    {
      "index": 673,
      "start_time": 1839710.0,
      "end_time": 1845140.0,
      "text": "So finally, else print out x is equal to y."
    },
    {
      "index": 674,
      "start_time": 1845140.0,
      "end_time": 1846884.0,
      "text": "So it&#39;s cleaner."
    },
    {
      "index": 675,
      "start_time": 1846880.0,
      "end_time": 1848796.0,
      "text": "And frankly, I don&#39;t need all this whitespace."
    },
    {
      "index": 676,
      "start_time": 1848800.0,
      "end_time": 1851409.0,
      "text": "So let&#39;s go ahead and just make this a little tighter still."
    },
    {
      "index": 677,
      "start_time": 1851410.0,
      "end_time": 1856330.0,
      "text": "You can see that in 11 lines, we&#39;ve now done what took 27 or so last time."
    },
    {
      "index": 678,
      "start_time": 1856330.0,
      "end_time": 1859179.0,
      "text": "But I have omitted something, to be fair."
    },
    {
      "index": 679,
      "start_time": 1859180.0,
      "end_time": 1861149.0,
      "text": "What did I omit?"
    },
    {
      "index": 680,
      "start_time": 1861150.0,
      "end_time": 1863440.0,
      "text": "Yeah, I didn&#39;t do that whole calling of function thing."
    },
    {
      "index": 681,
      "start_time": 1863440.0,
      "end_time": 1864564.0,
      "text": "There&#39;s no mention of main."
    },
    {
      "index": 682,
      "start_time": 1864560.0,
      "end_time": 1867786.0,
      "text": "And it actually turns out that&#39;s not strictly necessary in Python."
    },
    {
      "index": 683,
      "start_time": 1867790.0,
      "end_time": 1871210.0,
      "text": "If you&#39;re going to be interpreting a file that contains Python code,"
    },
    {
      "index": 684,
      "start_time": 1871210.0,
      "end_time": 1875320.0,
      "text": "and it&#39;s a simple enough program that you don&#39;t really need to factor code"
    },
    {
      "index": 685,
      "start_time": 1875320.0,
      "end_time": 1878439.0,
      "text": "out and organize it into separate functions, then don&#39;t."
    },
    {
      "index": 686,
      "start_time": 1878440.0,
      "end_time": 1881290.0,
      "text": "If this is what would now be called a command-line script,"
    },
    {
      "index": 687,
      "start_time": 1881290.0,
      "end_time": 1885250.0,
      "text": "a program that just has lines of code that you can execute, literally,"
    },
    {
      "index": 688,
      "start_time": 1885250.0,
      "end_time": 1885910.0,
      "text": "at the prompt."
    },
    {
      "index": 689,
      "start_time": 1885910.0,
      "end_time": 1890320.0,
      "text": "So if I go into this directory and run python of conditions.py, Enter."
    },
    {
      "index": 690,
      "start_time": 1890320.0,
      "end_time": 1892240.0,
      "text": "x will be 1. y will be 2."
    },
    {
      "index": 691,
      "start_time": 1892240.0,
      "end_time": 1893560.0,
      "text": "x is indeed less than y."
    },
    {
      "index": 692,
      "start_time": 1893560.0,
      "end_time": 1894340.0,
      "text": "And that&#39;s it."
    },
    {
      "index": 693,
      "start_time": 1894340.0,
      "end_time": 1898449.0,
      "text": "I don&#39;t need to bother doing all of this, as I proposed earlier."
    },
    {
      "index": 694,
      "start_time": 1898450.0,
      "end_time": 1901304.0,
      "text": "def main, and then I could go in here."
    },
    {
      "index": 695,
      "start_time": 1901300.0,
      "end_time": 1903466.0,
      "text": "And if you&#39;ve never known this, and now it&#39;s useful,"
    },
    {
      "index": 696,
      "start_time": 1903470.0,
      "end_time": 1905803.0,
      "text": "especially, for Python, you can highlight lines and just"
    },
    {
      "index": 697,
      "start_time": 1905800.0,
      "end_time": 1906877.0,
      "text": "tab them all at once."
    },
    {
      "index": 698,
      "start_time": 1906880.0,
      "end_time": 1909760.0,
      "text": "I could do this, but then I would need this thing, which I&#39;d probably"
    },
    {
      "index": 699,
      "start_time": 1909760.0,
      "end_time": 1913990.0,
      "text": "have to go look up how to remember it, if you&#39;re doing it for the first time."
    },
    {
      "index": 700,
      "start_time": 1913990.0,
      "end_time": 1917230.0,
      "text": "There&#39;s just no value in this case to doing that."
    },
    {
      "index": 701,
      "start_time": 1917230.0,
      "end_time": 1920685.0,
      "text": "But at least it can be there as needed."
    },
    {
      "index": 702,
      "start_time": 1920690.0,
      "end_time": 1922605.0,
      "text": "So let me go ahead and undo that."
    },
    {
      "index": 703,
      "start_time": 1922600.0,
      "end_time": 1924830.0,
      "text": "And we&#39;re back to a porting of one to the other."
    },
    {
      "index": 704,
      "start_time": 1924830.0,
      "end_time": 1925330.0,
      "text": "All right."
    },
    {
      "index": 705,
      "start_time": 1925330.0,
      "end_time": 1927129.0,
      "text": "So that might then be conditions."
    },
    {
      "index": 706,
      "start_time": 1927130.0,
      "end_time": 1929540.0,
      "text": "And let&#39;s see if we can&#39;t--"
    },
    {
      "index": 707,
      "start_time": 1929540.0,
      "end_time": 1930740.0,
      "text": "noswitch there."
    },
    {
      "index": 708,
      "start_time": 1930740.0,
      "end_time": 1931990.0,
      "text": "Let&#39;s take a look at this one."
    },
    {
      "index": 709,
      "start_time": 1931990.0,
      "end_time": 1935500.0,
      "text": "Let me open up, rather than comparing all of them side-by-side,"
    },
    {
      "index": 710,
      "start_time": 1935500.0,
      "end_time": 1938780.0,
      "text": "let me just open up this one now called noswitch.py,"
    },
    {
      "index": 711,
      "start_time": 1938780.0,
      "end_time": 1943642.0,
      "text": "which is reminiscent of a program we ran some time ago called noswitch.c."
    },
    {
      "index": 712,
      "start_time": 1943640.0,
      "end_time": 1948488.0,
      "text": "And you can perhaps infer what this does from the comments alone."
    },
    {
      "index": 713,
      "start_time": 1948490.0,
      "end_time": 1951160.0,
      "text": "What does this program do in English?"
    },
    {
      "index": 714,
      "start_time": 1951160.0,
      "end_time": 1953875.0,
      "text": "Because logical operators is not all that explicit at top."
    },
    {
      "index": 715,
      "start_time": 1956760.0,
      "end_time": 1957341.0,
      "text": "What&#39;s that?"
    },
    {
      "index": 716,
      "start_time": 1961260.0,
      "end_time": 1961760.0,
      "text": "Yeah."
    },
    {
      "index": 717,
      "start_time": 1961760.0,
      "end_time": 1964790.0,
      "text": "So if you&#39;ve ever interacted with a program that asked you for a prompt,"
    },
    {
      "index": 718,
      "start_time": 1964790.0,
      "end_time": 1967520.0,
      "text": "yes or no, here&#39;s some code with which you might implement it."
    },
    {
      "index": 719,
      "start_time": 1967520.0,
      "end_time": 1970290.0,
      "text": "And we could do this in C. We&#39;re just comparing characters here."
    },
    {
      "index": 720,
      "start_time": 1970290.0,
      "end_time": 1972290.0,
      "text": "But there&#39;s a few differences if you kind of now"
    },
    {
      "index": 721,
      "start_time": 1972290.0,
      "end_time": 1974659.0,
      "text": "think back to how you might implement this in C,"
    },
    {
      "index": 722,
      "start_time": 1974660.0,
      "end_time": 1976730.0,
      "text": "even if you don&#39;t recall this specific program."
    },
    {
      "index": 723,
      "start_time": 1976730.0,
      "end_time": 1979450.0,
      "text": "I&#39;m importing my library right up here."
    },
    {
      "index": 724,
      "start_time": 1979450.0,
      "end_time": 1981740.0,
      "text": "I&#39;m then calling get_char this time, which"
    },
    {
      "index": 725,
      "start_time": 1981740.0,
      "end_time": 1983832.0,
      "text": "is also in CS50&#39;s library for Python."
    },
    {
      "index": 726,
      "start_time": 1983830.0,
      "end_time": 1985788.0,
      "text": "And then notice there&#39;s just a couple of things"
    },
    {
      "index": 727,
      "start_time": 1985790.0,
      "end_time": 1987860.0,
      "text": "different down here syntactically."
    },
    {
      "index": 728,
      "start_time": 1987860.0,
      "end_time": 1991550.0,
      "text": "Besides the colons and the indentation and such, what else is noteworthy?"
    },
    {
      "index": 729,
      "start_time": 1991550.0,
      "end_time": 1993790.0,
      "text": "Yeah."
    },
    {
      "index": 730,
      "start_time": 1993790.0,
      "end_time": 1994870.0,
      "text": "Yeah."
    },
    {
      "index": 731,
      "start_time": 1994870.0,
      "end_time": 1997270.0,
      "text": "Thank god, you can just say more of what you mean now."
    },
    {
      "index": 732,
      "start_time": 1997270.0,
      "end_time": 2000660.0,
      "text": "If you want to do something or something, you literally say or."
    },
    {
      "index": 733,
      "start_time": 2000660.0,
      "end_time": 2002340.0,
      "text": "And if we were instead--"
    },
    {
      "index": 734,
      "start_time": 2002340.0,
      "end_time": 2006000.0,
      "text": "albeit nonsensically here-- trying to do the conjunction of two things, this"
    },
    {
      "index": 735,
      "start_time": 2006000.0,
      "end_time": 2008250.0,
      "text": "and that, you could literally say and."
    },
    {
      "index": 736,
      "start_time": 2008250.0,
      "end_time": 2010800.0,
      "text": "So instead of the two vertical bars or the two ampersands,"
    },
    {
      "index": 737,
      "start_time": 2010800.0,
      "end_time": 2013409.0,
      "text": "here&#39;s another slight difference in Python."
    },
    {
      "index": 738,
      "start_time": 2013410.0,
      "end_time": 2017220.0,
      "text": "Let&#39;s now take a look at another example reminiscent of ones past,"
    },
    {
      "index": 739,
      "start_time": 2017220.0,
      "end_time": 2019950.0,
      "text": "this one called return.py."
    },
    {
      "index": 740,
      "start_time": 2019950.0,
      "end_time": 2022260.0,
      "text": "So here&#39;s an example where it&#39;s actually more"
    },
    {
      "index": 741,
      "start_time": 2022260.0,
      "end_time": 2025272.0,
      "text": "compelling to have a main function because now I&#39;m"
    },
    {
      "index": 742,
      "start_time": 2025270.0,
      "end_time": 2027978.0,
      "text": "going to start organizing my code into different functions still."
    },
    {
      "index": 743,
      "start_time": 2027980.0,
      "end_time": 2032850.0,
      "text": "So up here, we are importing the get_int function from CS50 library."
    },
    {
      "index": 744,
      "start_time": 2032850.0,
      "end_time": 2036600.0,
      "text": "Here I have my main function just saying x gets get_int."
    },
    {
      "index": 745,
      "start_time": 2036600.0,
      "end_time": 2038317.0,
      "text": "And then print out the square of x."
    },
    {
      "index": 746,
      "start_time": 2038320.0,
      "end_time": 2040653.0,
      "text": "So how do you go about defining your own custom function"
    },
    {
      "index": 747,
      "start_time": 2040650.0,
      "end_time": 2042270.0,
      "text": "in Python that&#39;s not just main?"
    },
    {
      "index": 748,
      "start_time": 2042270.0,
      "end_time": 2047100.0,
      "text": "Well, here on line 11 is how I would define a function called square--"
    },
    {
      "index": 749,
      "start_time": 2047100.0,
      "end_time": 2049409.0,
      "text": "that takes, apparently, an argument called n,"
    },
    {
      "index": 750,
      "start_time": 2049409.9999999998,
      "end_time": 2054989.9999999998,
      "text": "though I could call this anything I want-- colon, return, n, star star, 2."
    },
    {
      "index": 751,
      "start_time": 2054989.9999999998,
      "end_time": 2056400.9999999998,
      "text": "So a few new features here."
    },
    {
      "index": 752,
      "start_time": 2056400.0,
      "end_time": 2059400.0,
      "text": "But again, it&#39;s no big deal once you just kind of look these features up"
    },
    {
      "index": 753,
      "start_time": 2059400.0,
      "end_time": 2061500.0,
      "text": "in a manual or in a class."
    },
    {
      "index": 754,
      "start_time": 2061500.0,
      "end_time": 2064369.0,
      "text": "What is star star probably doing?"
    },
    {
      "index": 755,
      "start_time": 2064370.0,
      "end_time": 2065287.0,
      "text": "AUDIENCE: Square root."
    },
    {
      "index": 756,
      "start_time": 2065290.0,
      "end_time": 2066497.0,
      "text": "DAVID MALAN: Not square root."
    },
    {
      "index": 757,
      "start_time": 2066489.9999999998,
      "end_time": 2067445.9999999998,
      "text": "The power of, yeah."
    },
    {
      "index": 758,
      "start_time": 2067449.9999999998,
      "end_time": 2070370.9999999998,
      "text": "So n star star 2 is just n raised to the power of 2."
    },
    {
      "index": 759,
      "start_time": 2070370.0,
      "end_time": 2074449.0,
      "text": "That was not a feature we had in C. So now we get this in Python."
    },
    {
      "index": 760,
      "start_time": 2074449.9999999998,
      "end_time": 2080800.9999999998,
      "text": "And what&#39;s this line 12 in green with the weird use of double quotes?"
    },
    {
      "index": 761,
      "start_time": 2080800.0000000002,
      "end_time": 2081350.0000000002,
      "text": "Yeah, it&#39;s a comment."
    },
    {
      "index": 762,
      "start_time": 2081350.0,
      "end_time": 2083308.0,
      "text": "And it&#39;s a different type of comment than we&#39;ve"
    },
    {
      "index": 763,
      "start_time": 2083310.0,
      "end_time": 2086422.0,
      "text": "seen before because in my previous example, I did have a few comments."
    },
    {
      "index": 764,
      "start_time": 2086420.0,
      "end_time": 2089659.0,
      "text": "Recall that just a moment ago, in conditions.py,"
    },
    {
      "index": 765,
      "start_time": 2089659.9999999998,
      "end_time": 2092179.9999999998,
      "text": "we had a whole bunch of comments."
    },
    {
      "index": 766,
      "start_time": 2092179.9999999998,
      "end_time": 2093380.9999999998,
      "text": "Prompt the user for x."
    },
    {
      "index": 767,
      "start_time": 2093380.0,
      "end_time": 2094310.0,
      "text": "Prompt the user for y."
    },
    {
      "index": 768,
      "start_time": 2094310.0,
      "end_time": 2095420.0,
      "text": "Compare x and y."
    },
    {
      "index": 769,
      "start_time": 2095420.0,
      "end_time": 2097650.0,
      "text": "So whereas in C we were using slash slash,"
    },
    {
      "index": 770,
      "start_time": 2097650.0,
      "end_time": 2101160.0,
      "text": "Python, unfortunately, uses that for floor division, so to speak."
    },
    {
      "index": 771,
      "start_time": 2101160.0,
      "end_time": 2104600.0,
      "text": "So we instead just use the hashtag or the pound sign"
    },
    {
      "index": 772,
      "start_time": 2104600.0,
      "end_time": 2109370.0,
      "text": "to specify a line that should be thought of as a comment."
    },
    {
      "index": 773,
      "start_time": 2109370.0,
      "end_time": 2111800.0,
      "text": "But here is something a little different."
    },
    {
      "index": 774,
      "start_time": 2111800.0,
      "end_time": 2112913.0,
      "text": "And we won&#39;t dwell too much on this for now."
    },
    {
      "index": 775,
      "start_time": 2112910.0,
      "end_time": 2115727.0,
      "text": "But Python has different types of comments, one of which is this."
    },
    {
      "index": 776,
      "start_time": 2115730.0,
      "end_time": 2118820.0,
      "text": "This is technically called a docstring or document string."
    },
    {
      "index": 777,
      "start_time": 2118820.0,
      "end_time": 2123200.0,
      "text": "And what&#39;s nice about Python, as well as languages like Java and others still,"
    },
    {
      "index": 778,
      "start_time": 2123200.0,
      "end_time": 2125720.0,
      "text": "is that you can put comments in your code"
    },
    {
      "index": 779,
      "start_time": 2125720.0,
      "end_time": 2130910.0,
      "text": "that special programs can read, and then generate documentation for you."
    },
    {
      "index": 780,
      "start_time": 2130910.0,
      "end_time": 2134290.0,
      "text": "So if you ever took AP CS and you ever saw a Javadoc,"
    },
    {
      "index": 781,
      "start_time": 2134300.0,
      "end_time": 2136400.0,
      "text": "this was a way of commenting your methods"
    },
    {
      "index": 782,
      "start_time": 2136400.0,
      "end_time": 2139380.0,
      "text": "and your code in Java using funky @ signs and other syntax"
    },
    {
      "index": 783,
      "start_time": 2139380.0,
      "end_time": 2142730.0,
      "text": "so that if you ran a special command, it could generate a user&#39;s manual for all"
    },
    {
      "index": 784,
      "start_time": 2142730.0,
      "end_time": 2145997.0,
      "text": "of your functions and tell you or colleagues or friends or teachers"
    },
    {
      "index": 785,
      "start_time": 2146000.0,
      "end_time": 2148583.0,
      "text": "exactly what all your functions are, what their arguments are,"
    },
    {
      "index": 786,
      "start_time": 2148580.0,
      "end_time": 2150569.0,
      "text": "what their return values are, and all of that."
    },
    {
      "index": 787,
      "start_time": 2150570.0,
      "end_time": 2154880.0,
      "text": "Similarly in Python can you use these funky quote quote quote"
    },
    {
      "index": 788,
      "start_time": 2154880.0,
      "end_time": 2157340.0,
      "text": "docstrings to document your function."
    },
    {
      "index": 789,
      "start_time": 2157340.0,
      "end_time": 2160820.0,
      "text": "So whereas in C our style has been to put quotes above the functions,"
    },
    {
      "index": 790,
      "start_time": 2160820.0,
      "end_time": 2164360.0,
      "text": "in Python it&#39;s going to be to put them as the first line inside"
    },
    {
      "index": 791,
      "start_time": 2164360.0,
      "end_time": 2167530.0,
      "text": "and indented within the function."
    },
    {
      "index": 792,
      "start_time": 2167530.0,
      "end_time": 2168900.0,
      "text": "All right."
    },
    {
      "index": 793,
      "start_time": 2168900.0,
      "end_time": 2172440.0,
      "text": "So now let&#39;s actually try to port a program from code again,"
    },
    {
      "index": 794,
      "start_time": 2172440.0,
      "end_time": 2179650.0,
      "text": "thinking back on week one in C when we had this program here."
    },
    {
      "index": 795,
      "start_time": 2179650.0,
      "end_time": 2181160.0,
      "text": "So there&#39;s quite a bit going--"
    },
    {
      "index": 796,
      "start_time": 2181160.0,
      "end_time": 2181969.0,
      "text": "oops, spoiler."
    },
    {
      "index": 797,
      "start_time": 2181970.0,
      "end_time": 2182761.0,
      "text": "Don&#39;t look at that."
    },
    {
      "index": 798,
      "start_time": 2185410.0,
      "end_time": 2187230.0,
      "text": "Hopefully, that didn&#39;t sink in just yet."
    },
    {
      "index": 799,
      "start_time": 2187230.0,
      "end_time": 2192260.0,
      "text": "So in week one, we had this program in C, get_positive_int."
    },
    {
      "index": 800,
      "start_time": 2192260.0,
      "end_time": 2194520.0,
      "text": "And its purpose in life was to write a program that"
    },
    {
      "index": 801,
      "start_time": 2194520.0,
      "end_time": 2196839.0,
      "text": "gets a positive integer from the user, in and of itself"
    },
    {
      "index": 802,
      "start_time": 2196840.0,
      "end_time": 2197881.0,
      "text": "not all that interesting."
    },
    {
      "index": 803,
      "start_time": 2197880.0,
      "end_time": 2200410.0,
      "text": "But it was an opportunity to introduce a few things."
    },
    {
      "index": 804,
      "start_time": 2200410.0,
      "end_time": 2203609.0,
      "text": "One, we introduced this line 6 several weeks ago,"
    },
    {
      "index": 805,
      "start_time": 2203610.0,
      "end_time": 2204900.0,
      "text": "which is known as a prototype."
    },
    {
      "index": 806,
      "start_time": 2204900.0,
      "end_time": 2208890.0,
      "text": "And what was the purpose of having that function prototype up there?"
    },
    {
      "index": 807,
      "start_time": 2208890.0,
      "end_time": 2211800.0,
      "text": "Yeah, you declare the function, but why?"
    },
    {
      "index": 808,
      "start_time": 2211800.0,
      "end_time": 2213960.0,
      "text": "Because it&#39;s already implemented down here on line 15."
    },
    {
      "index": 809,
      "start_time": 2213960.0,
      "end_time": 2217631.0,
      "text": "AUDIENCE: The way the program runs, it needs to be in order or something"
    },
    {
      "index": 810,
      "start_time": 2217630.0,
      "end_time": 2218128.0,
      "text": "like that."
    },
    {
      "index": 811,
      "start_time": 2218130.0,
      "end_time": 2218700.0,
      "text": "DAVID MALAN: Yeah."
    },
    {
      "index": 812,
      "start_time": 2218700.0,
      "end_time": 2220741.0,
      "text": "Because of the way the program&#39;s run, and frankly"
    },
    {
      "index": 813,
      "start_time": 2220740.0,
      "end_time": 2224459.0,
      "text": "because of how sort of naive or dumb that clang is by design,"
    },
    {
      "index": 814,
      "start_time": 2224460.0,
      "end_time": 2228460.0,
      "text": "it does not know that a function exists until it actually sees it."
    },
    {
      "index": 815,
      "start_time": 2228460.0,
      "end_time": 2231810.0,
      "text": "So the problem is that if in C, you have main, inside of which"
    },
    {
      "index": 816,
      "start_time": 2231810.0,
      "end_time": 2233940.0,
      "text": "is a call to function like get_positive_int,"
    },
    {
      "index": 817,
      "start_time": 2233940.0,
      "end_time": 2236434.0,
      "text": "but it&#39;s not implemented until a few lines later,"
    },
    {
      "index": 818,
      "start_time": 2236430.0,
      "end_time": 2239096.0,
      "text": "clang is going to be dumb and just not know that it even exists."
    },
    {
      "index": 819,
      "start_time": 2239100.0,
      "end_time": 2240766.0,
      "text": "And it&#39;s not going to compile your code."
    },
    {
      "index": 820,
      "start_time": 2240770.0,
      "end_time": 2244313.0,
      "text": "So this prototype, as we called it, is kind of a teaser, a hint, that"
    },
    {
      "index": 821,
      "start_time": 2244310.0,
      "end_time": 2245851.0,
      "text": "doesn&#39;t implement the whole function."
    },
    {
      "index": 822,
      "start_time": 2245850.0,
      "end_time": 2249480.0,
      "text": "It just shows the compiler its return type and its types"
    },
    {
      "index": 823,
      "start_time": 2249480.0,
      "end_time": 2252450.0,
      "text": "and order of parameters so that that&#39;s enough information"
    },
    {
      "index": 824,
      "start_time": 2252450.0,
      "end_time": 2256200.0,
      "text": "to then just trust that if I just blindly compile main,"
    },
    {
      "index": 825,
      "start_time": 2256200.0,
      "end_time": 2259480.0,
      "text": "eventually I&#39;m going to see the actual implementation of the function."
    },
    {
      "index": 826,
      "start_time": 2259480.0,
      "end_time": 2261670.0,
      "text": "So I can compile its bits, as well."
    },
    {
      "index": 827,
      "start_time": 2261670.0,
      "end_time": 2264479.0,
      "text": "So in here, in C, we called get_positive_int,"
    },
    {
      "index": 828,
      "start_time": 2264480.0,
      "end_time": 2265771.0,
      "text": "and then we passed in a prompt."
    },
    {
      "index": 829,
      "start_time": 2265770.0,
      "end_time": 2268954.0,
      "text": "We stored it in a variable calle i, and then printed it out."
    },
    {
      "index": 830,
      "start_time": 2268950.0,
      "end_time": 2271616.0,
      "text": "And then to implement this, we used kind of a familiar construct"
    },
    {
      "index": 831,
      "start_time": 2271620.0,
      "end_time": 2273890.0,
      "text": "that you&#39;ve used in other programs."
    },
    {
      "index": 832,
      "start_time": 2273900.0,
      "end_time": 2276920.0,
      "text": "Pretty much anytime you want to prompt the user for input,"
    },
    {
      "index": 833,
      "start_time": 2276920.0,
      "end_time": 2277800.0,
      "text": "and you want to keep pestering him or her"
    },
    {
      "index": 834,
      "start_time": 2277800.0,
      "end_time": 2280890.0,
      "text": "until they cooperate with whatever your conditions are,"
    },
    {
      "index": 835,
      "start_time": 2280890.0,
      "end_time": 2283200.0,
      "text": "you would use the so-called do-while loop."
    },
    {
      "index": 836,
      "start_time": 2283200.0,
      "end_time": 2287442.0,
      "text": "And because the do-while loop, recall, is distinct from the while loop how?"
    },
    {
      "index": 837,
      "start_time": 2287440.0,
      "end_time": 2289148.0,
      "text": "AUDIENCE: It runs at least once."
    },
    {
      "index": 838,
      "start_time": 2289150.0,
      "end_time": 2290260.0,
      "text": "DAVID MALAN: It runs at least once, which"
    },
    {
      "index": 839,
      "start_time": 2290260.0,
      "end_time": 2291968.0,
      "text": "just kind of makes intuitive sense if you"
    },
    {
      "index": 840,
      "start_time": 2291970.0,
      "end_time": 2293602.0,
      "text": "want to prompt the user for something."
    },
    {
      "index": 841,
      "start_time": 2293600.0,
      "end_time": 2295930.0,
      "text": "And then if he or she doesn&#39;t cooperate, only then"
    },
    {
      "index": 842,
      "start_time": 2295930.0,
      "end_time": 2297370.0,
      "text": "do you want to prompt them again."
    },
    {
      "index": 843,
      "start_time": 2297370.0,
      "end_time": 2300430.0,
      "text": "By contrast with a while loop, it&#39;s going to happen again and again"
    },
    {
      "index": 844,
      "start_time": 2300430.0,
      "end_time": 2302919.0,
      "text": "and again no matter what, from the get-go."
    },
    {
      "index": 845,
      "start_time": 2302920.0,
      "end_time": 2306280.0,
      "text": "So let&#39;s see if we can&#39;t now convert this or port"
    },
    {
      "index": 846,
      "start_time": 2306280.0,
      "end_time": 2308500.0,
      "text": "this, as people would say, to Python."
    },
    {
      "index": 847,
      "start_time": 2308500.0,
      "end_time": 2313580.0,
      "text": "So here I&#39;m going to go ahead and save a new file called positive.py."
    },
    {
      "index": 848,
      "start_time": 2313580.0,
      "end_time": 2319560.0,
      "text": "And I&#39;m going to go ahead and do everything here in main, as before."
    },
    {
      "index": 849,
      "start_time": 2319560.0,
      "end_time": 2324430.0,
      "text": "So I&#39;m going to ahead and do, let&#39;s say, from cs50 import get_int,"
    },
    {
      "index": 850,
      "start_time": 2324430.0,
      "end_time": 2326000.0,
      "text": "because I do need that."
    },
    {
      "index": 851,
      "start_time": 2326000.0,
      "end_time": 2328550.0,
      "text": "And then I&#39;m going to go ahead and have my main method here."
    },
    {
      "index": 852,
      "start_time": 2328550.0,
      "end_time": 2331900.0,
      "text": "And then inside of main, just like on the left-hand side,"
    },
    {
      "index": 853,
      "start_time": 2331900.0,
      "end_time": 2335830.0,
      "text": "I&#39;m going to do i gets get_positive_int--"
    },
    {
      "index": 854,
      "start_time": 2335830.0,
      "end_time": 2338200.0,
      "text": "positive integer, please."
    },
    {
      "index": 855,
      "start_time": 2338200.0,
      "end_time": 2339700.0,
      "text": "It&#39;s going to wrap a little bit now."
    },
    {
      "index": 856,
      "start_time": 2339700.0,
      "end_time": 2340569.0,
      "text": "That&#39;s fine."
    },
    {
      "index": 857,
      "start_time": 2340570.0,
      "end_time": 2343111.0,
      "text": "And then I&#39;m going to go ahead and print this, which, recall,"
    },
    {
      "index": 858,
      "start_time": 2343110.0,
      "end_time": 2347429.0,
      "text": "is just print an f string where the placeholder is i,"
    },
    {
      "index": 859,
      "start_time": 2347430.0,
      "end_time": 2349180.0,
      "text": "although, frankly, this is kind of stupid,"
    },
    {
      "index": 860,
      "start_time": 2349180.0,
      "end_time": 2353140.0,
      "text": "to just create a string that has nothing other than the value we want to print."
    },
    {
      "index": 861,
      "start_time": 2353140.0,
      "end_time": 2355430.0,
      "text": "Nicely enough in Python, just print what you want."
    },
    {
      "index": 862,
      "start_time": 2355430.0,
      "end_time": 2357379.0,
      "text": "And so that simplifies that argument."
    },
    {
      "index": 863,
      "start_time": 2357380.0,
      "end_time": 2362720.0,
      "text": "So now it remains to implement get_positive_int,"
    },
    {
      "index": 864,
      "start_time": 2362720.0,
      "end_time": 2365160.0,
      "text": "which is going to take some kind of prompt as its input."
    },
    {
      "index": 865,
      "start_time": 2365160.0,
      "end_time": 2369850.0,
      "text": "And notice I&#39;m not specifying the data type of prompt, which is string."
    },
    {
      "index": 866,
      "start_time": 2369850.0,
      "end_time": 2372250.0,
      "text": "I&#39;m not specifying the return type of this function."
    },
    {
      "index": 867,
      "start_time": 2372250.0,
      "end_time": 2374920.0,
      "text": "But both actually do exist underneath the hood."
    },
    {
      "index": 868,
      "start_time": 2374920.0,
      "end_time": 2378130.0,
      "text": "So in the past, to get a variable, I would do something"
    },
    {
      "index": 869,
      "start_time": 2378130.0,
      "end_time": 2379780.0,
      "text": "like this, semicolon."
    },
    {
      "index": 870,
      "start_time": 2379780.0,
      "end_time": 2381910.0,
      "text": "But I know I don&#39;t need the semicolon."
    },
    {
      "index": 871,
      "start_time": 2381910.0,
      "end_time": 2383560.0,
      "text": "I know I don&#39;t need the data type."
    },
    {
      "index": 872,
      "start_time": 2383560.0,
      "end_time": 2387490.0,
      "text": "And this just looks stupid to just put a variable there to need it."
    },
    {
      "index": 873,
      "start_time": 2387490.0,
      "end_time": 2389490.0,
      "text": "You don&#39;t need to do this in Python."
    },
    {
      "index": 874,
      "start_time": 2389500.0,
      "end_time": 2392500.0,
      "text": "If you want to use a variable, just start using it."
    },
    {
      "index": 875,
      "start_time": 2392500.0,
      "end_time": 2395470.0,
      "text": "And unfortunately, whereas almost every other feature we&#39;ve seen in Python"
    },
    {
      "index": 876,
      "start_time": 2395470.0,
      "end_time": 2401200.0,
      "text": "thus far kind of maps directly back to a feature in C,"
    },
    {
      "index": 877,
      "start_time": 2401200.0,
      "end_time": 2404500.0,
      "text": "Python does not have a do-while."
    },
    {
      "index": 878,
      "start_time": 2404500.0,
      "end_time": 2408430.0,
      "text": "So it has the for-in, and it has while."
    },
    {
      "index": 879,
      "start_time": 2408430.0,
      "end_time": 2410770.0,
      "text": "And maybe it has other things we haven&#39;t told you about."
    },
    {
      "index": 880,
      "start_time": 2410770.0,
      "end_time": 2412600.0,
      "text": "But it doesn&#39;t have do-while."
    },
    {
      "index": 881,
      "start_time": 2412600.0,
      "end_time": 2416200.0,
      "text": "So knowing that, and knowing only what we&#39;ve presented thus far,"
    },
    {
      "index": 882,
      "start_time": 2416200.0,
      "end_time": 2420190.0,
      "text": "how do we still go about getting an int from the user"
    },
    {
      "index": 883,
      "start_time": 2420190.0,
      "end_time": 2423931.0,
      "text": "and ensuring it&#39;s positive and reprompting him or her if and only"
    },
    {
      "index": 884,
      "start_time": 2423930.0,
      "end_time": 2424429.0,
      "text": "if it&#39;s not?"
    },
    {
      "index": 885,
      "start_time": 2427710.0,
      "end_time": 2431240.0,
      "text": "Put another way, how would you do this in C if we took away from you"
    },
    {
      "index": 886,
      "start_time": 2431240.0,
      "end_time": 2432529.0,
      "text": "the do-while construct?"
    },
    {
      "index": 887,
      "start_time": 2436720.0,
      "end_time": 2437629.0,
      "text": "Exclamation points?"
    },
    {
      "index": 888,
      "start_time": 2437630.0,
      "end_time": 2438130.0,
      "text": "OK."
    },
    {
      "index": 889,
      "start_time": 2438130.0,
      "end_time": 2441756.0,
      "text": "So we could invert something, maybe, using that logically."
    },
    {
      "index": 890,
      "start_time": 2441760.0,
      "end_time": 2443383.0,
      "text": "AUDIENCE: You can just do a while loop."
    },
    {
      "index": 891,
      "start_time": 2443380.0,
      "end_time": 2444370.0,
      "text": "DAVID MALAN: We could just use a while loop."
    },
    {
      "index": 892,
      "start_time": 2444370.0,
      "end_time": 2444870.0,
      "text": "How?"
    },
    {
      "index": 893,
      "start_time": 2444870.0,
      "end_time": 2450915.0,
      "text": "AUDIENCE: So while prompt is less than 1."
    },
    {
      "index": 894,
      "start_time": 2450920.0,
      "end_time": 2452294.0,
      "text": "DAVID MALAN: So while prompt is--"
    },
    {
      "index": 895,
      "start_time": 2452290.0,
      "end_time": 2457160.0,
      "text": "OK, so the prompt is the string we&#39;re going to display to the user."
    },
    {
      "index": 896,
      "start_time": 2457160.0,
      "end_time": 2459520.0,
      "text": "So it&#39;s not prompt, I think."
    },
    {
      "index": 897,
      "start_time": 2459520.0,
      "end_time": 2464620.0,
      "text": "So maybe i or n, to be consistent with the other side."
    },
    {
      "index": 898,
      "start_time": 2464620.0,
      "end_time": 2464770.0,
      "text": "So you know what?"
    },
    {
      "index": 899,
      "start_time": 2464770.0,
      "end_time": 2466324.0,
      "text": "Why don&#39;t I-- what about this?"
    },
    {
      "index": 900,
      "start_time": 2466320.0,
      "end_time": 2467736.0,
      "text": "What if I just do-- you know what?"
    },
    {
      "index": 901,
      "start_time": 2467740.0,
      "end_time": 2469265.0,
      "text": "I know I need a loop."
    },
    {
      "index": 902,
      "start_time": 2469270.0,
      "end_time": 2471644.0,
      "text": "This is by far the easiest way to just get a loop, right?"
    },
    {
      "index": 903,
      "start_time": 2471640.0,
      "end_time": 2473350.0,
      "text": "It&#39;s infinite, which is not good."
    },
    {
      "index": 904,
      "start_time": 2473350.0,
      "end_time": 2475480.0,
      "text": "But I can break out of loops, recall."
    },
    {
      "index": 905,
      "start_time": 2475480.0,
      "end_time": 2477800.0,
      "text": "So what if I do something like this?"
    },
    {
      "index": 906,
      "start_time": 2477800.0,
      "end_time": 2482830.0,
      "text": "What if I do n gets get_int, passing in the same prompt?"
    },
    {
      "index": 907,
      "start_time": 2482830.0,
      "end_time": 2485200.0,
      "text": "And then what do I want to do next?"
    },
    {
      "index": 908,
      "start_time": 2485200.0,
      "end_time": 2486680.0,
      "text": "I&#39;m inside of an infinite loop."
    },
    {
      "index": 909,
      "start_time": 2486680.0,
      "end_time": 2489763.0,
      "text": "So this is going to keep happening, keep happening, keep happening until--"
    },
    {
      "index": 910,
      "start_time": 2494600.0,
      "end_time": 2495390.0,
      "text": "is positive?"
    },
    {
      "index": 911,
      "start_time": 2495390.0,
      "end_time": 2497279.0,
      "text": "So python&#39;s not quite that user-friendly."
    },
    {
      "index": 912,
      "start_time": 2497280.0,
      "end_time": 2499100.0,
      "text": "We can&#39;t just say that."
    },
    {
      "index": 913,
      "start_time": 2499100.0,
      "end_time": 2500875.0,
      "text": "But we can say what?"
    },
    {
      "index": 914,
      "start_time": 2500880.0,
      "end_time": 2502284.0,
      "text": "AUDIENCE: Greater than 1."
    },
    {
      "index": 915,
      "start_time": 2502280.0,
      "end_time": 2503840.0,
      "text": "DAVID MALAN: Greater than--"
    },
    {
      "index": 916,
      "start_time": 2503840.0,
      "end_time": 2504700.0,
      "text": "close."
    },
    {
      "index": 917,
      "start_time": 2504700.0,
      "end_time": 2505839.0,
      "text": "AUDIENCE: Equal to."
    },
    {
      "index": 918,
      "start_time": 2505840.0,
      "end_time": 2507480.0,
      "text": "DAVID MALAN: OK, that&#39;s fine."
    },
    {
      "index": 919,
      "start_time": 2507480.0,
      "end_time": 2508580.0,
      "text": "Greater than or equal to one."
    },
    {
      "index": 920,
      "start_time": 2508580.0,
      "end_time": 2509779.0,
      "text": "Then what do we want to do?"
    },
    {
      "index": 921,
      "start_time": 2509780.0,
      "end_time": 2510860.0,
      "text": "Break."
    },
    {
      "index": 922,
      "start_time": 2510860.0,
      "end_time": 2513620.0,
      "text": "So it&#39;s not quite as cool as, like, a do-while loop,"
    },
    {
      "index": 923,
      "start_time": 2513620.0,
      "end_time": 2515630.0,
      "text": "which kind of gives us all these features, though frankly, this"
    },
    {
      "index": 924,
      "start_time": 2515630.0,
      "end_time": 2516800.0,
      "text": "was never that pretty, right?"
    },
    {
      "index": 925,
      "start_time": 2516800.0,
      "end_time": 2519800.0,
      "text": "Especially the fact that you had to deal with the issue of scope"
    },
    {
      "index": 926,
      "start_time": 2519800.0,
      "end_time": 2520650.0,
      "text": "by putting the variable outside."
    },
    {
      "index": 927,
      "start_time": 2520650.0,
      "end_time": 2523580.0,
      "text": "So in Python, the right way to do this would be something like this."
    },
    {
      "index": 928,
      "start_time": 2523580.0,
      "end_time": 2527150.0,
      "text": "Just induce an infinite loop, but make sure you break out of it logically"
    },
    {
      "index": 929,
      "start_time": 2527150.0,
      "end_time": 2529220.0,
      "text": "when it&#39;s appropriate to do so."
    },
    {
      "index": 930,
      "start_time": 2529220.0,
      "end_time": 2533629.0,
      "text": "And so now if I go ahead and add in that last thing that I keep needing--"
    },
    {
      "index": 931,
      "start_time": 2533630.0,
      "end_time": 2540110.0,
      "text": "so if name equals main, and it&#39;s always find to copy-paste something like that,"
    },
    {
      "index": 932,
      "start_time": 2540110.0,
      "end_time": 2541130.0,
      "text": "call main."
    },
    {
      "index": 933,
      "start_time": 2541130.0,
      "end_time": 2547160.0,
      "text": "Let me go ahead now and in my terminal window run python of positive.py."
    },
    {
      "index": 934,
      "start_time": 2547160.0,
      "end_time": 2549629.0,
      "text": "And let me go ahead and give it negative 5."
    },
    {
      "index": 935,
      "start_time": 2549630.0,
      "end_time": 2551210.0,
      "text": "How about negative 1?"
    },
    {
      "index": 936,
      "start_time": 2551210.0,
      "end_time": 2552330.0,
      "text": "How about 0?"
    },
    {
      "index": 937,
      "start_time": 2552330.0,
      "end_time": 2552924.0,
      "text": "Whoops."
    },
    {
      "index": 938,
      "start_time": 2552930.0,
      "end_time": 2553555.0,
      "text": "How about that?"
    },
    {
      "index": 939,
      "start_time": 2553550.0,
      "end_time": 2554420.0,
      "text": "How about 0?"
    },
    {
      "index": 940,
      "start_time": 2554420.0,
      "end_time": 2554972.0,
      "text": "1?"
    },
    {
      "index": 941,
      "start_time": 2554970.0,
      "end_time": 2555469.0,
      "text": "Hmm."
    },
    {
      "index": 942,
      "start_time": 2558630.0,
      "end_time": 2560580.0,
      "text": "I screwed up."
    },
    {
      "index": 943,
      "start_time": 2560580.0,
      "end_time": 2561600.0,
      "text": "None is interesting."
    },
    {
      "index": 944,
      "start_time": 2561600.0,
      "end_time": 2563589.0,
      "text": "It&#39;s kind of our new null, so to speak."
    },
    {
      "index": 945,
      "start_time": 2563590.0,
      "end_time": 2566730.0,
      "text": "But whereas in C, null can, potentially, if used in the wrong way,"
    },
    {
      "index": 946,
      "start_time": 2566730.0,
      "end_time": 2570570.0,
      "text": "crash your program, Python might just print it, apparently."
    },
    {
      "index": 947,
      "start_time": 2570570.0,
      "end_time": 2572766.0,
      "text": "Where did I screw up?"
    },
    {
      "index": 948,
      "start_time": 2572770.0,
      "end_time": 2575276.0,
      "text": "Yeah, so I didn&#39;t return an actual value."
    },
    {
      "index": 949,
      "start_time": 2575270.0,
      "end_time": 2577978.0,
      "text": "And whereas clang might have noticed something like this, Python,"
    },
    {
      "index": 950,
      "start_time": 2577980.0,
      "end_time": 2581574.0,
      "text": "the interpreter&#39;s not going to be as vigilant when it comes to figuring out"
    },
    {
      "index": 951,
      "start_time": 2581570.0,
      "end_time": 2582986.0,
      "text": "if your code is missing something."
    },
    {
      "index": 952,
      "start_time": 2582990.0,
      "end_time": 2585790.0,
      "text": "Because after all, we never said we were going to return anything."
    },
    {
      "index": 953,
      "start_time": 2585790.0,
      "end_time": 2587430.0,
      "text": "And so we don&#39;t strictly need to."
    },
    {
      "index": 954,
      "start_time": 2587430.0,
      "end_time": 2592230.0,
      "text": "So what could I instead do here instead of break?"
    },
    {
      "index": 955,
      "start_time": 2592230.0,
      "end_time": 2594120.0,
      "text": "I could just return n here."
    },
    {
      "index": 956,
      "start_time": 2594120.0,
      "end_time": 2599580.0,
      "text": "Or I could equivalently do this, and then just make sure I return n here."
    },
    {
      "index": 957,
      "start_time": 2599580.0,
      "end_time": 2602940.0,
      "text": "And another difference in Python, too, is that the issue of scope"
    },
    {
      "index": 958,
      "start_time": 2602940.0,
      "end_time": 2608880.0,
      "text": "isn&#39;t quite as difficult as it was in C. As soon as I&#39;ve declared n to exist up"
    },
    {
      "index": 959,
      "start_time": 2608880.0,
      "end_time": 2612300.0,
      "text": "here, it now exists down below."
    },
    {
      "index": 960,
      "start_time": 2612300.0,
      "end_time": 2615300.0,
      "text": "So even though it was declared inside of this indentation,"
    },
    {
      "index": 961,
      "start_time": 2615300.0,
      "end_time": 2618240.0,
      "text": "it is not scoped to that while loop alone."
    },
    {
      "index": 962,
      "start_time": 2618240.0,
      "end_time": 2621899.0,
      "text": "So either way could we actually make this work."
    },
    {
      "index": 963,
      "start_time": 2621900.0,
      "end_time": 2624570.0,
      "text": "OK, so now let&#39;s try to run this again."
    },
    {
      "index": 964,
      "start_time": 2624570.0,
      "end_time": 2625440.0,
      "text": "Positive integer."
    },
    {
      "index": 965,
      "start_time": 2625440.0,
      "end_time": 2626430.0,
      "text": "Negative 1."
    },
    {
      "index": 966,
      "start_time": 2626430.0,
      "end_time": 2627690.0,
      "text": "0."
    },
    {
      "index": 967,
      "start_time": 2627700.0,
      "end_time": 2627639.0,
      "text": "1."
    },
    {
      "index": 968,
      "start_time": 2627640.0,
      "end_time": 2629431.0,
      "text": "And now we&#39;re actually seeing the number 1."
    },
    {
      "index": 969,
      "start_time": 2629430.0,
      "end_time": 2629930.0,
      "text": "All right."
    },
    {
      "index": 970,
      "start_time": 2629930.0,
      "end_time": 2633460.0,
      "text": "Let me pause here for just a moment and see if there&#39;s any questions."
    },
    {
      "index": 971,
      "start_time": 2633460.0,
      "end_time": 2634360.0,
      "text": "No?"
    },
    {
      "index": 972,
      "start_time": 2634360.0,
      "end_time": 2634860.0,
      "text": "Yes."
    },
    {
      "index": 973,
      "start_time": 2634860.0,
      "end_time": 2638283.0,
      "text": "AUDIENCE: Do you to call things from the CS50 library individually,"
    },
    {
      "index": 974,
      "start_time": 2638280.0,
      "end_time": 2640316.0,
      "text": "or can you just import the entire library?"
    },
    {
      "index": 975,
      "start_time": 2640320.0,
      "end_time": 2641611.0,
      "text": "DAVID MALAN: Ah, good question."
    },
    {
      "index": 976,
      "start_time": 2641610.0,
      "end_time": 2644401.0,
      "text": "Do you have to call things inside of the CS50 library individually,"
    },
    {
      "index": 977,
      "start_time": 2644400.0,
      "end_time": 2646799.0,
      "text": "or can you import the whole thing?"
    },
    {
      "index": 978,
      "start_time": 2646800.0,
      "end_time": 2648730.0,
      "text": "You can technically import the whole thing as follows."
    },
    {
      "index": 979,
      "start_time": 2648730.0,
      "end_time": 2651180.0,
      "text": "If you want access to everything in the CS50 library,"
    },
    {
      "index": 980,
      "start_time": 2651180.0,
      "end_time": 2652500.0,
      "text": "you can literally say star."
    },
    {
      "index": 981,
      "start_time": 2652500.0,
      "end_time": 2655990.0,
      "text": "And a star in programming-- well, in many computer contexts,"
    },
    {
      "index": 982,
      "start_time": 2655990.0,
      "end_time": 2657839.0,
      "text": "star generally is a wildcard character."
    },
    {
      "index": 983,
      "start_time": 2657840.0,
      "end_time": 2661427.0,
      "text": "And it means anything that matches this string here."
    },
    {
      "index": 984,
      "start_time": 2661430.0,
      "end_time": 2663513.0,
      "text": "This is generally considered bad practice, though."
    },
    {
      "index": 985,
      "start_time": 2663510.0,
      "end_time": 2668400.0,
      "text": "Because if CS50 staff happens to give you functionality or variables that you"
    },
    {
      "index": 986,
      "start_time": 2668400.0,
      "end_time": 2672600.0,
      "text": "don&#39;t want, you have now just imported into your namespace,"
    },
    {
      "index": 987,
      "start_time": 2672600.0,
      "end_time": 2674680.0,
      "text": "so to speak, all of those functions."
    },
    {
      "index": 988,
      "start_time": 2674680.0,
      "end_time": 2678750.0,
      "text": "So for instance, if the CS50 library had public inside of it"
    },
    {
      "index": 989,
      "start_time": 2678750.0,
      "end_time": 2681570.0,
      "text": "a variable called x and y and z in addition"
    },
    {
      "index": 990,
      "start_time": 2681570.0,
      "end_time": 2685800.0,
      "text": "to functions like get_string and get_int and get_char,"
    },
    {
      "index": 991,
      "start_time": 2685800.0,
      "end_time": 2688830.0,
      "text": "your program is now seeing variables x and y and z."
    },
    {
      "index": 992,
      "start_time": 2688830.0,
      "end_time": 2691170.0,
      "text": "And if you have your own variables called x and y and z,"
    },
    {
      "index": 993,
      "start_time": 2691170.0,
      "end_time": 2693780.0,
      "text": "you&#39;re going to shadow those variables inside ours."
    },
    {
      "index": 994,
      "start_time": 2693780.0,
      "end_time": 2695490.0,
      "text": "And it just gets messy quickly."
    },
    {
      "index": 995,
      "start_time": 2695490.0,
      "end_time": 2698549.0,
      "text": "So generally, you want to be a little more nitpicky"
    },
    {
      "index": 996,
      "start_time": 2698550.0,
      "end_time": 2700290.0,
      "text": "and just import what you want."
    },
    {
      "index": 997,
      "start_time": 2700290.0,
      "end_time": 2705750.0,
      "text": "Or, another convention in Python is to not specify it like this,"
    },
    {
      "index": 998,
      "start_time": 2705750.0,
      "end_time": 2708870.0,
      "text": "but instead to do import CS50."
    },
    {
      "index": 999,
      "start_time": 2708870.0,
      "end_time": 2711779.0,
      "text": "This does not have the same effect of importing"
    },
    {
      "index": 1000,
      "start_time": 2711780.0,
      "end_time": 2713940.0,
      "text": "all of those keywords like get_int and get_string"
    },
    {
      "index": 1001,
      "start_time": 2713940.0,
      "end_time": 2718260.0,
      "text": "into your program&#39;s namespace, like the list of symbols"
    },
    {
      "index": 1002,
      "start_time": 2718260.0,
      "end_time": 2719850.0,
      "text": "you can actually type in."
    },
    {
      "index": 1003,
      "start_time": 2719850.0,
      "end_time": 2722200.0,
      "text": "But what you then have to do is this--"
    },
    {
      "index": 1004,
      "start_time": 2722200.0,
      "end_time": 2727560.0,
      "text": "you have to now prefix any usages of the functions in that library"
    },
    {
      "index": 1005,
      "start_time": 2727560.0,
      "end_time": 2730620.0,
      "text": "with the now familiar or more familiar dot operator."
    },
    {
      "index": 1006,
      "start_time": 2730620.0,
      "end_time": 2733200.0,
      "text": "So this is just a stylistic decision now."
    },
    {
      "index": 1007,
      "start_time": 2733200.0,
      "end_time": 2735264.0,
      "text": "I have consciously chosen the other approach"
    },
    {
      "index": 1008,
      "start_time": 2735260.0,
      "end_time": 2738176.0,
      "text": "so that initially, you can just call get_int, get_string, just like we"
    },
    {
      "index": 1009,
      "start_time": 2738180.0,
      "end_time": 2741450.0,
      "text": "did in C. But technically and probably more conventionally would"
    },
    {
      "index": 1010,
      "start_time": 2741450.0,
      "end_time": 2744210.0,
      "text": "people do this to make super clear this isn&#39;t my get_int method."
    },
    {
      "index": 1011,
      "start_time": 2744210.0,
      "end_time": 2747971.0,
      "text": "It&#39;s CS50&#39;s get_int function."
    },
    {
      "index": 1012,
      "start_time": 2747970.0,
      "end_time": 2748469.0,
      "text": "OK."
    },
    {
      "index": 1013,
      "start_time": 2748470.0,
      "end_time": 2750930.0,
      "text": "Other questions?"
    },
    {
      "index": 1014,
      "start_time": 2750940.0,
      "end_time": 2750594.0,
      "text": "Yeah."
    },
    {
      "index": 1015,
      "start_time": 2750590.0,
      "end_time": 2756416.0,
      "text": "AUDIENCE: Is it good coding practice to do the if __name__ or just--"
    },
    {
      "index": 1016,
      "start_time": 2756420.0,
      "end_time": 2759700.0,
      "text": "because you can run hello, world without defining main."
    },
    {
      "index": 1017,
      "start_time": 2759700.0,
      "end_time": 2760147.0,
      "text": "Do you really need to do--"
    },
    {
      "index": 1018,
      "start_time": 2760150.0,
      "end_time": 2761733.0,
      "text": "DAVID MALAN: Oh, it&#39;s a good question."
    },
    {
      "index": 1019,
      "start_time": 2761730.0,
      "end_time": 2763110.0,
      "text": "Short answer, no."
    },
    {
      "index": 1020,
      "start_time": 2763110.0,
      "end_time": 2765720.0,
      "text": "So I&#39;m showing you this way because you&#39;ll"
    },
    {
      "index": 1021,
      "start_time": 2765720.0,
      "end_time": 2768689.0,
      "text": "see this in various examples online and in programs"
    },
    {
      "index": 1022,
      "start_time": 2768690.0,
      "end_time": 2771360.0,
      "text": "that you might look at that are open source."
    },
    {
      "index": 1023,
      "start_time": 2771360.0,
      "end_time": 2773350.0,
      "text": "Strictly speaking, this is not necessary."
    },
    {
      "index": 1024,
      "start_time": 2773350.0,
      "end_time": 2777779.0,
      "text": "If you end up making your own library, this tends to be a useful feature."
    },
    {
      "index": 1025,
      "start_time": 2777780.0,
      "end_time": 2783600.0,
      "text": "But otherwise, I could equivalently do this, which is perfectly fine as well."
    },
    {
      "index": 1026,
      "start_time": 2783600.0,
      "end_time": 2785759.0,
      "text": "I can still define get_positive int."
    },
    {
      "index": 1027,
      "start_time": 2785760.0,
      "end_time": 2788130.0,
      "text": "I can get rid of main altogether."
    },
    {
      "index": 1028,
      "start_time": 2788130.0,
      "end_time": 2790260.0,
      "text": "And I can just now do this."
    },
    {
      "index": 1029,
      "start_time": 2790260.0,
      "end_time": 2794471.0,
      "text": "So this program is equivalent and just as fine for now."
    },
    {
      "index": 1030,
      "start_time": 2794470.0,
      "end_time": 2794969.0,
      "text": "OK."
    },
    {
      "index": 1031,
      "start_time": 2794970.0,
      "end_time": 2797412.0,
      "text": "So with that said, let&#39;s do a couple of more examples"
    },
    {
      "index": 1032,
      "start_time": 2797410.0,
      "end_time": 2799618.0,
      "text": "here to kind of paint a picture of some of the things"
    },
    {
      "index": 1033,
      "start_time": 2799620.0,
      "end_time": 2801460.0,
      "text": "that are similar and different."
    },
    {
      "index": 1034,
      "start_time": 2801460.0,
      "end_time": 2806910.0,
      "text": "And let&#39;s go ahead and open up, for instance, overflow.c from some weeks"
    },
    {
      "index": 1035,
      "start_time": 2806910.0,
      "end_time": 2809580.0,
      "text": "ago, splitting our windows again."
    },
    {
      "index": 1036,
      "start_time": 2809580.0,
      "end_time": 2813210.0,
      "text": "And then on the right-hand side, let me open up something called overflow.py,"
    },
    {
      "index": 1037,
      "start_time": 2813210.0,
      "end_time": 2815430.0,
      "text": "which I put together in advance."
    },
    {
      "index": 1038,
      "start_time": 2815430.0,
      "end_time": 2821640.0,
      "text": "So here we have on the left an example of integer overflow, whereby"
    },
    {
      "index": 1039,
      "start_time": 2821640.0,
      "end_time": 2825509.0,
      "text": "if I start counting at 1, and then don&#39;t even have a condition,"
    },
    {
      "index": 1040,
      "start_time": 2825510.0,
      "end_time": 2828150.0,
      "text": "and I just keep multiplying i by 2, by 2, by 2,"
    },
    {
      "index": 1041,
      "start_time": 2828150.0,
      "end_time": 2830140.0,
      "text": "doubling it, doubling it, doubling it, doubling it,"
    },
    {
      "index": 1042,
      "start_time": 2830140.0,
      "end_time": 2833190.0,
      "text": "we know from C that bad things happen if you just kind of keep"
    },
    {
      "index": 1043,
      "start_time": 2833190.0,
      "end_time": 2836140.0,
      "text": "incrementing something without any boundary in sight."
    },
    {
      "index": 1044,
      "start_time": 2836140.0,
      "end_time": 2838680.0,
      "text": "So this program is just going to print out each of those values,"
    },
    {
      "index": 1045,
      "start_time": 2838680.0,
      "end_time": 2840810.0,
      "text": "and it&#39;s going to sleep one second in between."
    },
    {
      "index": 1046,
      "start_time": 2840810.0,
      "end_time": 2843700.0,
      "text": "Same program in Python looks pretty similar."
    },
    {
      "index": 1047,
      "start_time": 2843700.0,
      "end_time": 2847290.0,
      "text": "But notice I&#39;m initializing i to 1, doing the following forever--"
    },
    {
      "index": 1048,
      "start_time": 2847290.0,
      "end_time": 2852270.0,
      "text": "printing out i, multiplying i by 2, and then sleeping for one second."
    },
    {
      "index": 1049,
      "start_time": 2852270.0,
      "end_time": 2855600.0,
      "text": "But sleep is also not built into Python in the way that print is."
    },
    {
      "index": 1050,
      "start_time": 2855600.0,
      "end_time": 2857142.0,
      "text": "Notice what I had to include up here."
    },
    {
      "index": 1051,
      "start_time": 2857140.0,
      "end_time": 2858473.0,
      "text": "And I wasn&#39;t sure what that was."
    },
    {
      "index": 1052,
      "start_time": 2858480.0,
      "end_time": 2860525.0,
      "text": "And so honestly, just a few days ago, I googled,"
    },
    {
      "index": 1053,
      "start_time": 2860520.0,
      "end_time": 2865140.0,
      "text": "like, \"sleep one second Python,\" saw that there&#39;s this time library, inside"
    },
    {
      "index": 1054,
      "start_time": 2865140.0,
      "end_time": 2866670.0,
      "text": "of which is a sleep function."
    },
    {
      "index": 1055,
      "start_time": 2866670.0,
      "end_time": 2870000.0,
      "text": "And that&#39;s how I knew which library to actually include."
    },
    {
      "index": 1056,
      "start_time": 2870000.0,
      "end_time": 2872160.0,
      "text": "And so just as there are man pages for C,"
    },
    {
      "index": 1057,
      "start_time": 2872160.0,
      "end_time": 2875580.0,
      "text": "there&#39;s a whole documentation website for Python"
    },
    {
      "index": 1058,
      "start_time": 2875580.0,
      "end_time": 2877479.0,
      "text": "that has all of this information, as well."
    },
    {
      "index": 1059,
      "start_time": 2877480.0,
      "end_time": 2878771.0,
      "text": "So let me go ahead and do this."
    },
    {
      "index": 1060,
      "start_time": 2878770.0,
      "end_time": 2883640.0,
      "text": "And let me actually try to create two windows here."
    },
    {
      "index": 1061,
      "start_time": 2883640.0,
      "end_time": 2887310.0,
      "text": "What&#39;s the best way for me to do this?"
    },
    {
      "index": 1062,
      "start_time": 2887310.0,
      "end_time": 2889210.0,
      "text": "Split one to two."
    },
    {
      "index": 1063,
      "start_time": 2889210.0,
      "end_time": 2889710.0,
      "text": "OK."
    },
    {
      "index": 1064,
      "start_time": 2889710.0,
      "end_time": 2893710.0,
      "text": "So let&#39;s do this, just so I can run this in the same place."
    },
    {
      "index": 1065,
      "start_time": 2893710.0,
      "end_time": 2896100.0,
      "text": "So if I go into my source--"
    },
    {
      "index": 1066,
      "start_time": 2896100.0,
      "end_time": 2897432.0,
      "text": "[POPPING NOISE]"
    },
    {
      "index": 1067,
      "start_time": 2897430.0,
      "end_time": 2898377.0,
      "text": "Jeez."
    },
    {
      "index": 1068,
      "start_time": 2898380.0,
      "end_time": 2904470.0,
      "text": "My source 8 directory, and I go into weeks and one, and I make overflow--"
    },
    {
      "index": 1069,
      "start_time": 2908720.0,
      "end_time": 2910410.0,
      "text": "nope, sorry."
    },
    {
      "index": 1070,
      "start_time": 2910410.0,
      "end_time": 2911140.0,
      "text": "Week one."
    },
    {
      "index": 1071,
      "start_time": 2911140.0,
      "end_time": 2911640.0,
      "text": "OK."
    },
    {
      "index": 1072,
      "start_time": 2911640.0,
      "end_time": 2916120.0,
      "text": "So if I go into source one, and I do make overflow,"
    },
    {
      "index": 1073,
      "start_time": 2916120.0,
      "end_time": 2918660.0,
      "text": "which is kind of cute semantically, I&#39;m now"
    },
    {
      "index": 1074,
      "start_time": 2918660.0,
      "end_time": 2920850.0,
      "text": "going to be able to run a program called overflow."
    },
    {
      "index": 1075,
      "start_time": 2920850.0,
      "end_time": 2928509.0,
      "text": "Meanwhile, over here, let me go ahead and split this window, too."
    },
    {
      "index": 1076,
      "start_time": 2928510.0,
      "end_time": 2930340.0,
      "text": "Dammit, not there."
    },
    {
      "index": 1077,
      "start_time": 2930340.0,
      "end_time": 2934194.0,
      "text": "Let&#39;s put this over here."
    },
    {
      "index": 1078,
      "start_time": 2934190.0,
      "end_time": 2935186.0,
      "text": "Oh, no!"
    },
    {
      "index": 1079,
      "start_time": 2940670.0,
      "end_time": 2941210.0,
      "text": "OK."
    },
    {
      "index": 1080,
      "start_time": 2941210.0,
      "end_time": 2941730.0,
      "text": "One second."
    },
    {
      "index": 1081,
      "start_time": 2941730.0,
      "end_time": 2942540.0,
      "text": "Sorry."
    },
    {
      "index": 1082,
      "start_time": 2942540.0,
      "end_time": 2943980.0,
      "text": "Overflow.py."
    },
    {
      "index": 1083,
      "start_time": 2943980.0,
      "end_time": 2944522.0,
      "text": "OK."
    },
    {
      "index": 1084,
      "start_time": 2944520.0,
      "end_time": 2946478.0,
      "text": "So now we&#39;re-- oh, now I lost the other window."
    },
    {
      "index": 1085,
      "start_time": 2949720.0,
      "end_time": 2950480.0,
      "text": "Oh, that&#39;s cool."
    },
    {
      "index": 1086,
      "start_time": 2950480.0,
      "end_time": 2950980.0,
      "text": "OK."
    },
    {
      "index": 1087,
      "start_time": 2950980.0,
      "end_time": 2953640.0,
      "text": "So let&#39;s do this."
    },
    {
      "index": 1088,
      "start_time": 2953640.0,
      "end_time": 2955980.0,
      "text": "OK."
    },
    {
      "index": 1089,
      "start_time": 2955980.0,
      "end_time": 2957660.0,
      "text": "Now I know how to use the IDE."
    },
    {
      "index": 1090,
      "start_time": 2957660.0,
      "end_time": 2958230.0,
      "text": "All right."
    },
    {
      "index": 1091,
      "start_time": 2958230.0,
      "end_time": 2960850.0,
      "text": "So on the left-hand side, I&#39;m about to run overflow."
    },
    {
      "index": 1092,
      "start_time": 2960850.0,
      "end_time": 2965490.0,
      "text": "And then lastly, without generating that beep again, I&#39;m going to go in here."
    },
    {
      "index": 1093,
      "start_time": 2965490.0,
      "end_time": 2969299.0,
      "text": "And I&#39;m about to run python of overflow.py."
    },
    {
      "index": 1094,
      "start_time": 2969300.0,
      "end_time": 2969800.0,
      "text": "All right."
    },
    {
      "index": 1095,
      "start_time": 2969800.0,
      "end_time": 2971700.0,
      "text": "And so the left will run the C version."
    },
    {
      "index": 1096,
      "start_time": 2971700.0,
      "end_time": 2973710.0,
      "text": "The right will run the Python version."
    },
    {
      "index": 1097,
      "start_time": 2973710.0,
      "end_time": 2974775.0,
      "text": "And we&#39;ll start to see--"
    },
    {
      "index": 1098,
      "start_time": 2977760.0,
      "end_time": 2982210.0,
      "text": "no pun intended-- what happens with these programs."
    },
    {
      "index": 1099,
      "start_time": 2982210.0,
      "end_time": 2982520.0,
      "text": "Oh, damn it."
    },
    {
      "index": 1100,
      "start_time": 2982520.0,
      "end_time": 2983740.0,
      "text": "I got to scroll."
    },
    {
      "index": 1101,
      "start_time": 2987660.0,
      "end_time": 2989410.0,
      "text": "OK, so I&#39;ll just keep scrolling for us."
    },
    {
      "index": 1102,
      "start_time": 2992240.0,
      "end_time": 2993981.0,
      "text": "This is fun."
    },
    {
      "index": 1103,
      "start_time": 2993980.0,
      "end_time": 2994479.0,
      "text": "OK."
    },
    {
      "index": 1104,
      "start_time": 2999350.0,
      "end_time": 2999750.0,
      "text": "OK."
    },
    {
      "index": 1105,
      "start_time": 2999750.0,
      "end_time": 3003120.0,
      "text": "Next time, Google how to sleep for half a second instead."
    },
    {
      "index": 1106,
      "start_time": 3003120.0,
      "end_time": 3004200.0,
      "text": "OK."
    },
    {
      "index": 1107,
      "start_time": 3004200.0,
      "end_time": 3005900.0,
      "text": "So there we go."
    },
    {
      "index": 1108,
      "start_time": 3005100.0,
      "end_time": 3007500.0,
      "text": "Something bad has happened here."
    },
    {
      "index": 1109,
      "start_time": 3007500.0,
      "end_time": 3009270.0,
      "text": "And now C is just completely choking."
    },
    {
      "index": 1110,
      "start_time": 3009270.0,
      "end_time": 3011430.0,
      "text": "Things are in a funky state."
    },
    {
      "index": 1111,
      "start_time": 3011430.0,
      "end_time": 3015259.0,
      "text": "So what happened on the left, before the answer scrolls away?"
    },
    {
      "index": 1112,
      "start_time": 3015260.0,
      "end_time": 3016260.0,
      "text": "Integer overflow, right?"
    },
    {
      "index": 1113,
      "start_time": 3016260.0,
      "end_time": 3019590.0,
      "text": "We had so many bits becoming ones, that eventually, it"
    },
    {
      "index": 1114,
      "start_time": 3019590.0,
      "end_time": 3021767.0,
      "text": "was mistaken for a negative number temporarily."
    },
    {
      "index": 1115,
      "start_time": 3021770.0,
      "end_time": 3023853.0,
      "text": "And then the whole thing just kind of got confused"
    },
    {
      "index": 1116,
      "start_time": 3023850.0,
      "end_time": 3026900.0,
      "text": "and became permanently zeros."
    },
    {
      "index": 1117,
      "start_time": 3026100.0,
      "end_time": 3028710.0,
      "text": "Whereas on the right-hand side, like, yeah, Python."
    },
    {
      "index": 1118,
      "start_time": 3028710.0,
      "end_time": 3030420.0,
      "text": "Look at you go."
    },
    {
      "index": 1119,
      "start_time": 3030420.0,
      "end_time": 3032860.0,
      "text": "Still counting higher and higher and higher."
    },
    {
      "index": 1120,
      "start_time": 3032860.0,
      "end_time": 3035735.0,
      "text": "And even though we haven&#39;t talked about the underlying representation"
    },
    {
      "index": 1121,
      "start_time": 3035740.0,
      "end_time": 3037625.0,
      "text": "of these types in Python, what can we infer"
    },
    {
      "index": 1122,
      "start_time": 3037620.0,
      "end_time": 3043609.0,
      "text": "from the apparent better correctness of the version on the right in Python?"
    },
    {
      "index": 1123,
      "start_time": 3043610.0,
      "end_time": 3045180.0,
      "text": "It&#39;s not an eight-bit representation."
    },
    {
      "index": 1124,
      "start_time": 3045180.0,
      "end_time": 3047730.0,
      "text": "And even C, to be fair, uses 32 bits for its ints."
    },
    {
      "index": 1125,
      "start_time": 3047730.0,
      "end_time": 3050970.0,
      "text": "And that&#39;s what we got as high as 2 billion or 4 billion in total."
    },
    {
      "index": 1126,
      "start_time": 3050970.0,
      "end_time": 3052470.0,
      "text": "But same idea."
    },
    {
      "index": 1127,
      "start_time": 3052470.0,
      "end_time": 3054435.0,
      "text": "How many bits must Python be using?"
    },
    {
      "index": 1128,
      "start_time": 3054440.0,
      "end_time": 3054981.0,
      "text": "AUDIENCE: 64?"
    },
    {
      "index": 1129,
      "start_time": 3054980.0,
      "end_time": 3056714.0,
      "text": "DAVID MALAN: Yeah, maybe 64."
    },
    {
      "index": 1130,
      "start_time": 3056710.0,
      "end_time": 3057600.0,
      "text": "I don&#39;t know exactly."
    },
    {
      "index": 1131,
      "start_time": 3057600.0,
      "end_time": 3061259.0,
      "text": "But I know it&#39;s not 32 because it&#39;s keep counting up and up and up."
    },
    {
      "index": 1132,
      "start_time": 3061260.0,
      "end_time": 3063300.0,
      "text": "And so this is another feature of Python."
    },
    {
      "index": 1133,
      "start_time": 3063300.0,
      "end_time": 3066240.0,
      "text": "Whereas int in C has typically been for us 32 bits--"
    },
    {
      "index": 1134,
      "start_time": 3066240.0,
      "end_time": 3068850.0,
      "text": "although that is technically machine-specific--"
    },
    {
      "index": 1135,
      "start_time": 3068850.0,
      "end_time": 3071156.0,
      "text": "Python integers are now going to be 64, which"
    },
    {
      "index": 1136,
      "start_time": 3071160.0,
      "end_time": 3072993.0,
      "text": "just means we can do much bigger math, which"
    },
    {
      "index": 1137,
      "start_time": 3072990.0,
      "end_time": 3075863.0,
      "text": "is great for various data-science applications and stats and whatnot,"
    },
    {
      "index": 1138,
      "start_time": 3075860.0,
      "end_time": 3079196.0,
      "text": "where you actually might have some large data sets to deal with."
    },
    {
      "index": 1139,
      "start_time": 3079200.0,
      "end_time": 3081960.0,
      "text": "Unfortunately, we still have some issues of imprecision."
    },
    {
      "index": 1140,
      "start_time": 3081960.0,
      "end_time": 3084480.0,
      "text": "Let me go ahead and close a whole bunch of these windows"
    },
    {
      "index": 1141,
      "start_time": 3084480.0,
      "end_time": 3090290.0,
      "text": "and go ahead and open up, for instance, just this one here."
    },
    {
      "index": 1142,
      "start_time": 3090290.0,
      "end_time": 3091600.0,
      "text": "OK."
    },
    {
      "index": 1143,
      "start_time": 3091600.0,
      "end_time": 3093240.0,
      "text": "No, I&#39;m going to skip this and do something"
    },
    {
      "index": 1144,
      "start_time": 3093240.0,
      "end_time": 3095279.0,
      "text": "slightly more fun, which is this."
    },
    {
      "index": 1145,
      "start_time": 3095280.0,
      "end_time": 3098870.0,
      "text": "So in Python here, let&#39;s do a quick warm-up."
    },
    {
      "index": 1146,
      "start_time": 3098870.0,
      "end_time": 3100482.0,
      "text": "This is going to print for me what?"
    },
    {
      "index": 1147,
      "start_time": 3100480.0,
      "end_time": 3101407.0,
      "text": "AUDIENCE: Four question marks."
    },
    {
      "index": 1148,
      "start_time": 3101410.0,
      "end_time": 3102480.0,
      "text": "DAVID MALAN: 4 question marks, right?"
    },
    {
      "index": 1149,
      "start_time": 3102480.0,
      "end_time": 3105690.0,
      "text": "And this is reminiscent-- this is like a really cheap version of \"Super Mario"
    },
    {
      "index": 1150,
      "start_time": 3105690.0,
      "end_time": 3106560.0,
      "text": "Bros.\""
    },
    {
      "index": 1151,
      "start_time": 3106560.0,
      "end_time": 3109445.0,
      "text": "And if you think back to week one, where we explored this,"
    },
    {
      "index": 1152,
      "start_time": 3109450.0,
      "end_time": 3112325.0,
      "text": "there was a screenshot I had of \"Super Mario Bros,\" one of the worlds"
    },
    {
      "index": 1153,
      "start_time": 3112320.0,
      "end_time": 3115965.0,
      "text": "where we just had four question marks which Mario could hit his head against"
    },
    {
      "index": 1154,
      "start_time": 3115970.0,
      "end_time": 3117705.0,
      "text": "to actually generate a coin."
    },
    {
      "index": 1155,
      "start_time": 3117700.0,
      "end_time": 3120435.0,
      "text": "So we stepped up from there in C to do this instead."
    },
    {
      "index": 1156,
      "start_time": 3120440.0,
      "end_time": 3122315.0,
      "text": "And this is going to give us another feature."
    },
    {
      "index": 1157,
      "start_time": 3122310.0,
      "end_time": 3125970.0,
      "text": "But let&#39;s see if we can&#39;t start to infer from context what these programs do."
    },
    {
      "index": 1158,
      "start_time": 3125970.0,
      "end_time": 3127294.0,
      "text": "Here&#39;s another one, mario1."
    },
    {
      "index": 1159,
      "start_time": 3127290.0,
      "end_time": 3127915.0,
      "text": "What&#39;s this do?"
    },
    {
      "index": 1160,
      "start_time": 3132800.0,
      "end_time": 3133549.0,
      "text": "It&#39;s using a loop, for sure."
    },
    {
      "index": 1161,
      "start_time": 3133550.0,
      "end_time": 3135841.0,
      "text": "And it&#39;s using how many iterations, apparently?"
    },
    {
      "index": 1162,
      "start_time": 3135840.0,
      "end_time": 3136338.0,
      "text": "Four."
    },
    {
      "index": 1163,
      "start_time": 3136340.0,
      "end_time": 3138950.0,
      "text": "So from 0 to 1 to 2 to 3, total."
    },
    {
      "index": 1164,
      "start_time": 3138950.0,
      "end_time": 3142109.0,
      "text": "Each time, it&#39;s going to print out, apparently, a question mark."
    },
    {
      "index": 1165,
      "start_time": 3142110.0,
      "end_time": 3143770.0,
      "text": "But now, just infer from this--"
    },
    {
      "index": 1166,
      "start_time": 3143770.0,
      "end_time": 3145520.0,
      "text": "I haven&#39;t answered this question already--"
    },
    {
      "index": 1167,
      "start_time": 3145520.0,
      "end_time": 3148418.0,
      "text": "what else is going on line 4 and why?"
    },
    {
      "index": 1168,
      "start_time": 3148420.0,
      "end_time": 3150349.0,
      "text": "AUDIENCE: It&#39;s not going to a new line."
    },
    {
      "index": 1169,
      "start_time": 3150350.0,
      "end_time": 3152183.0,
      "text": "DAVID MALAN: Not going to a new line, right?"
    },
    {
      "index": 1170,
      "start_time": 3152180.0,
      "end_time": 3155390.0,
      "text": "So there&#39;s always this trade-off in programming and CS more generally."
    },
    {
      "index": 1171,
      "start_time": 3155390.0,
      "end_time": 3158850.0,
      "text": "Like, yay, we took away the backslash n, which was annoying to type."
    },
    {
      "index": 1172,
      "start_time": 3158850.0,
      "end_time": 3162210.0,
      "text": "But now if it&#39;s always there, how do you turn it off?"
    },
    {
      "index": 1173,
      "start_time": 3162210.0,
      "end_time": 3165650.0,
      "text": "So this is one way to do that, and it also"
    },
    {
      "index": 1174,
      "start_time": 3165650.0,
      "end_time": 3168380.0,
      "text": "reveals another fundamental feature of Python."
    },
    {
      "index": 1175,
      "start_time": 3168380.0,
      "end_time": 3172440.0,
      "text": "Notice that print apparently takes, in this case, more than one argument."
    },
    {
      "index": 1176,
      "start_time": 3172440.0,
      "end_time": 3175910.0,
      "text": "The first is a string-- literally quote, unquote, and a question mark."
    },
    {
      "index": 1177,
      "start_time": 3175910.0,
      "end_time": 3178520.0,
      "text": "The second is a little funkier."
    },
    {
      "index": 1178,
      "start_time": 3178520.0,
      "end_time": 3180200.0,
      "text": "It&#39;s like a word, end."
    },
    {
      "index": 1179,
      "start_time": 3180200.0,
      "end_time": 3183919.0,
      "text": "It&#39;s then an equal sign, and then it&#39;s a quote mark."
    },
    {
      "index": 1180,
      "start_time": 3183920.0,
      "end_time": 3185300.0,
      "text": "So what is this here?"
    },
    {
      "index": 1181,
      "start_time": 3185300.0,
      "end_time": 3189560.0,
      "text": "So it turns out Python supports what are called named parameters."
    },
    {
      "index": 1182,
      "start_time": 3189560.0,
      "end_time": 3192529.0,
      "text": "So in C, any parameters you pass to a function"
    },
    {
      "index": 1183,
      "start_time": 3192530.0,
      "end_time": 3196700.0,
      "text": "are defined, ultimately, by way of their order."
    },
    {
      "index": 1184,
      "start_time": 3196700.0,
      "end_time": 3199220.0,
      "text": "Because even if a function takes arguments that have names,"
    },
    {
      "index": 1185,
      "start_time": 3199220.0,
      "end_time": 3203689.0,
      "text": "like x and y or a and b or whatever, when you call the function,"
    },
    {
      "index": 1186,
      "start_time": 3203690.0,
      "end_time": 3205762.0,
      "text": "you do not mention those names."
    },
    {
      "index": 1187,
      "start_time": 3205760.0,
      "end_time": 3208968.0,
      "text": "You know they exist, and that&#39;s how you think about them in the documentation"
    },
    {
      "index": 1188,
      "start_time": 3208970.0,
      "end_time": 3210799.0,
      "text": "or in the original code."
    },
    {
      "index": 1189,
      "start_time": 3210800.0,
      "end_time": 3215180.0,
      "text": "But you don&#39;t name the arguments as you pass them in and call a function."
    },
    {
      "index": 1190,
      "start_time": 3215180.0,
      "end_time": 3218480.0,
      "text": "You instead pass them in in the appropriate order per the man page"
    },
    {
      "index": 1191,
      "start_time": 3218480.0,
      "end_time": 3220550.0,
      "text": "or per the documentation."
    },
    {
      "index": 1192,
      "start_time": 3220550.0,
      "end_time": 3223580.0,
      "text": "In Python, you can actually be a little more flexible."
    },
    {
      "index": 1193,
      "start_time": 3223580.0,
      "end_time": 3227660.0,
      "text": "If a function takes multiple arguments, all of which have names,"
    },
    {
      "index": 1194,
      "start_time": 3227660.0,
      "end_time": 3230450.0,
      "text": "you can actually mention the names explicitly,"
    },
    {
      "index": 1195,
      "start_time": 3230450.0,
      "end_time": 3233299.0,
      "text": "thereby freeing you from the minor inconvenience"
    },
    {
      "index": 1196,
      "start_time": 3233300.0,
      "end_time": 3237720.0,
      "text": "of having to remember and always get right the actual order of arguments."
    },
    {
      "index": 1197,
      "start_time": 3237720.0,
      "end_time": 3241160.0,
      "text": "So in this case, print apparently takes at least two arguments"
    },
    {
      "index": 1198,
      "start_time": 3241160.0,
      "end_time": 3243140.0,
      "text": "in this case, one of which is called end."
    },
    {
      "index": 1199,
      "start_time": 3243140.0,
      "end_time": 3246799.0,
      "text": "And if you want to use that one, which is clearly optional because I haven&#39;t"
    },
    {
      "index": 1200,
      "start_time": 3246800.0,
      "end_time": 3250640.0,
      "text": "used it yet, you can literally mention it by name, set an equal sign,"
    },
    {
      "index": 1201,
      "start_time": 3250640.0,
      "end_time": 3253170.0,
      "text": "and then specify the value that you want to pass in."
    },
    {
      "index": 1202,
      "start_time": 3253170.0,
      "end_time": 3258110.0,
      "text": "So if I actually now go into this and go into weeks and 1 and do python"
    },
    {
      "index": 1203,
      "start_time": 3258110.0,
      "end_time": 3263630.0,
      "text": "of mario1.py, I&#39;ll still get--"
    },
    {
      "index": 1204,
      "start_time": 3263630.0,
      "end_time": 3265790.0,
      "text": "in week two."
    },
    {
      "index": 1205,
      "start_time": 3265790.0,
      "end_time": 3270500.0,
      "text": "If I get mario1.py, I still get four question marks."
    },
    {
      "index": 1206,
      "start_time": 3270500.0,
      "end_time": 3274940.0,
      "text": "But that&#39;s the result of printing this with a line ending of quote, unquote."
    },
    {
      "index": 1207,
      "start_time": 3274940.0,
      "end_time": 3277850.0,
      "text": "If I do this, meanwhile, it&#39;s a little stupid"
    },
    {
      "index": 1208,
      "start_time": 3277850.0,
      "end_time": 3280730.0,
      "text": "because I&#39;m going to get that for free if I just omit it altogether."
    },
    {
      "index": 1209,
      "start_time": 3280730.0,
      "end_time": 3282530.0,
      "text": "But now I get four question marks here."
    },
    {
      "index": 1210,
      "start_time": 3282530.0,
      "end_time": 3286190.0,
      "text": "And if you really want to be funky, you can do something"
    },
    {
      "index": 1211,
      "start_time": 3286190.0,
      "end_time": 3290750.0,
      "text": "like this, which is just going to be taken literally"
    },
    {
      "index": 1212,
      "start_time": 3290750.0,
      "end_time": 3292580.0,
      "text": "to give you that instead."
    },
    {
      "index": 1213,
      "start_time": 3292580.0,
      "end_time": 3296624.0,
      "text": "Unclear utility of taking this approach."
    },
    {
      "index": 1214,
      "start_time": 3296620.0,
      "end_time": 3297286.0,
      "text": "But that&#39;s all--"
    },
    {
      "index": 1215,
      "start_time": 3297290.0,
      "end_time": 3297915.0,
      "text": "[POPPING NOISE]"
    },
    {
      "index": 1216,
      "start_time": 3297920.0,
      "end_time": 3299405.0,
      "text": "Sorry-- that&#39;s going on."
    },
    {
      "index": 1217,
      "start_time": 3299400.0,
      "end_time": 3300825.0,
      "text": "Let&#39;s take a look at mario2."
    },
    {
      "index": 1218,
      "start_time": 3300820.0,
      "end_time": 3302695.0,
      "text": "This one works a little differently, as well."
    },
    {
      "index": 1219,
      "start_time": 3302700.0,
      "end_time": 3305700.0,
      "text": "And how would you describe the feature offered by this version of mario?"
    },
    {
      "index": 1220,
      "start_time": 3309370.0,
      "end_time": 3311290.0,
      "text": "Prints any number of question marks perfectly."
    },
    {
      "index": 1221,
      "start_time": 3311290.0,
      "end_time": 3314400.0,
      "text": "So it&#39;s parameterized by first getting and int from the user using"
    },
    {
      "index": 1222,
      "start_time": 3314400.0,
      "end_time": 3315670.0,
      "text": "CS50&#39;s get_int function."
    },
    {
      "index": 1223,
      "start_time": 3315670.0,
      "end_time": 3319750.0,
      "text": "And now I&#39;m iterating from i to the range of n, whatever that is,"
    },
    {
      "index": 1224,
      "start_time": 3319750.0,
      "end_time": 3322690.0,
      "text": "and then actually printing out the question marks."
    },
    {
      "index": 1225,
      "start_time": 3322690.0,
      "end_time": 3326850.0,
      "text": "Meanwhile, in mario3.py, a little fancier still."
    },
    {
      "index": 1226,
      "start_time": 3326850.0,
      "end_time": 3328540.0,
      "text": "But what am I doing a little better now?"
    },
    {
      "index": 1227,
      "start_time": 3333810.0,
      "end_time": 3336205.0,
      "text": "AUDIENCE: You&#39;re making sure that the n is positive."
    },
    {
      "index": 1228,
      "start_time": 3336200.0,
      "end_time": 3338346.0,
      "text": "DAVID MALAN: Yeah, I&#39;m just making sure that the n is positive."
    },
    {
      "index": 1229,
      "start_time": 3338350.0,
      "end_time": 3340509.0,
      "text": "So I didn&#39;t bother implementing a whole function called, like,"
    },
    {
      "index": 1230,
      "start_time": 3340510.0,
      "end_time": 3341561.0,
      "text": "get_positive_int."
    },
    {
      "index": 1231,
      "start_time": 3341560.0,
      "end_time": 3342309.0,
      "text": "I don&#39;t need that."
    },
    {
      "index": 1232,
      "start_time": 3342310.0,
      "end_time": 3343750.0,
      "text": "This is a super-short program."
    },
    {
      "index": 1233,
      "start_time": 3343750.0,
      "end_time": 3345510.0,
      "text": "I&#39;m just using the same logic up here--"
    },
    {
      "index": 1234,
      "start_time": 3345510.0,
      "end_time": 3347260.0,
      "text": "inducing, deliberately, an infinite loop,"
    },
    {
      "index": 1235,
      "start_time": 3347260.0,
      "end_time": 3350250.0,
      "text": "breaking out of it only when I&#39;ve gotten back a positive integer,"
    },
    {
      "index": 1236,
      "start_time": 3350250.0,
      "end_time": 3354750.0,
      "text": "and then printing out that many of hashtags, reminiscent of the bricks"
    },
    {
      "index": 1237,
      "start_time": 3354750.0,
      "end_time": 3355590.0,
      "text": "in Mario."
    },
    {
      "index": 1238,
      "start_time": 3355590.0,
      "end_time": 3359580.0,
      "text": "And then lastly, we have this slightly more sophisticated version"
    },
    {
      "index": 1239,
      "start_time": 3359580.0,
      "end_time": 3363319.0,
      "text": "that actually prints out a different shape altogether."
    },
    {
      "index": 1240,
      "start_time": 3363320.0,
      "end_time": 3365745.0,
      "text": "You can infer from the comments, but focus more on why."
    },
    {
      "index": 1241,
      "start_time": 3371980.0,
      "end_time": 3375154.0,
      "text": "So this first line 12 iterates from i to n,"
    },
    {
      "index": 1242,
      "start_time": 3375150.0,
      "end_time": 3377250.0,
      "text": "whatever n is that the user typed in."
    },
    {
      "index": 1243,
      "start_time": 3377250.0,
      "end_time": 3384220.0,
      "text": "Meanwhile, line 15, indented, iterates from j from 0 up to n, as well."
    },
    {
      "index": 1244,
      "start_time": 3384220.0,
      "end_time": 3386459.0,
      "text": "So this is kind of like our canonical for int i"
    },
    {
      "index": 1245,
      "start_time": 3386460.0,
      "end_time": 3389970.0,
      "text": "gets 0, dot, dot, dot, for int j get 0, dot, dot, dot, where"
    },
    {
      "index": 1246,
      "start_time": 3389970.0,
      "end_time": 3391649.0,
      "text": "we&#39;ve had nested loops in the past."
    },
    {
      "index": 1247,
      "start_time": 3391650.0,
      "end_time": 3395209.0,
      "text": "So notice now that we have this building block, which is a line of code or kind"
    },
    {
      "index": 1248,
      "start_time": 3395210.0,
      "end_time": 3396751.0,
      "text": "of conceptually just a Scratch piece."
    },
    {
      "index": 1249,
      "start_time": 3396750.0,
      "end_time": 3398640.0,
      "text": "We can embed one inside of the other."
    },
    {
      "index": 1250,
      "start_time": 3398640.0,
      "end_time": 3400470.0,
      "text": "Here I can print out a hashtag, making sure"
    },
    {
      "index": 1251,
      "start_time": 3400470.0,
      "end_time": 3404279.0,
      "text": "not to put a new line after every single hashtag I print out,"
    },
    {
      "index": 1252,
      "start_time": 3404280.0,
      "end_time": 3409980.0,
      "text": "only printing out a new line on line 17, on each iteration of the outer loop."
    },
    {
      "index": 1253,
      "start_time": 3409980.0,
      "end_time": 3414700.0,
      "text": "And now notice whereas in C we would have done this historically--"
    },
    {
      "index": 1254,
      "start_time": 3414700.0,
      "end_time": 3417685.0,
      "text": "and that&#39;s fine-- in Python, we don&#39;t need the f."
    },
    {
      "index": 1255,
      "start_time": 3417690.0,
      "end_time": 3419314.0,
      "text": "And we also don&#39;t need the backslash n."
    },
    {
      "index": 1256,
      "start_time": 3419310.0,
      "end_time": 3423290.0,
      "text": "End So ergo, you can simply do print, and you&#39;ll get, if nothing else,"
    },
    {
      "index": 1257,
      "start_time": 3423300.0,
      "end_time": 3425100.0,
      "text": "a backslash n automatically."
    },
    {
      "index": 1258,
      "start_time": 3425100.0,
      "end_time": 3427589.0,
      "text": "So that now when I run this version of Mario,"
    },
    {
      "index": 1259,
      "start_time": 3427590.0,
      "end_time": 3429270.0,
      "text": "we now get something more interesting."
    },
    {
      "index": 1260,
      "start_time": 3429270.0,
      "end_time": 3431270.0,
      "text": "And I&#39;ll increase the size of my terminal window"
    },
    {
      "index": 1261,
      "start_time": 3431270.0,
      "end_time": 3434430.0,
      "text": "for this so that I can enter a positive number like this and print 10."
    },
    {
      "index": 1262,
      "start_time": 3434430.0,
      "end_time": 3436149.0,
      "text": "And now we&#39;ve got a whole block."
    },
    {
      "index": 1263,
      "start_time": 3436150.0,
      "end_time": 3436900.0,
      "text": "So that was a lot."
    },
    {
      "index": 1264,
      "start_time": 3436900.0,
      "end_time": 3438240.0,
      "text": "Let&#39;s go ahead and take our five-minute break here."
    },
    {
      "index": 1265,
      "start_time": 3438240.0,
      "end_time": 3442490.0,
      "text": "And when we come back, we&#39;ll look at some more sophisticated examples still."
    },
    {
      "index": 1266,
      "start_time": 3442500.0,
      "end_time": 3442920.0,
      "text": "All right."
    },
    {
      "index": 1267,
      "start_time": 3442920.0,
      "end_time": 3447810.0,
      "text": "So let&#39;s begin to start to transition to actually solving problems with Python"
    },
    {
      "index": 1268,
      "start_time": 3447810.0,
      "end_time": 3450600.0,
      "text": "after introducing just a couple of additional features"
    },
    {
      "index": 1269,
      "start_time": 3450600.0,
      "end_time": 3454110.0,
      "text": "that aren&#39;t so much syntactic but actual features of the language."
    },
    {
      "index": 1270,
      "start_time": 3454110.0,
      "end_time": 3458290.0,
      "text": "So here on the left was an old program we wrote in week three called argv0.c."
    },
    {
      "index": 1271,
      "start_time": 3458290.0,
      "end_time": 3460590.0,
      "text": "And its purpose in life was simply to allow"
    },
    {
      "index": 1272,
      "start_time": 3460590.0,
      "end_time": 3463170.0,
      "text": "you to run a command-line argument for the very first time."
    },
    {
      "index": 1273,
      "start_time": 3463170.0,
      "end_time": 3465180.0,
      "text": "And that was a nice tool to have in our toolkit."
    },
    {
      "index": 1274,
      "start_time": 3465180.0,
      "end_time": 3467000.0,
      "text": "So how might we go ahead and map this?"
    },
    {
      "index": 1275,
      "start_time": 3467000.0,
      "end_time": 3469680.0,
      "text": "Well, we actually need to know how Python works"
    },
    {
      "index": 1276,
      "start_time": 3469680.0,
      "end_time": 3471609.0,
      "text": "a little bit differently as follows."
    },
    {
      "index": 1277,
      "start_time": 3471610.0,
      "end_time": 3477780.0,
      "text": "If I go ahead and open a new file called--"
    },
    {
      "index": 1278,
      "start_time": 3477780.0,
      "end_time": 3479455.0,
      "text": "let&#39;s call it argv0.py."
    },
    {
      "index": 1279,
      "start_time": 3483930.0,
      "end_time": 3486879.0,
      "text": "I&#39;m going to go ahead and translate this, just as we did earlier."
    },
    {
      "index": 1280,
      "start_time": 3486880.0,
      "end_time": 3492460.0,
      "text": "So I&#39;m going to go ahead and want to use the following."
    },
    {
      "index": 1281,
      "start_time": 3492460.0,
      "end_time": 3496380.0,
      "text": "So if argc-- so there is no argc."
    },
    {
      "index": 1282,
      "start_time": 3496380.0,
      "end_time": 3499450.0,
      "text": "And actually, so def main--"
    },
    {
      "index": 1283,
      "start_time": 3499450.0,
      "end_time": 3501540.0,
      "text": "there was also no argc or argv."
    },
    {
      "index": 1284,
      "start_time": 3501540.0,
      "end_time": 3506209.0,
      "text": "And it&#39;s not actually correct to do this and this, as you might assume."
    },
    {
      "index": 1285,
      "start_time": 3506210.0,
      "end_time": 3508501.0,
      "text": "It turns out that the feature of command-line arguments"
    },
    {
      "index": 1286,
      "start_time": 3508500.0,
      "end_time": 3511300.0,
      "text": "are provided by a Python package, so to speak,"
    },
    {
      "index": 1287,
      "start_time": 3511300.0,
      "end_time": 3514800.0,
      "text": "or a library, much like the CS50 library is a package"
    },
    {
      "index": 1288,
      "start_time": 3514800.0,
      "end_time": 3516150.0,
      "text": "that you can import in Python speak."
    },
    {
      "index": 1289,
      "start_time": 3516150.0,
      "end_time": 3520170.0,
      "text": "So to do this, I actually need to do this-- import sys, which gives me"
    },
    {
      "index": 1290,
      "start_time": 3520170.0,
      "end_time": 3522300.0,
      "text": "access to a whole bunch of system-related stuff,"
    },
    {
      "index": 1291,
      "start_time": 3522300.0,
      "end_time": 3524770.0,
      "text": "like what the user has typed at the command prompt."
    },
    {
      "index": 1292,
      "start_time": 3524770.0,
      "end_time": 3527790.0,
      "text": "And if I want to check if the number of words that the human typed"
    },
    {
      "index": 1293,
      "start_time": 3527790.0,
      "end_time": 3530759.0,
      "text": "at the prompt is two, I actually am going"
    },
    {
      "index": 1294,
      "start_time": 3530760.0,
      "end_time": 3537240.0,
      "text": "to do this-- if the length of sys.argv equals 2,"
    },
    {
      "index": 1295,
      "start_time": 3537240.0,
      "end_time": 3543930.0,
      "text": "then I&#39;m going to go ahead and print out quote, unquote, \"hello,\""
    },
    {
      "index": 1296,
      "start_time": 3543930.0,
      "end_time": 3545970.0,
      "text": "and then a placeholder here."
    },
    {
      "index": 1297,
      "start_time": 3545970.0,
      "end_time": 3549890.0,
      "text": "I know for placeholders, I need to turn this into a formatted string, so"
    },
    {
      "index": 1298,
      "start_time": 3549900.0,
      "end_time": 3550620.0,
      "text": "an f string there."
    },
    {
      "index": 1299,
      "start_time": 3550620.0,
      "end_time": 3555900.0,
      "text": "And now inside of the curly braces, it turns out I can do sys.argv[1]."
    },
    {
      "index": 1300,
      "start_time": 3558240.0,
      "end_time": 3560350.0,
      "text": "So it&#39;s a little different from before."
    },
    {
      "index": 1301,
      "start_time": 3560350.0,
      "end_time": 3563410.0,
      "text": "But notice I&#39;m borrowing almost all the same ideas as earlier,"
    },
    {
      "index": 1302,
      "start_time": 3563410.0,
      "end_time": 3565144.0,
      "text": "including how we&#39;re printing out strings."
    },
    {
      "index": 1303,
      "start_time": 3565140.0,
      "end_time": 3567596.0,
      "text": "And even though this is a little more verbose,"
    },
    {
      "index": 1304,
      "start_time": 3567600.0,
      "end_time": 3569160.0,
      "text": "what is between these two curly braces?"
    },
    {
      "index": 1305,
      "start_time": 3569160.0,
      "end_time": 3572900.0,
      "text": "Well it&#39;s the result of looking in the system package, which"
    },
    {
      "index": 1306,
      "start_time": 3572100.0,
      "end_time": 3574920.0,
      "text": "has a variable called argv, for argument vector,"
    },
    {
      "index": 1307,
      "start_time": 3574920.0,
      "end_time": 3579420.0,
      "text": "just like in C. It is itself an array, AKA a list in Python."
    },
    {
      "index": 1308,
      "start_time": 3579420.0,
      "end_time": 3584130.0,
      "text": "And here we have the result of indexing into element one of that list."
    },
    {
      "index": 1309,
      "start_time": 3584130.0,
      "end_time": 3587160.0,
      "text": "And the way that I have access to this is because I&#39;ve"
    },
    {
      "index": 1310,
      "start_time": 3587160.0,
      "end_time": 3589490.0,
      "text": "imported that whole package."
    },
    {
      "index": 1311,
      "start_time": 3589500.0,
      "end_time": 3593160.0,
      "text": "So if on the right-hand side here I go ahead, after saving that file,"
    },
    {
      "index": 1312,
      "start_time": 3593160.0,
      "end_time": 3597870.0,
      "text": "and I do python of argv0.py, I see nothing."
    },
    {
      "index": 1313,
      "start_time": 3597870.0,
      "end_time": 3601600.0,
      "text": "But if I actually say, like, my name here, I see, \"hello, David.\""
    },
    {
      "index": 1314,
      "start_time": 3601600.0,
      "end_time": 3605759.0,
      "text": "So a very similar program, but implemented a little differently."
    },
    {
      "index": 1315,
      "start_time": 3605760.0,
      "end_time": 3609450.0,
      "text": "And you&#39;ll notice, too, that the length of an array,"
    },
    {
      "index": 1316,
      "start_time": 3609450.0,
      "end_time": 3613529.0,
      "text": "henceforth known as a list, is not something that you yourself"
    },
    {
      "index": 1317,
      "start_time": 3613530.0,
      "end_time": 3615180.0,
      "text": "have to remember or keep around."
    },
    {
      "index": 1318,
      "start_time": 3615180.0,
      "end_time": 3619290.0,
      "text": "You can just ask a list how long it is by calling the len--"
    },
    {
      "index": 1319,
      "start_time": 3619290.0,
      "end_time": 3621110.0,
      "text": "or L-E-N for length--"
    },
    {
      "index": 1320,
      "start_time": 3621110.0,
      "end_time": 3623680.0,
      "text": "function, passing it in as an argument."
    },
    {
      "index": 1321,
      "start_time": 3623680.0,
      "end_time": 3625448.0,
      "text": "So that&#39;s one of the takeaways there."
    },
    {
      "index": 1322,
      "start_time": 3625450.0,
      "end_time": 3627991.0,
      "text": "And if we actually want to do something a little more clever,"
    },
    {
      "index": 1323,
      "start_time": 3627990.0,
      "end_time": 3632700.0,
      "text": "like print out all of the strings in argv, well, back in the day in see,"
    },
    {
      "index": 1324,
      "start_time": 3632700.0,
      "end_time": 3634230.0,
      "text": "you might recall this example--"
    },
    {
      "index": 1325,
      "start_time": 3634230.0,
      "end_time": 3637380.0,
      "text": "argv1.c, wherein I had this for loop."
    },
    {
      "index": 1326,
      "start_time": 3637380.0,
      "end_time": 3640950.0,
      "text": "And I iterated from zero on up to argc, the argument count,"
    },
    {
      "index": 1327,
      "start_time": 3640950.0,
      "end_time": 3644399.0,
      "text": "printing out each of the arguments in that vector."
    },
    {
      "index": 1328,
      "start_time": 3644400.0,
      "end_time": 3648120.0,
      "text": "Python actually makes even something like this even simpler."
    },
    {
      "index": 1329,
      "start_time": 3648120.0,
      "end_time": 3650400.0,
      "text": "Let me go ahead and create a new file here."
    },
    {
      "index": 1330,
      "start_time": 3650400.0,
      "end_time": 3653580.0,
      "text": "And I&#39;ll call this, say, argv1.py."
    },
    {
      "index": 1331,
      "start_time": 3653580.0,
      "end_time": 3658800.0,
      "text": "And it turns out in Python, I can similarly just import sys,"
    },
    {
      "index": 1332,
      "start_time": 3658800.0,
      "end_time": 3665830.0,
      "text": "and then do, honestly, for s in sys.argv, print s."
    },
    {
      "index": 1333,
      "start_time": 3665830.0,
      "end_time": 3666779.0,
      "text": "Done."
    },
    {
      "index": 1334,
      "start_time": 3666780.0,
      "end_time": 3668830.0,
      "text": "So again, kind of just says what it means."
    },
    {
      "index": 1335,
      "start_time": 3668830.0,
      "end_time": 3670799.0,
      "text": "So I&#39;ve imported the system library."
    },
    {
      "index": 1336,
      "start_time": 3670800.0,
      "end_time": 3674530.0,
      "text": "sys.argv I know to be a list, apparently, of command-line arguments."
    },
    {
      "index": 1337,
      "start_time": 3674530.0,
      "end_time": 3678290.0,
      "text": "For something in something is a new syntax we have for for loops."
    },
    {
      "index": 1338,
      "start_time": 3678290.0,
      "end_time": 3683630.0,
      "text": "So for some variable s inside of this list, go ahead and print it."
    },
    {
      "index": 1339,
      "start_time": 3683630.0,
      "end_time": 3685960.0,
      "text": "And so it&#39;s a much cleaner, much more succinct way"
    },
    {
      "index": 1340,
      "start_time": 3685960.0,
      "end_time": 3689680.0,
      "text": "of honestly getting rid of all of the complexity of this"
    },
    {
      "index": 1341,
      "start_time": 3689680.0,
      "end_time": 3692174.0,
      "text": "by just saying instead what we mean."
    },
    {
      "index": 1342,
      "start_time": 3692170.0,
      "end_time": 3694336.0,
      "text": "Meanwhile, if I wanted to print out every character,"
    },
    {
      "index": 1343,
      "start_time": 3694340.0,
      "end_time": 3695950.0,
      "text": "I can take this one step further."
    },
    {
      "index": 1344,
      "start_time": 3695950.0,
      "end_time": 3698500.0,
      "text": "So back in the day in C if I wanted to print out"
    },
    {
      "index": 1345,
      "start_time": 3698500.0,
      "end_time": 3703300.0,
      "text": "every command line argument and every character therein I could do this."
    },
    {
      "index": 1346,
      "start_time": 3703300.0,
      "end_time": 3706510.0,
      "text": "I just need a couple of nested loops, wherein via the outer loop,"
    },
    {
      "index": 1347,
      "start_time": 3706510.0,
      "end_time": 3709960.0,
      "text": "I iterate over all of the arguments passed in."
    },
    {
      "index": 1348,
      "start_time": 3709960.0,
      "end_time": 3713410.0,
      "text": "And on the inner loop, I iterate over the current string length"
    },
    {
      "index": 1349,
      "start_time": 3713410.0,
      "end_time": 3715460.0,
      "text": "of whatever argument I&#39;m printing."
    },
    {
      "index": 1350,
      "start_time": 3715460.0,
      "end_time": 3718750.0,
      "text": "And this had the effect of printing out all of the command-line arguments&#39;"
    },
    {
      "index": 1351,
      "start_time": 3718750.0,
      "end_time": 3721300.0,
      "text": "letters one at a time."
    },
    {
      "index": 1352,
      "start_time": 3721300.0,
      "end_time": 3723470.0,
      "text": "I can do this in Python, honestly, so much easier."
    },
    {
      "index": 1353,
      "start_time": 3723470.0,
      "end_time": 3725200.0,
      "text": "So let me go over here."
    },
    {
      "index": 1354,
      "start_time": 3725200.0,
      "end_time": 3730120.0,
      "text": "Let me create a new file called argv2.py."
    },
    {
      "index": 1355,
      "start_time": 3730120.0,
      "end_time": 3731830.0,
      "text": "Let me import sys, as I did."
    },
    {
      "index": 1356,
      "start_time": 3731830.0,
      "end_time": 3732910.0,
      "text": "So import sys."
    },
    {
      "index": 1357,
      "start_time": 3732910.0,
      "end_time": 3740109.0,
      "text": "And then for s in sys.argv, for c in s, print c."
    },
    {
      "index": 1358,
      "start_time": 3740110.0,
      "end_time": 3741430.0,
      "text": "Done."
    },
    {
      "index": 1359,
      "start_time": 3741430.0,
      "end_time": 3742720.0,
      "text": "So what is this doing?"
    },
    {
      "index": 1360,
      "start_time": 3742720.0,
      "end_time": 3747740.0,
      "text": "Gone is all of that overhead of for int i and for int j and so forth."
    },
    {
      "index": 1361,
      "start_time": 3747740.0,
      "end_time": 3752439.0,
      "text": "For s in sys.argv iterates over all of the elements of that list,"
    },
    {
      "index": 1362,
      "start_time": 3752440.0,
      "end_time": 3753490.0,
      "text": "one string at a time."
    },
    {
      "index": 1363,
      "start_time": 3753490.0,
      "end_time": 3756549.0,
      "text": "For c in s is a little different because s is technically"
    },
    {
      "index": 1364,
      "start_time": 3756550.0,
      "end_time": 3759166.0,
      "text": "a string or a str object, as we&#39;re going to start calling it."
    },
    {
      "index": 1365,
      "start_time": 3759170.0,
      "end_time": 3762404.0,
      "text": "But at the end of the day, a string is just a sequence of characters."
    },
    {
      "index": 1366,
      "start_time": 3762400.0,
      "end_time": 3766120.0,
      "text": "And it turns out Python supports, out of the box, the ability to use a for loop"
    },
    {
      "index": 1367,
      "start_time": 3766120.0,
      "end_time": 3768710.0,
      "text": "even to iterate over all of the characters in a string."
    },
    {
      "index": 1368,
      "start_time": 3768710.0,
      "end_time": 3769990.0,
      "text": "And so c-- I just mean char."
    },
    {
      "index": 1369,
      "start_time": 3769990.0,
      "end_time": 3773379.0,
      "text": "So for c in s, that gives me each of the characters."
    },
    {
      "index": 1370,
      "start_time": 3773380.0,
      "end_time": 3779650.0,
      "text": "So now at the end here, if I go ahead and run python of argv2.py"
    },
    {
      "index": 1371,
      "start_time": 3779650.0,
      "end_time": 3783790.0,
      "text": "with nothing, I get just the program&#39;s name"
    },
    {
      "index": 1372,
      "start_time": 3783790.0,
      "end_time": 3787270.0,
      "text": "because that&#39;s, of course, the very first thing in argv, as in C. And if I"
    },
    {
      "index": 1373,
      "start_time": 3787270.0,
      "end_time": 3793509.0,
      "text": "write, say, a word like \"Maria\" here, I get argv2.py, Maria,"
    },
    {
      "index": 1374,
      "start_time": 3793510.0,
      "end_time": 3797490.0,
      "text": "all in one long column because of the additional prints that are happening"
    },
    {
      "index": 1375,
      "start_time": 3797490.0,
      "end_time": 3799900.0,
      "text": "and the implicit new lines."
    },
    {
      "index": 1376,
      "start_time": 3799100.0,
      "end_time": 3803320.0,
      "text": "So any questions before we proceed on this use of a package"
    },
    {
      "index": 1377,
      "start_time": 3803320.0,
      "end_time": 3807860.0,
      "text": "called sys using these functions therein?"
    },
    {
      "index": 1378,
      "start_time": 3807860.0,
      "end_time": 3808360.0,
      "text": "All right."
    },
    {
      "index": 1379,
      "start_time": 3808360.0,
      "end_time": 3813130.0,
      "text": "So let me skip ahead, then, to something slightly familiar, too."
    },
    {
      "index": 1380,
      "start_time": 3813130.0,
      "end_time": 3819520.0,
      "text": "Let me go ahead-- and you might recall initials.c from some time ago,"
    },
    {
      "index": 1381,
      "start_time": 3819520.0,
      "end_time": 3825755.0,
      "text": "wherein we accepted as input to get_string a user&#39;s name,"
    },
    {
      "index": 1382,
      "start_time": 3825750.0,
      "end_time": 3827375.0,
      "text": "and then we printed out their initials."
    },
    {
      "index": 1383,
      "start_time": 3827380.0,
      "end_time": 3828630.0,
      "text": "So let&#39;s go ahead and do that."
    },
    {
      "index": 1384,
      "start_time": 3828630.0,
      "end_time": 3832300.0,
      "text": "So from CS50, let me go ahead and import get_string."
    },
    {
      "index": 1385,
      "start_time": 3832300.0,
      "end_time": 3834820.0,
      "text": "Then let me go ahead and say, get me a string."
    },
    {
      "index": 1386,
      "start_time": 3834820.0,
      "end_time": 3839920.0,
      "text": "And I want the user to be prompted for their name, as we might do here."
    },
    {
      "index": 1387,
      "start_time": 3839920.0,
      "end_time": 3842779.0,
      "text": "Then let me go ahead and say, all right, their initials--"
    },
    {
      "index": 1388,
      "start_time": 3842780.0,
      "end_time": 3844701.0,
      "text": "I don&#39;t know what they are yet."
    },
    {
      "index": 1389,
      "start_time": 3844700.0,
      "end_time": 3846280.0,
      "text": "So let me just initialize an empty string."
    },
    {
      "index": 1390,
      "start_time": 3846280.0,
      "end_time": 3847360.0,
      "text": "But then do this--"
    },
    {
      "index": 1391,
      "start_time": 3847360.0,
      "end_time": 3852989.0,
      "text": "for c in s, which is for each character in the person&#39;s name, if--"
    },
    {
      "index": 1392,
      "start_time": 3852990.0,
      "end_time": 3854531.0,
      "text": "and I don&#39;t know how to say this yet."
    },
    {
      "index": 1393,
      "start_time": 3854530.0,
      "end_time": 3864940.0,
      "text": "If c is an uppercase letter, then go ahead and append c to initials."
    },
    {
      "index": 1394,
      "start_time": 3864940.0,
      "end_time": 3866727.0,
      "text": "And then down here, print initials."
    },
    {
      "index": 1395,
      "start_time": 3866730.0,
      "end_time": 3868603.0,
      "text": "So I&#39;ve left a couple of blanks."
    },
    {
      "index": 1396,
      "start_time": 3868600.0,
      "end_time": 3869950.0,
      "text": "That&#39;s just pseudocode for the moment."
    },
    {
      "index": 1397,
      "start_time": 3869950.0,
      "end_time": 3873490.0,
      "text": "But this line 5, just to be clear, is doing what for me?"
    },
    {
      "index": 1398,
      "start_time": 3873490.0,
      "end_time": 3875540.0,
      "text": "What is being iterated over?"
    },
    {
      "index": 1399,
      "start_time": 3875540.0,
      "end_time": 3876399.0,
      "text": "The string."
    },
    {
      "index": 1400,
      "start_time": 3876400.0,
      "end_time": 3881210.0,
      "text": "So for each character in the string, for c in s, I&#39;m going to ask two questions."
    },
    {
      "index": 1401,
      "start_time": 3881210.0,
      "end_time": 3884350.0,
      "text": "So in C, we did this in a couple of different ways."
    },
    {
      "index": 1402,
      "start_time": 3884350.0,
      "end_time": 3888427.0,
      "text": "We can actually do it with inequality checks"
    },
    {
      "index": 1403,
      "start_time": 3888430.0,
      "end_time": 3891103.0,
      "text": "and actually considering what the underlying ASCII values are."
    },
    {
      "index": 1404,
      "start_time": 3891100.0,
      "end_time": 3895000.0,
      "text": "The ctype library had that isupper function and islower that we use."
    },
    {
      "index": 1405,
      "start_time": 3895000.0,
      "end_time": 3900760.0,
      "text": "Well, it turns out because c is itself not a char,"
    },
    {
      "index": 1406,
      "start_time": 3900760.0,
      "end_time": 3904900.0,
      "text": "there is no such thing, technically, as a char in Python."
    },
    {
      "index": 1407,
      "start_time": 3904900.0,
      "end_time": 3906430.0,
      "text": "You have only strings of length 1."
    },
    {
      "index": 1408,
      "start_time": 3906430.0,
      "end_time": 3909520.0,
      "text": "And this is why single quotes no longer have any special meaning."
    },
    {
      "index": 1409,
      "start_time": 3909520.0,
      "end_time": 3913509.0,
      "text": "It turns out c is technically just a one-character string."
    },
    {
      "index": 1410,
      "start_time": 3913510.0,
      "end_time": 3916180.0,
      "text": "Strings are what we&#39;ve started calling objects,"
    },
    {
      "index": 1411,
      "start_time": 3916180.0,
      "end_time": 3918279.0,
      "text": "which is a fancier name for struct."
    },
    {
      "index": 1412,
      "start_time": 3918280.0,
      "end_time": 3922400.0,
      "text": "So inside of an object like a string is functionality."
    },
    {
      "index": 1413,
      "start_time": 3922400.0,
      "end_time": 3926130.0,
      "text": "And we saw one piece of functionality earlier, which was what?"
    },
    {
      "index": 1414,
      "start_time": 3926130.0,
      "end_time": 3931910.0,
      "text": "Not length, though that is another one."
    },
    {
      "index": 1415,
      "start_time": 3931910.0,
      "end_time": 3933690.0,
      "text": "It was format."
    },
    {
      "index": 1416,
      "start_time": 3933700.0,
      "end_time": 3934150.0,
      "text": "We saw it briefly."
    },
    {
      "index": 1417,
      "start_time": 3934150.0,
      "end_time": 3936667.0,
      "text": "But when I did the string.format, I proposed"
    },
    {
      "index": 1418,
      "start_time": 3936670.0,
      "end_time": 3938503.0,
      "text": "that there&#39;s actually built-in functionality"
    },
    {
      "index": 1419,
      "start_time": 3938500.0,
      "end_time": 3939857.0,
      "text": "to a string called format."
    },
    {
      "index": 1420,
      "start_time": 3939860.0,
      "end_time": 3940693.0,
      "text": "Well, you know what?"
    },
    {
      "index": 1421,
      "start_time": 3940690.0,
      "end_time": 3945220.0,
      "text": "It turns out there is a method or function inside of the string"
    },
    {
      "index": 1422,
      "start_time": 3945220.0,
      "end_time": 3947379.0,
      "text": "class also called isupper."
    },
    {
      "index": 1423,
      "start_time": 3947380.0,
      "end_time": 3951700.0,
      "text": "And I can ask the very string I&#39;m looking at that question"
    },
    {
      "index": 1424,
      "start_time": 3951700.0,
      "end_time": 3957610.0,
      "text": "by saying if c.isupper is true, then go ahead and append c to initials."
    },
    {
      "index": 1425,
      "start_time": 3957610.0,
      "end_time": 3963800.0,
      "text": "So in C, if initials were technically a string,"
    },
    {
      "index": 1426,
      "start_time": 3963800.0,
      "end_time": 3967460.0,
      "text": "how could you go about appending another character to a string in C?"
    },
    {
      "index": 1427,
      "start_time": 3970310.0,
      "end_time": 3972110.0,
      "text": "AUDIENCE: c.append?"
    },
    {
      "index": 1428,
      "start_time": 3972110.0,
      "end_time": 3977390.0,
      "text": "DAVID MALAN: Not in C. In C. So in C, the language."
    },
    {
      "index": 1429,
      "start_time": 3977390.0,
      "end_time": 3978680.0,
      "text": "OK, so what&#39;s a string in C?"
    },
    {
      "index": 1430,
      "start_time": 3978680.0,
      "end_time": 3980750.0,
      "text": "A string in C is a sequence of characters,"
    },
    {
      "index": 1431,
      "start_time": 3980750.0,
      "end_time": 3983730.0,
      "text": "the last one of which is backslash 0."
    },
    {
      "index": 1432,
      "start_time": 3983730.0,
      "end_time": 3984230.0,
      "text": "All right."
    },
    {
      "index": 1433,
      "start_time": 3984230.0,
      "end_time": 3986771.0,
      "text": "So it&#39;s an array of characters, last of which is backslash 0."
    },
    {
      "index": 1434,
      "start_time": 3986770.0,
      "end_time": 3989719.0,
      "text": "So if I, for instance, typed in my first name, \"David,\""
    },
    {
      "index": 1435,
      "start_time": 3989720.0,
      "end_time": 3993500.0,
      "text": "and now I want to append \"Malan\" to the end of it, how do I do that in C?"
    },
    {
      "index": 1436,
      "start_time": 3993500.0,
      "end_time": 3995655.0,
      "text": "AUDIENCE: [INAUDIBLE]"
    },
    {
      "index": 1437,
      "start_time": 3995660.0,
      "end_time": 3996535.0,
      "text": "DAVID MALAN: Exactly."
    },
    {
      "index": 1438,
      "start_time": 3996530.0,
      "end_time": 3998300.0,
      "text": "It&#39;s like an utter pain in the neck."
    },
    {
      "index": 1439,
      "start_time": 3998300.0,
      "end_time": 4001240.0,
      "text": "You have to create a new array that&#39;s bigger, that can fit both words,"
    },
    {
      "index": 1440,
      "start_time": 4001240.0,
      "end_time": 4005229.0,
      "text": "copy the \"David\" into the new array, then copy the last name in, then put"
    },
    {
      "index": 1441,
      "start_time": 4005230.0,
      "end_time": 4007270.0,
      "text": "the null terminator at the new array, then free,"
    },
    {
      "index": 1442,
      "start_time": 4007270.0,
      "end_time": 4008524.0,
      "text": "probably, the original memory."
    },
    {
      "index": 1443,
      "start_time": 4008520.0,
      "end_time": 4010936.0,
      "text": "I mean, it&#39;s a ridiculous number of hoops to jump through."
    },
    {
      "index": 1444,
      "start_time": 4010940.0,
      "end_time": 4013856.0,
      "text": "And you&#39;ve done this on occasion, especially for things like, perhaps,"
    },
    {
      "index": 1445,
      "start_time": 4013860.0,
      "end_time": 4014804.0,
      "text": "problem set five."
    },
    {
      "index": 1446,
      "start_time": 4014800.0,
      "end_time": 4016570.0,
      "text": "But my god, we&#39;re kind of past that."
    },
    {
      "index": 1447,
      "start_time": 4016570.0,
      "end_time": 4020990.0,
      "text": "Just go ahead and append to the array the character you care about."
    },
    {
      "index": 1448,
      "start_time": 4020990.0,
      "end_time": 4023589.0,
      "text": "So in this case, not an array, but a list."
    },
    {
      "index": 1449,
      "start_time": 4023590.0,
      "end_time": 4028000.0,
      "text": "Sorry, not an array but a string object that&#39;s initially blank."
    },
    {
      "index": 1450,
      "start_time": 4028000.0,
      "end_time": 4030190.0,
      "text": "It turns out that Python supports this syntax--"
    },
    {
      "index": 1451,
      "start_time": 4030190.0,
      "end_time": 4034450.0,
      "text": "plus equals typically means arithmetic and add one number to another."
    },
    {
      "index": 1452,
      "start_time": 4034450.0,
      "end_time": 4036690.0,
      "text": "But it also means append."
    },
    {
      "index": 1453,
      "start_time": 4036700.0,
      "end_time": 4041225.0,
      "text": "So you can simply append to initials by doing plus equals c, one"
    },
    {
      "index": 1454,
      "start_time": 4041230.0,
      "end_time": 4042105.0,
      "text": "additional character."
    },
    {
      "index": 1455,
      "start_time": 4042100.0,
      "end_time": 4044920.0,
      "text": "So even though the string starts like this, and this big in memory,"
    },
    {
      "index": 1456,
      "start_time": 4044920.0,
      "end_time": 4046670.0,
      "text": "it&#39;s then going to grow for one character,"
    },
    {
      "index": 1457,
      "start_time": 4046670.0,
      "end_time": 4050620.0,
      "text": "grow, grow, grow, grow, until it has all of the user&#39;s initials."
    },
    {
      "index": 1458,
      "start_time": 4050620.0,
      "end_time": 4053920.0,
      "text": "And as for where that memory is coming from, who cares?"
    },
    {
      "index": 1459,
      "start_time": 4053920.0,
      "end_time": 4056100.0,
      "text": "This is the point that we&#39;re now past."
    },
    {
      "index": 1460,
      "start_time": 4056100.0,
      "end_time": 4057569.0,
      "text": "You leave it to the language."
    },
    {
      "index": 1461,
      "start_time": 4057570.0,
      "end_time": 4060480.0,
      "text": "You leave it to the computer to start to manage those details."
    },
    {
      "index": 1462,
      "start_time": 4060480.0,
      "end_time": 4062230.0,
      "text": "And yes, if it needs to call malloc, fine."
    },
    {
      "index": 1463,
      "start_time": 4062230.0,
      "end_time": 4062729.0,
      "text": "Do it."
    },
    {
      "index": 1464,
      "start_time": 4062730.0,
      "end_time": 4064293.0,
      "text": "Don&#39;t bother me with that detail."
    },
    {
      "index": 1465,
      "start_time": 4064290.0,
      "end_time": 4066248.0,
      "text": "We can now start thinking and writing code sort"
    },
    {
      "index": 1466,
      "start_time": 4066250.0,
      "end_time": 4069560.0,
      "text": "of conceptually at this level, instead of at this level."
    },
    {
      "index": 1467,
      "start_time": 4069560.0,
      "end_time": 4072370.0,
      "text": "So again, we&#39;re sort of abstracting away what a string even is"
    },
    {
      "index": 1468,
      "start_time": 4072370.0,
      "end_time": 4074390.0,
      "text": "and leaving it to the language itself."
    },
    {
      "index": 1469,
      "start_time": 4074390.0,
      "end_time": 4078190.0,
      "text": "So if I now go ahead and run python of initials.py and type"
    },
    {
      "index": 1470,
      "start_time": 4078190.0,
      "end_time": 4085000.0,
      "text": "in, for instance, \"Maria Zlatkova\" here, with a capital M and a capital Z,"
    },
    {
      "index": 1471,
      "start_time": 4085000.0,
      "end_time": 4088000.0,
      "text": "I then see her names because I&#39;ve plucked out the middle initials."
    },
    {
      "index": 1472,
      "start_time": 4088000.0,
      "end_time": 4092800.0,
      "text": "And if we do something else, like \"David J. Malan,\" even with a period in there,"
    },
    {
      "index": 1473,
      "start_time": 4092800.0,
      "end_time": 4095890.0,
      "text": "it infers from the capitalization what my initials should actually be."
    },
    {
      "index": 1474,
      "start_time": 4095890.0,
      "end_time": 4098562.0,
      "text": "So again, a much tighter way of doing things."
    },
    {
      "index": 1475,
      "start_time": 4098560.0000000005,
      "end_time": 4100517.0000000005,
      "text": "Let me go ahead and now open up another example"
    },
    {
      "index": 1476,
      "start_time": 4100520.0000000005,
      "end_time": 4102353.0000000005,
      "text": "we didn&#39;t see a few weeks ago, though it was"
    },
    {
      "index": 1477,
      "start_time": 4102350.0000000005,
      "end_time": 4106146.0000000005,
      "text": "included in some of our distribution code, if you wanted to look."
    },
    {
      "index": 1478,
      "start_time": 4106149.9999999995,
      "end_time": 4110200.9999999995,
      "text": "Some weeks ago, we had this program among the distribution code,"
    },
    {
      "index": 1479,
      "start_time": 4110200.0,
      "end_time": 4114790.0,
      "text": "where I declared an array of strings called book."
    },
    {
      "index": 1480,
      "start_time": 4114790.0,
      "end_time": 4118240.0,
      "text": "And I proposed that there were these several names in the phone"
    },
    {
      "index": 1481,
      "start_time": 4118240.0,
      "end_time": 4121688.0,
      "text": "book, so to speak-- all of the past instructors of CS50"
    },
    {
      "index": 1482,
      "start_time": 4121689.9999999995,
      "end_time": 4123400.9999999995,
      "text": "sorted alphabetically."
    },
    {
      "index": 1483,
      "start_time": 4123399.9999999995,
      "end_time": 4127959.9999999995,
      "text": "And then down below in this C program, I used that global variable called book"
    },
    {
      "index": 1484,
      "start_time": 4127960.0,
      "end_time": 4131140.0,
      "text": "to implement, it seems, linear search."
    },
    {
      "index": 1485,
      "start_time": 4131140.0000000005,
      "end_time": 4133689.0000000005,
      "text": "And to implement linear search in C, I&#39;m going to need,"
    },
    {
      "index": 1486,
      "start_time": 4133689.9999999995,
      "end_time": 4137800.9999999995,
      "text": "of course, a loop to iterate over all of the strings."
    },
    {
      "index": 1487,
      "start_time": 4137800.0,
      "end_time": 4139689.0,
      "text": "This line 26 does exactly that."
    },
    {
      "index": 1488,
      "start_time": 4139689.9999999995,
      "end_time": 4141709.9999999995,
      "text": "I then in C, recall, had to use str compare"
    },
    {
      "index": 1489,
      "start_time": 4141710.0,
      "end_time": 4143501.0,
      "text": "because remember we tripped over this issue"
    },
    {
      "index": 1490,
      "start_time": 4143500.0,
      "end_time": 4145782.0,
      "text": "early on where you can&#39;t just compare two strings in C"
    },
    {
      "index": 1491,
      "start_time": 4145779.9999999995,
      "end_time": 4147487.9999999995,
      "text": "because you&#39;d be comparing, accidentally,"
    },
    {
      "index": 1492,
      "start_time": 4147490.0,
      "end_time": 4151370.0,
      "text": "their addresses, their pointers, not the actual value."
    },
    {
      "index": 1493,
      "start_time": 4151370.0,
      "end_time": 4152740.0,
      "text": "So we used str compare."
    },
    {
      "index": 1494,
      "start_time": 4152740.0,
      "end_time": 4155710.0,
      "text": "And I could pass in the name that I&#39;m looking for in the i&#39;th book one"
    },
    {
      "index": 1495,
      "start_time": 4155710.0,
      "end_time": 4158229.0,
      "text": "at a time, checking for equals zero."
    },
    {
      "index": 1496,
      "start_time": 4158229.9999999995,
      "end_time": 4160569.9999999995,
      "text": "And then I can call Mike or David or whoever"
    },
    {
      "index": 1497,
      "start_time": 4160569.9999999995,
      "end_time": 4164300.9999999995,
      "text": "I&#39;m trying to call, or just quit if the user isn&#39;t found."
    },
    {
      "index": 1498,
      "start_time": 4164300.0,
      "end_time": 4165970.0,
      "text": "So what did this program actually do?"
    },
    {
      "index": 1499,
      "start_time": 4165970.0000000005,
      "end_time": 4171600.0000000005,
      "text": "If I go into this example, which, again, was from weeks 3,"
    },
    {
      "index": 1500,
      "start_time": 4171600.0000000005,
      "end_time": 4173340.0000000005,
      "text": "and I do make linear--"
    },
    {
      "index": 1501,
      "start_time": 4173340.0,
      "end_time": 4175189.0,
      "text": "nope, not that."
    },
    {
      "index": 1502,
      "start_time": 4175189.9999999995,
      "end_time": 4176830.9999999995,
      "text": "Wrong directory again."
    },
    {
      "index": 1503,
      "start_time": 4176830.0,
      "end_time": 4181390.0,
      "text": "If I go into source3 and make linear, this program"
    },
    {
      "index": 1504,
      "start_time": 4181390.0000000005,
      "end_time": 4183240.0000000005,
      "text": "is supposed to behave as follows."
    },
    {
      "index": 1505,
      "start_time": 4183240.0,
      "end_time": 4187849.0,
      "text": "So if I go ahead and run ./linear, look for our old friend Smith,"
    },
    {
      "index": 1506,
      "start_time": 4187850.0000000005,
      "end_time": 4188859.0000000005,
      "text": "it found Smith."
    },
    {
      "index": 1507,
      "start_time": 4188859.9999999995,
      "end_time": 4192609.9999999995,
      "text": "If I go ahead and search for, say, Jones, who did not previously"
    },
    {
      "index": 1508,
      "start_time": 4192609.9999999995,
      "end_time": 4194611.0,
      "text": "teach CS50, it says \"quitting.\""
    },
    {
      "index": 1509,
      "start_time": 4194600.0,
      "end_time": 4194559.0,
      "text": "All right."
    },
    {
      "index": 1510,
      "start_time": 4194560.0,
      "end_time": 4200710.0,
      "text": "So meanwhile, in Python, bless its heart, we can get rid of all of that."
    },
    {
      "index": 1511,
      "start_time": 4200710.0,
      "end_time": 4205600.0,
      "text": "And in our source8 directory here and our subdirectory 3,"
    },
    {
      "index": 1512,
      "start_time": 4205600.0,
      "end_time": 4208660.0,
      "text": "let me go ahead and open this instead."
    },
    {
      "index": 1513,
      "start_time": 4208660.0,
      "end_time": 4212650.0,
      "text": "In Python, I can declare an array, otherwise known as a list,"
    },
    {
      "index": 1514,
      "start_time": 4212650.0,
      "end_time": 4213830.0,
      "text": "almost in the same way."
    },
    {
      "index": 1515,
      "start_time": 4213830.0,
      "end_time": 4216982.0,
      "text": "But what&#39;s different, just to be super clear?"
    },
    {
      "index": 1516,
      "start_time": 4216980.0,
      "end_time": 4217928.0,
      "text": "AUDIENCE: Brackets?"
    },
    {
      "index": 1517,
      "start_time": 4217930.0,
      "end_time": 4219640.0,
      "text": "DAVID MALAN: So the brackets are now square brackets"
    },
    {
      "index": 1518,
      "start_time": 4219640.0,
      "end_time": 4220660.0,
      "text": "instead of curly braces."
    },
    {
      "index": 1519,
      "start_time": 4220660.0,
      "end_time": 4224260.0,
      "text": "And frankly, unless you statically initialized an array in C--"
    },
    {
      "index": 1520,
      "start_time": 4224260.0,
      "end_time": 4226270.0,
      "text": "like hardcoded the values for your array in C--"
    },
    {
      "index": 1521,
      "start_time": 4226270.0,
      "end_time": 4228680.0,
      "text": "you might not have even known you could use curly braces."
    },
    {
      "index": 1522,
      "start_time": 4228680.0,
      "end_time": 4230150.0,
      "text": "So that&#39;s not a huge deal here."
    },
    {
      "index": 1523,
      "start_time": 4230150.0,
      "end_time": 4235360.0,
      "text": "But in Python, square brackets here and here represent a list of elements,"
    },
    {
      "index": 1524,
      "start_time": 4235360.0,
      "end_time": 4236110.0,
      "text": "literally."
    },
    {
      "index": 1525,
      "start_time": 4236110.0,
      "end_time": 4239268.0,
      "text": "And what else is different?"
    },
    {
      "index": 1526,
      "start_time": 4239270.0,
      "end_time": 4240811.0,
      "text": "Didn&#39;t declare the size of the array."
    },
    {
      "index": 1527,
      "start_time": 4240810.0,
      "end_time": 4242685.0,
      "text": "And I technically don&#39;t have to do that in C,"
    },
    {
      "index": 1528,
      "start_time": 4242690.0,
      "end_time": 4245675.0,
      "text": "either, if you&#39;re hardcoding all of the values all at once."
    },
    {
      "index": 1529,
      "start_time": 4245670.0,
      "end_time": 4248648.0,
      "text": "But there is something missing on line 7."
    },
    {
      "index": 1530,
      "start_time": 4248650.0,
      "end_time": 4249531.0,
      "text": "AUDIENCE: Type."
    },
    {
      "index": 1531,
      "start_time": 4249530.0,
      "end_time": 4250321.0,
      "text": "DAVID MALAN: Sorry?"
    },
    {
      "index": 1532,
      "start_time": 4250320.0,
      "end_time": 4251120.0,
      "text": "AUDIENCE: The type?"
    },
    {
      "index": 1533,
      "start_time": 4251120.0,
      "end_time": 4251730.0,
      "text": "DAVID MALAN: The type."
    },
    {
      "index": 1534,
      "start_time": 4251730.0,
      "end_time": 4252900.0,
      "text": "I didn&#39;t specify string."
    },
    {
      "index": 1535,
      "start_time": 4252900.0,
      "end_time": 4256259.0,
      "text": "But otherwise, this is pretty similar to what we&#39;ve done in C."
    },
    {
      "index": 1536,
      "start_time": 4256260.0,
      "end_time": 4258130.0,
      "text": "But what&#39;s beautiful here--"
    },
    {
      "index": 1537,
      "start_time": 4258130.0,
      "end_time": 4261310.0,
      "text": "and let me go ahead and hide that for just a second."
    },
    {
      "index": 1538,
      "start_time": 4261310.0,
      "end_time": 4265170.0,
      "text": "Let me go ahead and prompt the user for his or her name."
    },
    {
      "index": 1539,
      "start_time": 4265170.0,
      "end_time": 4267120.0,
      "text": "So let&#39;s ask for the name here."
    },
    {
      "index": 1540,
      "start_time": 4267120.0,
      "end_time": 4270660.0,
      "text": "And then if I want to search the book, which is just a list of names,"
    },
    {
      "index": 1541,
      "start_time": 4270660.0,
      "end_time": 4272309.0,
      "text": "how do I implement linear search?"
    },
    {
      "index": 1542,
      "start_time": 4272310.0,
      "end_time": 4280425.0,
      "text": "Well I could just do if name in book, print \"Calling name.\""
    },
    {
      "index": 1543,
      "start_time": 4280420.0,
      "end_time": 4282505.0,
      "text": "And Let&#39;s make this an f string."
    },
    {
      "index": 1544,
      "start_time": 4282510.0,
      "end_time": 4285384.0,
      "text": "And then down here, that&#39;s it."
    },
    {
      "index": 1545,
      "start_time": 4285380.0,
      "end_time": 4287546.0,
      "text": "So that&#39;s how you implement linear search in Python."
    },
    {
      "index": 1546,
      "start_time": 4287550.0,
      "end_time": 4288600.0,
      "text": "You don&#39;t need a loop."
    },
    {
      "index": 1547,
      "start_time": 4288600.0,
      "end_time": 4290730.0,
      "text": "You can just ask the question yourself."
    },
    {
      "index": 1548,
      "start_time": 4290730.0,
      "end_time": 4295490.0,
      "text": "So if book is a list, and name is the string that you&#39;re looking for,"
    },
    {
      "index": 1549,
      "start_time": 4295490.0,
      "end_time": 4299280.0,
      "text": "just ask the language to figure this out for you."
    },
    {
      "index": 1550,
      "start_time": 4299280.0,
      "end_time": 4303420.0,
      "text": "If name in book is the syntax you can use to ask literally that question."
    },
    {
      "index": 1551,
      "start_time": 4303420.0,
      "end_time": 4306912.0,
      "text": "And then Python will use, probably, linear search over that list"
    },
    {
      "index": 1552,
      "start_time": 4306910.0,
      "end_time": 4309118.0,
      "text": "because it doesn&#39;t necessarily know it&#39;s sorted, even"
    },
    {
      "index": 1553,
      "start_time": 4309120.0,
      "end_time": 4310760.0,
      "text": "though it happens to be alphabetically."
    },
    {
      "index": 1554,
      "start_time": 4310760.0,
      "end_time": 4313260.0,
      "text": "But it will find it for you, thereby saving us"
    },
    {
      "index": 1555,
      "start_time": 4313260.0,
      "end_time": 4318180.0,
      "text": "a lot of the complexity and time of having had to implement that ourselves."
    },
    {
      "index": 1556,
      "start_time": 4318180.0,
      "end_time": 4322270.0,
      "text": "Meanwhile, if I want to compare two strings,"
    },
    {
      "index": 1557,
      "start_time": 4322270.0,
      "end_time": 4326520.0,
      "text": "let me propose this-- let me write a quick program here, compare1.py."
    },
    {
      "index": 1558,
      "start_time": 4326520.0,
      "end_time": 4331150.0,
      "text": "And let me go ahead and from CS50 import get_string, as before."
    },
    {
      "index": 1559,
      "start_time": 4331150.0,
      "end_time": 4336210.0,
      "text": "And now let me go ahead and get one string that I&#39;ll call s."
    },
    {
      "index": 1560,
      "start_time": 4336210.0,
      "end_time": 4340410.0,
      "text": "And let me get another string that I shall call t,"
    },
    {
      "index": 1561,
      "start_time": 4340410.0,
      "end_time": 4342480.0,
      "text": "just as we did a few weeks ago."
    },
    {
      "index": 1562,
      "start_time": 4342480.0,
      "end_time": 4347129.0,
      "text": "And now in C, this was buggy, right?"
    },
    {
      "index": 1563,
      "start_time": 4347130.0,
      "end_time": 4352480.0,
      "text": "If I print same, else I print different."
    },
    {
      "index": 1564,
      "start_time": 4352480.0,
      "end_time": 4358410.0,
      "text": "So in C, just to be super clear, why was this incorrect, this general idea"
    },
    {
      "index": 1565,
      "start_time": 4358410.0,
      "end_time": 4359519.0,
      "text": "of using equals equals?"
    },
    {
      "index": 1566,
      "start_time": 4362690.0,
      "end_time": 4364398.0,
      "text": "Yeah, they&#39;re comparing addresses, right?"
    },
    {
      "index": 1567,
      "start_time": 4364400.0,
      "end_time": 4367700.0,
      "text": "This was like the day before we peeled back"
    },
    {
      "index": 1568,
      "start_time": 4367700.0,
      "end_time": 4369349.0,
      "text": "the layer of what a string actually is."
    },
    {
      "index": 1569,
      "start_time": 4369350.0,
      "end_time": 4373219.0,
      "text": "And it turns out that s and t in C were char stars or addresses, which"
    },
    {
      "index": 1570,
      "start_time": 4373220.0,
      "end_time": 4375261.0,
      "text": "means certainly if you get two different strings,"
    },
    {
      "index": 1571,
      "start_time": 4375260.0,
      "end_time": 4376880.0,
      "text": "even if you&#39;ve typed the same characters,"
    },
    {
      "index": 1572,
      "start_time": 4376880.0,
      "end_time": 4378530.0,
      "text": "you&#39;re going to be comparing two different addresses."
    },
    {
      "index": 1573,
      "start_time": 4378530.0,
      "end_time": 4380400.0,
      "text": "They&#39;re not going to be the same."
    },
    {
      "index": 1574,
      "start_time": 4380400.0,
      "end_time": 4382820.0,
      "text": "Now, you can perhaps infer from the theme of today--"
    },
    {
      "index": 1575,
      "start_time": 4382820.0,
      "end_time": 4387230.0,
      "text": "what is Python going to do if asked if s and t are equal?"
    },
    {
      "index": 1576,
      "start_time": 4387230.0,
      "end_time": 4391250.0,
      "text": "It&#39;s gonna answer that question as you would expect as the human."
    },
    {
      "index": 1577,
      "start_time": 4391250.0,
      "end_time": 4394910.0,
      "text": "Equals equals now, in Python, is going to compare s and t,"
    },
    {
      "index": 1578,
      "start_time": 4394910.0,
      "end_time": 4397730.0,
      "text": "look at their actual values because they are strings,"
    },
    {
      "index": 1579,
      "start_time": 4397730.0,
      "end_time": 4401549.0,
      "text": "and return same if you literally typed the same words."
    },
    {
      "index": 1580,
      "start_time": 4401550.0,
      "end_time": 4407520.0,
      "text": "So in here, if I go in here and I do python of compare1.py, and I type in,"
    },
    {
      "index": 1581,
      "start_time": 4407520.0,
      "end_time": 4413360.0,
      "text": "for instance, \"Maria,\" and then I type in \"Maria,\" they&#39;re indeed the same."
    },
    {
      "index": 1582,
      "start_time": 4413360.0,
      "end_time": 4416420.0,
      "text": "If I type in \"Maria\" and, say, \"Stelios,\" they&#39;re"
    },
    {
      "index": 1583,
      "start_time": 4416420.0,
      "end_time": 4419180.0,
      "text": "different because it&#39;s actually now comparing the strings,"
    },
    {
      "index": 1584,
      "start_time": 4419180.0,
      "end_time": 4421847.0,
      "text": "as we would have hoped some time ago."
    },
    {
      "index": 1585,
      "start_time": 4421850.0,
      "end_time": 4423682.0,
      "text": "So let&#39;s take a look at another that kind of"
    },
    {
      "index": 1586,
      "start_time": 4423680.0,
      "end_time": 4425600.0,
      "text": "led to some interesting quandaries."
    },
    {
      "index": 1587,
      "start_time": 4425600.0,
      "end_time": 4430700.0,
      "text": "You might recall in week four, we had this example in C--"
    },
    {
      "index": 1588,
      "start_time": 4430700.0,
      "end_time": 4434849.0,
      "text": "noswap, so named because this just did not work."
    },
    {
      "index": 1589,
      "start_time": 4434850.0,
      "end_time": 4437420.0,
      "text": "It was logically seemingly correct."
    },
    {
      "index": 1590,
      "start_time": 4437420.0,
      "end_time": 4442800.0,
      "text": "But swap did not actually swap x and y, but it did swap a and b."
    },
    {
      "index": 1591,
      "start_time": 4442800.0,
      "end_time": 4442580.0,
      "text": "Why?"
    },
    {
      "index": 1592,
      "start_time": 4445980.0,
      "end_time": 4447438.0,
      "text": "AUDIENCE: The memory locations?"
    },
    {
      "index": 1593,
      "start_time": 4447440.0,
      "end_time": 4449870.0,
      "text": "DAVID MALAN: The memory locations were different, right?"
    },
    {
      "index": 1594,
      "start_time": 4449870.0,
      "end_time": 4454490.0,
      "text": "So x and y, recall, are variables in C that exist in a certain slice of memory"
    },
    {
      "index": 1595,
      "start_time": 4454490.0,
      "end_time": 4458130.0,
      "text": "that we called a frame on the stack, main&#39;s frame on the stack."
    },
    {
      "index": 1596,
      "start_time": 4458130.0,
      "end_time": 4462130.0,
      "text": "Meanwhile, a and b are from a slightly different location in memory."
    },
    {
      "index": 1597,
      "start_time": 4462130.0,
      "end_time": 4463880.0,
      "text": "We sort of kept drawing it slightly above,"
    },
    {
      "index": 1598,
      "start_time": 4463880.0,
      "end_time": 4467700.0,
      "text": "like a tray at the dining hall on the so-called stack."
    },
    {
      "index": 1599,
      "start_time": 4467700.0,
      "end_time": 4470804.0,
      "text": "a and b had the same values of x and y--"
    },
    {
      "index": 1600,
      "start_time": 4470810.0,
      "end_time": 4473405.0,
      "text": "1 and 2-- but their own copies of them."
    },
    {
      "index": 1601,
      "start_time": 4473400.0,
      "end_time": 4476230.0,
      "text": "So even though we logically, as with Kate, I think,"
    },
    {
      "index": 1602,
      "start_time": 4476230.0,
      "end_time": 4479150.0,
      "text": "with the Gatorade, swapped the two values,"
    },
    {
      "index": 1603,
      "start_time": 4479150.0,
      "end_time": 4481280.0,
      "text": "we ultimately swapped the wrong two values"
    },
    {
      "index": 1604,
      "start_time": 4481280.0,
      "end_time": 4485389.0,
      "text": "without actually permanently mutating the original x and y."
    },
    {
      "index": 1605,
      "start_time": 4485390.0,
      "end_time": 4488600.0,
      "text": "So unfortunately-- well, fortunately and unfortunately in Python,"
    },
    {
      "index": 1606,
      "start_time": 4488600.0,
      "end_time": 4490370.0,
      "text": "there is no such thing as a pointer."
    },
    {
      "index": 1607,
      "start_time": 4490370.0,
      "end_time": 4491797.0,
      "text": "So those are now gone."
    },
    {
      "index": 1608,
      "start_time": 4491800.0,
      "end_time": 4493882.0,
      "text": "So we no longer have the expressiveness with which"
    },
    {
      "index": 1609,
      "start_time": 4493880.0,
      "end_time": 4495900.0,
      "text": "to solve this problem that way."
    },
    {
      "index": 1610,
      "start_time": 4495900.0,
      "end_time": 4501980.0,
      "text": "But let me propose that we do it in oh-so-clever of another way."
    },
    {
      "index": 1611,
      "start_time": 4501980.0,
      "end_time": 4506300.0,
      "text": "Here let me go ahead and declare x is 1, y is 2."
    },
    {
      "index": 1612,
      "start_time": 4506300.0,
      "end_time": 4507710.0,
      "text": "Let me go ahead and print out as much."
    },
    {
      "index": 1613,
      "start_time": 4507710.0,
      "end_time": 4513350.0,
      "text": "So with a format string, I&#39;m going to go ahead and say x is x, y is y,"
    },
    {
      "index": 1614,
      "start_time": 4513350.0,
      "end_time": 4515240.0,
      "text": "plugging in their respective values."
    },
    {
      "index": 1615,
      "start_time": 4515240.0,
      "end_time": 4516710.0,
      "text": "I&#39;m going to do that twice."
    },
    {
      "index": 1616,
      "start_time": 4516710.0,
      "end_time": 4519560.0,
      "text": "But in between, I&#39;m going to try to perform this swap."
    },
    {
      "index": 1617,
      "start_time": 4519560.0,
      "end_time": 4522820.0,
      "text": "And if your mind&#39;s ready to be blown, you"
    },
    {
      "index": 1618,
      "start_time": 4522820.0,
      "end_time": 4527450.0,
      "text": "can do that in Python, do the old switcheroo in Python."
    },
    {
      "index": 1619,
      "start_time": 4527450.0,
      "end_time": 4530501.0,
      "text": "And this actually does swap the two values as you would expect."
    },
    {
      "index": 1620,
      "start_time": 4530500.0,
      "end_time": 4531958.0,
      "text": "Now this is not a very common case."
    },
    {
      "index": 1621,
      "start_time": 4531960.0,
      "end_time": 4534500.0,
      "text": "And to be fair, this is an incredibly contrived example"
    },
    {
      "index": 1622,
      "start_time": 4534500.0,
      "end_time": 4536287.0,
      "text": "because if you needed them swapped, well,"
    },
    {
      "index": 1623,
      "start_time": 4536290.0,
      "end_time": 4538623.0,
      "text": "maybe you should have just done this in the first place."
    },
    {
      "index": 1624,
      "start_time": 4538620.0,
      "end_time": 4540980.0,
      "text": "But it does speak to one of the features of Python,"
    },
    {
      "index": 1625,
      "start_time": 4540980.0,
      "end_time": 4544320.0,
      "text": "where you can actually do something like that."
    },
    {
      "index": 1626,
      "start_time": 4544320.0,
      "end_time": 4548179.0,
      "text": "Let me introduce now one additional feature that we only recently"
    },
    {
      "index": 1627,
      "start_time": 4548180.0,
      "end_time": 4551360.0,
      "text": "acquired in C. And that&#39;s the notion of a struct."
    },
    {
      "index": 1628,
      "start_time": 4551360.0,
      "end_time": 4554320.0,
      "text": "And let me go ahead and do this in code from scratch."
    },
    {
      "index": 1629,
      "start_time": 4554320.0,
      "end_time": 4558410.0,
      "text": "So let me go ahead and save this file proactively as struct0.py,"
    },
    {
      "index": 1630,
      "start_time": 4558410.0,
      "end_time": 4560630.0,
      "text": "reminiscent of one of our older programs."
    },
    {
      "index": 1631,
      "start_time": 4560630.0,
      "end_time": 4562700.0,
      "text": "And let me go ahead and do this."
    },
    {
      "index": 1632,
      "start_time": 4562700.0,
      "end_time": 4565730.0,
      "text": "From CS50 import get_string."
    },
    {
      "index": 1633,
      "start_time": 4565730.0,
      "end_time": 4567589.0,
      "text": "And then let me give myself an empty list."
    },
    {
      "index": 1634,
      "start_time": 4567590.0,
      "end_time": 4569840.0,
      "text": "So that would be a conventional way of giving yourself"
    },
    {
      "index": 1635,
      "start_time": 4569840.0,
      "end_time": 4571400.0,
      "text": "an empty list in Python."
    },
    {
      "index": 1636,
      "start_time": 4571400.0,
      "end_time": 4574910.0,
      "text": "And much like in C, you can declare an empty array."
    },
    {
      "index": 1637,
      "start_time": 4574910.0,
      "end_time": 4576710.0,
      "text": "But in C, you have to know the size of it"
    },
    {
      "index": 1638,
      "start_time": 4576710.0,
      "end_time": 4578300.0,
      "text": "or, if not, you have to use a pointer."
    },
    {
      "index": 1639,
      "start_time": 4578300.0,
      "end_time": 4579290.0,
      "text": "And then you have to malloc."
    },
    {
      "index": 1640,
      "start_time": 4579290.0,
      "end_time": 4579789.0,
      "text": "No."
    },
    {
      "index": 1641,
      "start_time": 4579790.0,
      "end_time": 4581001.0,
      "text": "All of that is gone."
    },
    {
      "index": 1642,
      "start_time": 4581000.0,
      "end_time": 4582509.0,
      "text": "Now in Python, you want a list?"
    },
    {
      "index": 1643,
      "start_time": 4582510.0,
      "end_time": 4583551.0,
      "text": "Just say you need a list."
    },
    {
      "index": 1644,
      "start_time": 4583550.0,
      "end_time": 4585900.0,
      "text": "And it will grow and shrink as you need."
    },
    {
      "index": 1645,
      "start_time": 4585900.0,
      "end_time": 4588950.0,
      "text": "Now I&#39;m going to go ahead and just three times, arbitrarily,"
    },
    {
      "index": 1646,
      "start_time": 4588950.0,
      "end_time": 4591590.0,
      "text": "for i in the range of 3, let me go ahead and ask"
    },
    {
      "index": 1647,
      "start_time": 4591590.0,
      "end_time": 4594590.0,
      "text": "the user for a name using get_string."
    },
    {
      "index": 1648,
      "start_time": 4594590.0,
      "end_time": 4596720.0,
      "text": "And I&#39;ll ask him or her for their name."
    },
    {
      "index": 1649,
      "start_time": 4596720.0,
      "end_time": 4599570.0,
      "text": "Dorm will use get_string, as well."
    },
    {
      "index": 1650,
      "start_time": 4599570.0,
      "end_time": 4600650.0,
      "text": "Dorm here."
    },
    {
      "index": 1651,
      "start_time": 4600650.0,
      "end_time": 4605179.0,
      "text": "And then I want to append to the array this student."
    },
    {
      "index": 1652,
      "start_time": 4605180.0,
      "end_time": 4612260.0,
      "text": "So I could do something like this-- students.append name."
    },
    {
      "index": 1653,
      "start_time": 4612260.0,
      "end_time": 4614510.0,
      "text": "And it turns out-- and we&#39;ve not said this yet."
    },
    {
      "index": 1654,
      "start_time": 4614510.0,
      "end_time": 4618790.0,
      "text": "But there is inside of the list data type a method--"
    },
    {
      "index": 1655,
      "start_time": 4618790.0,
      "end_time": 4622460.0,
      "text": "that is function-- built into it called append that literally does that."
    },
    {
      "index": 1656,
      "start_time": 4622460.0,
      "end_time": 4625530.0,
      "text": "So if you&#39;ve got an otherwise empty list,"
    },
    {
      "index": 1657,
      "start_time": 4625530.0,
      "end_time": 4627477.0,
      "text": "and you calls that list&#39;s name dot append,"
    },
    {
      "index": 1658,
      "start_time": 4627480.0,
      "end_time": 4629312.0,
      "text": "you&#39;ll add something to the end of the list."
    },
    {
      "index": 1659,
      "start_time": 4629310.0,
      "end_time": 4630920.0,
      "text": "And if there&#39;s not enough memory for it, no big deal."
    },
    {
      "index": 1660,
      "start_time": 4630920.0,
      "end_time": 4634250.0,
      "text": "Python will find you the memory, allocate it, move everything in it,"
    },
    {
      "index": 1661,
      "start_time": 4634250.0,
      "end_time": 4637160.0,
      "text": "and you move on your way without having to worry about that."
    },
    {
      "index": 1662,
      "start_time": 4637160.0,
      "end_time": 4639320.0,
      "text": "But I don&#39;t want to store just the name."
    },
    {
      "index": 1663,
      "start_time": 4639320.0,
      "end_time": 4641509.0,
      "text": "I want to store the name and the dorm."
    },
    {
      "index": 1664,
      "start_time": 4641510.0,
      "end_time": 4643200.0,
      "text": "So I could do this."
    },
    {
      "index": 1665,
      "start_time": 4643200.0,
      "end_time": 4645769.0,
      "text": "I could do-- well, maybe this isn&#39;t really students."
    },
    {
      "index": 1666,
      "start_time": 4645770.0,
      "end_time": 4647720.0,
      "text": "Maybe this is now, like, dorms."
    },
    {
      "index": 1667,
      "start_time": 4647720.0,
      "end_time": 4652910.0,
      "text": "And then here I could do dorms.append dorm."
    },
    {
      "index": 1668,
      "start_time": 4652910.0,
      "end_time": 4656750.0,
      "text": "But why is this devolving now into bad design"
    },
    {
      "index": 1669,
      "start_time": 4656750.0,
      "end_time": 4660260.0,
      "text": "if my goal was to associate a student with his or her dorm,"
    },
    {
      "index": 1670,
      "start_time": 4660260.0,
      "end_time": 4662370.0,
      "text": "and then keep those values together?"
    },
    {
      "index": 1671,
      "start_time": 4662370.0,
      "end_time": 4667100.0,
      "text": "Why is this not the best approach in Python or, back in the day, even in C,"
    },
    {
      "index": 1672,
      "start_time": 4667100.0,
      "end_time": 4670110.0,
      "text": "to have two separate arrays?"
    },
    {
      "index": 1673,
      "start_time": 4670110.0,
      "end_time": 4671460.0,
      "text": "AUDIENCE: Like struct?"
    },
    {
      "index": 1674,
      "start_time": 4671460.0,
      "end_time": 4672501.0,
      "text": "DAVID MALAN: What&#39;s that?"
    },
    {
      "index": 1675,
      "start_time": 4672500.0,
      "end_time": 4673709.0,
      "text": "AUDIENCE: Struct?"
    },
    {
      "index": 1676,
      "start_time": 4673710.0,
      "end_time": 4677467.0,
      "text": "DAVID MALAN: Well, it&#39;s twice as many things to maintain, for sure."
    },
    {
      "index": 1677,
      "start_time": 4677470.0,
      "end_time": 4678493.0,
      "text": "And what else?"
    },
    {
      "index": 1678,
      "start_time": 4678500.0,
      "end_time": 4680300.0,
      "text": "AUDIENCE: You can&#39;t map them to each other."
    },
    {
      "index": 1679,
      "start_time": 4680300.0,
      "end_time": 4681862.0,
      "text": "DAVID MALAN: You can&#39;t map one to the other."
    },
    {
      "index": 1680,
      "start_time": 4681860.0,
      "end_time": 4683537.0,
      "text": "It&#39;s just-- it&#39;s very arbitrary."
    },
    {
      "index": 1681,
      "start_time": 4683540.0,
      "end_time": 4686900.0,
      "text": "It&#39;s sort of this social contract that I will just"
    },
    {
      "index": 1682,
      "start_time": 4686900.0,
      "end_time": 4690110.0,
      "text": "assume that student 0 lives in dorm 0."
    },
    {
      "index": 1683,
      "start_time": 4690110.0,
      "end_time": 4692594.0,
      "text": "And student 1 lives in dorm 1."
    },
    {
      "index": 1684,
      "start_time": 4692590.0,
      "end_time": 4693256.0,
      "text": "And that&#39;s fine."
    },
    {
      "index": 1685,
      "start_time": 4693260.0,
      "end_time": 4694190.0,
      "text": "And that&#39;s true."
    },
    {
      "index": 1686,
      "start_time": 4694190.0,
      "end_time": 4696790.0,
      "text": "But one of the features of programming and computer science"
    },
    {
      "index": 1687,
      "start_time": 4696790.0,
      "end_time": 4699890.0,
      "text": "is this idea of encapsulation, like, associate related memory"
    },
    {
      "index": 1688,
      "start_time": 4699890.0,
      "end_time": 4700950.0,
      "text": "with each other."
    },
    {
      "index": 1689,
      "start_time": 4700950.0,
      "end_time": 4702559.0,
      "text": "And so what did we do in C instead?"
    },
    {
      "index": 1690,
      "start_time": 4702560.0,
      "end_time": 4704427.0,
      "text": "We did not have two arrays."
    },
    {
      "index": 1691,
      "start_time": 4704430.0,
      "end_time": 4705605.0,
      "text": "AUDIENCE: We had a struct."
    },
    {
      "index": 1692,
      "start_time": 4705600.0,
      "end_time": 4707588.0,
      "text": "DAVID MALAN: Yeah, we had a struct."
    },
    {
      "index": 1693,
      "start_time": 4707600.0,
      "end_time": 4710140.0,
      "text": "And so Python doesn&#39;t have structs per se."
    },
    {
      "index": 1694,
      "start_time": 4710140.0,
      "end_time": 4711994.0,
      "text": "It instead has what are called classes."
    },
    {
      "index": 1695,
      "start_time": 4711990.0,
      "end_time": 4714406.0,
      "text": "And it has a few other things like tuples and namedtuples,"
    },
    {
      "index": 1696,
      "start_time": 4714410.0,
      "end_time": 4716400.0,
      "text": "but more on those some other time."
    },
    {
      "index": 1697,
      "start_time": 4716400.0,
      "end_time": 4721990.0,
      "text": "So it turns out I could actually implement my own notion of a student."
    },
    {
      "index": 1698,
      "start_time": 4721100.0,
      "end_time": 4723500.0,
      "text": "And I could import it like this."
    },
    {
      "index": 1699,
      "start_time": 4723500.0,
      "end_time": 4726380.0,
      "text": "The convention in Python is if you create your own struct,"
    },
    {
      "index": 1700,
      "start_time": 4726380.0,
      "end_time": 4729740.0,
      "text": "henceforth called a class, you capitalize the name of it"
    },
    {
      "index": 1701,
      "start_time": 4729740.0,
      "end_time": 4730440.0,
      "text": "by convention."
    },
    {
      "index": 1702,
      "start_time": 4730440.0,
      "end_time": 4732349.0,
      "text": "So a little different from C conventions."
    },
    {
      "index": 1703,
      "start_time": 4732350.0,
      "end_time": 4734360.0,
      "text": "So what is a student going to look like?"
    },
    {
      "index": 1704,
      "start_time": 4734360.0,
      "end_time": 4737300.0,
      "text": "This is perhaps the most complex syntax that we&#39;ll have today,"
    },
    {
      "index": 1705,
      "start_time": 4737300.0,
      "end_time": 4739400.0,
      "text": "but it just has a few lines."
    },
    {
      "index": 1706,
      "start_time": 4739400.0,
      "end_time": 4742960.0,
      "text": "If you want to implement the notion of a student, how might you do this?"
    },
    {
      "index": 1707,
      "start_time": 4742960.0,
      "end_time": 4746300.0,
      "text": "Well, in Python, you literally say class Student,"
    },
    {
      "index": 1708,
      "start_time": 4746300.0,
      "end_time": 4749240.0,
      "text": "where class is similar in spirit to-- just to be clear--"
    },
    {
      "index": 1709,
      "start_time": 4749240.0,
      "end_time": 4751250.0,
      "text": "struct or typedef struct."
    },
    {
      "index": 1710,
      "start_time": 4751250.0,
      "end_time": 4753620.0,
      "text": "But in Python, we&#39;re just saying class."
    },
    {
      "index": 1711,
      "start_time": 4753620.0,
      "end_time": 4755540.0,
      "text": "And then this is the funky part."
    },
    {
      "index": 1712,
      "start_time": 4755540.0,
      "end_time": 4761330.0,
      "text": "You can declare a function that by convention must be called init"
    },
    {
      "index": 1713,
      "start_time": 4761330.0,
      "end_time": 4765380.0,
      "text": "for initialize that takes as its first argument a keyword called"
    },
    {
      "index": 1714,
      "start_time": 4765380.0,
      "end_time": 4770180.0,
      "text": "self, and then any number of other arguments like this."
    },
    {
      "index": 1715,
      "start_time": 4770180.0,
      "end_time": 4774620.0,
      "text": "And then, for reasons that will hopefully be clear momentarily,"
    },
    {
      "index": 1716,
      "start_time": 4774620.0,
      "end_time": 4777000.0,
      "text": "I can write some code inside of this method."
    },
    {
      "index": 1717,
      "start_time": 4777000.0,
      "end_time": 4779900.0,
      "text": "So long story short, what am I doing?"
    },
    {
      "index": 1718,
      "start_time": 4779900.0,
      "end_time": 4782810.0,
      "text": "I have declared a new type of data structure called Student."
    },
    {
      "index": 1719,
      "start_time": 4782810.0,
      "end_time": 4785420.0,
      "text": "And implicitly inside of this data structure,"
    },
    {
      "index": 1720,
      "start_time": 4785420.0,
      "end_time": 4787580.0,
      "text": "there are two things inside of itself--"
    },
    {
      "index": 1721,
      "start_time": 4787580.0,
      "end_time": 4790370.0,
      "text": "something called name and something called dorm."
    },
    {
      "index": 1722,
      "start_time": 4790370.0,
      "end_time": 4793280.0,
      "text": "And this is how you would in a C struct typically do"
    },
    {
      "index": 1723,
      "start_time": 4793280.0,
      "end_time": 4796790.0,
      "text": "things with the data types and semicolons inside of the curly braces."
    },
    {
      "index": 1724,
      "start_time": 4796790.0,
      "end_time": 4799250.0,
      "text": "Meanwhile, there&#39;s this method here."
    },
    {
      "index": 1725,
      "start_time": 4799250.0,
      "end_time": 4802820.0,
      "text": "And it&#39;s a method insofar as it is inside of a class."
    },
    {
      "index": 1726,
      "start_time": 4802820.0,
      "end_time": 4805549.0,
      "text": "Otherwise it&#39;s a function, just by a different name."
    },
    {
      "index": 1727,
      "start_time": 4805550.0,
      "end_time": 4809990.0,
      "text": "This method init takes whatever self is-- more on that another time."
    },
    {
      "index": 1728,
      "start_time": 4809990.0,
      "end_time": 4813190.0,
      "text": "But it then takes zero or more custom arguments that you can provide."
    },
    {
      "index": 1729,
      "start_time": 4813200.0,
      "end_time": 4814730.0,
      "text": "And I called it name and dorm."
    },
    {
      "index": 1730,
      "start_time": 4814730.0,
      "end_time": 4817370.0,
      "text": "So it turns out this special method init is"
    },
    {
      "index": 1731,
      "start_time": 4817370.0,
      "end_time": 4821450.0,
      "text": "a function that&#39;s going to be called automatically for you any time you"
    },
    {
      "index": 1732,
      "start_time": 4821450.0,
      "end_time": 4824160.0,
      "text": "create a student object."
    },
    {
      "index": 1733,
      "start_time": 4824160.0,
      "end_time": 4826100.0,
      "text": "So what does that actually mean?"
    },
    {
      "index": 1734,
      "start_time": 4826100.0,
      "end_time": 4830150.0,
      "text": "That means in your code, what you can actually do is this."
    },
    {
      "index": 1735,
      "start_time": 4830150.0,
      "end_time": 4836809.0,
      "text": "I can create a student in memory by saying s gets capital Student, passing"
    },
    {
      "index": 1736,
      "start_time": 4836810.0,
      "end_time": 4838700.0,
      "text": "in name and dorm."
    },
    {
      "index": 1737,
      "start_time": 4838700.0,
      "end_time": 4840606.0,
      "text": "And we don&#39;t have this feature in C."
    },
    {
      "index": 1738,
      "start_time": 4840610.0,
      "end_time": 4842484.0,
      "text": "On the right-hand side, what I&#39;ve highlighted"
    },
    {
      "index": 1739,
      "start_time": 4842480.0,
      "end_time": 4845540.0,
      "text": "is the name of the class and its two arguments--"
    },
    {
      "index": 1740,
      "start_time": 4845540.0,
      "end_time": 4848670.0,
      "text": "name and dorm, which are just what the user has typed in."
    },
    {
      "index": 1741,
      "start_time": 4848670.0,
      "end_time": 4852704.0,
      "text": "What this class does for me now is it allocates memory"
    },
    {
      "index": 1742,
      "start_time": 4852700.0,
      "end_time": 4854116.0,
      "text": "underneath the hood for a Student."
    },
    {
      "index": 1743,
      "start_time": 4854120.0,
      "end_time": 4856190.0,
      "text": "It&#39;s got to be big enough for their name and big enough for their dorm."
    },
    {
      "index": 1744,
      "start_time": 4856190.0,
      "end_time": 4858589.0,
      "text": "So it&#39;s, like, yay big in memory, so to speak."
    },
    {
      "index": 1745,
      "start_time": 4858590.0,
      "end_time": 4862220.0,
      "text": "It then puts in the name and the dorm strings into that object,"
    },
    {
      "index": 1746,
      "start_time": 4862220.0,
      "end_time": 4864660.0,
      "text": "and then returns the whole object."
    },
    {
      "index": 1747,
      "start_time": 4864660.0,
      "end_time": 4868730.0,
      "text": "So you can kind of think of this as a much fancier version of malloc."
    },
    {
      "index": 1748,
      "start_time": 4868730.0,
      "end_time": 4870950.0,
      "text": "So this is allocating all the memory you need."
    },
    {
      "index": 1749,
      "start_time": 4870950.0,
      "end_time": 4874700.0,
      "text": "But it&#39;s also installing inside of that memory the name and the dorm."
    },
    {
      "index": 1750,
      "start_time": 4874700.0,
      "end_time": 4878870.0,
      "text": "And it&#39;s bundling it up inside of not just an arbitrary chunk of memory,"
    },
    {
      "index": 1751,
      "start_time": 4878870.0,
      "end_time": 4883910.0,
      "text": "but something you can call a Student object."
    },
    {
      "index": 1752,
      "start_time": 4883910.0,
      "end_time": 4886760.0,
      "text": "And all that means that now for our students,"
    },
    {
      "index": 1753,
      "start_time": 4886760.0,
      "end_time": 4890460.0,
      "text": "we can just go ahead and append that student to the list."
    },
    {
      "index": 1754,
      "start_time": 4890460.0,
      "end_time": 4896450.0,
      "text": "So now if later I want to iterate over for student in students,"
    },
    {
      "index": 1755,
      "start_time": 4896450.0,
      "end_time": 4902300.0,
      "text": "I can go ahead and print out, for instance, that student.name"
    },
    {
      "index": 1756,
      "start_time": 4902300.0,
      "end_time": 4907170.0,
      "text": "lives in student.dorm, close quote."
    },
    {
      "index": 1757,
      "start_time": 4907170.0,
      "end_time": 4909380.0,
      "text": "And if now over here--"
    },
    {
      "index": 1758,
      "start_time": 4909380.0,
      "end_time": 4911450.0,
      "text": "whoops, close that."
    },
    {
      "index": 1759,
      "start_time": 4911450.0,
      "end_time": 4916519.0,
      "text": "Now over here, if I go ahead and run python on struct0.py--"
    },
    {
      "index": 1760,
      "start_time": 4916520.0,
      "end_time": 4919275.0,
      "text": "oh, no!"
    },
    {
      "index": 1761,
      "start_time": 4919270.0,
      "end_time": 4921915.0,
      "text": "Oh, thank you."
    },
    {
      "index": 1762,
      "start_time": 4921920.0,
      "end_time": 4923240.0,
      "text": "That goes there."
    },
    {
      "index": 1763,
      "start_time": 4923240.0,
      "end_time": 4924219.0,
      "text": "So now-- dammit."
    },
    {
      "index": 1764,
      "start_time": 4926990.0,
      "end_time": 4931348.0,
      "text": "Missing curly-- oh, thank you."
    },
    {
      "index": 1765,
      "start_time": 4931350.0,
      "end_time": 4931850.0,
      "text": "OK."
    },
    {
      "index": 1766,
      "start_time": 4931850.0,
      "end_time": 4935390.0,
      "text": "So now if I want to go ahead and type \"Maria\" and \"Cabot\" and \"David\""
    },
    {
      "index": 1767,
      "start_time": 4935390.0,
      "end_time": 4940160.0,
      "text": "and \"Mather\" and \"Rob\" and, say, \"Kirkland,\" now we get all three"
    },
    {
      "index": 1768,
      "start_time": 4940160.0,
      "end_time": 4940820.0,
      "text": "of those names."
    },
    {
      "index": 1769,
      "start_time": 4940820.0,
      "end_time": 4942527.0,
      "text": "And there&#39;s other ways, too, if we wanted"
    },
    {
      "index": 1770,
      "start_time": 4942530.0,
      "end_time": 4945802.0,
      "text": "to actually store this thing on disk."
    },
    {
      "index": 1771,
      "start_time": 4945800.0,
      "end_time": 4947420.0,
      "text": "But I&#39;ll defer that to an example online."
    },
    {
      "index": 1772,
      "start_time": 4947420.0,
      "end_time": 4950690.0,
      "text": "Let&#39;s look at one final example that will hopefully"
    },
    {
      "index": 1773,
      "start_time": 4950690.0,
      "end_time": 4952759.0,
      "text": "either make you regret the past several weeks"
    },
    {
      "index": 1774,
      "start_time": 4952760.0,
      "end_time": 4955640.0,
      "text": "or embrace the next several instead."
    },
    {
      "index": 1775,
      "start_time": 4955640.0,
      "end_time": 4958822.0,
      "text": "So you&#39;ll recall that--"
    },
    {
      "index": 1776,
      "start_time": 4958820.0,
      "end_time": 4961528.0,
      "text": "though the former, I suppose, could be true even without my help."
    },
    {
      "index": 1777,
      "start_time": 4961530.0,
      "end_time": 4966320.0,
      "text": "So if I go into now today&#39;s distribution code, you will see this program."
    },
    {
      "index": 1778,
      "start_time": 4966320.0,
      "end_time": 4968240.0,
      "text": "And we won&#39;t walk through all of its lines."
    },
    {
      "index": 1779,
      "start_time": 4968240.0,
      "end_time": 4971389.0,
      "text": "But this is a program written in Python called speller."
    },
    {
      "index": 1780,
      "start_time": 4971390.0,
      "end_time": 4975350.0,
      "text": "And what I did was literally sit down with speller.c from problem set 5."
    },
    {
      "index": 1781,
      "start_time": 4975350.0,
      "end_time": 4978830.0,
      "text": "And I just converted it from left to right, from C to Python,"
    },
    {
      "index": 1782,
      "start_time": 4978830.0,
      "end_time": 4983300.0,
      "text": "implementing it in Python in as close to an identical way as I could,"
    },
    {
      "index": 1783,
      "start_time": 4983300.0,
      "end_time": 4985190.0,
      "text": "just using features of Python."
    },
    {
      "index": 1784,
      "start_time": 4985190.0,
      "end_time": 4988940.0,
      "text": "So just skimming this, you&#39;ll see that apparently my implementation of speller"
    },
    {
      "index": 1785,
      "start_time": 4988940.0,
      "end_time": 4992480.0,
      "text": "in Python has a class called Dictionary which is very similar in spirit"
    },
    {
      "index": 1786,
      "start_time": 4992480.0,
      "end_time": 4996290.0,
      "text": "to dictionary.h in C Notice that I still have a constant here."
    },
    {
      "index": 1787,
      "start_time": 4996290.0,
      "end_time": 4999740.0,
      "text": "Or it&#39;s not technically a constant, but a variable called length equals 45."
    },
    {
      "index": 1788,
      "start_time": 4999740.0,
      "end_time": 5003519.0,
      "text": "I hardcoded in dictionary/large, as speller.c did, too."
    },
    {
      "index": 1789,
      "start_time": 5003520.0,
      "end_time": 5006230.0,
      "text": "I&#39;m using command-line arguments, as we saw earlier,"
    },
    {
      "index": 1790,
      "start_time": 5006230.0,
      "end_time": 5008709.0,
      "text": "but this time in Python instead of C."
    },
    {
      "index": 1791,
      "start_time": 5008710.0,
      "end_time": 5011500.0,
      "text": "Notice you can do funky things like this,"
    },
    {
      "index": 1792,
      "start_time": 5011500.0,
      "end_time": 5013930.0,
      "text": "which is reminiscent of our swap trick just a little bit ago."
    },
    {
      "index": 1793,
      "start_time": 5013930.0,
      "end_time": 5016960.0,
      "text": "If you want to declare multiple variables all on the same line"
    },
    {
      "index": 1794,
      "start_time": 5016960.0,
      "end_time": 5020200.0,
      "text": "and initialize them, you can just enumerate them all with commas."
    },
    {
      "index": 1795,
      "start_time": 5020200.0,
      "end_time": 5022330.0,
      "text": "Then on the other side of the equal sign,"
    },
    {
      "index": 1796,
      "start_time": 5022330.0,
      "end_time": 5026290.0,
      "text": "enumerate with commas the values that you want to assign to those variables."
    },
    {
      "index": 1797,
      "start_time": 5026290.0,
      "end_time": 5029440.0,
      "text": "And then down here, if I keep scrolling, you&#39;ll"
    },
    {
      "index": 1798,
      "start_time": 5029440.0,
      "end_time": 5033110.0,
      "text": "see code that we won&#39;t get into the weeds of, but some familiar phrases."
    },
    {
      "index": 1799,
      "start_time": 5033110.0,
      "end_time": 5037120.0,
      "text": "So this is the program that actually runs a student&#39;s dictionary"
    },
    {
      "index": 1800,
      "start_time": 5037120.0,
      "end_time": 5042490.0,
      "text": "on some input, and then prints out per all of this stuff at the bottom"
    },
    {
      "index": 1801,
      "start_time": 5042490.0,
      "end_time": 5046590.0,
      "text": "all of the familiar phrases that you might recall from problem set five."
    },
    {
      "index": 1802,
      "start_time": 5046600.0,
      "end_time": 5049567.0,
      "text": "So this took a lot of work, most likely, to implement in C. And understandably,"
    },
    {
      "index": 1803,
      "start_time": 5049570.0,
      "end_time": 5051403.0,
      "text": "you might have used a linked list initially,"
    },
    {
      "index": 1804,
      "start_time": 5051400.0,
      "end_time": 5053790.0,
      "text": "or ultimately you might have used a hash table or a try"
    },
    {
      "index": 1805,
      "start_time": 5053790.0,
      "end_time": 5055870.0,
      "text": "or struggled with something in between those two."
    },
    {
      "index": 1806,
      "start_time": 5055870.0,
      "end_time": 5059161.0,
      "text": "And that is a function of C. C is difficult."
    },
    {
      "index": 1807,
      "start_time": 5059160.0,
      "end_time": 5061659.0,
      "text": "C is challenging because you have to do everything yourself."
    },
    {
      "index": 1808,
      "start_time": 5061660.0,
      "end_time": 5065960.0,
      "text": "An upside, though, of it is that you end up getting a lot of great performance,"
    },
    {
      "index": 1809,
      "start_time": 5065960.0,
      "end_time": 5066875.0,
      "text": "theoretically."
    },
    {
      "index": 1810,
      "start_time": 5066880.0,
      "end_time": 5070005.0,
      "text": "Once you have implemented the code, you&#39;re kind of as close to the hardware"
    },
    {
      "index": 1811,
      "start_time": 5070000.0,
      "end_time": 5070790.0,
      "text": "as possible."
    },
    {
      "index": 1812,
      "start_time": 5070790.0,
      "end_time": 5073450.0,
      "text": "And so your code runs pretty darn well and is dependent"
    },
    {
      "index": 1813,
      "start_time": 5073450.0,
      "end_time": 5077500.0,
      "text": "only then on your algorithms, not on your choice of language."
    },
    {
      "index": 1814,
      "start_time": 5077500.0,
      "end_time": 5081100.0,
      "text": "So here let me go ahead and implement a file called dictionary.py."
    },
    {
      "index": 1815,
      "start_time": 5081100.0,
      "end_time": 5084690.0,
      "text": "And let me propose that the words--"
    },
    {
      "index": 1816,
      "start_time": 5084690.0,
      "end_time": 5090400.0,
      "text": "the equivalent, sorry, of dictionary.h would be this file here."
    },
    {
      "index": 1817,
      "start_time": 5090400.0,
      "end_time": 5094420.0,
      "text": "And it&#39;s going to have a function called check,"
    },
    {
      "index": 1818,
      "start_time": 5094420.0,
      "end_time": 5097300.0,
      "text": "which takes in an argument called word."
    },
    {
      "index": 1819,
      "start_time": 5097300.0,
      "end_time": 5099759.0,
      "text": "It&#39;s going to have a function called load, which"
    },
    {
      "index": 1820,
      "start_time": 5099760.0,
      "end_time": 5102520.0,
      "text": "takes in an argument called dictionary."
    },
    {
      "index": 1821,
      "start_time": 5102520.0,
      "end_time": 5108430.0,
      "text": "It&#39;s going to have a method called size, which takes"
    },
    {
      "index": 1822,
      "start_time": 5108430.0,
      "end_time": 5110535.0,
      "text": "in no arguments other than itself."
    },
    {
      "index": 1823,
      "start_time": 5110540.0,
      "end_time": 5112665.0,
      "text": "And then it&#39;s going to have a method called unload,"
    },
    {
      "index": 1824,
      "start_time": 5112660.0,
      "end_time": 5114980.0,
      "text": "which also takes no arguments other than itself."
    },
    {
      "index": 1825,
      "start_time": 5114980.0,
      "end_time": 5118299.0,
      "text": "So if we were instead to have assigned problem set five in Python,"
    },
    {
      "index": 1826,
      "start_time": 5118300.0,
      "end_time": 5120960.0,
      "text": "we essentially would have given you a file called dictionary.py"
    },
    {
      "index": 1827,
      "start_time": 5120960.0,
      "end_time": 5123460.0,
      "text": "with these placeholders for you because recall in pset five,"
    },
    {
      "index": 1828,
      "start_time": 5123460.0,
      "end_time": 5125230.0,
      "text": "those were all to dos."
    },
    {
      "index": 1829,
      "start_time": 5125230.0,
      "end_time": 5127660.0,
      "text": "Strictly speaking, there would be one other here."
    },
    {
      "index": 1830,
      "start_time": 5127660.0,
      "end_time": 5131260.0,
      "text": "We would probably have a def init because every class in Python,"
    },
    {
      "index": 1831,
      "start_time": 5131260.0,
      "end_time": 5133780.0,
      "text": "we&#39;ll see, we&#39;ll typically have this init method,"
    },
    {
      "index": 1832,
      "start_time": 5133780.0,
      "end_time": 5138459.0,
      "text": "where we just are able to do something to initialize the data structure."
    },
    {
      "index": 1833,
      "start_time": 5138460.0,
      "end_time": 5139751.0,
      "text": "So let me go ahead and do this."
    },
    {
      "index": 1834,
      "start_time": 5139750.0,
      "end_time": 5141460.0,
      "text": "We don&#39;t know that much Python yet."
    },
    {
      "index": 1835,
      "start_time": 5141460.0,
      "end_time": 5144470.0,
      "text": "And we&#39;re taking for granted that speller in fact, works."
    },
    {
      "index": 1836,
      "start_time": 5144470.0,
      "end_time": 5146960.0,
      "text": "But let me go ahead and load some words in a dictionary."
    },
    {
      "index": 1837,
      "start_time": 5146960.0,
      "end_time": 5148829.0,
      "text": "So here is my method called load."
    },
    {
      "index": 1838,
      "start_time": 5148830.0,
      "end_time": 5151371.0,
      "text": "Dictionary is going to be the name of the dictionary to load."
    },
    {
      "index": 1839,
      "start_time": 5151370.0,
      "end_time": 5155830.0,
      "text": "So you guys implemented this yourself by loading those files from disk."
    },
    {
      "index": 1840,
      "start_time": 5155830.0,
      "end_time": 5158110.0,
      "text": "In Python, I&#39;m going to do this as follows."
    },
    {
      "index": 1841,
      "start_time": 5158110.0,
      "end_time": 5162990.0,
      "text": "Give me a file and open it in read mode."
    },
    {
      "index": 1842,
      "start_time": 5162100.0,
      "end_time": 5165790.0,
      "text": "Iterate over each line in the file."
    },
    {
      "index": 1843,
      "start_time": 5165790.0,
      "end_time": 5170590.0,
      "text": "Then go ahead and add to my set called words"
    },
    {
      "index": 1844,
      "start_time": 5170590.0,
      "end_time": 5176230.0,
      "text": "the result of that line by stripping off the end of it backslash 0."
    },
    {
      "index": 1845,
      "start_time": 5176230.0,
      "end_time": 5180969.0,
      "text": "Then go ahead and close the file, and then return true"
    },
    {
      "index": 1846,
      "start_time": 5180970.0,
      "end_time": 5183340.0,
      "text": "because I&#39;m done implementing load."
    },
    {
      "index": 1847,
      "start_time": 5183340.0,
      "end_time": 5187760.0,
      "text": "So that is the load method in Python."
    },
    {
      "index": 1848,
      "start_time": 5187760.0,
      "end_time": 5188500.0,
      "text": "Happy, yes."
    },
    {
      "index": 1849,
      "start_time": 5188500.0,
      "end_time": 5189000.0,
      "text": "OK."
    },
    {
      "index": 1850,
      "start_time": 5189000.0,
      "end_time": 5189766.0,
      "text": "So check."
    },
    {
      "index": 1851,
      "start_time": 5189770.0,
      "end_time": 5191143.0,
      "text": "Check was a struggle, too, right?"
    },
    {
      "index": 1852,
      "start_time": 5191140.0,
      "end_time": 5193690.0,
      "text": "Because once you had your hash table, or once you had your try, now"
    },
    {
      "index": 1853,
      "start_time": 5193690.0,
      "end_time": 5195849.0,
      "text": "you had to actually navigate that structure in memory,"
    },
    {
      "index": 1854,
      "start_time": 5195850.0,
      "end_time": 5198160.0,
      "text": "maybe recursively, maybe iteratively, following lots"
    },
    {
      "index": 1855,
      "start_time": 5198160.0,
      "end_time": 5200330.0,
      "text": "of pointers and the like, following a linked list."
    },
    {
      "index": 1856,
      "start_time": 5200330.0,
      "end_time": 5202950.0,
      "text": "How about I just do--"
    },
    {
      "index": 1857,
      "start_time": 5202950.0,
      "end_time": 5214980.0,
      "text": "let&#39;s just say if word lowercase in self.words, return true."
    },
    {
      "index": 1858,
      "start_time": 5214980.0,
      "end_time": 5216959.0,
      "text": "Else return false."
    },
    {
      "index": 1859,
      "start_time": 5216960.0,
      "end_time": 5219280.0,
      "text": "Done."
    },
    {
      "index": 1860,
      "start_time": 5219280.0,
      "end_time": 5221210.0,
      "text": "So that one&#39;s done."
    },
    {
      "index": 1861,
      "start_time": 5221210.0,
      "end_time": 5224170.0,
      "text": "Size-- we actually can kind of infer how to do this."
    },
    {
      "index": 1862,
      "start_time": 5224170.0,
      "end_time": 5226630.0,
      "text": "Return the length of the words."
    },
    {
      "index": 1863,
      "start_time": 5226630.0,
      "end_time": 5227610.0,
      "text": "That&#39;s done."
    },
    {
      "index": 1864,
      "start_time": 5227610.0,
      "end_time": 5231429.0,
      "text": "Unload-- don&#39;t have to worry about memory in Python, so that&#39;s done."
    },
    {
      "index": 1865,
      "start_time": 5231430.0,
      "end_time": 5233685.0,
      "text": "And there you have a problem set five."
    },
    {
      "index": 1866,
      "start_time": 5233690.0,
      "end_time": 5234265.0,
      "text": "[APPLAUSE]"
    },
    {
      "index": 1867,
      "start_time": 5234260.0,
      "end_time": 5236320.0,
      "text": "Thank you."
    },
    {
      "index": 1868,
      "start_time": 5236320.0,
      "end_time": 5238960.0,
      "text": "So what then are the takeaways?"
    },
    {
      "index": 1869,
      "start_time": 5238960.0,
      "end_time": 5242227.0,
      "text": "Either great elation that you now have this power or great sadness"
    },
    {
      "index": 1870,
      "start_time": 5242230.0,
      "end_time": 5244812.0,
      "text": "that you had to implement this first in C. But this was really"
    },
    {
      "index": 1871,
      "start_time": 5244810.0,
      "end_time": 5246280.0,
      "text": "ultimately meant to be thematic."
    },
    {
      "index": 1872,
      "start_time": 5246280.0,
      "end_time": 5249280.0,
      "text": "Hopefully moving forward, even if you struggled with any number of these"
    },
    {
      "index": 1873,
      "start_time": 5249280.0,
      "end_time": 5251860.0,
      "text": "topics-- linked lists and hash tables and pointers and the like--"
    },
    {
      "index": 1874,
      "start_time": 5251860.0,
      "end_time": 5253299.0,
      "text": "hopefully you have a general understanding"
    },
    {
      "index": 1875,
      "start_time": 5253300.0,
      "end_time": 5255550.0,
      "text": "of some of these fundamentals and what computers"
    },
    {
      "index": 1876,
      "start_time": 5255550.0,
      "end_time": 5256870.0,
      "text": "are doing underneath the hood."
    },
    {
      "index": 1877,
      "start_time": 5256870.0,
      "end_time": 5260740.0,
      "text": "And now with languages like Python and soon with JavaScript and SQL,"
    },
    {
      "index": 1878,
      "start_time": 5260740.0,
      "end_time": 5263983.0,
      "text": "with a little bit of HTML and CSS mixed in for our user interfaces,"
    },
    {
      "index": 1879,
      "start_time": 5263980.0,
      "end_time": 5265896.0,
      "text": "do you have the ability to now solve problems,"
    },
    {
      "index": 1880,
      "start_time": 5265900.0,
      "end_time": 5269190.0,
      "text": "taking for granted both your understanding of those topics"
    },
    {
      "index": 1881,
      "start_time": 5269200.0,
      "end_time": 5272974.0,
      "text": "and the reality that someone else has now implemented those concepts for you"
    },
    {
      "index": 1882,
      "start_time": 5272970.0,
      "end_time": 5275886.0,
      "text": "so that when it comes to solving problem sets six and seven and eight,"
    },
    {
      "index": 1883,
      "start_time": 5275890.0,
      "end_time": 5278650.0,
      "text": "and then leaving CS50 and solving problems in your own domain,"
    },
    {
      "index": 1884,
      "start_time": 5278650.0,
      "end_time": 5280900.0,
      "text": "you have so many more tools in your toolkit."
    },
    {
      "index": 1885,
      "start_time": 5280900.0,
      "end_time": 5283870.0,
      "text": "And the goal really for you is going to be to pick"
    },
    {
      "index": 1886,
      "start_time": 5283870.0,
      "end_time": 5285814.0,
      "text": "whichever one is most appropriate."
    },
    {
      "index": 1887,
      "start_time": 5285810.0,
      "end_time": 5286726.0,
      "text": "So let&#39;s adjourn here."
    },
    {
      "index": 1888,
      "start_time": 5286730.0,
      "end_time": 5287769.0,
      "text": "I&#39;ll stick around for questions."
    },
    {
      "index": 1889,
      "start_time": 5287770.0,
      "end_time": 5289160.0,
      "text": "And we&#39;ll see you next time."
    },
    {
      "index": 1890,
      "start_time": 5289160.0,
      "end_time": 5291420.0,
      "text": "Best of luck on the test."
    }
  ]
}