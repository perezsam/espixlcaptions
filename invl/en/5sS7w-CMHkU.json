{
  "video_id": "5sS7w-CMHkU",
  "title": "Pre-Algebra 3 - Decimal, Binary, Octal & Hexadecimal",
  "es": 0,
  "json": [
    {
      "index": 1,
      "start_time": 3000.0,
      "end_time": 8600.0,
      "text": "Hello. I’m Professor Von Schmohawk and welcome to Why U."
    },
    {
      "index": 2,
      "start_time": 8600.0,
      "end_time": 14170.0,
      "text": "In the previous lectures, we explored some examples of the earliest number systems"
    },
    {
      "index": 3,
      "start_time": 14170.0,
      "end_time": 17500.0,
      "text": "which were used primarily for counting objects."
    },
    {
      "index": 4,
      "start_time": 17500.0,
      "end_time": 22500.0,
      "text": "These counting numbers are called “natural numbers”."
    },
    {
      "index": 5,
      "start_time": 22500.0,
      "end_time": 28500.0,
      "text": "The natural numbers start at one and can count to arbitrarily large quantities."
    },
    {
      "index": 6,
      "start_time": 30000.0,
      "end_time": 37600.0,
      "text": "As we have seen, Roman numerals are one of many possible ways to represent natural numbers."
    },
    {
      "index": 7,
      "start_time": 37600.0,
      "end_time": 42400.0,
      "text": "The Roman system was eventually replaced with the modern decimal number system"
    },
    {
      "index": 8,
      "start_time": 42400.0,
      "end_time": 48199.0,
      "text": "which uses “positional notation” and only ten numeric symbols."
    },
    {
      "index": 9,
      "start_time": 48200.0,
      "end_time": 53000.0,
      "text": "The decimal number system was found to be superior to the ancient Roman system"
    },
    {
      "index": 10,
      "start_time": 53000.0,
      "end_time": 57300.0,
      "text": "because of the simple rules it uses to create numbers."
    },
    {
      "index": 11,
      "start_time": 58500.0,
      "end_time": 65500.0,
      "text": "In the decimal system there are ten numeric symbols, 0 through 9, called “digits”."
    },
    {
      "index": 12,
      "start_time": 67100.0,
      "end_time": 69160.0,
      "text": "Depending on the column they occupy"
    },
    {
      "index": 13,
      "start_time": 69160.0,
      "end_time": 72500.0,
      "text": "these digits represent the quantity of ones"
    },
    {
      "index": 14,
      "start_time": 72500.0,
      "end_time": 73500.0,
      "text": "tens"
    },
    {
      "index": 15,
      "start_time": 73500.0,
      "end_time": 74600.0,
      "text": "hundreds"
    },
    {
      "index": 16,
      "start_time": 74600.0,
      "end_time": 75399.0,
      "text": "thousands"
    },
    {
      "index": 17,
      "start_time": 75400.0,
      "end_time": 76600.0,
      "text": "and so on"
    },
    {
      "index": 18,
      "start_time": 76600.0,
      "end_time": 79000.0,
      "text": "which make up the number."
    },
    {
      "index": 19,
      "start_time": 79500.0,
      "end_time": 83800.0,
      "text": "In positional notation, the column occupied by a digit"
    },
    {
      "index": 20,
      "start_time": 83800.0,
      "end_time": 87200.0,
      "text": "determines the “multiplier” for that digit."
    },
    {
      "index": 21,
      "start_time": 87200.0,
      "end_time": 89700.0,
      "text": "For example, in the decimal system"
    },
    {
      "index": 22,
      "start_time": 89700.0,
      "end_time": 94200.0,
      "text": "the value of the right-most digit is multiplied by 1."
    },
    {
      "index": 23,
      "start_time": 94200.0,
      "end_time": 99000.0,
      "text": "The digit in the next column to the left is multiplied by 10."
    },
    {
      "index": 24,
      "start_time": 99000.0,
      "end_time": 104100.0,
      "text": "The next digit is multiplied by 100 and so on."
    },
    {
      "index": 25,
      "start_time": 104100.0,
      "end_time": 110100.0,
      "text": "The value of a number is the sum of all its digits times their multipliers."
    },
    {
      "index": 26,
      "start_time": 110100.0,
      "end_time": 116600.0,
      "text": "For example, the value of the decimal number 1879"
    },
    {
      "index": 27,
      "start_time": 116600.0,
      "end_time": 118500.0,
      "text": "is 1 times 1000"
    },
    {
      "index": 28,
      "start_time": 118600.0,
      "end_time": 120899.0,
      "text": "plus 8 times 100"
    },
    {
      "index": 29,
      "start_time": 121000.0,
      "end_time": 123300.0,
      "text": "plus 7 times 10"
    },
    {
      "index": 30,
      "start_time": 123400.0,
      "end_time": 126400.0,
      "text": "plus 9 times 1."
    },
    {
      "index": 31,
      "start_time": 127000.0,
      "end_time": 132700.0,
      "text": "In any positional notation, each column’s multiplier differs from the adjacent column"
    },
    {
      "index": 32,
      "start_time": 132700.0,
      "end_time": 138000.0,
      "text": "by a constant multiple called the “base” of the number system."
    },
    {
      "index": 33,
      "start_time": 138500.0,
      "end_time": 144250.0,
      "text": "In the decimal system, each column multiplier is ten times the previous column."
    },
    {
      "index": 34,
      "start_time": 144250.0,
      "end_time": 150200.0,
      "text": "Therefore the decimal system is called a “base-10” number system."
    },
    {
      "index": 35,
      "start_time": 151000.0,
      "end_time": 154900.0,
      "text": "There are an infinite number of columns in the decimal number system"
    },
    {
      "index": 36,
      "start_time": 154900.0,
      "end_time": 161250.0,
      "text": "with each column multiplier being ten times bigger than the column to the right."
    },
    {
      "index": 37,
      "start_time": 161250.0,
      "end_time": 166000.0,
      "text": "However, when writing a number, the zeros in front are normally not written."
    },
    {
      "index": 38,
      "start_time": 173250.0,
      "end_time": 175100.0,
      "text": "We can count up to 9"
    },
    {
      "index": 39,
      "start_time": 175100.0,
      "end_time": 178200.0,
      "text": "using only the ones column."
    },
    {
      "index": 40,
      "start_time": 178200.0,
      "end_time": 180000.0,
      "text": "Once we reach 9"
    },
    {
      "index": 41,
      "start_time": 180000.0,
      "end_time": 182700.0,
      "text": "the ones column starts over at 0"
    },
    {
      "index": 42,
      "start_time": 182700.0,
      "end_time": 185899.0,
      "text": "and the tens column increments."
    },
    {
      "index": 43,
      "start_time": 185900.0,
      "end_time": 187800.0,
      "text": "As we continue counting"
    },
    {
      "index": 44,
      "start_time": 187800.0,
      "end_time": 190300.0,
      "text": "the tens column counts the number of times"
    },
    {
      "index": 45,
      "start_time": 190300.0,
      "end_time": 194500.0,
      "text": "that the ones column has passed from 9 to 0."
    },
    {
      "index": 46,
      "start_time": 194500.0,
      "end_time": 200700.0,
      "text": "In other words, the tens column registers the number of tens which we have counted."
    },
    {
      "index": 47,
      "start_time": 200700.0,
      "end_time": 204500.0,
      "text": "This continues until we reach 99."
    },
    {
      "index": 48,
      "start_time": 204500.0,
      "end_time": 209400.0,
      "text": "At that point the ones and tens columns start over at 0"
    },
    {
      "index": 49,
      "start_time": 209400.0,
      "end_time": 212700.0,
      "text": "and the hundreds column increments."
    },
    {
      "index": 50,
      "start_time": 214500.0,
      "end_time": 218500.0,
      "text": "The positional notation system is simple."
    },
    {
      "index": 51,
      "start_time": 218500.0,
      "end_time": 222000.0,
      "text": "Every time a column passes from 9 to 0"
    },
    {
      "index": 52,
      "start_time": 222000.0,
      "end_time": 224800.0,
      "text": "the next column to the left increments."
    },
    {
      "index": 53,
      "start_time": 227800.0,
      "end_time": 233400.0,
      "text": "How is it that we ended up with a number system based on multiples of ten?"
    },
    {
      "index": 54,
      "start_time": 233400.0,
      "end_time": 237700.0,
      "text": "There is not any good reason for choosing ten over some other number"
    },
    {
      "index": 55,
      "start_time": 237700.0,
      "end_time": 241000.0,
      "text": "other than the fact that people have ten fingers"
    },
    {
      "index": 56,
      "start_time": 241000.0,
      "end_time": 246250.0,
      "text": "and probably originally communicated quantities using their fingers."
    },
    {
      "index": 57,
      "start_time": 248250.0,
      "end_time": 253100.0,
      "text": "But what if we were cartoon characters with four digits on each hand?"
    },
    {
      "index": 58,
      "start_time": 256000.0,
      "end_time": 258800.0,
      "text": "Is it possible that in cartoon land"
    },
    {
      "index": 59,
      "start_time": 258800.0,
      "end_time": 265000.0,
      "text": "everyone uses a number system based on multiples of eight instead of ten?"
    },
    {
      "index": 60,
      "start_time": 265500.0,
      "end_time": 270200.0,
      "text": "How would a base-8 or “octal” number system work?"
    },
    {
      "index": 61,
      "start_time": 270200.0,
      "end_time": 277300.0,
      "text": "In octal there are only eight numeric symbols instead of ten as in decimal."
    },
    {
      "index": 62,
      "start_time": 277300.0,
      "end_time": 283100.0,
      "text": "Instead of 0 through 9 the symbols 0 through 7 are used."
    },
    {
      "index": 63,
      "start_time": 283100.0,
      "end_time": 286600.0,
      "text": "The symbols 8 and 9 are not needed."
    },
    {
      "index": 64,
      "start_time": 286600.0,
      "end_time": 291160.0,
      "text": "Counting in octal is very similar to counting in decimal."
    },
    {
      "index": 65,
      "start_time": 291160.0,
      "end_time": 294500.0,
      "text": "Since there are no symbols for 8 or 9"
    },
    {
      "index": 66,
      "start_time": 294500.0,
      "end_time": 300750.0,
      "text": "the highest quantity which can be represented in the ones column is 7."
    },
    {
      "index": 67,
      "start_time": 300750.0,
      "end_time": 305800.0,
      "text": "Counting an eighth item causes the ones column to start over at 0"
    },
    {
      "index": 68,
      "start_time": 305800.0,
      "end_time": 308600.0,
      "text": "and the next column to increment."
    },
    {
      "index": 69,
      "start_time": 308600.0,
      "end_time": 312699.0,
      "text": "So the second column counts the number of eights."
    },
    {
      "index": 70,
      "start_time": 312699.0,
      "end_time": 318000.0,
      "text": "Therefore in octal the number following 7 is 10"
    },
    {
      "index": 71,
      "start_time": 318000.0,
      "end_time": 321400.0,
      "text": "which looks just like the decimal number ten."
    },
    {
      "index": 72,
      "start_time": 321400.0,
      "end_time": 327000.0,
      "text": "After octal \"10\" comes octal  \"11\",  \"12\",  and so on"
    },
    {
      "index": 73,
      "start_time": 327000.0,
      "end_time": 330000.0,
      "text": "until we get to octal \"17\"."
    },
    {
      "index": 74,
      "start_time": 330000.0,
      "end_time": 333900.0,
      "text": "At that point, we go to octal \"20\"."
    },
    {
      "index": 75,
      "start_time": 333900.0,
      "end_time": 339599.0,
      "text": "The second column has now counted two “eights” or sixteen."
    },
    {
      "index": 76,
      "start_time": 339600.0,
      "end_time": 345370.0,
      "text": "We continue like this until we get to the highest number we can represent with two digits"
    },
    {
      "index": 77,
      "start_time": 345370.0,
      "end_time": 347700.0,
      "text": "octal \"77\"."
    },
    {
      "index": 78,
      "start_time": 347700.0,
      "end_time": 355199.0,
      "text": "At that point, the ones and eights columns start over at 0 and the third column increments."
    },
    {
      "index": 79,
      "start_time": 355199.0,
      "end_time": 360700.0,
      "text": "The 1 in the third column represents eight “eights” or sixty-four."
    },
    {
      "index": 80,
      "start_time": 362750.0,
      "end_time": 368000.0,
      "text": "Each column multiplier is eight times the previous one."
    },
    {
      "index": 81,
      "start_time": 370250.0,
      "end_time": 375500.0,
      "text": "Every number which can be written in decimal can also be written in octal"
    },
    {
      "index": 82,
      "start_time": 375500.0,
      "end_time": 377800.0,
      "text": "although after counting to 7"
    },
    {
      "index": 83,
      "start_time": 377800.0,
      "end_time": 382800.0,
      "text": "the way the quantities are represented is completely different."
    },
    {
      "index": 84,
      "start_time": 385600.0,
      "end_time": 389199.0,
      "text": "It is easy to convert an octal number to decimal"
    },
    {
      "index": 85,
      "start_time": 389199.0,
      "end_time": 392750.0,
      "text": "when you consider how positional notation works."
    },
    {
      "index": 86,
      "start_time": 392750.0,
      "end_time": 398500.0,
      "text": "Let’s take for example, the octal number \"1750\"."
    },
    {
      "index": 87,
      "start_time": 398500.0,
      "end_time": 406800.0,
      "text": "As in decimal, the value of the octal number is the sum of all its digits times their multipliers."
    },
    {
      "index": 88,
      "start_time": 406800.0,
      "end_time": 410500.0,
      "text": "So the number \"1750\" represents"
    },
    {
      "index": 89,
      "start_time": 410500.0,
      "end_time": 413400.0,
      "text": "1 times 512"
    },
    {
      "index": 90,
      "start_time": 413500.0,
      "end_time": 415800.0,
      "text": "plus 7 times 64"
    },
    {
      "index": 91,
      "start_time": 415900.0,
      "end_time": 417900.0,
      "text": "plus 5 times 8"
    },
    {
      "index": 92,
      "start_time": 418000.0,
      "end_time": 420500.0,
      "text": "plus 0 ones"
    },
    {
      "index": 93,
      "start_time": 420500.0,
      "end_time": 426500.0,
      "text": "which adds up to the quantity which in decimal is called one-thousand."
    },
    {
      "index": 94,
      "start_time": 426500.0,
      "end_time": 433400.0,
      "text": "You may sometimes see a small subscript 8 or 10 after an octal or decimal number"
    },
    {
      "index": 95,
      "start_time": 433400.0,
      "end_time": 438900.0,
      "text": "in case there may be some confusion about which base is being used."
    },
    {
      "index": 96,
      "start_time": 440250.0,
      "end_time": 446200.0,
      "text": "Digital computers use electronic circuits called “flip-flops” to represent numbers."
    },
    {
      "index": 97,
      "start_time": 446700.0,
      "end_time": 454800.0,
      "text": "Each flip-flop can store a single bit which can represent either a 0 or a 1."
    },
    {
      "index": 98,
      "start_time": 455000.0,
      "end_time": 461400.0,
      "text": "Multiple bits can be combined to represent a base-2 or “binary” number."
    },
    {
      "index": 99,
      "start_time": 461400.0,
      "end_time": 467400.0,
      "text": "In the binary number system 0 and 1 are the only two numeric symbols."
    },
    {
      "index": 100,
      "start_time": 467400.0,
      "end_time": 470200.0,
      "text": "Since binary is base-2"
    },
    {
      "index": 101,
      "start_time": 470200.0,
      "end_time": 475400.0,
      "text": "each column multiplier is two times the multiplier of the previous digit."
    },
    {
      "index": 102,
      "start_time": 475400.0,
      "end_time": 478400.0,
      "text": "And just like decimal or octal numbers"
    },
    {
      "index": 103,
      "start_time": 478400.0,
      "end_time": 485500.0,
      "text": "the value of a binary number is sum of all its digits times their multipliers."
    },
    {
      "index": 104,
      "start_time": 486000.0,
      "end_time": 491300.0,
      "text": "Since the digits are either 1 or 0 the calculation is simple."
    },
    {
      "index": 105,
      "start_time": 491300.0,
      "end_time": 496500.0,
      "text": "We just add the multipliers of all the columns which contain ones."
    },
    {
      "index": 106,
      "start_time": 496500.0,
      "end_time": 501900.0,
      "text": "For example, the binary number 11010"
    },
    {
      "index": 107,
      "start_time": 501900.0,
      "end_time": 503900.0,
      "text": "represents 1 sixteen"
    },
    {
      "index": 108,
      "start_time": 504000.0,
      "end_time": 505700.0,
      "text": "plus 1 eight"
    },
    {
      "index": 109,
      "start_time": 505800.0,
      "end_time": 507800.0,
      "text": "plus 1 two"
    },
    {
      "index": 110,
      "start_time": 507800.0,
      "end_time": 511000.0,
      "text": "which is equal to twenty-six."
    },
    {
      "index": 111,
      "start_time": 512299.0,
      "end_time": 516500.0,
      "text": "Even though digital computers store numbers in binary"
    },
    {
      "index": 112,
      "start_time": 516500.0,
      "end_time": 522159.0,
      "text": "it can be quite tedious to write down or remember large binary numbers."
    },
    {
      "index": 113,
      "start_time": 522159.0,
      "end_time": 527240.0,
      "text": "For instance, the number one-million in binary is"
    },
    {
      "index": 114,
      "start_time": 527240.0,
      "end_time": 529450.0,
      "text": "one one one one"
    },
    {
      "index": 115,
      "start_time": 529550.0,
      "end_time": 531750.0,
      "text": "zero one zero one"
    },
    {
      "index": 116,
      "start_time": 531850.0,
      "end_time": 534200.0,
      "text": "one zero zero one"
    },
    {
      "index": 117,
      "start_time": 534300.0,
      "end_time": 536699.0,
      "text": "one zero one one"
    },
    {
      "index": 118,
      "start_time": 536800.0,
      "end_time": 539000.0,
      "text": "zero zero zero zero."
    },
    {
      "index": 119,
      "start_time": 539600.0,
      "end_time": 543259.0,
      "text": "Early in the history of digital computers"
    },
    {
      "index": 120,
      "start_time": 543259.0,
      "end_time": 547490.0,
      "text": "engineers found that it was easier to use octal notation"
    },
    {
      "index": 121,
      "start_time": 547490.0,
      "end_time": 551900.0,
      "text": "than to deal with long strings of ones and zeros."
    },
    {
      "index": 122,
      "start_time": 551900.0,
      "end_time": 557600.0,
      "text": "Three binary digits can be represented by a single octal symbol."
    },
    {
      "index": 123,
      "start_time": 557600.0,
      "end_time": 564200.0,
      "text": "It is easy to memorize the eight possible combinations of three binary bits."
    },
    {
      "index": 124,
      "start_time": 565700.0,
      "end_time": 569300.0,
      "text": "To convert a multiple-digit octal number to binary"
    },
    {
      "index": 125,
      "start_time": 569300.0,
      "end_time": 575699.0,
      "text": "each octal digit in the number is converted to a 3-bit binary equivalent"
    },
    {
      "index": 126,
      "start_time": 575700.0,
      "end_time": 581100.0,
      "text": "and the binary digits are all combined into a single binary number."
    },
    {
      "index": 127,
      "start_time": 581100.0,
      "end_time": 585000.0,
      "text": "Any leading zeros can be removed."
    },
    {
      "index": 128,
      "start_time": 585000.0,
      "end_time": 590839.0,
      "text": "To convert a binary number to octal we do the same thing in reverse."
    },
    {
      "index": 129,
      "start_time": 590839.0,
      "end_time": 594000.0,
      "text": "To convert this binary number back to octal"
    },
    {
      "index": 130,
      "start_time": 594000.0,
      "end_time": 598540.0,
      "text": "we split it into 3-bit groups starting from the right"
    },
    {
      "index": 131,
      "start_time": 598540.0,
      "end_time": 604829.0,
      "text": "and each 3-bit group is then converted to its equivalent octal symbol."
    },
    {
      "index": 132,
      "start_time": 604829.0,
      "end_time": 613500.0,
      "text": "So the octal equivalent to this binary number is \"3654660\""
    },
    {
      "index": 133,
      "start_time": 613500.0,
      "end_time": 618400.0,
      "text": "a lot easier to remember than all those ones and zeros."
    },
    {
      "index": 134,
      "start_time": 619200.0,
      "end_time": 626400.0,
      "text": "Today, computer storage is normally organized into 8-bit groups called \"bytes\"."
    },
    {
      "index": 135,
      "start_time": 626400.0,
      "end_time": 632000.0,
      "text": "Because of this, many computer engineers prefer to use base-16"
    },
    {
      "index": 136,
      "start_time": 632000.0,
      "end_time": 636889.0,
      "text": "otherwise known as “hexadecimal” or “hex” instead of octal."
    },
    {
      "index": 137,
      "start_time": 636889.0,
      "end_time": 643690.0,
      "text": "With hexadecimal, every group of four bits converts to a single hex symbol."
    },
    {
      "index": 138,
      "start_time": 643690.0,
      "end_time": 647000.0,
      "text": "Two hex symbols represent exactly one byte."
    },
    {
      "index": 139,
      "start_time": 647000.0,
      "end_time": 652000.0,
      "text": "Even fewer digits than octal are required to represent a given number"
    },
    {
      "index": 140,
      "start_time": 652000.0,
      "end_time": 656500.0,
      "text": "and it&#39;s just as easy to convert back and forth to binary."
    },
    {
      "index": 141,
      "start_time": 656500.0,
      "end_time": 660800.0,
      "text": "Hexadecimal numbers use sixteen numeric symbols."
    },
    {
      "index": 142,
      "start_time": 660800.0,
      "end_time": 664400.0,
      "text": "The symbols 0 through 9 are used just as in decimal"
    },
    {
      "index": 143,
      "start_time": 664400.0,
      "end_time": 667600.0,
      "text": "but six more symbols are needed."
    },
    {
      "index": 144,
      "start_time": 667600.0,
      "end_time": 672300.0,
      "text": "Instead of making up new symbols, the letters A through F are used"
    },
    {
      "index": 145,
      "start_time": 672300.0,
      "end_time": 677699.0,
      "text": "to represent what we call ten through fifteen in decimal."
    },
    {
      "index": 146,
      "start_time": 678400.0,
      "end_time": 682699.0,
      "text": "Counting in hexadecimal works the same way as in decimal or octal"
    },
    {
      "index": 147,
      "start_time": 682700.0,
      "end_time": 687100.0,
      "text": "except that hex uses sixteen symbols per digit."
    },
    {
      "index": 148,
      "start_time": 687100.0,
      "end_time": 692200.0,
      "text": "Because each column multiplier is sixteen times larger than the previous column"
    },
    {
      "index": 149,
      "start_time": 692200.0,
      "end_time": 694900.0,
      "text": "hexadecimal can represent large numbers"
    },
    {
      "index": 150,
      "start_time": 694900.0,
      "end_time": 697699.0,
      "text": "with fewer digits than octal or decimal."
    },
    {
      "index": 151,
      "start_time": 700700.0,
      "end_time": 702500.0,
      "text": "When counting in hexadecimal"
    },
    {
      "index": 152,
      "start_time": 702500.0,
      "end_time": 706100.0,
      "text": "after getting to F which is decimal 15"
    },
    {
      "index": 153,
      "start_time": 706100.0,
      "end_time": 709670.0,
      "text": "we go to \"10\" which is decimal 16"
    },
    {
      "index": 154,
      "start_time": 709670.0,
      "end_time": 714500.0,
      "text": "then  \"11\",  \"12\",  and so on."
    },
    {
      "index": 155,
      "start_time": 714500.0,
      "end_time": 716800.0,
      "text": "Once we reach 1F"
    },
    {
      "index": 156,
      "start_time": 716800.0,
      "end_time": 721250.0,
      "text": "we go to \"20\" which is decimal 32."
    },
    {
      "index": 157,
      "start_time": 721250.0,
      "end_time": 727300.0,
      "text": "When we get to the largest number which we can represent with two hex digits, FF"
    },
    {
      "index": 158,
      "start_time": 727300.0,
      "end_time": 733000.0,
      "text": "we go to \"100\" which is decimal 256"
    },
    {
      "index": 159,
      "start_time": 733000.0,
      "end_time": 735000.0,
      "text": "and so on."
    },
    {
      "index": 160,
      "start_time": 738750.0,
      "end_time": 739900.0,
      "text": "As we mentioned"
    },
    {
      "index": 161,
      "start_time": 739900.0,
      "end_time": 747500.0,
      "text": "using hex notation, four binary bits can be represented by a single hex symbol."
    },
    {
      "index": 162,
      "start_time": 748500.0,
      "end_time": 752500.0,
      "text": "Each of the sixteen possible combinations of four bits"
    },
    {
      "index": 163,
      "start_time": 752500.0,
      "end_time": 756000.0,
      "text": "is equivalent to a single hex digit."
    },
    {
      "index": 164,
      "start_time": 759000.0,
      "end_time": 763439.0,
      "text": "Let&#39;s convert the same binary number as before to hex."
    },
    {
      "index": 165,
      "start_time": 763439.0,
      "end_time": 768599.0,
      "text": "Starting from the right, we group the digits into groups of four."
    },
    {
      "index": 166,
      "start_time": 769700.0,
      "end_time": 776500.0,
      "text": "Each group of binary digits is then converted to its equivalent hex symbol."
    },
    {
      "index": 167,
      "start_time": 778400.0,
      "end_time": 781100.0,
      "text": "So we have seen how the same natural number"
    },
    {
      "index": 168,
      "start_time": 781100.0,
      "end_time": 786400.0,
      "text": "can be represented in base-2 using two numeric symbols"
    },
    {
      "index": 169,
      "start_time": 786500.0,
      "end_time": 789650.0,
      "text": "base-8 using eight symbols"
    },
    {
      "index": 170,
      "start_time": 789750.0,
      "end_time": 792950.0,
      "text": "base-10 using ten symbols"
    },
    {
      "index": 171,
      "start_time": 793500.0,
      "end_time": 797400.0,
      "text": "and base-16 using sixteen symbols."
    },
    {
      "index": 172,
      "start_time": 797400.0,
      "end_time": 801199.0,
      "text": "But no matter how we choose to write this natural number"
    },
    {
      "index": 173,
      "start_time": 801200.0,
      "end_time": 805000.0,
      "text": "it still represents the same quantity."
    },
    {
      "index": 174,
      "start_time": 808400.0,
      "end_time": 809800.0,
      "text": "As you have seen"
    },
    {
      "index": 175,
      "start_time": 809800.0,
      "end_time": 813400.0,
      "text": "we use the same basic rules for counting in binary"
    },
    {
      "index": 176,
      "start_time": 813500.0,
      "end_time": 814400.0,
      "text": "octal"
    },
    {
      "index": 177,
      "start_time": 814400.0,
      "end_time": 815199.0,
      "text": "decimal"
    },
    {
      "index": 178,
      "start_time": 815300.0,
      "end_time": 817199.0,
      "text": "and hexadecimal."
    },
    {
      "index": 179,
      "start_time": 817400.0,
      "end_time": 824100.0,
      "text": "The only difference is that each base has a different number of numeric symbols."
    },
    {
      "index": 180,
      "start_time": 825000.0,
      "end_time": 827410.0,
      "text": "So using positional notation"
    },
    {
      "index": 181,
      "start_time": 827410.0,
      "end_time": 831699.0,
      "text": "we can create a number system using any natural base we like."
    },
    {
      "index": 182,
      "start_time": 832970.0,
      "end_time": 835000.0,
      "text": "Try creating one of your own."
    },
    {
      "index": 183,
      "start_time": 835000.0,
      "end_time": 838500.0,
      "text": "Who knows, it might catch on!"
    }
  ]
}