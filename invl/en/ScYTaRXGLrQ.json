{
  "video_id": "ScYTaRXGLrQ",
  "title": "Blocos Try/Catch/Finally",
  "es": 0,
  "json": [
    {
      "index": 1,
      "start_time": 410.0,
      "end_time": 3650.0,
      "text": "Yeah, so when an error occurs, and an exception is thrown,"
    },
    {
      "index": 2,
      "start_time": 3650.0,
      "end_time": 8530.0,
      "text": "it&#39;s our job as developers to handle it by providing a backup plan."
    },
    {
      "index": 3,
      "start_time": 8530.0,
      "end_time": 9980.0,
      "text": "We catch the exception and"
    },
    {
      "index": 4,
      "start_time": 9980.0,
      "end_time": 14680.0,
      "text": "fall back to some reasonable default behavior, otherwise the app may crash."
    },
    {
      "index": 5,
      "start_time": 14680.0,
      "end_time": 15594.0,
      "text": "In other words,"
    },
    {
      "index": 6,
      "start_time": 15594.0,
      "end_time": 19854.0,
      "text": "some application crashes are simply the result of the uncaught exceptions."
    },
    {
      "index": 7,
      "start_time": 19854.0,
      "end_time": 23698.0,
      "text": "&gt;&gt; Yeah, so in order to do this, we&#39;re going to have to learn about something"
    },
    {
      "index": 8,
      "start_time": 23698.0,
      "end_time": 25598.0,
      "text": "called the try catch block in Java."
    },
    {
      "index": 9,
      "start_time": 25598.0,
      "end_time": 28699.0,
      "text": "&gt;&gt; Try means you try to execute a group of statements,"
    },
    {
      "index": 10,
      "start_time": 28699.0,
      "end_time": 33254.0,
      "text": "that includes calling a method that could potentially thow an exception."
    },
    {
      "index": 11,
      "start_time": 33254.0,
      "end_time": 36216.0,
      "text": "&gt;&gt; And when an exception is thrown, you catch it."
    },
    {
      "index": 12,
      "start_time": 36216.0,
      "end_time": 40367.0,
      "text": "If no one catches the exception, well your app will crash."
    },
    {
      "index": 13,
      "start_time": 40367.0,
      "end_time": 41377.0,
      "text": "You okay, Joe?"
    },
    {
      "index": 14,
      "start_time": 41377.0,
      "end_time": 42010.0,
      "text": "&gt;&gt; I&#39;m fine."
    },
    {
      "index": 15,
      "start_time": 42010.0,
      "end_time": 45570.0,
      "text": "And regardless of whether an exception was thrown or not,"
    },
    {
      "index": 16,
      "start_time": 45570.0,
      "end_time": 49250.0,
      "text": "we can finish executing code in the finally block."
    },
    {
      "index": 17,
      "start_time": 49250.0,
      "end_time": 52848.0,
      "text": "&gt;&gt; So the full flow is try to do something that may throw an exception,"
    },
    {
      "index": 18,
      "start_time": 52848.0,
      "end_time": 54918.0,
      "text": "catch the exception if it&#39;s thrown."
    },
    {
      "index": 19,
      "start_time": 54918.0,
      "end_time": 57009.0,
      "text": "And finally, execute some code regardless of whether or"
    },
    {
      "index": 20,
      "start_time": 57009.0,
      "end_time": 58990.0,
      "text": "not that exception occurred."
    },
    {
      "index": 21,
      "start_time": 58990.0,
      "end_time": 60880.0,
      "text": "&gt;&gt; We should show them some code for this."
    },
    {
      "index": 22,
      "start_time": 60880.0,
      "end_time": 62210.0,
      "text": "&gt;&gt; Yeah, for sure."
    },
    {
      "index": 23,
      "start_time": 62210.0,
      "end_time": 64917.0,
      "text": "Let&#39;s do it. &gt;&gt; In the Tsunami App there are multiple"
    },
    {
      "index": 24,
      "start_time": 64917.0,
      "end_time": 67560.0,
      "text": "examples of try catch blocks."
    },
    {
      "index": 25,
      "start_time": 67560.0,
      "end_time": 70540.0,
      "text": "Let&#39;s look at one in the create your own method."
    },
    {
      "index": 26,
      "start_time": 70540.0,
      "end_time": 73770.0,
      "text": "The goal of this method is to return a URL object for"
    },
    {
      "index": 27,
      "start_time": 73770.0,
      "end_time": 76570.0,
      "text": "the provided input string URL."
    },
    {
      "index": 28,
      "start_time": 76570.0,
      "end_time": 81385.0,
      "text": "Ideally, we would just call a URL constructor and pass in the string URL,"
    },
    {
      "index": 29,
      "start_time": 81385.0,
      "end_time": 85502.0,
      "text": "but via this red squiggly line Android Studio is notifying us of"
    },
    {
      "index": 30,
      "start_time": 85502.0,
      "end_time": 88002.0,
      "text": "an error situation that is detected."
    },
    {
      "index": 31,
      "start_time": 88002.0,
      "end_time": 91638.0,
      "text": "That is, it says that we have an unhandled exception of"
    },
    {
      "index": 32,
      "start_time": 91638.0,
      "end_time": 94500.0,
      "text": "type malformed URL exception."
    },
    {
      "index": 33,
      "start_time": 94500.0,
      "end_time": 98800.0,
      "text": "This means that the URL constructor throws a malformed URL exception, and"
    },
    {
      "index": 34,
      "start_time": 98800.0,
      "end_time": 101040.0,
      "text": "we need to catch and handle the error."
    },
    {
      "index": 35,
      "start_time": 101040.0,
      "end_time": 104890.0,
      "text": "Otherwise, our app won&#39;t build and we can&#39;t run it on our device."
    },
    {
      "index": 36,
      "start_time": 104890.0,
      "end_time": 107000.0,
      "text": "For any constructor or method call,"
    },
    {
      "index": 37,
      "start_time": 107000.0,
      "end_time": 110760.0,
      "text": "you can check if it will throw an exception by checking the documentation."
    },
    {
      "index": 38,
      "start_time": 110760.0,
      "end_time": 113961.0,
      "text": "For example, if we visit the URL reference documentation,"
    },
    {
      "index": 39,
      "start_time": 113961.0,
      "end_time": 117789.0,
      "text": "we can see that the URL constructor that accepts a string as input through"
    },
    {
      "index": 40,
      "start_time": 117789.0,
      "end_time": 119250.0,
      "text": "MalformedURLException."
    },
    {
      "index": 41,
      "start_time": 119250.0,
      "end_time": 123719.0,
      "text": "If the input parameter can&#39;t be converted into a URL,"
    },
    {
      "index": 42,
      "start_time": 123719.0,
      "end_time": 126062.0,
      "text": "that is it is MalformedURL."
    },
    {
      "index": 43,
      "start_time": 126062.0,
      "end_time": 130880.0,
      "text": "To fix our code, we can use the shortcut Alt+Enter for a quick fix."
    },
    {
      "index": 44,
      "start_time": 130880.0,
      "end_time": 134060.0,
      "text": "We can select the option, surround with try catch, and"
    },
    {
      "index": 45,
      "start_time": 134060.0,
      "end_time": 136790.0,
      "text": "Android Studio will automatically update the code."
    },
    {
      "index": 46,
      "start_time": 136790.0,
      "end_time": 138163.0,
      "text": "Pretty neat, right?"
    },
    {
      "index": 47,
      "start_time": 138163.0,
      "end_time": 143156.0,
      "text": "Now we have the key word try followed by an opening curly brace."
    },
    {
      "index": 48,
      "start_time": 143156.0,
      "end_time": 145750.0,
      "text": "Inside the try block we put all of our code in here"
    },
    {
      "index": 49,
      "start_time": 145750.0,
      "end_time": 147330.0,
      "text": "that could throw an exception."
    },
    {
      "index": 50,
      "start_time": 147330.0,
      "end_time": 151268.0,
      "text": "Now in general, it&#39;s good practice to keep code inside this block lean."
    },
    {
      "index": 51,
      "start_time": 151268.0,
      "end_time": 153368.0,
      "text": "You don&#39;t want full method by this here,"
    },
    {
      "index": 52,
      "start_time": 153368.0,
      "end_time": 156220.0,
      "text": "then we close the block with the curly brace."
    },
    {
      "index": 53,
      "start_time": 156220.0,
      "end_time": 160310.0,
      "text": "Next, we have the keyword catch followed a set of parenthesis"
    },
    {
      "index": 54,
      "start_time": 160310.0,
      "end_time": 163905.0,
      "text": "containing the exact data type of the excephamore catching."
    },
    {
      "index": 55,
      "start_time": 163905.0,
      "end_time": 167555.0,
      "text": "In this case, MalformedURLException and the variable name for"
    },
    {
      "index": 56,
      "start_time": 167555.0,
      "end_time": 169725.0,
      "text": "the exception object e."
    },
    {
      "index": 57,
      "start_time": 169725.0,
      "end_time": 172400.0,
      "text": "Then we have an opening brace where we will handle the exception,"
    },
    {
      "index": 58,
      "start_time": 172400.0,
      "end_time": 177835.0,
      "text": "e.printStackTrace will print the error stack in detailed format."
    },
    {
      "index": 59,
      "start_time": 177835.0,
      "end_time": 181505.0,
      "text": "Another option is to log areas using Androids log methods and"
    },
    {
      "index": 60,
      "start_time": 181505.0,
      "end_time": 184937.0,
      "text": "include our own log tag and our own custom message."
    },
    {
      "index": 61,
      "start_time": 184937.0,
      "end_time": 189480.0,
      "text": "The log.e method can take an exception as it&#39;s third argument."
    },
    {
      "index": 62,
      "start_time": 189480.0,
      "end_time": 192540.0,
      "text": "To recap, if all went well on the URL constructor,"
    },
    {
      "index": 63,
      "start_time": 192540.0,
      "end_time": 196570.0,
      "text": "then no exception is thrown and nothing on the catch block ever runs."
    },
    {
      "index": 64,
      "start_time": 196570.0,
      "end_time": 199800.0,
      "text": "But if the code within the try block throws an exception, then we immediately"
    },
    {
      "index": 65,
      "start_time": 199800.0,
      "end_time": 204120.0,
      "text": "jump to the cash block with the exception and execute the code there."
    },
    {
      "index": 66,
      "start_time": 204120.0,
      "end_time": 205980.0,
      "text": "Then we exit the try catch statement and"
    },
    {
      "index": 67,
      "start_time": 205980.0,
      "end_time": 209870.0,
      "text": "continue executing the code line by line after that."
    },
    {
      "index": 68,
      "start_time": 209870.0,
      "end_time": 214182.0,
      "text": "Notice that the URL variable is initialized before the try catch block."
    },
    {
      "index": 69,
      "start_time": 214182.0,
      "end_time": 216680.0,
      "text": "We have to consider variable scope here."
    },
    {
      "index": 70,
      "start_time": 216680.0,
      "end_time": 219720.0,
      "text": "If we define the URL variable inside the try block,"
    },
    {
      "index": 71,
      "start_time": 219720.0,
      "end_time": 223600.0,
      "text": "we won&#39;t be able to access the URL variable after the statement is done."
    },
    {
      "index": 72,
      "start_time": 223600.0,
      "end_time": 227060.0,
      "text": "So since we want to reference the URL variable at the end of the method"
    },
    {
      "index": 73,
      "start_time": 227060.0,
      "end_time": 228930.0,
      "text": "outside of the try catch statement."
    },
    {
      "index": 74,
      "start_time": 228930.0,
      "end_time": 233050.0,
      "text": "We need to initialize the URL variable outside of it as well."
    },
    {
      "index": 75,
      "start_time": 233050.0,
      "end_time": 237130.0,
      "text": "In this case, we can just set it to null, which means an empty value."
    },
    {
      "index": 76,
      "start_time": 237130.0,
      "end_time": 241162.0,
      "text": "So now we&#39;ve seen how Android Studio will notify you if you need to wrap your"
    },
    {
      "index": 77,
      "start_time": 241162.0,
      "end_time": 242840.0,
      "text": "code in a try catch statement."
    },
    {
      "index": 78,
      "start_time": 242840.0,
      "end_time": 244360.0,
      "text": "If you want more information,"
    },
    {
      "index": 79,
      "start_time": 244360.0,
      "end_time": 247290.0,
      "text": "you can check out the official Java documentation."
    },
    {
      "index": 80,
      "start_time": 247290.0,
      "end_time": 250260.0,
      "text": "This next example is a little bit more complex."
    },
    {
      "index": 81,
      "start_time": 250260.0,
      "end_time": 253870.0,
      "text": "It shows that you can have as many lines of code in the try block as you want."
    },
    {
      "index": 82,
      "start_time": 253870.0,
      "end_time": 257459.0,
      "text": "If any line of that code throws an exception, then we stop executing"
    },
    {
      "index": 83,
      "start_time": 257459.0,
      "end_time": 261300.0,
      "text": "the statements in the try block and jump directly to the catch block."
    },
    {
      "index": 84,
      "start_time": 261300.0,
      "end_time": 263870.0,
      "text": "As you can see here you can and should have"
    },
    {
      "index": 85,
      "start_time": 263870.0,
      "end_time": 267860.0,
      "text": "multiple catch blocks to handle different types of errors if necessary."
    },
    {
      "index": 86,
      "start_time": 267860.0,
      "end_time": 271320.0,
      "text": "Here, the code catches an index out of bound exception and"
    },
    {
      "index": 87,
      "start_time": 271320.0,
      "end_time": 273030.0,
      "text": "prints a system log message."
    },
    {
      "index": 88,
      "start_time": 273030.0,
      "end_time": 277330.0,
      "text": "The code also catches an IO exception and prints a different log message."
    },
    {
      "index": 89,
      "start_time": 277330.0,
      "end_time": 279450.0,
      "text": "Now depending on what exception gets thrown,"
    },
    {
      "index": 90,
      "start_time": 279450.0,
      "end_time": 284430.0,
      "text": "we will fall into one of these catch blocks, but not both."
    },
    {
      "index": 91,
      "start_time": 284430.0,
      "end_time": 287490.0,
      "text": "So you can see how there&#39;s no guarantee of executing"
    },
    {
      "index": 92,
      "start_time": 287490.0,
      "end_time": 289260.0,
      "text": "all of the code in the try block."
    },
    {
      "index": 93,
      "start_time": 289260.0,
      "end_time": 292360.0,
      "text": "Sometimes you have clean up that needs to be done even if there was"
    },
    {
      "index": 94,
      "start_time": 292360.0,
      "end_time": 293950.0,
      "text": "an exception thrown."
    },
    {
      "index": 95,
      "start_time": 293950.0,
      "end_time": 297340.0,
      "text": "So the finally block will always be executed regardless of whether or"
    },
    {
      "index": 96,
      "start_time": 297340.0,
      "end_time": 299730.0,
      "text": "not an exception was thrown."
    },
    {
      "index": 97,
      "start_time": 299730.0,
      "end_time": 301900.0,
      "text": "Before we wrap up this discussion,"
    },
    {
      "index": 98,
      "start_time": 301900.0,
      "end_time": 306180.0,
      "text": "I want to point out one final method of dealing with a check exception."
    },
    {
      "index": 99,
      "start_time": 306180.0,
      "end_time": 310910.0,
      "text": "Now as you can see here by modifying the createURL methods, methods signature."
    },
    {
      "index": 100,
      "start_time": 310910.0,
      "end_time": 315160.0,
      "text": "You do have the option to defer the exception handling up the call chain"
    },
    {
      "index": 101,
      "start_time": 315160.0,
      "end_time": 317710.0,
      "text": "by declaring that your method may throw the exception"
    },
    {
      "index": 102,
      "start_time": 317710.0,
      "end_time": 321430.0,
      "text": "which in turn requires that the calling methods handle it."
    },
    {
      "index": 103,
      "start_time": 321430.0,
      "end_time": 324940.0,
      "text": "This is common if the exception is thrown from inside helper method."
    },
    {
      "index": 104,
      "start_time": 324940.0,
      "end_time": 327840.0,
      "text": "And you want to handle it in a try catch somewhere else."
    },
    {
      "index": 105,
      "start_time": 327840.0,
      "end_time": 332480.0,
      "text": "For example, whoever calls the createUrl method will now need a try catch block"
    },
    {
      "index": 106,
      "start_time": 332480.0,
      "end_time": 337650.0,
      "text": "around this method call, and have to catch the MalformedURLException."
    },
    {
      "index": 107,
      "start_time": 337650.0,
      "end_time": 340570.0,
      "text": "We can see this here in the doInBackground method."
    },
    {
      "index": 108,
      "start_time": 340570.0,
      "end_time": 344030.0,
      "text": "For the purposes of the Tsunami App, if you call some Android framework code"
    },
    {
      "index": 109,
      "start_time": 344030.0,
      "end_time": 347960.0,
      "text": "that throws an exception, you should catch it and handle it at the moment"
    },
    {
      "index": 110,
      "start_time": 347960.0,
      "end_time": 357960.0,
      "text": "it happens instead of deferring it to be handled later."
    }
  ]
}