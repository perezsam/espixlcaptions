{
  "video_id": "84gqSbLcBFE",
  "title": "Letâ€™s Write a Pipeline - Machine Learning Recipes #4",
  "es": 0,
  "json": [
    {
      "index": 1,
      "start_time": 0.0,
      "end_time": 2844.0,
      "text": "[MUSIC PLAYING]"
    },
    {
      "index": 2,
      "start_time": 6640.0,
      "end_time": 7447.0,
      "text": "Welcome back."
    },
    {
      "index": 3,
      "start_time": 7447.0,
      "end_time": 9030.0,
      "text": "We&#39;ve covered a lot of ground already,"
    },
    {
      "index": 4,
      "start_time": 9030.0,
      "end_time": 12070.0,
      "text": "so today I want to review and reinforce concepts."
    },
    {
      "index": 5,
      "start_time": 12070.0,
      "end_time": 14250.0,
      "text": "To do that, we&#39;ll explore two things."
    },
    {
      "index": 6,
      "start_time": 14250.0,
      "end_time": 16090.0,
      "text": "First, we&#39;ll code up a basic pipeline"
    },
    {
      "index": 7,
      "start_time": 16090.0,
      "end_time": 17640.0,
      "text": "for supervised learning."
    },
    {
      "index": 8,
      "start_time": 17640.0,
      "end_time": 19390.0,
      "text": "I&#39;ll show you how multiple classifiers"
    },
    {
      "index": 9,
      "start_time": 19390.0,
      "end_time": 21280.0,
      "text": "can solve the same problem."
    },
    {
      "index": 10,
      "start_time": 21280.0,
      "end_time": 23200.0,
      "text": "Next, we&#39;ll build up a little more intuition"
    },
    {
      "index": 11,
      "start_time": 23200.0,
      "end_time": 25710.0,
      "text": "for what it means for an algorithm to learn something"
    },
    {
      "index": 12,
      "start_time": 25710.0,
      "end_time": 29502.0,
      "text": "from data, because that sounds kind of magical, but it&#39;s not."
    },
    {
      "index": 13,
      "start_time": 29502.0,
      "end_time": 31710.0,
      "text": "To kick things off, let&#39;s look at a common experiment"
    },
    {
      "index": 14,
      "start_time": 31710.0,
      "end_time": 33010.0,
      "text": "you might want to do."
    },
    {
      "index": 15,
      "start_time": 33010.0,
      "end_time": 35210.0,
      "text": "Imagine you&#39;re building a spam classifier."
    },
    {
      "index": 16,
      "start_time": 35210.0,
      "end_time": 37510.0,
      "text": "That&#39;s just a function that labels an incoming email"
    },
    {
      "index": 17,
      "start_time": 37510.0,
      "end_time": 39307.0,
      "text": "as spam or not spam."
    },
    {
      "index": 18,
      "start_time": 39307.0,
      "end_time": 41140.0,
      "text": "Now, say you&#39;ve already collected a data set"
    },
    {
      "index": 19,
      "start_time": 41140.0,
      "end_time": 42850.0,
      "text": "and you&#39;re ready to train a model."
    },
    {
      "index": 20,
      "start_time": 42850.0,
      "end_time": 44460.0,
      "text": "But before you put it into production,"
    },
    {
      "index": 21,
      "start_time": 44460.0,
      "end_time": 46760.0,
      "text": "there&#39;s a question you need to answer first--"
    },
    {
      "index": 22,
      "start_time": 46760.0,
      "end_time": 49820.0,
      "text": "how accurate will it be when you use it to classify emails that"
    },
    {
      "index": 23,
      "start_time": 49820.0,
      "end_time": 51740.0,
      "text": "weren&#39;t in your training data?"
    },
    {
      "index": 24,
      "start_time": 51740.0,
      "end_time": 54850.0,
      "text": "As best we can, we want to verify our models work well"
    },
    {
      "index": 25,
      "start_time": 54850.0,
      "end_time": 56490.0,
      "text": "before we deploy them."
    },
    {
      "index": 26,
      "start_time": 56490.0,
      "end_time": 59290.0,
      "text": "And we can do an experiment to help us figure that out."
    },
    {
      "index": 27,
      "start_time": 59290.0,
      "end_time": 62930.0,
      "text": "One approach is to partition our data set into two parts."
    },
    {
      "index": 28,
      "start_time": 62930.0,
      "end_time": 65080.0,
      "text": "We&#39;ll call these Train and Test."
    },
    {
      "index": 29,
      "start_time": 65080.0,
      "end_time": 67010.0,
      "text": "We&#39;ll use Train to train our model"
    },
    {
      "index": 30,
      "start_time": 67010.0,
      "end_time": 70380.0,
      "text": "and Test to see how accurate it is on new data."
    },
    {
      "index": 31,
      "start_time": 70380.0,
      "end_time": 73890.0,
      "text": "That&#39;s a common pattern, so let&#39;s see how it looks in code."
    },
    {
      "index": 32,
      "start_time": 73890.0,
      "end_time": 77060.0,
      "text": "To kick things off, let&#39;s import a data set into [? SyKit. ?]"
    },
    {
      "index": 33,
      "start_time": 77060.0,
      "end_time": 80020.0,
      "text": "We&#39;ll use Iris again, because it&#39;s handily included."
    },
    {
      "index": 34,
      "start_time": 80020.0,
      "end_time": 81960.0,
      "text": "Now, we already saw Iris in episode two."
    },
    {
      "index": 35,
      "start_time": 81960.0,
      "end_time": 83560.0,
      "text": "But what we haven&#39;t seen before is"
    },
    {
      "index": 36,
      "start_time": 83560.0,
      "end_time": 86832.0,
      "text": "that I&#39;m calling the features x and the labels y."
    },
    {
      "index": 37,
      "start_time": 86832.0,
      "end_time": 88210.0,
      "text": "Why is that?"
    },
    {
      "index": 38,
      "start_time": 88210.0,
      "end_time": 90670.0,
      "text": "Well, that&#39;s because one way to think of a classifier"
    },
    {
      "index": 39,
      "start_time": 90670.0,
      "end_time": 92230.0,
      "text": "is as a function."
    },
    {
      "index": 40,
      "start_time": 92230.0,
      "end_time": 94750.0,
      "text": "At a high level, you can think of x as the input"
    },
    {
      "index": 41,
      "start_time": 94750.0,
      "end_time": 96500.0,
      "text": "and y as the output."
    },
    {
      "index": 42,
      "start_time": 96500.0,
      "end_time": 99892.0,
      "text": "I&#39;ll talk more about that in the second half of this episode."
    },
    {
      "index": 43,
      "start_time": 99892.0,
      "end_time": 102350.0,
      "text": "After we import the data set, the first thing we want to do"
    },
    {
      "index": 44,
      "start_time": 102350.0,
      "end_time": 104590.0,
      "text": "is partition it into Train and Test."
    },
    {
      "index": 45,
      "start_time": 104590.0,
      "end_time": 106640.0,
      "text": "And to do that, we can import a handy utility,"
    },
    {
      "index": 46,
      "start_time": 106640.0,
      "end_time": 108530.0,
      "text": "and it makes the syntax clear."
    },
    {
      "index": 47,
      "start_time": 108530.0,
      "end_time": 110340.0,
      "text": "We&#39;re taking our x&#39;s and our y&#39;s,"
    },
    {
      "index": 48,
      "start_time": 110340.0,
      "end_time": 112930.0,
      "text": "or our features and labels, and partitioning them"
    },
    {
      "index": 49,
      "start_time": 112930.0,
      "end_time": 114450.0,
      "text": "into two sets."
    },
    {
      "index": 50,
      "start_time": 114450.0,
      "end_time": 116690.0,
      "text": "X_train and y_train are the features and labels"
    },
    {
      "index": 51,
      "start_time": 116690.0,
      "end_time": 117980.0,
      "text": "for the training set."
    },
    {
      "index": 52,
      "start_time": 117980.0,
      "end_time": 120630.0,
      "text": "And X_test and y_test are the features and labels"
    },
    {
      "index": 53,
      "start_time": 120630.0,
      "end_time": 122032.0,
      "text": "for the testing set."
    },
    {
      "index": 54,
      "start_time": 122032.0,
      "end_time": 124240.0,
      "text": "Here, I&#39;m just saying that I want half the data to be"
    },
    {
      "index": 55,
      "start_time": 124240.0,
      "end_time": 125580.0,
      "text": "used for testing."
    },
    {
      "index": 56,
      "start_time": 125580.0,
      "end_time": 129229.0,
      "text": "So if we have 150 examples in Iris, 75 will be in Train"
    },
    {
      "index": 57,
      "start_time": 129229.00000000001,
      "end_time": 131520.0,
      "text": "and 75 will be in Test."
    },
    {
      "index": 58,
      "start_time": 131520.0,
      "end_time": 133280.0,
      "text": "Now we&#39;ll create our classifier."
    },
    {
      "index": 59,
      "start_time": 133280.0,
      "end_time": 134980.0,
      "text": "I&#39;ll use two different types here"
    },
    {
      "index": 60,
      "start_time": 134980.0,
      "end_time": 137860.0,
      "text": "to show you how they accomplish the same task."
    },
    {
      "index": 61,
      "start_time": 137860.0,
      "end_time": 140500.0,
      "text": "Let&#39;s start with the decision tree we&#39;ve already seen."
    },
    {
      "index": 62,
      "start_time": 140500.0,
      "end_time": 142240.0,
      "text": "Note there&#39;s only two lines of code"
    },
    {
      "index": 63,
      "start_time": 142240.0,
      "end_time": 143448.0,
      "text": "that are classifier-specific."
    },
    {
      "index": 64,
      "start_time": 145650.0,
      "end_time": 148830.0,
      "text": "Now let&#39;s train the classifier using our training data."
    },
    {
      "index": 65,
      "start_time": 148830.0,
      "end_time": 151600.0,
      "text": "At this point, it&#39;s ready to be used to classify data."
    },
    {
      "index": 66,
      "start_time": 151600.0,
      "end_time": 153330.0,
      "text": "And next, we&#39;ll call the predict method"
    },
    {
      "index": 67,
      "start_time": 153330.0,
      "end_time": 155805.0,
      "text": "and use it to classify our testing data."
    },
    {
      "index": 68,
      "start_time": 155805.0,
      "end_time": 157180.0,
      "text": "If you print out the predictions,"
    },
    {
      "index": 69,
      "start_time": 157180.0,
      "end_time": 158970.0,
      "text": "you&#39;ll see there are a list of numbers."
    },
    {
      "index": 70,
      "start_time": 158970.0,
      "end_time": 160660.0,
      "text": "These correspond to the type of Iris"
    },
    {
      "index": 71,
      "start_time": 160660.0,
      "end_time": 164010.0,
      "text": "the classifier predicts for each row in the testing data."
    },
    {
      "index": 72,
      "start_time": 164010.0,
      "end_time": 166230.0,
      "text": "Now let&#39;s see how accurate our classifier"
    },
    {
      "index": 73,
      "start_time": 166230.0,
      "end_time": 168280.0,
      "text": "was on the testing set."
    },
    {
      "index": 74,
      "start_time": 168280.0,
      "end_time": 170840.0,
      "text": "Recall that up top, we have the true labels for the testing"
    },
    {
      "index": 75,
      "start_time": 170840.0,
      "end_time": 171650.0,
      "text": "data."
    },
    {
      "index": 76,
      "start_time": 171650.0,
      "end_time": 173460.0,
      "text": "To calculate our accuracy, we can"
    },
    {
      "index": 77,
      "start_time": 173460.0,
      "end_time": 175760.0,
      "text": "compare the predicted labels to the true labels,"
    },
    {
      "index": 78,
      "start_time": 175760.0,
      "end_time": 177349.0,
      "text": "and tally up the score."
    },
    {
      "index": 79,
      "start_time": 177349.0,
      "end_time": 179140.0,
      "text": "There&#39;s a convenience method in [? Sykit ?]"
    },
    {
      "index": 80,
      "start_time": 179140.0,
      "end_time": 180830.0,
      "text": "we can import to do that."
    },
    {
      "index": 81,
      "start_time": 180830.0,
      "end_time": 183505.0,
      "text": "Notice here, our accuracy was over 90%."
    },
    {
      "index": 82,
      "start_time": 183505.0,
      "end_time": 186130.0,
      "text": "If you try this on your own, it might be a little bit different"
    },
    {
      "index": 83,
      "start_time": 186130.0,
      "end_time": 188270.0,
      "text": "because of some randomness in how the Train/Test"
    },
    {
      "index": 84,
      "start_time": 188270.0,
      "end_time": 190040.0,
      "text": "data is partitioned."
    },
    {
      "index": 85,
      "start_time": 190040.0,
      "end_time": 191880.0,
      "text": "Now, here&#39;s something interesting."
    },
    {
      "index": 86,
      "start_time": 191880.0,
      "end_time": 194690.0,
      "text": "By replacing these two lines, we can use a different classifier"
    },
    {
      "index": 87,
      "start_time": 194690.0,
      "end_time": 196920.0,
      "text": "to accomplish the same task."
    },
    {
      "index": 88,
      "start_time": 196920.0,
      "end_time": 198570.0,
      "text": "Instead of using a decision tree,"
    },
    {
      "index": 89,
      "start_time": 198570.0,
      "end_time": 200930.0,
      "text": "we&#39;ll use one called [? KNearestNeighbors. ?]"
    },
    {
      "index": 90,
      "start_time": 200930.0,
      "end_time": 203340.0,
      "text": "If we run our experiment, we&#39;ll see that the code"
    },
    {
      "index": 91,
      "start_time": 203340.0,
      "end_time": 205354.0,
      "text": "works in exactly the same way."
    },
    {
      "index": 92,
      "start_time": 205354.0,
      "end_time": 207270.0,
      "text": "The accuracy may be different when you run it,"
    },
    {
      "index": 93,
      "start_time": 207270.0,
      "end_time": 209800.0,
      "text": "because this classifier works a little bit differently"
    },
    {
      "index": 94,
      "start_time": 209800.0,
      "end_time": 212440.0,
      "text": "and because of the randomness in the Train/Test split."
    },
    {
      "index": 95,
      "start_time": 212440.0,
      "end_time": 215420.0,
      "text": "Likewise, if we wanted to use a more sophisticated classifier,"
    },
    {
      "index": 96,
      "start_time": 215420.0,
      "end_time": 218220.0,
      "text": "we could just import it and change these two lines."
    },
    {
      "index": 97,
      "start_time": 218220.0,
      "end_time": 220297.0,
      "text": "Otherwise, our code is the same."
    },
    {
      "index": 98,
      "start_time": 220297.0,
      "end_time": 222880.0,
      "text": "The takeaway here is that while there are many different types"
    },
    {
      "index": 99,
      "start_time": 222880.0,
      "end_time": 225920.0,
      "text": "of classifiers, at a high level, they have a similar interface."
    },
    {
      "index": 100,
      "start_time": 229059.0,
      "end_time": 230850.0,
      "text": "Now let&#39;s talk a little bit more about what"
    },
    {
      "index": 101,
      "start_time": 230850.0,
      "end_time": 233120.0,
      "text": "it means to learn from data."
    },
    {
      "index": 102,
      "start_time": 233120.0,
      "end_time": 236080.0,
      "text": "Earlier, I said we called the features x and the labels y,"
    },
    {
      "index": 103,
      "start_time": 236080.0,
      "end_time": 238717.0,
      "text": "because they were the input and output of a function."
    },
    {
      "index": 104,
      "start_time": 238717.0,
      "end_time": 240800.0,
      "text": "Now, of course, a function is something we already"
    },
    {
      "index": 105,
      "start_time": 240800.0,
      "end_time": 242190.0,
      "text": "know from programming."
    },
    {
      "index": 106,
      "start_time": 242190.0,
      "end_time": 244900.0,
      "text": "def classify-- there&#39;s our function."
    },
    {
      "index": 107,
      "start_time": 244900.0,
      "end_time": 246920.0,
      "text": "As we already know in supervised learning,"
    },
    {
      "index": 108,
      "start_time": 246920.0,
      "end_time": 249060.0,
      "text": "we don&#39;t want to write this ourselves."
    },
    {
      "index": 109,
      "start_time": 249060.0,
      "end_time": 252360.0,
      "text": "We want an algorithm to learn it from training data."
    },
    {
      "index": 110,
      "start_time": 252360.0,
      "end_time": 255240.0,
      "text": "So what does it mean to learn a function?"
    },
    {
      "index": 111,
      "start_time": 255240.0,
      "end_time": 257120.0,
      "text": "Well, a function is just a mapping from input"
    },
    {
      "index": 112,
      "start_time": 257120.0,
      "end_time": 258660.0,
      "text": "to output values."
    },
    {
      "index": 113,
      "start_time": 258660.00000000003,
      "end_time": 260660.00000000003,
      "text": "Here&#39;s a function you might have seen before-- y"
    },
    {
      "index": 114,
      "start_time": 260660.00000000003,
      "end_time": 262700.0,
      "text": "equals mx plus b."
    },
    {
      "index": 115,
      "start_time": 262700.0,
      "end_time": 264820.0,
      "text": "That&#39;s the equation for a line, and there"
    },
    {
      "index": 116,
      "start_time": 264820.0,
      "end_time": 267340.0,
      "text": "are two parameters-- m, which gives the slope;"
    },
    {
      "index": 117,
      "start_time": 267340.0,
      "end_time": 269680.0,
      "text": "and b, which gives the y-intercept."
    },
    {
      "index": 118,
      "start_time": 269680.0,
      "end_time": 271110.0,
      "text": "Given these parameters, of course,"
    },
    {
      "index": 119,
      "start_time": 271110.0,
      "end_time": 274320.0,
      "text": "we can plot the function for different values of x."
    },
    {
      "index": 120,
      "start_time": 274320.0,
      "end_time": 276610.0,
      "text": "Now, in supervised learning, our classified function"
    },
    {
      "index": 121,
      "start_time": 276610.0,
      "end_time": 278420.0,
      "text": "might have some parameters as well,"
    },
    {
      "index": 122,
      "start_time": 278420.0,
      "end_time": 281290.0,
      "text": "but the input x are the features for an example we"
    },
    {
      "index": 123,
      "start_time": 281290.0,
      "end_time": 283630.0,
      "text": "want to classify, and the output y"
    },
    {
      "index": 124,
      "start_time": 283630.0,
      "end_time": 287220.0,
      "text": "is a label, like Spam or Not Spam, or a type of flower."
    },
    {
      "index": 125,
      "start_time": 287220.0,
      "end_time": 289661.0,
      "text": "So what could the body of the function look like?"
    },
    {
      "index": 126,
      "start_time": 289661.0,
      "end_time": 291910.0,
      "text": "Well, that&#39;s the part we want to write algorithmically"
    },
    {
      "index": 127,
      "start_time": 291910.0,
      "end_time": 293737.0,
      "text": "or in other words, learn."
    },
    {
      "index": 128,
      "start_time": 293737.0,
      "end_time": 295320.0,
      "text": "The important thing to understand here"
    },
    {
      "index": 129,
      "start_time": 295320.0,
      "end_time": 297130.0,
      "text": "is we&#39;re not starting from scratch"
    },
    {
      "index": 130,
      "start_time": 297130.0,
      "end_time": 300060.0,
      "text": "and pulling the body of the function out of thin air."
    },
    {
      "index": 131,
      "start_time": 300060.0,
      "end_time": 301990.0,
      "text": "Instead, we start with a model."
    },
    {
      "index": 132,
      "start_time": 301990.0,
      "end_time": 304050.0,
      "text": "And you can think of a model as the prototype for"
    },
    {
      "index": 133,
      "start_time": 304050.0,
      "end_time": 307030.0,
      "text": "or the rules that define the body of our function."
    },
    {
      "index": 134,
      "start_time": 307030.0,
      "end_time": 308540.0,
      "text": "Typically, a model has parameters"
    },
    {
      "index": 135,
      "start_time": 308540.0,
      "end_time": 310290.0,
      "text": "that we can adjust with our training data."
    },
    {
      "index": 136,
      "start_time": 310290.0,
      "end_time": 314560.0,
      "text": "And here&#39;s a high-level example of how this process works."
    },
    {
      "index": 137,
      "start_time": 314560.0,
      "end_time": 317380.0,
      "text": "Let&#39;s look at a toy data set and think about what kind of model"
    },
    {
      "index": 138,
      "start_time": 317380.0,
      "end_time": 319210.0,
      "text": "we could use as a classifier."
    },
    {
      "index": 139,
      "start_time": 319210.0,
      "end_time": 320960.0,
      "text": "Pretend we&#39;re interested in distinguishing"
    },
    {
      "index": 140,
      "start_time": 320960.0,
      "end_time": 323350.0,
      "text": "between red dots and green dots, some of which"
    },
    {
      "index": 141,
      "start_time": 323350.0,
      "end_time": 325080.0,
      "text": "I&#39;ve drawn here on a graph."
    },
    {
      "index": 142,
      "start_time": 325080.0,
      "end_time": 327210.0,
      "text": "To do that, we&#39;ll use just two features--"
    },
    {
      "index": 143,
      "start_time": 327210.0,
      "end_time": 329450.0,
      "text": "the x- and y-coordinates of a dot."
    },
    {
      "index": 144,
      "start_time": 329450.0,
      "end_time": 332670.0,
      "text": "Now let&#39;s think about how we could classify this data."
    },
    {
      "index": 145,
      "start_time": 332670.0,
      "end_time": 334090.0,
      "text": "We want a function that considers"
    },
    {
      "index": 146,
      "start_time": 334090.0,
      "end_time": 335800.0,
      "text": "a new dot it&#39;s never seen before,"
    },
    {
      "index": 147,
      "start_time": 335800.0,
      "end_time": 338170.0,
      "text": "and classifies it as red or green."
    },
    {
      "index": 148,
      "start_time": 338170.0,
      "end_time": 340990.0,
      "text": "In fact, there might be a lot of data we want to classify."
    },
    {
      "index": 149,
      "start_time": 340990.0,
      "end_time": 342840.0,
      "text": "Here, I&#39;ve drawn our testing examples"
    },
    {
      "index": 150,
      "start_time": 342840.0,
      "end_time": 344960.0,
      "text": "in light green and light red."
    },
    {
      "index": 151,
      "start_time": 344960.0,
      "end_time": 347210.0,
      "text": "These are dots that weren&#39;t in our training data."
    },
    {
      "index": 152,
      "start_time": 347210.0,
      "end_time": 349790.0,
      "text": "The classifier has never seen them before, so how can"
    },
    {
      "index": 153,
      "start_time": 349790.0,
      "end_time": 351700.0,
      "text": "it predict the right label?"
    },
    {
      "index": 154,
      "start_time": 351700.0,
      "end_time": 353820.0,
      "text": "Well, imagine if we could somehow draw a line"
    },
    {
      "index": 155,
      "start_time": 353820.0,
      "end_time": 356037.0,
      "text": "across the data like this."
    },
    {
      "index": 156,
      "start_time": 356037.0,
      "end_time": 357620.0,
      "text": "Then we could say the dots to the left"
    },
    {
      "index": 157,
      "start_time": 357620.0,
      "end_time": 360090.0,
      "text": "of the line are green and dots to the right of the line are"
    },
    {
      "index": 158,
      "start_time": 360090.0,
      "end_time": 360920.0,
      "text": "red."
    },
    {
      "index": 159,
      "start_time": 360920.0,
      "end_time": 363430.0,
      "text": "And this line can serve as our classifier."
    },
    {
      "index": 160,
      "start_time": 363430.0,
      "end_time": 365610.0,
      "text": "So how can we learn this line?"
    },
    {
      "index": 161,
      "start_time": 365610.0,
      "end_time": 368240.0,
      "text": "Well, one way is to use the training data to adjust"
    },
    {
      "index": 162,
      "start_time": 368240.0,
      "end_time": 369880.0,
      "text": "the parameters of a model."
    },
    {
      "index": 163,
      "start_time": 369880.0,
      "end_time": 372830.0,
      "text": "And let&#39;s say the model we use is a simple straight line"
    },
    {
      "index": 164,
      "start_time": 372830.0,
      "end_time": 374460.0,
      "text": "like we saw before."
    },
    {
      "index": 165,
      "start_time": 374460.0,
      "end_time": 377830.0,
      "text": "That means we have two parameters to adjust-- m and b."
    },
    {
      "index": 166,
      "start_time": 377830.0,
      "end_time": 381050.0,
      "text": "And by changing them, we can change where the line appears."
    },
    {
      "index": 167,
      "start_time": 381050.0,
      "end_time": 383500.0,
      "text": "So how could we learn the right parameters?"
    },
    {
      "index": 168,
      "start_time": 383500.0,
      "end_time": 385690.0,
      "text": "Well, one idea is that we can iteratively adjust"
    },
    {
      "index": 169,
      "start_time": 385690.0,
      "end_time": 387640.0,
      "text": "them using our training data."
    },
    {
      "index": 170,
      "start_time": 387640.0,
      "end_time": 389890.0,
      "text": "For example, we might start with a random line"
    },
    {
      "index": 171,
      "start_time": 389890.0,
      "end_time": 392810.0,
      "text": "and use it to classify the first training example."
    },
    {
      "index": 172,
      "start_time": 392810.0,
      "end_time": 395370.0,
      "text": "If it gets it right, we don&#39;t need to change our line,"
    },
    {
      "index": 173,
      "start_time": 395370.0,
      "end_time": 396969.0,
      "text": "so we move on to the next one."
    },
    {
      "index": 174,
      "start_time": 396969.0,
      "end_time": 398760.0,
      "text": "But on the other hand, if it gets it wrong,"
    },
    {
      "index": 175,
      "start_time": 398760.0,
      "end_time": 401300.0,
      "text": "we could slightly adjust the parameters of our model"
    },
    {
      "index": 176,
      "start_time": 401300.0,
      "end_time": 403070.0,
      "text": "to make it more accurate."
    },
    {
      "index": 177,
      "start_time": 403070.0,
      "end_time": 404680.0,
      "text": "The takeaway here is this."
    },
    {
      "index": 178,
      "start_time": 404680.0,
      "end_time": 407490.0,
      "text": "One way to think of learning is using training data"
    },
    {
      "index": 179,
      "start_time": 407490.0,
      "end_time": 410980.0,
      "text": "to adjust the parameters of a model."
    },
    {
      "index": 180,
      "start_time": 410980.0,
      "end_time": 412950.0,
      "text": "Now, here&#39;s something really special."
    },
    {
      "index": 181,
      "start_time": 412950.0,
      "end_time": 415270.0,
      "text": "It&#39;s called tensorflow/playground."
    },
    {
      "index": 182,
      "start_time": 415270.0,
      "end_time": 417370.0,
      "text": "This is a beautiful example of a neural network"
    },
    {
      "index": 183,
      "start_time": 417370.0,
      "end_time": 420020.0,
      "text": "you can run and experiment with right in your browser."
    },
    {
      "index": 184,
      "start_time": 420020.0,
      "end_time": 422060.0,
      "text": "Now, this deserves its own episode for sure,"
    },
    {
      "index": 185,
      "start_time": 422060.0,
      "end_time": 423730.0,
      "text": "but for now, go ahead and play with it."
    },
    {
      "index": 186,
      "start_time": 423730.0,
      "end_time": 424930.0,
      "text": "It&#39;s awesome."
    },
    {
      "index": 187,
      "start_time": 424930.0,
      "end_time": 426630.0,
      "text": "The playground comes with different data"
    },
    {
      "index": 188,
      "start_time": 426630.0,
      "end_time": 428300.0,
      "text": "sets you can try out."
    },
    {
      "index": 189,
      "start_time": 428300.0,
      "end_time": 429470.0,
      "text": "Some are very simple."
    },
    {
      "index": 190,
      "start_time": 429470.0,
      "end_time": 432620.0,
      "text": "For example, we could use our line to classify this one."
    },
    {
      "index": 191,
      "start_time": 432620.0,
      "end_time": 435980.0,
      "text": "Some data sets are much more complex."
    },
    {
      "index": 192,
      "start_time": 435980.0,
      "end_time": 437620.0,
      "text": "This data set is especially hard."
    },
    {
      "index": 193,
      "start_time": 437620.0,
      "end_time": 440357.0,
      "text": "And see if you can build a network to classify it."
    },
    {
      "index": 194,
      "start_time": 440357.0,
      "end_time": 441940.0,
      "text": "Now, you can think of a neural network"
    },
    {
      "index": 195,
      "start_time": 441940.0,
      "end_time": 444170.0,
      "text": "as a more sophisticated type of classifier,"
    },
    {
      "index": 196,
      "start_time": 444170.0,
      "end_time": 446430.0,
      "text": "like a decision tree or a simple line."
    },
    {
      "index": 197,
      "start_time": 446430.0,
      "end_time": 449191.0,
      "text": "But in principle, the idea is similar."
    },
    {
      "index": 198,
      "start_time": 449191.0,
      "end_time": 449690.0,
      "text": "OK."
    },
    {
      "index": 199,
      "start_time": 449690.0,
      "end_time": 450687.0,
      "text": "Hope that was helpful."
    },
    {
      "index": 200,
      "start_time": 450687.0,
      "end_time": 452520.0,
      "text": "I just created a Twitter that you can follow"
    },
    {
      "index": 201,
      "start_time": 452520.0,
      "end_time": 453834.0,
      "text": "to be notified of new episodes."
    },
    {
      "index": 202,
      "start_time": 453834.0,
      "end_time": 456000.0,
      "text": "And the next one should be out in a couple of weeks,"
    },
    {
      "index": 203,
      "start_time": 456000.0,
      "end_time": 458750.0,
      "text": "depending on how much work I&#39;m doing for Google I/O. Thanks,"
    },
    {
      "index": 204,
      "start_time": 458750.0,
      "end_time": 461620.0,
      "text": "as always, for watching, and I&#39;ll see you next time."
    }
  ]
}