{
  "video_id": "d9Gqt94A4HI",
  "title": "What is Theano* | Intel Software",
  "es": 0,
  "json": [
    {
      "index": 1,
      "start_time": 700.0,
      "end_time": 1200.0,
      "text": "Hi."
    },
    {
      "index": 2,
      "start_time": 1200.0,
      "end_time": 3090.0,
      "text": "I'm [INAUDIBLE],\nand today, I'm going"
    },
    {
      "index": 3,
      "start_time": 3090.0,
      "end_time": 5000.0,
      "text": "to be talking about theano."
    },
    {
      "index": 4,
      "start_time": 5000.0,
      "end_time": 8260.0,
      "text": "Theano is a Python library\ndeveloped at the Lisa Labs"
    },
    {
      "index": 5,
      "start_time": 8260.0,
      "end_time": 12700.0,
      "text": "at the University of Montreal to\ndefine, optimize, and evaluate"
    },
    {
      "index": 6,
      "start_time": 12700.0,
      "end_time": 17140.0,
      "text": "mathematical expressions using\npackages like NUMPY and SCIPY."
    },
    {
      "index": 7,
      "start_time": 17140.0,
      "end_time": 21070.0,
      "text": "Let's take a deeper\ndive into this."
    },
    {
      "index": 8,
      "start_time": 21070.0,
      "end_time": 23260.0,
      "text": "The main goal of\ntheano is to support"
    },
    {
      "index": 9,
      "start_time": 23260.0,
      "end_time": 26750.0,
      "text": "rapid development of efficient\nmachine learning algorithms."
    },
    {
      "index": 10,
      "start_time": 26750.0,
      "end_time": 28900.0,
      "text": "Though matrix\nmultiplication is mainly"
    },
    {
      "index": 11,
      "start_time": 28900.0,
      "end_time": 30910.0,
      "text": "done using the\nNUMPY package, there"
    },
    {
      "index": 12,
      "start_time": 30910.0,
      "end_time": 32720.0,
      "text": "are some additional\nbenefits in theano"
    },
    {
      "index": 13,
      "start_time": 32720.0,
      "end_time": 36290.0,
      "text": "that is not directly available\nin either Python or NUMPY."
    },
    {
      "index": 14,
      "start_time": 36290.0,
      "end_time": 38690.0,
      "text": "Here are some additional\nfeatures of theano."
    },
    {
      "index": 15,
      "start_time": 38690.0,
      "end_time": 41300.0,
      "text": "Execution speed optimizations."
    },
    {
      "index": 16,
      "start_time": 41300.0,
      "end_time": 44170.0,
      "text": "Theano can compile parts\nof your expression graph"
    },
    {
      "index": 17,
      "start_time": 44170.0,
      "end_time": 47090.0,
      "text": "into either CPU or\nGPU instructions,"
    },
    {
      "index": 18,
      "start_time": 47090.0,
      "end_time": 49940.0,
      "text": "using the appropriate\ncompiler, making your code run"
    },
    {
      "index": 19,
      "start_time": 49940.0,
      "end_time": 52140.0,
      "text": "much faster than pure Python."
    },
    {
      "index": 20,
      "start_time": 52140.0,
      "end_time": 53960.0,
      "text": "Efficient symbolic\ndifferentiation"
    },
    {
      "index": 21,
      "start_time": 53960.0,
      "end_time": 56890.0,
      "text": "by automatically building\nsymbolic graphs for computing"
    },
    {
      "index": 22,
      "start_time": 56890.0,
      "end_time": 60850.0,
      "text": "gradients, speed and stability\noptimizations by recognizing"
    },
    {
      "index": 23,
      "start_time": 60850.0,
      "end_time": 63800.0,
      "text": "numerically unstable\nexpressions and computing them"
    },
    {
      "index": 24,
      "start_time": 63800.0,
      "end_time": 66760.0,
      "text": "with more stable algorithms,\nand dynamic C code"
    },
    {
      "index": 25,
      "start_time": 66760.0,
      "end_time": 69980.0,
      "text": "generation resulting in\nfaster expression evaluation."
    },
    {
      "index": 26,
      "start_time": 69980.0,
      "end_time": 73420.0,
      "text": "All of these features, together\nwith extensive unit testing"
    },
    {
      "index": 27,
      "start_time": 73420.0,
      "end_time": 76660.0,
      "text": "and self verification, makes\ntheano an effective framework"
    },
    {
      "index": 28,
      "start_time": 76660.0,
      "end_time": 78570.0,
      "text": "for deep learning applications."
    },
    {
      "index": 29,
      "start_time": 78570.0,
      "end_time": 81110.0,
      "text": "Theano also has many\nfunctions and operations"
    },
    {
      "index": 30,
      "start_time": 81110.0,
      "end_time": 83300.0,
      "text": "which are particularly\nuseful for neural networks"
    },
    {
      "index": 31,
      "start_time": 83300.0,
      "end_time": 84590.0,
      "text": "and deep learning."
    },
    {
      "index": 32,
      "start_time": 84590.0,
      "end_time": 87280.0,
      "text": "Some of these are\nCONV operations"
    },
    {
      "index": 33,
      "start_time": 87280.0,
      "end_time": 89900.0,
      "text": "for convolutional\nneural nets, NNET,"
    },
    {
      "index": 34,
      "start_time": 89900.0,
      "end_time": 92800.0,
      "text": "operations for neural\nnetworks, and neighbors,"
    },
    {
      "index": 35,
      "start_time": 92800.0,
      "end_time": 96360.0,
      "text": "operations for working with\nimages in convolutional nets."
    },
    {
      "index": 36,
      "start_time": 96360.0,
      "end_time": 101600.0,
      "text": "Intel optimized theano is a new\nversion based on theano 0.9.x,"
    },
    {
      "index": 37,
      "start_time": 101600.0,
      "end_time": 104470.0,
      "text": "which as optimized for Intel\narchitecture and enables"
    },
    {
      "index": 38,
      "start_time": 104470.0,
      "end_time": 107230.0,
      "text": "the Intel math\nkernel library 2017."
    },
    {
      "index": 39,
      "start_time": 107230.0,
      "end_time": 109650.0,
      "text": "The latest version\nalso of the Intel MKL"
    },
    {
      "index": 40,
      "start_time": 109650.0,
      "end_time": 113480.0,
      "text": "includes optimizations for\nIntel advanced vector extensions"
    },
    {
      "index": 41,
      "start_time": 113480.0,
      "end_time": 118310.0,
      "text": "2, which is Intel AVX 2, and\nAVX-512 instructions, which"
    },
    {
      "index": 42,
      "start_time": 118310.0,
      "end_time": 122470.0,
      "text": "are supported in Intel Xeon\nand Intel Xeon 5 processors."
    },
    {
      "index": 43,
      "start_time": 122470.0,
      "end_time": 124400.0,
      "text": "To improve performance,\nwe recommend"
    },
    {
      "index": 44,
      "start_time": 124400.0,
      "end_time": 126300.0,
      "text": "using the Intel\ndistribution of Python,"
    },
    {
      "index": 45,
      "start_time": 126300.0,
      "end_time": 129090.0,
      "text": "as it provides ready access\nto tools and techniques which"
    },
    {
      "index": 46,
      "start_time": 129090.0,
      "end_time": 132060.0,
      "text": "are enabled and verified for\nhigher performance on Intel"
    },
    {
      "index": 47,
      "start_time": 132060.0,
      "end_time": 133070.0,
      "text": "architecture."
    },
    {
      "index": 48,
      "start_time": 133070.0,
      "end_time": 134950.0,
      "text": "This will allow\nthe usage of Intel"
    },
    {
      "index": 49,
      "start_time": 134950.0,
      "end_time": 138790.0,
      "text": "optimized, precompiled\ntools like NUMPY and SCIPY."
    },
    {
      "index": 50,
      "start_time": 138790.0,
      "end_time": 139980.0,
      "text": "Thanks for watching."
    },
    {
      "index": 51,
      "start_time": 139980.0,
      "end_time": 142240.0,
      "text": "You can download Intel's\nsoftware optimization"
    },
    {
      "index": 52,
      "start_time": 142240.0,
      "end_time": 146160.0,
      "text": "for theano from the GitHub\nlink in the description below."
    }
  ]
}