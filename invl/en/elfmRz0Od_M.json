{
  "video_id": "elfmRz0Od_M",
  "title": "Design pattern",
  "es": 0,
  "json": [
    {
      "index": 1,
      "start_time": 700.0,
      "end_time": 5110.0,
      "text": "A design pattern in architecture and computer science is a formal way of documenting a solution"
    },
    {
      "index": 2,
      "start_time": 5110.0,
      "end_time": 10789.0,
      "text": "to a design problem in a particular field of expertise. The idea was introduced by the"
    },
    {
      "index": 3,
      "start_time": 10789.0,
      "end_time": 15709.0,
      "text": "architect Christopher Alexander in the field of architecture and has been adapted for various"
    },
    {
      "index": 4,
      "start_time": 15709.0,
      "end_time": 21890.0,
      "text": "other disciplines, including computer science. An organized collection of design patterns"
    },
    {
      "index": 5,
      "start_time": 21890.0,
      "end_time": 25810.0,
      "text": "that relate to a particular field is called a pattern language."
    },
    {
      "index": 6,
      "start_time": 25810.0,
      "end_time": 30769.0,
      "text": "The elements of this language are entities called patterns. Each pattern describes a"
    },
    {
      "index": 7,
      "start_time": 30769.0,
      "end_time": 35559.0,
      "text": "problem that occurs over and over again in our environment, and then describes the core"
    },
    {
      "index": 8,
      "start_time": 35559.0,
      "end_time": 40209.0,
      "text": "of the solution to that problem, in such a way that you can use this solution a million"
    },
    {
      "index": 9,
      "start_time": 40210.0,
      "end_time": 46750.0,
      "text": "times over, without ever doing it the same way twice. — Christopher Alexander"
    },
    {
      "index": 10,
      "start_time": 46750.0,
      "end_time": 51190.0,
      "text": "The usefulness of speaking of patterns is to have a common terminology for discussing"
    },
    {
      "index": 11,
      "start_time": 51200.0,
      "end_time": 55129.0,
      "text": "the situations designers already see over and over."
    },
    {
      "index": 12,
      "start_time": 55129.0,
      "end_time": 58730.0,
      "text": "Overview A pattern must explain why a particular situation"
    },
    {
      "index": 13,
      "start_time": 58730.0,
      "end_time": 64890.0,
      "text": "causes problems, and why the proposed solution is considered a good one. Christopher Alexander"
    },
    {
      "index": 14,
      "start_time": 64890.0,
      "end_time": 70310.0,
      "text": "describes common design problems as arising from \"conflicting forces\"—such as the conflict"
    },
    {
      "index": 15,
      "start_time": 70310.0,
      "end_time": 76280.0,
      "text": "between wanting a room to be sunny and wanting it not to overheat on summer afternoons. A"
    },
    {
      "index": 16,
      "start_time": 76280.0,
      "end_time": 81380.0,
      "text": "pattern would not tell the designer how many windows to put in the room; instead, it would"
    },
    {
      "index": 17,
      "start_time": 81380.0,
      "end_time": 86220.0,
      "text": "propose a set of values to guide the designer toward a decision that is best for their particular"
    },
    {
      "index": 18,
      "start_time": 86220.0,
      "end_time": 92380.0,
      "text": "application. Alexander, for example, suggests that enough windows should be included to"
    },
    {
      "index": 19,
      "start_time": 92380.0,
      "end_time": 97679.0,
      "text": "direct light all around the room. He considers this a good solution because he believes it"
    },
    {
      "index": 20,
      "start_time": 97680.0,
      "end_time": 103140.0,
      "text": "increases the enjoyment of the room by its occupants. Other authors might come to different"
    },
    {
      "index": 21,
      "start_time": 103140.0,
      "end_time": 110140.0,
      "text": "conclusions, if they place higher value on heating costs, or material costs. These values,"
    },
    {
      "index": 22,
      "start_time": 110680.0,
      "end_time": 115590.0,
      "text": "used by the pattern&#39;s author to determine which solution is \"best\", must also be documented"
    },
    {
      "index": 23,
      "start_time": 115590.0,
      "end_time": 120100.0,
      "text": "within the pattern. A pattern must also explain when it is applicable."
    },
    {
      "index": 24,
      "start_time": 120100.0,
      "end_time": 125179.0,
      "text": "Since two houses may be very different from one another, a design pattern for houses must"
    },
    {
      "index": 25,
      "start_time": 125180.0,
      "end_time": 129530.0,
      "text": "be broad enough to apply to both of them, but not so vague that it doesn&#39;t help the"
    },
    {
      "index": 26,
      "start_time": 129530.0,
      "end_time": 135770.0,
      "text": "designer make decisions. The range of situations in which a pattern can be used is called its"
    },
    {
      "index": 27,
      "start_time": 135770.0,
      "end_time": 141640.0,
      "text": "context. Some examples might be \"all houses\", \"all two-story houses\", or \"all places where"
    },
    {
      "index": 28,
      "start_time": 141640.0,
      "end_time": 147200.0,
      "text": "people spend time\". The context must be documented within the pattern."
    },
    {
      "index": 29,
      "start_time": 147200.0,
      "end_time": 152750.0,
      "text": "For instance, in Christopher Alexander&#39;s work, bus stops and waiting rooms in a surgery center"
    },
    {
      "index": 30,
      "start_time": 152750.0,
      "end_time": 156680.0,
      "text": "are both part of the context for the pattern \"A PLACE TO WAIT\"."
    },
    {
      "index": 31,
      "start_time": 156680.0,
      "end_time": 161170.0,
      "text": "Domain-specific articles Pattern, a way of capturing and communicating"
    },
    {
      "index": 32,
      "start_time": 161170.0,
      "end_time": 166839.0,
      "text": "design ideas in architecture. Software design pattern, a standard solution"
    },
    {
      "index": 33,
      "start_time": 166840.0,
      "end_time": 172770.0,
      "text": "to common problems in software design. Architectural pattern, a standard solution"
    },
    {
      "index": 34,
      "start_time": 172770.0,
      "end_time": 179210.0,
      "text": "to architectural problems in software engineering. Interaction design pattern, used in interaction"
    },
    {
      "index": 35,
      "start_time": 179210.0,
      "end_time": 181740.0,
      "text": "design / HCI."
    },
    {
      "index": 36,
      "start_time": 181740.0,
      "end_time": 186800.0,
      "text": "Pedagogical patterns, documenting good practices in teaching."
    },
    {
      "index": 37,
      "start_time": 186800.0,
      "end_time": 188990.0,
      "text": "See also Design Patterns"
    },
    {
      "index": 38,
      "start_time": 188990.0,
      "end_time": 193790.0,
      "text": "Style guide, repeatable graphic design elements and styles."
    },
    {
      "index": 39,
      "start_time": 193790.0,
      "end_time": 196410.0,
      "text": "Design paradigm Software design pattern"
    },
    {
      "index": 40,
      "start_time": 196410.0,
      "end_time": 202440.0,
      "text": "Anti-pattern a counterpart term, referring to a common situation that creates problems"
    },
    {
      "index": 41,
      "start_time": 202440.0,
      "end_time": 207140.0,
      "text": "Further reading Alexander, Christopher. A Pattern Language:"
    },
    {
      "index": 42,
      "start_time": 207140.0,
      "end_time": 214140.0,
      "text": "Towns, Buildings, Construction. Oxford University Press. ISBN 0-19-501919-9. "
    },
    {
      "index": 43,
      "start_time": 215200.0,
      "end_time": 222200.0,
      "text": "Erl, Thomas. SOA Design Patterns. New York: Prentice Hall/PearsonPTR. p. 864. ISBN 0-13-613516-1. "
    },
    {
      "index": 44,
      "start_time": 235290.0,
      "end_time": 240670.0,
      "text": "Frank Buschmann, Kevlin Henney, Douglas C. Schmidt \"On Patterns and Pattern Languages\""
    },
    {
      "index": 45,
      "start_time": 240670.0,
      "end_time": 247670.0,
      "text": "Gamma, Helm, Johnson & Vlissides. Design Patterns. Addison-Wesley. ISBN 0-201-63361-2. "
    },
    {
      "index": 46,
      "start_time": 251990.0,
      "end_time": 258990.0,
      "text": "Jenifer Tidwell. Designing Interfaces Wolfgang Pree. Design Patterns for Object-Oriented"
    },
    {
      "index": 47,
      "start_time": 262480.0,
      "end_time": 265140.0,
      "text": "Software Development References"
    },
    {
      "index": 48,
      "start_time": 265140.0,
      "end_time": 269800.0,
      "text": "External links Java Design Patterns Full Tutorial"
    },
    {
      "index": 49,
      "start_time": 269800.0,
      "end_time": 273460.0,
      "text": "Full collection of design patterns in C++ by Antonio Gulli"
    },
    {
      "index": 50,
      "start_time": 273460.0,
      "end_time": 275370.0,
      "text": "Design Patterns in Javascript by Tomás Corral"
    }
  ]
}