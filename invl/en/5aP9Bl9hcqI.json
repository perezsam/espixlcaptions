{
  "video_id": "5aP9Bl9hcqI",
  "title": "CS50 2016 - Week 8 - Python",
  "es": 0,
  "json": [
    {
      "index": 1,
      "start_time": 15616.0,
      "end_time": 16600.0,
      "text": "DAVID MALAN: All right."
    },
    {
      "index": 2,
      "start_time": 16600.0,
      "end_time": 20320.0,
      "text": "This is CS50, and this is week 8."
    },
    {
      "index": 3,
      "start_time": 20320.0,
      "end_time": 23950.0,
      "text": "So for the past several weeks have we been focusing on first Scratch"
    },
    {
      "index": 4,
      "start_time": 23950.0,
      "end_time": 27890.0,
      "text": "and then C. And now today do we introduce another language altogether,"
    },
    {
      "index": 5,
      "start_time": 27890.0,
      "end_time": 29060.0,
      "text": "that of Python."
    },
    {
      "index": 6,
      "start_time": 29060.0,
      "end_time": 31990.0,
      "text": "Indeed, even though we&#39;ve spent all this time talking about C--"
    },
    {
      "index": 7,
      "start_time": 31990.0,
      "end_time": 34110.0,
      "text": "and hopefully understanding from the ground floor"
    },
    {
      "index": 8,
      "start_time": 34110.0,
      "end_time": 37330.0,
      "text": "up what&#39;s going on inside of a computer and how things work--"
    },
    {
      "index": 9,
      "start_time": 37330.0,
      "end_time": 40010.0,
      "text": "the reality is that C is not the best language with which"
    },
    {
      "index": 10,
      "start_time": 40010.0,
      "end_time": 41900.0,
      "text": "to solve a whole lot of problems."
    },
    {
      "index": 11,
      "start_time": 41900.0,
      "end_time": 44290.0,
      "text": "|ndeed, as you yourselves might have realized by now,"
    },
    {
      "index": 12,
      "start_time": 44290.0,
      "end_time": 48120.0,
      "text": "the fact that you have to manipulate sometimes memory at its lowest level--"
    },
    {
      "index": 13,
      "start_time": 48120.0,
      "end_time": 50780.0,
      "text": "the fact that any time you want to get something real done,"
    },
    {
      "index": 14,
      "start_time": 50780.0,
      "end_time": 55260.0,
      "text": "like add capacity to a data structure or grow a string,"
    },
    {
      "index": 15,
      "start_time": 55260.0,
      "end_time": 57600.0,
      "text": "you have to do all of that work yourself--"
    },
    {
      "index": 16,
      "start_time": 57600.0,
      "end_time": 61080.0,
      "text": "means that C really creates a whole lot of work for the programmer."
    },
    {
      "index": 17,
      "start_time": 61080.0,
      "end_time": 63360.0,
      "text": "But ever since C&#39;s invention many years ago"
    },
    {
      "index": 18,
      "start_time": 63360.0,
      "end_time": 65840.0,
      "text": "has the world developed any number of new languages--"
    },
    {
      "index": 19,
      "start_time": 65840.0,
      "end_time": 67850.0,
      "text": "higher level languages, if you will-- that"
    },
    {
      "index": 20,
      "start_time": 67850.0,
      "end_time": 72050.0,
      "text": "add on features, that fill in gaps, and generally"
    },
    {
      "index": 21,
      "start_time": 72050.0,
      "end_time": 74460.0,
      "text": "solve problems more effectively."
    },
    {
      "index": 22,
      "start_time": 74460.0,
      "end_time": 77590.0,
      "text": "And so today, we start to do exactly that transition,"
    },
    {
      "index": 23,
      "start_time": 77590.0,
      "end_time": 81880.0,
      "text": "having motivated this just a week ago with our look at machine learning."
    },
    {
      "index": 24,
      "start_time": 81880.0,
      "end_time": 85090.0,
      "text": "Indeed, one of the tools that we use to have that conversation"
    },
    {
      "index": 25,
      "start_time": 85090.0,
      "end_time": 87760.0,
      "text": "was to introduce snippets of this language, Python,"
    },
    {
      "index": 26,
      "start_time": 87760.0,
      "end_time": 93250.0,
      "text": "because indeed it is much more of a well-suited tool than something like C."
    },
    {
      "index": 27,
      "start_time": 93250.0,
      "end_time": 94940.0,
      "text": "But let&#39;s begin this transition now."
    },
    {
      "index": 28,
      "start_time": 94940.0,
      "end_time": 97380.0,
      "text": "We, of course, started this conversation many weeks ago"
    },
    {
      "index": 29,
      "start_time": 97380.0,
      "end_time": 98610.0,
      "text": "when we looked at Scratch."
    },
    {
      "index": 30,
      "start_time": 98610.0,
      "end_time": 101950.0,
      "text": "And yet even though you probably found it pretty fun, pretty friendly,"
    },
    {
      "index": 31,
      "start_time": 101950.0,
      "end_time": 105300.0,
      "text": "and pretty accessible, the reality was that built into Scratch"
    },
    {
      "index": 32,
      "start_time": 105300.0,
      "end_time": 110010.0,
      "text": "was quite a lot of features, loops, and conditions,"
    },
    {
      "index": 33,
      "start_time": 110010.0,
      "end_time": 113430.0,
      "text": "and customized functions, and variables, and any number of other features"
    },
    {
      "index": 34,
      "start_time": 113430.0,
      "end_time": 117400.0,
      "text": "that we then saw the week after in C-- albeit a little more"
    },
    {
      "index": 35,
      "start_time": 117400.0,
      "end_time": 119720.0,
      "text": "arcanely with more cryptic syntax."
    },
    {
      "index": 36,
      "start_time": 119720.0,
      "end_time": 122845.0,
      "text": "But the expressiveness of Scratch remained within C."
    },
    {
      "index": 37,
      "start_time": 122845.0,
      "end_time": 126760.0,
      "text": "And indeed, even today, as we transition to another language altogether,"
    },
    {
      "index": 38,
      "start_time": 126760.0,
      "end_time": 130810.0,
      "text": "you will find that the ideas remain consistent."
    },
    {
      "index": 39,
      "start_time": 130810.0,
      "end_time": 134350.0,
      "text": "And indeed, things just get easier in many ways to do."
    },
    {
      "index": 40,
      "start_time": 134350.0,
      "end_time": 137000.0,
      "text": "So we transitioned to C. And today we transition to Python."
    },
    {
      "index": 41,
      "start_time": 137000.0,
      "end_time": 140010.0,
      "text": "And so let&#39;s, just as we did with Scratch,"
    },
    {
      "index": 42,
      "start_time": 140010.0,
      "end_time": 142150.0,
      "text": "try to convert one language to another, just"
    },
    {
      "index": 43,
      "start_time": 142150.0,
      "end_time": 146010.0,
      "text": "to emphasize that fundamentally the ideas today are changing, simply"
    },
    {
      "index": 44,
      "start_time": 146010.0,
      "end_time": 147300.0,
      "text": "the way of expressing it."
    },
    {
      "index": 45,
      "start_time": 147300.0,
      "end_time": 150080.0,
      "text": "So this perhaps was the very first program"
    },
    {
      "index": 46,
      "start_time": 150080.0,
      "end_time": 152354.0,
      "text": "we looked at in C-- arguably the simplest,"
    },
    {
      "index": 47,
      "start_time": 152354.0,
      "end_time": 154520.0,
      "text": "and yet even then there was quite a bit of overhead."
    },
    {
      "index": 48,
      "start_time": 154520.0,
      "end_time": 158530.0,
      "text": "Well, starting today, if you wanted to write a program that does exactly that,"
    },
    {
      "index": 49,
      "start_time": 158530.0,
      "end_time": 159170.0,
      "text": "voila!"
    },
    {
      "index": 50,
      "start_time": 159170.0,
      "end_time": 162080.0,
      "text": "In Python, you simply say what you mean."
    },
    {
      "index": 51,
      "start_time": 162080.0,
      "end_time": 165070.0,
      "text": "If you want to print &quot;hello world,&quot; you literally in a Python program"
    },
    {
      "index": 52,
      "start_time": 165070.0,
      "end_time": 168300.0,
      "text": "are going to write print open parenthesis quote unquote,"
    },
    {
      "index": 53,
      "start_time": 168300.0,
      "end_time": 169070.0,
      "text": "&quot;hello world.&quot;"
    },
    {
      "index": 54,
      "start_time": 169070.0,
      "end_time": 171740.0,
      "text": "And you can even omit the semi-colon that might"
    },
    {
      "index": 55,
      "start_time": 171740.0,
      "end_time": 173570.0,
      "text": "have hung you up so many times since."
    },
    {
      "index": 56,
      "start_time": 173570.0,
      "end_time": 176350.0,
      "text": "Now in reality, you&#39;ll often see a slightly different paradigm"
    },
    {
      "index": 57,
      "start_time": 176350.0,
      "end_time": 177940.0,
      "text": "when writing the simplest of programs."
    },
    {
      "index": 58,
      "start_time": 177940.0,
      "end_time": 180260.0,
      "text": "You might actually see some mention of main."
    },
    {
      "index": 59,
      "start_time": 180260.0,
      "end_time": 184550.0,
      "text": "But it turns out that a main function is not actually required in Python"
    },
    {
      "index": 60,
      "start_time": 184550.0,
      "end_time": 189870.0,
      "text": "as it is in C. Rather, you can simply write code and just get going with it."
    },
    {
      "index": 61,
      "start_time": 189870.0,
      "end_time": 191970.0,
      "text": "And we&#39;ll do this hands-on in just a bit."
    },
    {
      "index": 62,
      "start_time": 191970.0,
      "end_time": 193860.0,
      "text": "But you&#39;ll find that a very common paradigm"
    },
    {
      "index": 63,
      "start_time": 193860.0,
      "end_time": 195901.0,
      "text": "is to actually have code like this, where you do,"
    },
    {
      "index": 64,
      "start_time": 195901.0,
      "end_time": 197820.0,
      "text": "in fact, define a function called main."
    },
    {
      "index": 65,
      "start_time": 197820.0,
      "end_time": 200220.0,
      "text": "And as we&#39;ll soon see through quite a few examples,"
    },
    {
      "index": 66,
      "start_time": 200220.0,
      "end_time": 202350.0,
      "text": "this is how now in Python, you define a function."
    },
    {
      "index": 67,
      "start_time": 202350.0,
      "end_time": 204704.0,
      "text": "You literally say &quot;def&quot; for define, &quot;main&quot;"
    },
    {
      "index": 68,
      "start_time": 204704.0,
      "end_time": 207620.0,
      "text": "if that&#39;s the name of the function, open paren, close paren, and maybe"
    },
    {
      "index": 69,
      "start_time": 207620.0,
      "end_time": 211270.0,
      "text": "zero or more parameters therein, and then a colon,"
    },
    {
      "index": 70,
      "start_time": 211270.0,
      "end_time": 214580.0,
      "text": "and an absence of the curly braces-- with which you might now"
    },
    {
      "index": 71,
      "start_time": 214580.0,
      "end_time": 215810.0,
      "text": "have gotten so familiar."
    },
    {
      "index": 72,
      "start_time": 215810.0,
      "end_time": 219039.0,
      "text": "But then indented beneath that, generally four spaces here,"
    },
    {
      "index": 73,
      "start_time": 219039.0,
      "end_time": 220830.0,
      "text": "would be the code that you want to execute."
    },
    {
      "index": 74,
      "start_time": 220830.0,
      "end_time": 222496.0,
      "text": "And we&#39;ll come back to this before long."
    },
    {
      "index": 75,
      "start_time": 222496.0,
      "end_time": 226270.0,
      "text": "But this is just a common paradigm to ensure"
    },
    {
      "index": 76,
      "start_time": 226270.0,
      "end_time": 229300.0,
      "text": "that at least one function in a Python program is called by default"
    },
    {
      "index": 77,
      "start_time": 229300.0,
      "end_time": 231500.0,
      "text": "and by convention, we&#39;ll see-- it&#39;s called main."
    },
    {
      "index": 78,
      "start_time": 231500.0,
      "end_time": 235340.0,
      "text": "But the reality is that the program can now be as simple as this."
    },
    {
      "index": 79,
      "start_time": 235340.0,
      "end_time": 237360.0,
      "text": "So let&#39;s distill some of the fundamentals"
    },
    {
      "index": 80,
      "start_time": 237360.0,
      "end_time": 241900.0,
      "text": "that we first saw in Scratch, then saw in C, and now see in Python as well."
    },
    {
      "index": 81,
      "start_time": 241900.0,
      "end_time": 245530.0,
      "text": "So Python has functions and it also has something called methods-- but more"
    },
    {
      "index": 82,
      "start_time": 245530.0,
      "end_time": 247830.0,
      "text": "on that when we talk about object-oriented programming."
    },
    {
      "index": 83,
      "start_time": 247830.0,
      "end_time": 251470.0,
      "text": "But a function in C for printing &quot;hello world&quot; might have looked like this."
    },
    {
      "index": 84,
      "start_time": 251470.0,
      "end_time": 253720.0,
      "text": "Notice the printf for printing a formatted string."
    },
    {
      "index": 85,
      "start_time": 253720.0,
      "end_time": 255730.0,
      "text": "Notice the backslash n that&#39;s inside there."
    },
    {
      "index": 86,
      "start_time": 255730.0,
      "end_time": 256793.0,
      "text": "Notice the semi-colon."
    },
    {
      "index": 87,
      "start_time": 256793.0,
      "end_time": 258959.0,
      "text": "In Python, it&#39;s indeed going to be a little simpler."
    },
    {
      "index": 88,
      "start_time": 258959.0,
      "end_time": 260729.0,
      "text": "We can distill that to just this."
    },
    {
      "index": 89,
      "start_time": 260728.99999999997,
      "end_time": 263770.0,
      "text": "So we&#39;re not going to use printf, we&#39;re just going to use print."
    },
    {
      "index": 90,
      "start_time": 263770.0,
      "end_time": 267140.0,
      "text": "We don&#39;t, it turns out, have to have the backslash n in this example."
    },
    {
      "index": 91,
      "start_time": 267140.0,
      "end_time": 268610.0,
      "text": "You&#39;re going to get that for free."
    },
    {
      "index": 92,
      "start_time": 268610.0,
      "end_time": 271910.0,
      "text": "Just by calling print are you going to get a trailing newline printed."
    },
    {
      "index": 93,
      "start_time": 271910.0,
      "end_time": 274750.0,
      "text": "And we don&#39;t, again, need the semi-colon at the end."
    },
    {
      "index": 94,
      "start_time": 274750.0,
      "end_time": 275820.0,
      "text": "Well, what about loops?"
    },
    {
      "index": 95,
      "start_time": 275820.0,
      "end_time": 278910.0,
      "text": "Well, in Scratch, we had the repeat block."
    },
    {
      "index": 96,
      "start_time": 278910.0,
      "end_time": 281590.0,
      "text": "We had the forever block and some other constructs still."
    },
    {
      "index": 97,
      "start_time": 281590.0,
      "end_time": 286346.0,
      "text": "In C, we had things like for loops and while loops and do while loops."
    },
    {
      "index": 98,
      "start_time": 286346.0,
      "end_time": 287970.0,
      "text": "Well, let&#39;s do a couple of conversions."
    },
    {
      "index": 99,
      "start_time": 287970.0,
      "end_time": 292110.0,
      "text": "In C, if you wanted do something forever, like print &quot;hello world&quot; again"
    },
    {
      "index": 100,
      "start_time": 292110.0,
      "end_time": 294670.0,
      "text": "and again and again, never stopping, one per line,"
    },
    {
      "index": 101,
      "start_time": 294670.0,
      "end_time": 297420.0,
      "text": "you might use a while loop like this."
    },
    {
      "index": 102,
      "start_time": 297420.0,
      "end_time": 300284.0,
      "text": "In Python, you&#39;re going to do something pretty similar in spirit,"
    },
    {
      "index": 103,
      "start_time": 300284.0,
      "end_time": 302450.0,
      "text": "but it&#39;s going to be formatted a little differently."
    },
    {
      "index": 104,
      "start_time": 302450.0,
      "end_time": 304630.0,
      "text": "We still have access to the while keyword."
    },
    {
      "index": 105,
      "start_time": 304630.0,
      "end_time": 308760.0,
      "text": "The boolean value true now has to be capitalized with a capital T."
    },
    {
      "index": 106,
      "start_time": 308760.0,
      "end_time": 311330.0,
      "text": "And again, instead of using curly braces,"
    },
    {
      "index": 107,
      "start_time": 311330.0,
      "end_time": 313940.0,
      "text": "you&#39;re going to use a colon at the end of this statement"
    },
    {
      "index": 108,
      "start_time": 313940.0,
      "end_time": 317374.0,
      "text": "and then indent all of the code beneath it that you want to happen cyclically."
    },
    {
      "index": 109,
      "start_time": 317374.0,
      "end_time": 319790.0,
      "text": "And again, we&#39;ve borrowed print &quot;hello world&quot; from before,"
    },
    {
      "index": 110,
      "start_time": 319790.0,
      "end_time": 321320.0,
      "text": "so no semi-colon necessary there."
    },
    {
      "index": 111,
      "start_time": 321320.0,
      "end_time": 324610.0,
      "text": "No f and no backslash n is required."
    },
    {
      "index": 112,
      "start_time": 324610.0,
      "end_time": 327250.0,
      "text": "Meanwhile, if we had a for loop in C that we"
    },
    {
      "index": 113,
      "start_time": 327250.0,
      "end_time": 329760.0,
      "text": "wanted to say print &quot;hello world&quot; 50 times,"
    },
    {
      "index": 114,
      "start_time": 329760.0,
      "end_time": 332321.0,
      "text": "we might use a fairly common paradigm like this."
    },
    {
      "index": 115,
      "start_time": 332321.0,
      "end_time": 334570.0,
      "text": "Well, in Python you can do this in any number of ways."
    },
    {
      "index": 116,
      "start_time": 334570.0,
      "end_time": 337540.0,
      "text": "But perhaps one of the most common is to do something like this,"
    },
    {
      "index": 117,
      "start_time": 337540.0,
      "end_time": 342430.0,
      "text": "to literally say for i in range 50-- more on that in just a moment--"
    },
    {
      "index": 118,
      "start_time": 342430.0,
      "end_time": 344710.0,
      "text": "and then print &quot;hello world.&quot;"
    },
    {
      "index": 119,
      "start_time": 344710.0,
      "end_time": 346700.0,
      "text": "So this is shorter hand notation."
    },
    {
      "index": 120,
      "start_time": 346700.0,
      "end_time": 350810.0,
      "text": "And this is perhaps the first instance where you really see just how pedantic,"
    },
    {
      "index": 121,
      "start_time": 350810.0,
      "end_time": 353750.0,
      "text": "how much C belabors the point, whereas in Python you"
    },
    {
      "index": 122,
      "start_time": 353750.0,
      "end_time": 357220.0,
      "text": "just probably with higher frequency just say what you mean."
    },
    {
      "index": 123,
      "start_time": 357220.0,
      "end_time": 360940.0,
      "text": "So for implies a looping construct here. i"
    },
    {
      "index": 124,
      "start_time": 360940.0,
      "end_time": 363640.0,
      "text": "is declaring implicitly a variable that we&#39;re about to use."
    },
    {
      "index": 125,
      "start_time": 363640.0,
      "end_time": 365440.0,
      "text": "And then what do you want i to be?"
    },
    {
      "index": 126,
      "start_time": 365440.0,
      "end_time": 370080.0,
      "text": "Well, you want it to be in a range of values from 0 up to but excluding 50."
    },
    {
      "index": 127,
      "start_time": 370080.0,
      "end_time": 372340.0,
      "text": "So you want to go from 0 to 49, effectively."
    },
    {
      "index": 128,
      "start_time": 372340.0,
      "end_time": 374890.0,
      "text": "And the way you can express that here is as follows."
    },
    {
      "index": 129,
      "start_time": 374890.0,
      "end_time": 378070.0,
      "text": "You call this range function, which gives you"
    },
    {
      "index": 130,
      "start_time": 378070.0,
      "end_time": 384040.0,
      "text": "essentially a sequence of numbers starting at 0, and then 1, and then 2,"
    },
    {
      "index": 131,
      "start_time": 384040.0,
      "end_time": 385910.0,
      "text": "and then 3-- all the way up to 49."
    },
    {
      "index": 132,
      "start_time": 385910.0,
      "end_time": 390280.0,
      "text": "And on each iteration of this loop does i get assigned that value."
    },
    {
      "index": 133,
      "start_time": 390280.0,
      "end_time": 394520.0,
      "text": "So functionally, what we&#39;ve just done is equivalent to what"
    },
    {
      "index": 134,
      "start_time": 394520.0,
      "end_time": 399100.0,
      "text": "we&#39;ve just done here, but it does it in a more Pythonic way, if you will."
    },
    {
      "index": 135,
      "start_time": 399100.0,
      "end_time": 401141.0,
      "text": "We don&#39;t have access to that same for construct"
    },
    {
      "index": 136,
      "start_time": 401141.0,
      "end_time": 402890.0,
      "text": "as we did in C. We actually have something"
    },
    {
      "index": 137,
      "start_time": 402890.0,
      "end_time": 405850.0,
      "text": "that&#39;s a little easier, once you get used to it, to use."
    },
    {
      "index": 138,
      "start_time": 405850.0,
      "end_time": 407176.0,
      "text": "Now how about variables?"
    },
    {
      "index": 139,
      "start_time": 407176.0,
      "end_time": 410459.0,
      "text": "Well, recall that in Scratch, we had variables, those little orange blocks."
    },
    {
      "index": 140,
      "start_time": 410459.0,
      "end_time": 412250.0,
      "text": "And we didn&#39;t have to worry about the type."
    },
    {
      "index": 141,
      "start_time": 412250.0,
      "end_time": 415130.0,
      "text": "We could just put in numbers or other such things into them."
    },
    {
      "index": 142,
      "start_time": 415130.0,
      "end_time": 417350.0,
      "text": "And then in C, we had to start caring about this."
    },
    {
      "index": 143,
      "start_time": 417350.0,
      "end_time": 419630.0,
      "text": "But we had booleans, and we had floats, and we"
    },
    {
      "index": 144,
      "start_time": 419630.0,
      "end_time": 426600.0,
      "text": "had doubles, and chars, and strings, and longs, and a few others still."
    },
    {
      "index": 145,
      "start_time": 426600.0,
      "end_time": 429470.0,
      "text": "Well, in Python, we&#39;re still going to have a number of data types."
    },
    {
      "index": 146,
      "start_time": 429470.0,
      "end_time": 433210.0,
      "text": "But Python is not nearly as strongly-typed, so to speak,"
    },
    {
      "index": 147,
      "start_time": 433210.0,
      "end_time": 436960.0,
      "text": "whereas in C-- and languages like C and a few others--"
    },
    {
      "index": 148,
      "start_time": 436960.0,
      "end_time": 442360.0,
      "text": "you have to know and care about and tell the compiler what type of value"
    },
    {
      "index": 149,
      "start_time": 442360.0,
      "end_time": 443640.0,
      "text": "some variable is."
    },
    {
      "index": 150,
      "start_time": 443640.0,
      "end_time": 445610.0,
      "text": "In Python, those types exist."
    },
    {
      "index": 151,
      "start_time": 445610.0,
      "end_time": 450380.0,
      "text": "But the language is more loosely-typed, as we say, whereby they have types,"
    },
    {
      "index": 152,
      "start_time": 450380.0,
      "end_time": 453920.0,
      "text": "but you as the programmer don&#39;t have to worry about specifying them,"
    },
    {
      "index": 153,
      "start_time": 453920.0,
      "end_time": 456220.0,
      "text": "a bit more like our world from Scratch."
    },
    {
      "index": 154,
      "start_time": 456220.0,
      "end_time": 459780.0,
      "text": "So whereas in C, we might have declared an integer called i and assigned"
    },
    {
      "index": 155,
      "start_time": 459780.0,
      "end_time": 462990.0,
      "text": "it an initial value of 0-- we might have used syntax like this."
    },
    {
      "index": 156,
      "start_time": 462990.0,
      "end_time": 466340.0,
      "text": "In Python, it&#39;s going to be similar in spirit, but a little more succinct."
    },
    {
      "index": 157,
      "start_time": 466340.0,
      "end_time": 468580.0,
      "text": "Again, just say what you mean. i gets zero"
    },
    {
      "index": 158,
      "start_time": 468580.0,
      "end_time": 471150.0,
      "text": "with no semi-colon, no mention of the type."
    },
    {
      "index": 159,
      "start_time": 471150.0,
      "end_time": 474450.0,
      "text": "But insofar as Python supports numbers, it&#39;s"
    },
    {
      "index": 160,
      "start_time": 474450.0,
      "end_time": 478540.0,
      "text": "going to realize-- oh, that zero looks like an integer, is an integer."
    },
    {
      "index": 161,
      "start_time": 478540.0,
      "end_time": 482890.0,
      "text": "I&#39;m going to define, ultimately, i as of being of type int."
    },
    {
      "index": 162,
      "start_time": 482890.0,
      "end_time": 485410.0,
      "text": "Meanwhile we have boolean expressions in Python as well."
    },
    {
      "index": 163,
      "start_time": 485410.0,
      "end_time": 487570.0,
      "text": "And these actually translate perfectly."
    },
    {
      "index": 164,
      "start_time": 487570.0,
      "end_time": 492220.0,
      "text": "If you have an expression in C testing whether i is less than 50,"
    },
    {
      "index": 165,
      "start_time": 492220.0,
      "end_time": 494460.0,
      "text": "this is the same thing in Python as well."
    },
    {
      "index": 166,
      "start_time": 494460.0,
      "end_time": 496300.0,
      "text": "You literally use the same syntax."
    },
    {
      "index": 167,
      "start_time": 496300.0,
      "end_time": 498947.0,
      "text": "If, instead, you want to generally compare two variables, just"
    },
    {
      "index": 168,
      "start_time": 498947.0,
      "end_time": 500780.0,
      "text": "like we did a few weeks back in C, you might"
    },
    {
      "index": 169,
      "start_time": 500780.0,
      "end_time": 506844.0,
      "text": "do x less than y-- same exact code in Python as well as in C."
    },
    {
      "index": 170,
      "start_time": 506844.0,
      "end_time": 507885.0,
      "text": "Now how about conditions?"
    },
    {
      "index": 171,
      "start_time": 507885.0,
      "end_time": 510590.0,
      "text": "So conditions are these branching constructs"
    },
    {
      "index": 172,
      "start_time": 510590.0,
      "end_time": 513549.0,
      "text": "where we can either go this way or maybe this way or another way."
    },
    {
      "index": 173,
      "start_time": 513549.0,
      "end_time": 515530.0,
      "text": "So it&#39;s the proverbial fork in the road."
    },
    {
      "index": 174,
      "start_time": 515530.0,
      "end_time": 520179.0,
      "text": "Well, in C, if you wanted to have an if statement that"
    },
    {
      "index": 175,
      "start_time": 520179.0,
      "end_time": 523490.0,
      "text": "has three different branches, you might do something like this."
    },
    {
      "index": 176,
      "start_time": 523490.0,
      "end_time": 525790.0,
      "text": "And as you may recall, these curly braces"
    },
    {
      "index": 177,
      "start_time": 525790.0,
      "end_time": 529030.0,
      "text": "are not strictly necessary, simply because we"
    },
    {
      "index": 178,
      "start_time": 529030.0,
      "end_time": 532820.0,
      "text": "have one line of code nested beneath this if, and one line of code"
    },
    {
      "index": 179,
      "start_time": 532820.0,
      "end_time": 535620.0,
      "text": "beneath this else if, and one line of code beneath this else."
    },
    {
      "index": 180,
      "start_time": 535620.0,
      "end_time": 538700.0,
      "text": "Technically, and you might have seen this in section or other resources,"
    },
    {
      "index": 181,
      "start_time": 538700.0,
      "end_time": 541690.0,
      "text": "you can actually omit all of these curly braces, which to be fair,"
    },
    {
      "index": 182,
      "start_time": 541690.0,
      "end_time": 544380.0,
      "text": "makes the code look a little more compact."
    },
    {
      "index": 183,
      "start_time": 544380.0,
      "end_time": 546460.0,
      "text": "But the logic is pretty straightforward."
    },
    {
      "index": 184,
      "start_time": 546460.0,
      "end_time": 549610.0,
      "text": "And we saw similar yellowish blocks in Scratch."
    },
    {
      "index": 185,
      "start_time": 549610.0,
      "end_time": 552610.0,
      "text": "Now in Python, the idea is going to be exactly the same,"
    },
    {
      "index": 186,
      "start_time": 552610.0,
      "end_time": 555160.0,
      "text": "but some of the syntax is going to be a bit different."
    },
    {
      "index": 187,
      "start_time": 555160.0,
      "end_time": 558860.0,
      "text": "So if we want to say, is x less than y, we still say it,"
    },
    {
      "index": 188,
      "start_time": 558860.0,
      "end_time": 560524.0,
      "text": "but we don&#39;t need the parentheses."
    },
    {
      "index": 189,
      "start_time": 560524.0,
      "end_time": 562440.0,
      "text": "In fact, if they don&#39;t add anything logically,"
    },
    {
      "index": 190,
      "start_time": 562440.0,
      "end_time": 565300.0,
      "text": "we&#39;re just going to start omitting them altogether as unnecessary."
    },
    {
      "index": 191,
      "start_time": 565300.0,
      "end_time": 568090.0,
      "text": "We do have the colon, which is necessary at the end of the line."
    },
    {
      "index": 192,
      "start_time": 568090.0,
      "end_time": 570490.0,
      "text": "We do have consistent indentation."
    },
    {
      "index": 193,
      "start_time": 570490.0,
      "end_time": 572723.0,
      "text": "And those of you who have not necessarily"
    },
    {
      "index": 194,
      "start_time": 572723.0,
      "end_time": 578640.0,
      "text": "had five for fives for style, realize that in Python the language by design"
    },
    {
      "index": 195,
      "start_time": 578640.0,
      "end_time": 581640.0,
      "text": "is going to enforce the need for indentation."
    },
    {
      "index": 196,
      "start_time": 581640.0,
      "end_time": 586860.0,
      "text": "So in fact, I see myself being a little hypocritical here, as I inconsistently"
    },
    {
      "index": 197,
      "start_time": 586860.0,
      "end_time": 588480.0,
      "text": "indent this actual code."
    },
    {
      "index": 198,
      "start_time": 588480.0,
      "end_time": 590450.0,
      "text": "So this would not actually work properly,"
    },
    {
      "index": 199,
      "start_time": 590450.0,
      "end_time": 592481.0,
      "text": "because I&#39;ve used a variable amount of spacing."
    },
    {
      "index": 200,
      "start_time": 592481.0,
      "end_time": 593980.0,
      "text": "So Python is not going to like that."
    },
    {
      "index": 201,
      "start_time": 593980.0,
      "end_time": 597090.0,
      "text": "And in fact, that&#39;s why I made that mistake to make this point here,"
    },
    {
      "index": 202,
      "start_time": 597090.0,
      "end_time": 601430.0,
      "text": "so that you actually have to conform to using four spaces or some other,"
    },
    {
      "index": 203,
      "start_time": 601430.0,
      "end_time": 603960.0,
      "text": "but being consistent ultimately."
    },
    {
      "index": 204,
      "start_time": 603960.0,
      "end_time": 604730.0,
      "text": "So notice this."
    },
    {
      "index": 205,
      "start_time": 604730.0,
      "end_time": 605230.0,
      "text": "This?"
    },
    {
      "index": 206,
      "start_time": 605230.0,
      "end_time": 606690.0,
      "text": "Not a typo."
    },
    {
      "index": 207,
      "start_time": 606690.0,
      "end_time": 609000.0,
      "text": "I didn&#39;t make that many mistakes here. &quot;elif&quot;"
    },
    {
      "index": 208,
      "start_time": 609000.0,
      "end_time": 612894.0,
      "text": "is actually the keyword that we use to express &quot;else if.&quot;"
    },
    {
      "index": 209,
      "start_time": 612894.0,
      "end_time": 615060.0,
      "text": "So it&#39;s simply a new keyword that we have in Python,"
    },
    {
      "index": 210,
      "start_time": 615060.0,
      "end_time": 616860.0,
      "text": "again, ending the same line with the colon."
    },
    {
      "index": 211,
      "start_time": 616860.0,
      "end_time": 619110.0,
      "text": "And then here, logically, is the third and final case."
    },
    {
      "index": 212,
      "start_time": 619110.0,
      "end_time": 621610.0,
      "text": "else, if it&#39;s not less than and it&#39;s not greater then,"
    },
    {
      "index": 213,
      "start_time": 621610.0,
      "end_time": 623920.0,
      "text": "it must in fact be equal to."
    },
    {
      "index": 214,
      "start_time": 623920.0,
      "end_time": 629520.0,
      "text": "So we&#39;ve used print as before to express these three possible outputs."
    },
    {
      "index": 215,
      "start_time": 629520.0,
      "end_time": 631410.0,
      "text": "What about things like arrays?"
    },
    {
      "index": 216,
      "start_time": 631410.0,
      "end_time": 633970.0,
      "text": "Well, Scratch had things called lists that we essentially"
    },
    {
      "index": 217,
      "start_time": 633970.0,
      "end_time": 636000.0,
      "text": "equated with arrays, even though that was a bit"
    },
    {
      "index": 218,
      "start_time": 636000.0,
      "end_time": 638840.0,
      "text": "of an oversimplification at the time."
    },
    {
      "index": 219,
      "start_time": 638840.0,
      "end_time": 642950.0,
      "text": "Python also has effectively what we&#39;ve been using and taking"
    },
    {
      "index": 220,
      "start_time": 642950.0,
      "end_time": 645930.0,
      "text": "for granted now in C, that of arrays."
    },
    {
      "index": 221,
      "start_time": 645930.0,
      "end_time": 648780.0,
      "text": "But it turns out, in Python we&#39;re going to start calling them lists."
    },
    {
      "index": 222,
      "start_time": 648780.0,
      "end_time": 651470.0,
      "text": "And they&#39;re so much easier to use."
    },
    {
      "index": 223,
      "start_time": 651470.0,
      "end_time": 653550.0,
      "text": "In fact, all of this low-level memory management"
    },
    {
      "index": 224,
      "start_time": 653550.0,
      "end_time": 656149.0,
      "text": "of having to allocate and reallocate and resize"
    },
    {
      "index": 225,
      "start_time": 656149.0,
      "end_time": 658940.0,
      "text": "arrays potentially if you want to grow or shrink them-- all of that"
    },
    {
      "index": 226,
      "start_time": 658940.0,
      "end_time": 659773.0,
      "text": "goes out the window."
    },
    {
      "index": 227,
      "start_time": 659773.0,
      "end_time": 661730.0,
      "text": "And indeed, this is a feature you commonly get"
    },
    {
      "index": 228,
      "start_time": 661730.0,
      "end_time": 663850.0,
      "text": "in a higher-level language like Python."
    },
    {
      "index": 229,
      "start_time": 663850.0,
      "end_time": 666270.0,
      "text": "It&#39;s a lot of this functionality built into the language,"
    },
    {
      "index": 230,
      "start_time": 666270.0,
      "end_time": 669240.0,
      "text": "as opposed to you, the programmer, having to implement those"
    },
    {
      "index": 231,
      "start_time": 669240.0,
      "end_time": 670370.0,
      "text": "low-level details."
    },
    {
      "index": 232,
      "start_time": 670370.0,
      "end_time": 674900.0,
      "text": "So, for instance, whereas in C, particularly in a main function,"
    },
    {
      "index": 233,
      "start_time": 674900.0,
      "end_time": 678910.0,
      "text": "we&#39;ve been using for some time argv, which is an argument vector or an array"
    },
    {
      "index": 234,
      "start_time": 678910.0,
      "end_time": 682130.0,
      "text": "of arguments at the command line-- you might access the first of those with"
    },
    {
      "index": 235,
      "start_time": 682130.0,
      "end_time": 685660.0,
      "text": "argvargv[0]-- we&#39;re actually going to have that same syntactic capability."
    },
    {
      "index": 236,
      "start_time": 685660.0,
      "end_time": 689720.0,
      "text": "We&#39;re going to access, in particular, argv a little differently via an object"
    },
    {
      "index": 237,
      "start_time": 689720.0,
      "end_time": 690350.0,
      "text": "called sys."
    },
    {
      "index": 238,
      "start_time": 690350.0,
      "end_time": 693110.0,
      "text": "So sys.argv, as we&#39;ll see, is going to be the syntax."
    },
    {
      "index": 239,
      "start_time": 693110.0,
      "end_time": 695460.0,
      "text": "But those square brackets are going to remain"
    },
    {
      "index": 240,
      "start_time": 695460.0,
      "end_time": 700610.0,
      "text": "and the ideas of arrays, now called lists, are going to remain as well."
    },
    {
      "index": 241,
      "start_time": 700610.0,
      "end_time": 703076.0,
      "text": "So what&#39;s a little bit different in Python?"
    },
    {
      "index": 242,
      "start_time": 703076.0,
      "end_time": 704950.0,
      "text": "We&#39;re about to see a whole bunch of examples."
    },
    {
      "index": 243,
      "start_time": 704950.0,
      "end_time": 708200.0,
      "text": "And indeed we&#39;ll port-- so to speak-- convert, or translate some"
    },
    {
      "index": 244,
      "start_time": 708200.0,
      "end_time": 710530.0,
      "text": "of our previous C examples into Python."
    },
    {
      "index": 245,
      "start_time": 710530.0,
      "end_time": 713630.0,
      "text": "But what&#39;s the mental model that you need to have for Python?"
    },
    {
      "index": 246,
      "start_time": 713630.0,
      "end_time": 718450.0,
      "text": "Well, all this time, C, we&#39;ve described as being compiled."
    },
    {
      "index": 247,
      "start_time": 718450.0,
      "end_time": 723160.0,
      "text": "In order to write and use a program in C, you have to write the source code."
    },
    {
      "index": 248,
      "start_time": 723160.0,
      "end_time": 725150.0,
      "text": "And you have to save the file in something.c."
    },
    {
      "index": 249,
      "start_time": 725150.0,
      "end_time": 729970.0,
      "text": "And then you have to run something like clang something.c in order to output"
    },
    {
      "index": 250,
      "start_time": 729970.0,
      "end_time": 732390.0,
      "text": "from source code your machine code."
    },
    {
      "index": 251,
      "start_time": 732390.0,
      "end_time": 736190.0,
      "text": "And then that machine code, the zeros and ones that the-- Intel, usually--"
    },
    {
      "index": 252,
      "start_time": 736190.0,
      "end_time": 742070.0,
      "text": "CPU inside understands, can actually be run by double-clicking or doing ./a.out"
    },
    {
      "index": 253,
      "start_time": 742070.0,
      "end_time": 744330.0,
      "text": "or whatever the program&#39;s name actually is."
    },
    {
      "index": 254,
      "start_time": 744330.0,
      "end_time": 747840.0,
      "text": "So as you may have realized already, this gets fairly tedious over time."
    },
    {
      "index": 255,
      "start_time": 747840.0,
      "end_time": 750110.0,
      "text": "Every time you make a darn change to your code,"
    },
    {
      "index": 256,
      "start_time": 750110.0,
      "end_time": 752800.0,
      "text": "you have to recompile it with clang-- or with make,"
    },
    {
      "index": 257,
      "start_time": 752800.0,
      "end_time": 754890.0,
      "text": "more generally-- and then run it."
    },
    {
      "index": 258,
      "start_time": 754890.0,
      "end_time": 756920.0,
      "text": "To make a change, compile, run it."
    },
    {
      "index": 259,
      "start_time": 756920.0,
      "end_time": 758310.0,
      "text": "Make a change, compile, run it."
    },
    {
      "index": 260,
      "start_time": 758310.0,
      "end_time": 761430.0,
      "text": "Wouldn&#39;t it be nice if we could reduce those numbers of steps"
    },
    {
      "index": 261,
      "start_time": 761430.0,
      "end_time": 764280.0,
      "text": "somehow by just eliminating the compilation step?"
    },
    {
      "index": 262,
      "start_time": 764280.0,
      "end_time": 767410.0,
      "text": "And indeed, a feature you get with a lot of higher-level languages"
    },
    {
      "index": 263,
      "start_time": 767410.0,
      "end_time": 774370.0,
      "text": "like Python and JavaScript and PHP and Ruby is that they can be interpreted,"
    },
    {
      "index": 264,
      "start_time": 774370.0,
      "end_time": 775510.0,
      "text": "so to speak."
    },
    {
      "index": 265,
      "start_time": 775510.0,
      "end_time": 778870.0,
      "text": "You don&#39;t have to worry so much about compiling them yourself"
    },
    {
      "index": 266,
      "start_time": 778870.0,
      "end_time": 780790.0,
      "text": "and then running resulting machine code."
    },
    {
      "index": 267,
      "start_time": 780790.0,
      "end_time": 785550.0,
      "text": "You can just run one command in order to actually run your program."
    },
    {
      "index": 268,
      "start_time": 785550.0,
      "end_time": 788940.0,
      "text": "And there&#39;s a lot more going on underneath the hood, as we&#39;ll see."
    },
    {
      "index": 269,
      "start_time": 788940.0,
      "end_time": 793440.0,
      "text": "But ultimately if we had a program that looks like this--"
    },
    {
      "index": 270,
      "start_time": 793440.0,
      "end_time": 796072.0,
      "text": "simply a function called main as we saw earlier,"
    },
    {
      "index": 271,
      "start_time": 796072.0,
      "end_time": 798030.0,
      "text": "and we&#39;ll see some more examples of this soon--"
    },
    {
      "index": 272,
      "start_time": 798030.0,
      "end_time": 801040.0,
      "text": "that simply prints out &quot;hello world,&quot; it turns out"
    },
    {
      "index": 273,
      "start_time": 801040.0,
      "end_time": 804590.0,
      "text": "that you can run this program in a couple of different ways."
    },
    {
      "index": 274,
      "start_time": 804590.0,
      "end_time": 809750.0,
      "text": "We can either, in the spirit of clang-- whereby in C,"
    },
    {
      "index": 275,
      "start_time": 809750.0,
      "end_time": 815330.0,
      "text": "we ran clang hello.c and then ./a.out-- in Python,"
    },
    {
      "index": 276,
      "start_time": 815330.0,
      "end_time": 818430.0,
      "text": "if this program is stored in a file called hello.py--"
    },
    {
      "index": 277,
      "start_time": 818430.0,
      "end_time": 821850.0,
      "text": "where .py is the common file extension for any programs written in Python--"
    },
    {
      "index": 278,
      "start_time": 821850.0,
      "end_time": 826110.0,
      "text": "we can distill those two steps, as we&#39;ll soon see, into just one."
    },
    {
      "index": 279,
      "start_time": 826110.0,
      "end_time": 831590.0,
      "text": "You run a program called Python, which is called the Python interpreter."
    },
    {
      "index": 280,
      "start_time": 831590.0,
      "end_time": 833820.0,
      "text": "And what that does underneath the hood for you"
    },
    {
      "index": 281,
      "start_time": 833820.0,
      "end_time": 837800.0,
      "text": "is it compiles your Python source code into something called byte code,"
    },
    {
      "index": 282,
      "start_time": 837800.0,
      "end_time": 842244.0,
      "text": "and then proceeds to interpret that byte code top to bottom, left to right."
    },
    {
      "index": 283,
      "start_time": 842244.0,
      "end_time": 844160.0,
      "text": "So this is a lower-level implementation detail"
    },
    {
      "index": 284,
      "start_time": 844160.0,
      "end_time": 845650.0,
      "text": "that we&#39;re not going to have to worry about,"
    },
    {
      "index": 285,
      "start_time": 845650.0,
      "end_time": 847890.0,
      "text": "because indeed one of the features of this kind of language"
    },
    {
      "index": 286,
      "start_time": 847890.0,
      "end_time": 849681.0,
      "text": "is that you don&#39;t need to worry about that."
    },
    {
      "index": 287,
      "start_time": 849681.0,
      "end_time": 853180.0,
      "text": "And you don&#39;t need that middle step of having to compile your code."
    },
    {
      "index": 288,
      "start_time": 853180.0,
      "end_time": 857130.0,
      "text": "But for the curious, what&#39;s going to happen underneath the hood is this."
    },
    {
      "index": 289,
      "start_time": 857130.0,
      "end_time": 860360.0,
      "text": "If we have a function like main that&#39;s simply going to print &quot;hello world&quot;"
    },
    {
      "index": 290,
      "start_time": 860360.0,
      "end_time": 862612.0,
      "text": "and we do run it through that Python command, what"
    },
    {
      "index": 291,
      "start_time": 862612.0,
      "end_time": 865070.0,
      "text": "happens underneath the hood is that it gets converted first"
    },
    {
      "index": 292,
      "start_time": 865070.0,
      "end_time": 867778.0,
      "text": "into something called byte code-- which fairly esoterically looks"
    },
    {
      "index": 293,
      "start_time": 867778.0,
      "end_time": 871280.0,
      "text": "a little something like this, which you can actually see yourself if you run"
    },
    {
      "index": 294,
      "start_time": 871280.0,
      "end_time": 873290.0,
      "text": "Python with the appropriate commands."
    },
    {
      "index": 295,
      "start_time": 873290.0,
      "end_time": 876340.0,
      "text": "And then what Python the interpreter does"
    },
    {
      "index": 296,
      "start_time": 876340.0,
      "end_time": 878527.0,
      "text": "is it reads this kind of code-- top to bottom,"
    },
    {
      "index": 297,
      "start_time": 878527.0,
      "end_time": 881610.0,
      "text": "left to right-- that we the programmers don&#39;t have to worry about in order"
    },
    {
      "index": 298,
      "start_time": 881610.0,
      "end_time": 884390.0,
      "text": "to actually make your program do work."
    },
    {
      "index": 299,
      "start_time": 884390.0,
      "end_time": 887130.0,
      "text": "So you&#39;ll often hear that Python is an interpreted language,"
    },
    {
      "index": 300,
      "start_time": 887130.0,
      "end_time": 888840.0,
      "text": "and that kind of is indeed the case."
    },
    {
      "index": 301,
      "start_time": 888840.0,
      "end_time": 891070.0,
      "text": "But there can indeed be this compilation step,"
    },
    {
      "index": 302,
      "start_time": 891070.0,
      "end_time": 893666.0,
      "text": "and it actually depends on the implementation of Python"
    },
    {
      "index": 303,
      "start_time": 893666.0,
      "end_time": 896040.0,
      "text": "that you&#39;re using or even the computer that you&#39;re using."
    },
    {
      "index": 304,
      "start_time": 896040.0,
      "end_time": 898230.0,
      "text": "And indeed, what we&#39;re now starting to see"
    },
    {
      "index": 305,
      "start_time": 898230.0,
      "end_time": 901230.0,
      "text": "is the dichotomy between what it means to be a language"
    },
    {
      "index": 306,
      "start_time": 901230.0,
      "end_time": 904820.0,
      "text": "and what it means to be a program, like this thing Python."
    },
    {
      "index": 307,
      "start_time": 904820.0,
      "end_time": 906630.0,
      "text": "Python is a language."
    },
    {
      "index": 308,
      "start_time": 906630.0,
      "end_time": 907790.0,
      "text": "C is a language."
    },
    {
      "index": 309,
      "start_time": 907790.0,
      "end_time": 909400.0,
      "text": "Clang is a compiler."
    },
    {
      "index": 310,
      "start_time": 909400.0,
      "end_time": 913230.0,
      "text": "Python is also not just a language, but a program"
    },
    {
      "index": 311,
      "start_time": 913230.0,
      "end_time": 917380.0,
      "text": "that understands that language, otherwise known as an interpreter."
    },
    {
      "index": 312,
      "start_time": 917380.0,
      "end_time": 920520.0,
      "text": "And so anytime you see me starting to run the command &quot;python,&quot; as you"
    },
    {
      "index": 313,
      "start_time": 920520.0,
      "end_time": 924970.0,
      "text": "will too for future problem sets, will you be interpreting the language,"
    },
    {
      "index": 314,
      "start_time": 924970.0,
      "end_time": 927190.0,
      "text": "the source code that you&#39;ve written."
    },
    {
      "index": 315,
      "start_time": 927190.0,
      "end_time": 928030.0,
      "text": "All right."
    },
    {
      "index": 316,
      "start_time": 928030.0,
      "end_time": 932960.0,
      "text": "So let&#39;s go ahead now and make a transition in code from the world of C"
    },
    {
      "index": 317,
      "start_time": 932960.0,
      "end_time": 934080.0,
      "text": "to the world of Python."
    },
    {
      "index": 318,
      "start_time": 934080.0,
      "end_time": 937230.0,
      "text": "And to help get us there, let&#39;s put back on just temporarily"
    },
    {
      "index": 319,
      "start_time": 937230.0,
      "end_time": 940310.0,
      "text": "some training wheels of sorts-- a reimplementation"
    },
    {
      "index": 320,
      "start_time": 940310.0,
      "end_time": 943715.0,
      "text": "of the CS50 library from C to Python, which we&#39;ve done for you."
    },
    {
      "index": 321,
      "start_time": 943715.0,
      "end_time": 945840.0,
      "text": "And we won&#39;t look at the lower-level implementation"
    },
    {
      "index": 322,
      "start_time": 945840.0,
      "end_time": 947480.0,
      "text": "details of how that works."
    },
    {
      "index": 323,
      "start_time": 947480.0,
      "end_time": 950480.0,
      "text": "But let me propose that at least for part of today&#39;s story,"
    },
    {
      "index": 324,
      "start_time": 950480.0,
      "end_time": 953560.0,
      "text": "we&#39;re going to have access to at least a few functions."
    },
    {
      "index": 325,
      "start_time": 953560.0,
      "end_time": 956330.0,
      "text": "These functions are going to be called GetChar, GetFloat, GetInt,"
    },
    {
      "index": 326,
      "start_time": 956330.0,
      "end_time": 959460.0,
      "text": "and GetString, just like those with which are already familiar."
    },
    {
      "index": 327,
      "start_time": 959460.0,
      "end_time": 961420.0,
      "text": "The syntax with which we access them is going"
    },
    {
      "index": 328,
      "start_time": 961420.0,
      "end_time": 963003.0,
      "text": "to be a little different in this case."
    },
    {
      "index": 329,
      "start_time": 963003.0,
      "end_time": 967140.0,
      "text": "By convention, we&#39;re going to say cs50.GetChar cs50.GetFloat"
    },
    {
      "index": 330,
      "start_time": 967140.0,
      "end_time": 971336.0,
      "text": "and so forth, to make clear that these aren&#39;t globally available"
    },
    {
      "index": 331,
      "start_time": 971336.0,
      "end_time": 974460.0,
      "text": "functions that might have even come with the language, because they&#39;re not."
    },
    {
      "index": 332,
      "start_time": 974460.0,
      "end_time": 977490.0,
      "text": "Rather, these are inside of a module, so to speak,"
    },
    {
      "index": 333,
      "start_time": 977490.0,
      "end_time": 981790.0,
      "text": "that CS50 wrote that implements exactly that functionality."
    },
    {
      "index": 334,
      "start_time": 981790.0,
      "end_time": 985570.0,
      "text": "We&#39;ll soon see that Python has at least these data types of bools,"
    },
    {
      "index": 335,
      "start_time": 985570.0,
      "end_time": 988045.0,
      "text": "true or false, whereby the T, and in turn the F,"
    },
    {
      "index": 336,
      "start_time": 988045.0,
      "end_time": 990496.0,
      "text": "have to be capitalized in Python, unlike in C;"
    },
    {
      "index": 337,
      "start_time": 990496.0,
      "end_time": 993120.0,
      "text": "floats, which are going to give us real numbers, floating point"
    },
    {
      "index": 338,
      "start_time": 993120.0,
      "end_time": 997360.0,
      "text": "values with decimal points; int, which is going to give us an integer;"
    },
    {
      "index": 339,
      "start_time": 997360.0,
      "end_time": 1000920.0,
      "text": "and str or string, which is going to give us the string that we&#39;ve now"
    },
    {
      "index": 340,
      "start_time": 1000920.0,
      "end_time": 1002310.0,
      "text": "come to know and love."
    },
    {
      "index": 341,
      "start_time": 1002310.0,
      "end_time": 1004660.0,
      "text": "But nicely enough, you can start to think again"
    },
    {
      "index": 342,
      "start_time": 1004660.0,
      "end_time": 1007080.0,
      "text": "of string as an abstraction, because it&#39;s actually"
    },
    {
      "index": 343,
      "start_time": 1007080.0,
      "end_time": 1010490.0,
      "text": "what&#39;s called a class that has a whole lot of functionality built-in."
    },
    {
      "index": 344,
      "start_time": 1010490.0,
      "end_time": 1013570.0,
      "text": "No longer are we going to have to worry about managing"
    },
    {
      "index": 345,
      "start_time": 1013570.0,
      "end_time": 1016540.0,
      "text": "the memory for our strings underneath the hood."
    },
    {
      "index": 346,
      "start_time": 1016540.0,
      "end_time": 1019820.0,
      "text": "Now Python, realize, also comes with a bunch of other features, some of which"
    },
    {
      "index": 347,
      "start_time": 1019820.0,
      "end_time": 1020980.0,
      "text": "we&#39;ll see today too."
    },
    {
      "index": 348,
      "start_time": 1020980.0,
      "end_time": 1023720.0,
      "text": "You can actually represent complex or imaginary numbers"
    },
    {
      "index": 349,
      "start_time": 1023720.0,
      "end_time": 1026390.0,
      "text": "in Python natively in the language itself."
    },
    {
      "index": 350,
      "start_time": 1026390.0000000001,
      "end_time": 1028660.0000000001,
      "text": "You have the notion of lists, as we mentioned before,"
    },
    {
      "index": 351,
      "start_time": 1028660.0000000001,
      "end_time": 1030930.0000000001,
      "text": "an analog to C&#39;s arrays."
    },
    {
      "index": 352,
      "start_time": 1030930.0000000001,
      "end_time": 1033170.0000000001,
      "text": "We have things called tuples, so if you&#39;ve ever"
    },
    {
      "index": 353,
      "start_time": 1033170.0000000001,
      "end_time": 1037150.0000000001,
      "text": "seen like xy coordinates or any kind of groups of values in the real world,"
    },
    {
      "index": 354,
      "start_time": 1037150.0000000001,
      "end_time": 1040660.0000000001,
      "text": "we can implement those too in Python; ranges, which we saw briefly,"
    },
    {
      "index": 355,
      "start_time": 1040660.0000000001,
      "end_time": 1043680.0000000001,
      "text": "which whereby you can define a range that starts at some value and ends"
    },
    {
      "index": 356,
      "start_time": 1043680.0000000001,
      "end_time": 1047470.0000000001,
      "text": "at some value, which is often helpful when counting from, say 0 to 50;"
    },
    {
      "index": 357,
      "start_time": 1047470.0,
      "end_time": 1051730.0,
      "text": "a set, which like in mathematics, allows you to have a collection of objects--"
    },
    {
      "index": 358,
      "start_time": 1051730.0,
      "end_time": 1055430.0,
      "text": "and you&#39;re not going to have duplicate, but it&#39;s"
    },
    {
      "index": 359,
      "start_time": 1055430.0,
      "end_time": 1058780.0,
      "text": "going to be very easy to check whether or not something is in that set;"
    },
    {
      "index": 360,
      "start_time": 1058780.0,
      "end_time": 1061340.0,
      "text": "and then a dict or dictionary, which is actually"
    },
    {
      "index": 361,
      "start_time": 1061340.0,
      "end_time": 1063400.0,
      "text": "going to be really just a hash table."
    },
    {
      "index": 362,
      "start_time": 1063400.0,
      "end_time": 1064980.0,
      "text": "But more on that in just a bit."
    },
    {
      "index": 363,
      "start_time": 1064980.0,
      "end_time": 1067980.0,
      "text": "And these are just some of them that we&#39;ll soon see."
    },
    {
      "index": 364,
      "start_time": 1067980.0,
      "end_time": 1069920.0,
      "text": "So let&#39;s now rewind in time and take a look"
    },
    {
      "index": 365,
      "start_time": 1069920.0,
      "end_time": 1074670.0,
      "text": "back at week one and perhaps this first and simplest example that we ever did,"
    },
    {
      "index": 366,
      "start_time": 1074670.0,
      "end_time": 1078340.0,
      "text": "which is this one here called hello.c."
    },
    {
      "index": 367,
      "start_time": 1078340.0,
      "end_time": 1081140.0,
      "text": "And meanwhile, let me go ahead here on the right-hand side"
    },
    {
      "index": 368,
      "start_time": 1081140.0,
      "end_time": 1085140.0,
      "text": "and create a new file that I&#39;m going to go ahead and call hello.py."
    },
    {
      "index": 369,
      "start_time": 1085140.0,
      "end_time": 1088650.0,
      "text": "And in here, I&#39;m going to go ahead and write the equivalent Python"
    },
    {
      "index": 370,
      "start_time": 1088650.0,
      "end_time": 1092260.0,
      "text": "program to the C program on the left."
    },
    {
      "index": 371,
      "start_time": 1092260.0,
      "end_time": 1095280.0,
      "text": "print &quot;hello world&quot;"
    },
    {
      "index": 372,
      "start_time": 1095280.0,
      "end_time": 1095900.0,
      "text": "Done."
    },
    {
      "index": 373,
      "start_time": 1095900.0,
      "end_time": 1098200.0,
      "text": "That is the first of our Python programs."
    },
    {
      "index": 374,
      "start_time": 1098200.0,
      "end_time": 1099700.0,
      "text": "Now how do I run it?"
    },
    {
      "index": 375,
      "start_time": 1099700.0,
      "end_time": 1101510.0,
      "text": "There&#39;s no clang step."
    },
    {
      "index": 376,
      "start_time": 1101510.0,
      "end_time": 1105060.0,
      "text": "And it&#39;s not correct to do just ./hello.py,"
    },
    {
      "index": 377,
      "start_time": 1105060.0,
      "end_time": 1107250.0,
      "text": "because inside of this file is just text."
    },
    {
      "index": 378,
      "start_time": 1107250.0,
      "end_time": 1108670.0,
      "text": "It&#39;s just my source code."
    },
    {
      "index": 379,
      "start_time": 1108670.0,
      "end_time": 1111010.0,
      "text": "I need to interpret that code somehow."
    },
    {
      "index": 380,
      "start_time": 1111010.0,
      "end_time": 1113460.0,
      "text": "And that&#39;s where that program Python comes in."
    },
    {
      "index": 381,
      "start_time": 1113460.0,
      "end_time": 1116287.0,
      "text": "I&#39;m going to simply do python space hello.py--"
    },
    {
      "index": 382,
      "start_time": 1116290.0,
      "end_time": 1118123.0,
      "text": "and I don&#39;t need the dot slash in this case,"
    },
    {
      "index": 383,
      "start_time": 1118120.0,
      "end_time": 1121530.0,
      "text": "because hello.py is assumed to be in the current directory."
    },
    {
      "index": 384,
      "start_time": 1121530.0,
      "end_time": 1123700.0,
      "text": "Hit enter and voila!"
    },
    {
      "index": 385,
      "start_time": 1123700.0,
      "end_time": 1125620.0,
      "text": "There&#39;s my first Python program."
    },
    {
      "index": 386,
      "start_time": 1125620.0,
      "end_time": 1129180.0,
      "text": "So what I haven&#39;t put in here is any mention of main."
    },
    {
      "index": 387,
      "start_time": 1129180.0,
      "end_time": 1130820.0,
      "text": "And just to be clear, we could."
    },
    {
      "index": 388,
      "start_time": 1130820.0,
      "end_time": 1132920.0,
      "text": "Again, a common convention in Python, especially"
    },
    {
      "index": 389,
      "start_time": 1132920.0,
      "end_time": 1134890.0,
      "text": "as programs get a little more complicated,"
    },
    {
      "index": 390,
      "start_time": 1134890.0,
      "end_time": 1138620.0,
      "text": "is to actually do something like this-- to define a function called"
    },
    {
      "index": 391,
      "start_time": 1138620.0,
      "end_time": 1142090.0,
      "text": "main that takes, in this case, no arguments, and then below it,"
    },
    {
      "index": 392,
      "start_time": 1142090.0,
      "end_time": 1144900.0,
      "text": "to have this line pretty much copied and pasted."
    },
    {
      "index": 393,
      "start_time": 1144900.0,
      "end_time": 1152150.0,
      "text": "If name equals, equals, underscore, underscore, main, underscore, colon,"
    },
    {
      "index": 394,
      "start_time": 1152150.0,
      "end_time": 1153930.0,
      "text": "then call main."
    },
    {
      "index": 395,
      "start_time": 1153930.0,
      "end_time": 1155930.0,
      "text": "So what&#39;s actually going on here?"
    },
    {
      "index": 396,
      "start_time": 1155930.0,
      "end_time": 1164690.0,
      "text": "Long story short, this line 4 and line 5 is just a quick way of checking,"
    },
    {
      "index": 397,
      "start_time": 1164690.0,
      "end_time": 1168240.0,
      "text": "is this file&#39;s default name quote unquote &quot;main&quot; with the underscores"
    },
    {
      "index": 398,
      "start_time": 1168240.0,
      "end_time": 1168740.0,
      "text": "there?"
    },
    {
      "index": 399,
      "start_time": 1168740.0,
      "end_time": 1170859.0,
      "text": "If so, go ahead and just call this function."
    },
    {
      "index": 400,
      "start_time": 1170860.0,
      "end_time": 1173401.0,
      "text": "Now generally, we won&#39;t bother writing our programs like this"
    },
    {
      "index": 401,
      "start_time": 1173400.0,
      "end_time": 1175370.0,
      "text": "when it is not in fact necessary."
    },
    {
      "index": 402,
      "start_time": 1175370.0,
      "end_time": 1177720.0,
      "text": "But realize, all these two lines of code do"
    },
    {
      "index": 403,
      "start_time": 1177720.0,
      "end_time": 1181090.0,
      "text": "is it ensures that if you do have a function called main in your program,"
    },
    {
      "index": 404,
      "start_time": 1181090.0,
      "end_time": 1185220.0,
      "text": "it&#39;s just going to call it by default. That does not happen automatically."
    },
    {
      "index": 405,
      "start_time": 1185220.0,
      "end_time": 1190790.0,
      "text": "And indeed, if I just wrote hello to py like this, and gave it a main function,"
    },
    {
      "index": 406,
      "start_time": 1190790.0,
      "end_time": 1193070.0,
      "text": "gave it a code, like print &quot;hello world,&quot;"
    },
    {
      "index": 407,
      "start_time": 1193070.0,
      "end_time": 1198050.0,
      "text": "but did not tell Python to actually call main,"
    },
    {
      "index": 408,
      "start_time": 1198050.0,
      "end_time": 1201640.0,
      "text": "I could run the program like this, but nothing&#39;s actually going to happen."
    },
    {
      "index": 409,
      "start_time": 1201640.0,
      "end_time": 1203640.0,
      "text": "So keep that in mind as a potential gotcha"
    },
    {
      "index": 410,
      "start_time": 1203640.0,
      "end_time": 1205830.0,
      "text": "as you start to write these things yourself."
    },
    {
      "index": 411,
      "start_time": 1205830.0,
      "end_time": 1209820.0,
      "text": "Well, now let&#39;s take a look back at another program we had in week 1."
    },
    {
      "index": 412,
      "start_time": 1209820.0,
      "end_time": 1214090.0,
      "text": "This one might have had me doing this in string.c."
    },
    {
      "index": 413,
      "start_time": 1214090.0,
      "end_time": 1217820.0,
      "text": "So in string.c did we introduce the CS50 library in C."
    },
    {
      "index": 414,
      "start_time": 1217820.0,
      "end_time": 1220690.0,
      "text": "And we also introduced from it the GetString function."
    },
    {
      "index": 415,
      "start_time": 1220690.0,
      "end_time": 1225210.0,
      "text": "And to use it, we had to declare a variable, like s, of type string"
    },
    {
      "index": 416,
      "start_time": 1225210.0,
      "end_time": 1227450.0,
      "text": "and then assign it the return value of GetString."
    },
    {
      "index": 417,
      "start_time": 1227450.0,
      "end_time": 1230200.0,
      "text": "Well, let&#39;s go ahead and do this same program"
    },
    {
      "index": 418,
      "start_time": 1230200.0,
      "end_time": 1233730.0,
      "text": "in Python, this time calling it string.py."
    },
    {
      "index": 419,
      "start_time": 1233730.0,
      "end_time": 1236220.0,
      "text": "And I&#39;m going to go ahead now and include the CS50 library."
    },
    {
      "index": 420,
      "start_time": 1236220.0,
      "end_time": 1238553.0,
      "text": "But the syntax for this is a little different in Python."
    },
    {
      "index": 421,
      "start_time": 1238550.0,
      "end_time": 1242627.0,
      "text": "Instead of pound including, you do import cs50."
    },
    {
      "index": 422,
      "start_time": 1242630.0,
      "end_time": 1246320.0,
      "text": "And that&#39;s it, no angle brackets, no quotes, no .h, or anything like that."
    },
    {
      "index": 423,
      "start_time": 1246320.0,
      "end_time": 1251280.0,
      "text": "We have pre-installed in CS50 IDE the CS50 library for Python."
    },
    {
      "index": 424,
      "start_time": 1251280.0,
      "end_time": 1253390.0,
      "text": "And that&#39;s going to allow me now to do this."
    },
    {
      "index": 425,
      "start_time": 1253390.0,
      "end_time": 1260044.0,
      "text": "s gets cs50.get_string print &quot;hello world&quot;"
    },
    {
      "index": 426,
      "start_time": 1260040.0,
      "end_time": 1261956.0,
      "text": "And we&#39;ll fill in this blank in just a moment,"
    },
    {
      "index": 427,
      "start_time": 1261960.0,
      "end_time": 1263459.0,
      "text": "but let&#39;s first see what&#39;s going on."
    },
    {
      "index": 428,
      "start_time": 1263460.0,
      "end_time": 1267671.0,
      "text": "On line 3 here, I&#39;m declaring a variable called s on the left."
    },
    {
      "index": 429,
      "start_time": 1267670.0,
      "end_time": 1271590.0,
      "text": "I&#39;m not explicitly mentioning its type, because Python will figure out that it"
    },
    {
      "index": 430,
      "start_time": 1271590.0,
      "end_time": 1274590.0,
      "text": "is in fact a string, because the function on the right hand side of this"
    },
    {
      "index": 431,
      "start_time": 1274590.0,
      "end_time": 1282780.0,
      "text": "equal sign, cs50.get_string, is going to return to s a value of type string."
    },
    {
      "index": 432,
      "start_time": 1282780.0,
      "end_time": 1286576.0,
      "text": "Now as an aside, in C, we kept calling these things functions."
    },
    {
      "index": 433,
      "start_time": 1286580.0,
      "end_time": 1287704.0,
      "text": "And indeed, they still are."
    },
    {
      "index": 434,
      "start_time": 1287700.0,
      "end_time": 1289840.0,
      "text": "But technically, if you have a function--"
    },
    {
      "index": 435,
      "start_time": 1289840.0,
      "end_time": 1294210.0,
      "text": "like get_string in this case-- that&#39;s inside of an object, that&#39;s"
    },
    {
      "index": 436,
      "start_time": 1294210.0,
      "end_time": 1297550.0,
      "text": "inside of what&#39;s called a module in Python, like the cs50 module"
    },
    {
      "index": 437,
      "start_time": 1297550.0,
      "end_time": 1300560.0,
      "text": "here, now we can start calling get_string as a method, which just"
    },
    {
      "index": 438,
      "start_time": 1300560.0,
      "end_time": 1304670.0,
      "text": "means it&#39;s a function associated with some kind of container-- in this case,"
    },
    {
      "index": 439,
      "start_time": 1304670.0,
      "end_time": 1306096.0,
      "text": "this thing called cs50."
    },
    {
      "index": 440,
      "start_time": 1306100.0,
      "end_time": 1308724.0,
      "text": "Now unfortunately, this program, of course, is not yet correct."
    },
    {
      "index": 441,
      "start_time": 1308720.0,
      "end_time": 1313300.0,
      "text": "If I do python space string.py and then type in my name &quot;David,&quot;"
    },
    {
      "index": 442,
      "start_time": 1313300.0,
      "end_time": 1315170.0,
      "text": "it&#39;s still just says &quot;hello world.&quot;"
    },
    {
      "index": 443,
      "start_time": 1315170.0,
      "end_time": 1317426.0,
      "text": "So I need a way of substituting in my name here."
    },
    {
      "index": 444,
      "start_time": 1317430.0,
      "end_time": 1319554.0,
      "text": "And it turns out there&#39;s a couple of different ways"
    },
    {
      "index": 445,
      "start_time": 1319550.0,
      "end_time": 1323050.0,
      "text": "to do this in Python, some of which are more outdated than others."
    },
    {
      "index": 446,
      "start_time": 1323050.0,
      "end_time": 1326610.0,
      "text": "So long story short, there are at least two major versions"
    },
    {
      "index": 447,
      "start_time": 1326610.0,
      "end_time": 1328350.0,
      "text": "of this language called Python now."
    },
    {
      "index": 448,
      "start_time": 1328350.0,
      "end_time": 1330615.0,
      "text": "There&#39;s Python 2 and there&#39;s Python 3."
    },
    {
      "index": 449,
      "start_time": 1330610.0,
      "end_time": 1333735.0,
      "text": "Now it turns out-- and we didn&#39;t really talk about this in the world of C--"
    },
    {
      "index": 450,
      "start_time": 1333740.0,
      "end_time": 1337000.0,
      "text": "there&#39;s actually different versions of C. We in CS50 have generally"
    },
    {
      "index": 451,
      "start_time": 1337000.0,
      "end_time": 1343630.0,
      "text": "been using version C11, which was the 2011 version of C,"
    },
    {
      "index": 452,
      "start_time": 1343630.0,
      "end_time": 1346730.0,
      "text": "which just means it&#39;s the most recent version that we happen to be using."
    },
    {
      "index": 453,
      "start_time": 1346730.0,
      "end_time": 1350410.0,
      "text": "For the most part, that hadn&#39;t mattered in C. But in Python, it actually does."
    },
    {
      "index": 454,
      "start_time": 1350410.0,
      "end_time": 1353880.0,
      "text": "It turns out that the inventor of Python and the community around Python"
    },
    {
      "index": 455,
      "start_time": 1353880.0,
      "end_time": 1358450.0,
      "text": "decided over the past several years to change the language in enough ways"
    },
    {
      "index": 456,
      "start_time": 1358450.0,
      "end_time": 1360990.0,
      "text": "that they are breaking changes."
    },
    {
      "index": 457,
      "start_time": 1360990.0,
      "end_time": 1362890.0,
      "text": "They&#39;re not backwards compatible, which means"
    },
    {
      "index": 458,
      "start_time": 1362890.0,
      "end_time": 1367670.0,
      "text": "if you wrote code in version 2 of Python, it might not work in version 3."
    },
    {
      "index": 459,
      "start_time": 1367670.0,
      "end_time": 1369640.0,
      "text": "And unfortunately both versions of the language"
    },
    {
      "index": 460,
      "start_time": 1369640.0,
      "end_time": 1373660.0,
      "text": "have been coexisting for some time, such that there&#39;s a huge community that"
    },
    {
      "index": 461,
      "start_time": 1373660.0,
      "end_time": 1374970.0,
      "text": "still uses Python 2."
    },
    {
      "index": 462,
      "start_time": 1374970.0,
      "end_time": 1377270.0,
      "text": "There&#39;s a growing community that uses Python 3."
    },
    {
      "index": 463,
      "start_time": 1377270.0,
      "end_time": 1381130.0,
      "text": "So that we stay at least as current as possible, we for the class&#39; purposes"
    },
    {
      "index": 464,
      "start_time": 1381130.0,
      "end_time": 1382267.0,
      "text": "will use Python 3."
    },
    {
      "index": 465,
      "start_time": 1382270.0,
      "end_time": 1385103.0,
      "text": "And for the most part, if you&#39;re learning Python for the first time,"
    },
    {
      "index": 466,
      "start_time": 1385100.0,
      "end_time": 1386290.0,
      "text": "it&#39;s not going to matter."
    },
    {
      "index": 467,
      "start_time": 1386290.0,
      "end_time": 1388400.0,
      "text": "But realize, unfortunately, that when you look up"
    },
    {
      "index": 468,
      "start_time": 1388400.0,
      "end_time": 1390340.0,
      "text": "resources on the internet or Google things,"
    },
    {
      "index": 469,
      "start_time": 1390340.0,
      "end_time": 1393930.0,
      "text": "you&#39;ll very often find older examples that might not necessarily"
    },
    {
      "index": 470,
      "start_time": 1393930.0,
      "end_time": 1395270.0,
      "text": "work as intended."
    },
    {
      "index": 471,
      "start_time": 1395270.0,
      "end_time": 1398941.0,
      "text": "So just compare them against what we&#39;ve done here in class and in section."
    },
    {
      "index": 472,
      "start_time": 1398940.0,
      "end_time": 1399439.0,
      "text": "All right."
    },
    {
      "index": 473,
      "start_time": 1399440.0,
      "end_time": 1401840.0,
      "text": "So with that said, let&#39;s go ahead and substitute"
    },
    {
      "index": 474,
      "start_time": 1401840.0,
      "end_time": 1406900.0,
      "text": "in my name, which I&#39;m going to do fairly oddly with two curly braces here."
    },
    {
      "index": 475,
      "start_time": 1406900.0,
      "end_time": 1408460.0,
      "text": "And then I&#39;m going to do this."
    },
    {
      "index": 476,
      "start_time": 1408460.0,
      "end_time": 1413780.0,
      "text": ".format open paren, s, close paren."
    },
    {
      "index": 477,
      "start_time": 1413780.0,
      "end_time": 1415390.0,
      "text": "So what&#39;s going on here?"
    },
    {
      "index": 478,
      "start_time": 1415390.0,
      "end_time": 1420690.0,
      "text": "Well, it turns out that in Python, quote unquote &quot;something&quot;"
    },
    {
      "index": 479,
      "start_time": 1420690.0,
      "end_time": 1424300.0,
      "text": "is indeed a string, or technically an object of type str."
    },
    {
      "index": 480,
      "start_time": 1424300.0,
      "end_time": 1426850.0,
      "text": "And it turns out that in Python and in a lot of higher level"
    },
    {
      "index": 481,
      "start_time": 1426850.0,
      "end_time": 1431980.0,
      "text": "languages, objects-- as I keep calling them-- have built in functionality."
    },
    {
      "index": 482,
      "start_time": 1431980.0,
      "end_time": 1434890.0,
      "text": "So a string is no longer just a sequence of characters."
    },
    {
      "index": 483,
      "start_time": 1434890.0,
      "end_time": 1440550.0,
      "text": "It&#39;s no longer just the address of a byte of memory terminated eventually"
    },
    {
      "index": 484,
      "start_time": 1440550.0,
      "end_time": 1441627.0,
      "text": "with backslash 0."
    },
    {
      "index": 485,
      "start_time": 1441630.0,
      "end_time": 1443963.0,
      "text": "There&#39;s actually a lot more going on underneath the hood"
    },
    {
      "index": 486,
      "start_time": 1443960.0,
      "end_time": 1445740.0,
      "text": "that we don&#39;t really have to care about."
    },
    {
      "index": 487,
      "start_time": 1445740.0,
      "end_time": 1447520.0,
      "text": "Because indeed, this is a good thing."
    },
    {
      "index": 488,
      "start_time": 1447520.0,
      "end_time": 1450040.0,
      "text": "We can truly now think of a string in Python"
    },
    {
      "index": 489,
      "start_time": 1450040.0,
      "end_time": 1452950.0,
      "text": "as being an abstraction for a sequence of characters."
    },
    {
      "index": 490,
      "start_time": 1452950.0,
      "end_time": 1455730.0,
      "text": "But baked into it, if you will, is a whole bunch"
    },
    {
      "index": 491,
      "start_time": 1455730.0,
      "end_time": 1456970.0,
      "text": "of additional functionality."
    },
    {
      "index": 492,
      "start_time": 1456970.0,
      "end_time": 1460770.0,
      "text": "For instance, there is a function that is a method called"
    },
    {
      "index": 493,
      "start_time": 1460770.0,
      "end_time": 1463650.0,
      "text": "format that comes with strings now."
    },
    {
      "index": 494,
      "start_time": 1463650.0,
      "end_time": 1465800.0,
      "text": "And it&#39;s a little weird to call them in this way."
    },
    {
      "index": 495,
      "start_time": 1465800.0,
      "end_time": 1467370.0,
      "text": "But notice the similarity."
    },
    {
      "index": 496,
      "start_time": 1467370.0,
      "end_time": 1473660.0,
      "text": "Just like the CS50 library, or module, or really object, has inside of it"
    },
    {
      "index": 497,
      "start_time": 1473660.0,
      "end_time": 1478390.0,
      "text": "a get_string method or function, so does a string,"
    },
    {
      "index": 498,
      "start_time": 1478390.0,
      "end_time": 1482370.0,
      "text": "like quote unquote &quot;whatever&quot; have built inside of it"
    },
    {
      "index": 499,
      "start_time": 1482370.0,
      "end_time": 1483927.0,
      "text": "a method or function called format."
    },
    {
      "index": 500,
      "start_time": 1483930.0,
      "end_time": 1486763.0,
      "text": "And as you might have guessed, its purpose in life is just to format"
    },
    {
      "index": 501,
      "start_time": 1486760.0,
      "end_time": 1487970.0,
      "text": "the thing to the left."
    },
    {
      "index": 502,
      "start_time": 1487970.0,
      "end_time": 1491647.0,
      "text": "So you get used to this format-- and there&#39;s no pun intended--"
    },
    {
      "index": 503,
      "start_time": 1491650.0,
      "end_time": 1493733.0,
      "text": "and there&#39;s other ways to do this still, but we&#39;ll"
    },
    {
      "index": 504,
      "start_time": 1493730.0,
      "end_time": 1495770.0,
      "text": "see why this is useful in just a moment."
    },
    {
      "index": 505,
      "start_time": 1495770.0,
      "end_time": 1499650.0,
      "text": "For now, it just looks like a ridiculously unnecessarily complex way"
    },
    {
      "index": 506,
      "start_time": 1499650.0,
      "end_time": 1502380.0,
      "text": "of plugging in a name to simply do this."
    },
    {
      "index": 507,
      "start_time": 1502380.0,
      "end_time": 1506120.0,
      "text": "If I type in my name David, and hit enter, now I get &quot;hello David.&quot;"
    },
    {
      "index": 508,
      "start_time": 1506120.0,
      "end_time": 1509190.0,
      "text": "But trust for now that this is going to be useful as we"
    },
    {
      "index": 509,
      "start_time": 1509190.0,
      "end_time": 1511810.0,
      "text": "start to use other file formats still."
    },
    {
      "index": 510,
      "start_time": 1511810.0,
      "end_time": 1516730.0,
      "text": "Now as an aside, so that we&#39;ve not just removed training wheels and now"
    },
    {
      "index": 511,
      "start_time": 1516730.0,
      "end_time": 1519250.0,
      "text": "putting them back on you just for the sake of Python,"
    },
    {
      "index": 512,
      "start_time": 1519250.0,
      "end_time": 1523080.0,
      "text": "let me emphasize that we can actually implement this program exactly"
    },
    {
      "index": 513,
      "start_time": 1523080.0,
      "end_time": 1527590.0,
      "text": "the same way without using anything CS50 specific using built-in functionality,"
    },
    {
      "index": 514,
      "start_time": 1527590.0,
      "end_time": 1530140.0,
      "text": "like the input function in Python version 3."
    },
    {
      "index": 515,
      "start_time": 1530140.0,
      "end_time": 1533870.0,
      "text": "The input function here optionally takes a prompt inside of its parentheses."
    },
    {
      "index": 516,
      "start_time": 1533870.0,
      "end_time": 1536370.0,
      "text": "But if I exclude that, it&#39;s just going to ask for some text."
    },
    {
      "index": 517,
      "start_time": 1536370.0,
      "end_time": 1538190.0,
      "text": "And here I can do this now."
    },
    {
      "index": 518,
      "start_time": 1538190.0,
      "end_time": 1542760.0,
      "text": "If I run Python string.py and type in my name, it still works."
    },
    {
      "index": 519,
      "start_time": 1542760.0,
      "end_time": 1547800.0,
      "text": "And if I actually do something like this, name colon space, save the file,"
    },
    {
      "index": 520,
      "start_time": 1547800.0,
      "end_time": 1550720.0,
      "text": "and rerun it, now I get a prompt for free."
    },
    {
      "index": 521,
      "start_time": 1550720.0,
      "end_time": 1551360.0,
      "text": "So here, too."
    },
    {
      "index": 522,
      "start_time": 1551360.0,
      "end_time": 1552470.0,
      "text": "Super simple example."
    },
    {
      "index": 523,
      "start_time": 1552470.0,
      "end_time": 1554880.0,
      "text": "But whereas in C, typically we would have"
    },
    {
      "index": 524,
      "start_time": 1554880.0,
      "end_time": 1558870.0,
      "text": "had to add that prompt using printf and loop again and again as needed,"
    },
    {
      "index": 525,
      "start_time": 1558870.0,
      "end_time": 1562490.0,
      "text": "here we can simply prompt once via the input function"
    },
    {
      "index": 526,
      "start_time": 1562490.0,
      "end_time": 1567720.0,
      "text": "and get back a value all at the same time, such as say, Zamyla&#39;s name here."
    },
    {
      "index": 527,
      "start_time": 1567720.0,
      "end_time": 1570860.0,
      "text": "So we&#39;re only using the CS50 library for today&#39;s purposes"
    },
    {
      "index": 528,
      "start_time": 1570860.0,
      "end_time": 1573687.0,
      "text": "to show you the equivalence of some of our C examples"
    },
    {
      "index": 529,
      "start_time": 1573690.0,
      "end_time": 1575023.0,
      "text": "vis-a-vis these Python examples."
    },
    {
      "index": 530,
      "start_time": 1575020.0,
      "end_time": 1577710.0,
      "text": "But it is by no means necessary, just gives us"
    },
    {
      "index": 531,
      "start_time": 1577710.0,
      "end_time": 1579930.0,
      "text": "a bit more functionality that&#39;s useful."
    },
    {
      "index": 532,
      "start_time": 1579930.0,
      "end_time": 1584860.0,
      "text": "For instance, if I were to write a program very similar to this one--"
    },
    {
      "index": 533,
      "start_time": 1584860.0,
      "end_time": 1588620.0,
      "text": "recall way back when we had this program in C, which simply got int"
    },
    {
      "index": 534,
      "start_time": 1588620.0,
      "end_time": 1593970.0,
      "text": "from the user and printed it out-- let me this time"
    },
    {
      "index": 535,
      "start_time": 1593970.0,
      "end_time": 1596730.0,
      "text": "create a new file called int.py."
    },
    {
      "index": 536,
      "start_time": 1596730.0,
      "end_time": 1599860.0,
      "text": "And inside of it, import the CS50 library, which"
    },
    {
      "index": 537,
      "start_time": 1599860.0,
      "end_time": 1604340.0,
      "text": "also has a function called cs50.getint."
    },
    {
      "index": 538,
      "start_time": 1604340.0,
      "end_time": 1609490.0,
      "text": "And then use this function to simply say, print, quote, unquote, &quot;hello.&quot;"
    },
    {
      "index": 539,
      "start_time": 1609490.0,
      "end_time": 1613640.0,
      "text": "Open curly brace, closed curly brace, .format i."
    },
    {
      "index": 540,
      "start_time": 1613640.0,
      "end_time": 1614950.0,
      "text": "Save this file."
    },
    {
      "index": 541,
      "start_time": 1614950.0,
      "end_time": 1617300.0,
      "text": "Run Python int.py."
    },
    {
      "index": 542,
      "start_time": 1617300.0,
      "end_time": 1619110.0,
      "text": "I can type in a number like 42."
    },
    {
      "index": 543,
      "start_time": 1619110.0,
      "end_time": 1619900.0,
      "text": "And voila."
    },
    {
      "index": 544,
      "start_time": 1619900.0,
      "end_time": 1621650.0,
      "text": "Now we&#39;ve used Get Int."
    },
    {
      "index": 545,
      "start_time": 1621650.0,
      "end_time": 1623530.0,
      "text": "But now let&#39;s actually format something."
    },
    {
      "index": 546,
      "start_time": 1623530.0,
      "end_time": 1628530.0,
      "text": "You&#39;ll recall that in the world of C, we had some issues of imprecision."
    },
    {
      "index": 547,
      "start_time": 1628530.0,
      "end_time": 1635010.0,
      "text": "So recall that this program, whereby I printed the value of 1/10 to 55 decimal"
    },
    {
      "index": 548,
      "start_time": 1635010.0,
      "end_time": 1641750.0,
      "text": "places, actually did not yield 0.100000 to infinity,"
    },
    {
      "index": 549,
      "start_time": 1641750.0,
      "end_time": 1643760.0,
      "text": "as I was taught in grade school."
    },
    {
      "index": 550,
      "start_time": 1643760.0,
      "end_time": 1649920.0,
      "text": "Rather, we saw some raring of the head of imprecision,"
    },
    {
      "index": 551,
      "start_time": 1649920.0,
      "end_time": 1655380.0,
      "text": "whereby floating point values in C were not represented infinitely precisely."
    },
    {
      "index": 552,
      "start_time": 1655380.0,
      "end_time": 1656770.0,
      "text": "In fact, let&#39;s do this too."
    },
    {
      "index": 553,
      "start_time": 1656770.0,
      "end_time": 1659070.0,
      "text": "Imprecision.py shall be the name of this file."
    },
    {
      "index": 554,
      "start_time": 1659070.0,
      "end_time": 1659820.0,
      "text": "And you know what?"
    },
    {
      "index": 555,
      "start_time": 1659820.0,
      "end_time": 1661570.0,
      "text": "I don&#39;t even need to write much code here."
    },
    {
      "index": 556,
      "start_time": 1661570.0,
      "end_time": 1665210.0,
      "text": "I&#39;m just going to go ahead and print out, somehow or other,"
    },
    {
      "index": 557,
      "start_time": 1665210.0,
      "end_time": 1669480.0,
      "text": "a value like, say, 1 divided by 10."
    },
    {
      "index": 558,
      "start_time": 1669480.0,
      "end_time": 1671260.0,
      "text": "Let me go ahead and save that."
    },
    {
      "index": 559,
      "start_time": 1671260.0,
      "end_time": 1674790.0,
      "text": "Run Python of imprecision.py."
    },
    {
      "index": 560,
      "start_time": 1674790.0,
      "end_time": 1676780.0,
      "text": "And I do get 0.1."
    },
    {
      "index": 561,
      "start_time": 1676780.0,
      "end_time": 1678230.0,
      "text": "So this is kind of interesting."
    },
    {
      "index": 562,
      "start_time": 1678230.0,
      "end_time": 1681220.0,
      "text": "And in fact, it&#39;s revealing a feature of Python."
    },
    {
      "index": 563,
      "start_time": 1681220.0,
      "end_time": 1683200.0,
      "text": "But I don&#39;t want to see just one decimal point."
    },
    {
      "index": 564,
      "start_time": 1683200.0,
      "end_time": 1691260.0,
      "text": "I want to do the equivalent of %.55f, as we saw in C."
    },
    {
      "index": 565,
      "start_time": 1691260.0,
      "end_time": 1692700.0,
      "text": "It&#39;s almost the same in Python."
    },
    {
      "index": 566,
      "start_time": 1692700.0,
      "end_time": 1696150.0,
      "text": "But instead of using the percent sign, I&#39;m going to use a colon instead."
    },
    {
      "index": 567,
      "start_time": 1696150.0,
      "end_time": 1702710.0,
      "text": "And now notice inside of all of this is just 0.55f preceded by that colon."
    },
    {
      "index": 568,
      "start_time": 1702710.0,
      "end_time": 1704810.0,
      "text": "So it&#39;s almost exactly what we did earlier,"
    },
    {
      "index": 569,
      "start_time": 1704810.0,
      "end_time": 1706450.0,
      "text": "but with a bit more specificity."
    },
    {
      "index": 570,
      "start_time": 1706450.0,
      "end_time": 1712510.0,
      "text": "And now I see again that ridiculously disappointing imprecision eventually,"
    },
    {
      "index": 571,
      "start_time": 1712510.0,
      "end_time": 1714050.0,
      "text": "which we also saw in C."
    },
    {
      "index": 572,
      "start_time": 1714050.0,
      "end_time": 1717130.0,
      "text": "So it turns out in Python, too, only a finite number of bits"
    },
    {
      "index": 573,
      "start_time": 1717130.0,
      "end_time": 1720380.0,
      "text": "are used typically to represent a floating point value."
    },
    {
      "index": 574,
      "start_time": 1720380.0,
      "end_time": 1724380.0,
      "text": "So we still have, unfortunately, that issue of imprecision."
    },
    {
      "index": 575,
      "start_time": 1724380.0,
      "end_time": 1728560.0,
      "text": "But what we don&#39;t seem to have is something"
    },
    {
      "index": 576,
      "start_time": 1728560.0,
      "end_time": 1730610.0,
      "text": "that we stumbled over some weeks ago."
    },
    {
      "index": 577,
      "start_time": 1730610.0,
      "end_time": 1738160.0,
      "text": "And in fact, the reason in the C version I did 1.0 divided by 10.0 was what?"
    },
    {
      "index": 578,
      "start_time": 1738160.0,
      "end_time": 1742900.0,
      "text": "Why didn&#39;t I just do 1 divided by 10 in the C version?"
    },
    {
      "index": 579,
      "start_time": 1742900.0,
      "end_time": 1744670.0,
      "text": "What happened?"
    },
    {
      "index": 580,
      "start_time": 1744670.0,
      "end_time": 1749210.0,
      "text": "So as I recall, if you take an int in C and then divide it by an int in C,"
    },
    {
      "index": 581,
      "start_time": 1749210.0,
      "end_time": 1754000.0,
      "text": "you get back and int in C. Unfortunately, 1 divided by 10"
    },
    {
      "index": 582,
      "start_time": 1754000.0,
      "end_time": 1755334.0,
      "text": "should be 0.1."
    },
    {
      "index": 583,
      "start_time": 1755330.0,
      "end_time": 1756246.0,
      "text": "But that&#39;s not an int."
    },
    {
      "index": 584,
      "start_time": 1756250.0,
      "end_time": 1757500.0,
      "text": "That&#39;s a floating point value."
    },
    {
      "index": 585,
      "start_time": 1757500.0,
      "end_time": 1760780.0,
      "text": "So we solve this issue of truncation with integers"
    },
    {
      "index": 586,
      "start_time": 1760780.0,
      "end_time": 1764787.0,
      "text": "whereby, if you have a value 1 divided by a value 10, both of which are ints,"
    },
    {
      "index": 587,
      "start_time": 1764790.0,
      "end_time": 1766123.0,
      "text": "you&#39;re going to get back an int."
    },
    {
      "index": 588,
      "start_time": 1766120.0,
      "end_time": 1769240.0,
      "text": "The closest int after throwing away everything"
    },
    {
      "index": 589,
      "start_time": 1769240.0,
      "end_time": 1771190.0,
      "text": "after the decimal point, which unfortunately"
    },
    {
      "index": 590,
      "start_time": 1771190.0,
      "end_time": 1775840.0,
      "text": "would have been 0 if I didn&#39;t define them instead as being floats."
    },
    {
      "index": 591,
      "start_time": 1775840.0,
      "end_time": 1778910.0,
      "text": "But it seems that Python has actually fixed this."
    },
    {
      "index": 592,
      "start_time": 1778910.0,
      "end_time": 1782760.0,
      "text": "In fact, one of the features of Python 3 is to redress exactly this."
    },
    {
      "index": 593,
      "start_time": 1782760.0,
      "end_time": 1785340.0,
      "text": "For many years, we&#39;ve all had to deal with the fact"
    },
    {
      "index": 594,
      "start_time": 1785340.0,
      "end_time": 1789360.0,
      "text": "that an integer divided by an integer is, in fact, an integer and therefore"
    },
    {
      "index": 595,
      "start_time": 1789360.0,
      "end_time": 1791560.0,
      "text": "mathematically incorrect, potentially."
    },
    {
      "index": 596,
      "start_time": 1791560.0,
      "end_time": 1795630.0,
      "text": "Well, turns out that&#39;s been fixed such that now 1 divided by 10"
    },
    {
      "index": 597,
      "start_time": 1795630.0,
      "end_time": 1800976.0,
      "text": "gives you the value that you actually expect-- not, in fact, 0."
    },
    {
      "index": 598,
      "start_time": 1800980.0,
      "end_time": 1802354.0,
      "text": "But what does this actually mean?"
    },
    {
      "index": 599,
      "start_time": 1802350.0,
      "end_time": 1806000.0,
      "text": "Let me go ahead and open up an example that I wrote in advance, this one"
    },
    {
      "index": 600,
      "start_time": 1806000.0,
      "end_time": 1811370.0,
      "text": "being a translation of what we didn&#39;t see some time ago, like this."
    },
    {
      "index": 601,
      "start_time": 1811370.0,
      "end_time": 1814540.0,
      "text": "You&#39;ll recall that in the version we wrote weeks back,"
    },
    {
      "index": 602,
      "start_time": 1814540.0,
      "end_time": 1818700.0,
      "text": "we just tested out the plus operator in C, the subtraction operator,"
    },
    {
      "index": 603,
      "start_time": 1818700.0,
      "end_time": 1822260.0,
      "text": "multiplication, division, and modulo for remainder."
    },
    {
      "index": 604,
      "start_time": 1822260.0,
      "end_time": 1825960.0,
      "text": "Well, it turns out we can do something almost identically in Python"
    },
    {
      "index": 605,
      "start_time": 1825960.0,
      "end_time": 1828162.0,
      "text": "here if we look at int.py."
    },
    {
      "index": 606,
      "start_time": 1828160.0,
      "end_time": 1833508.0,
      "text": "But notice that just as I&#39;ve changed the program slightly"
    },
    {
      "index": 607,
      "start_time": 1833510.0,
      "end_time": 1836900.0,
      "text": "to use this CS50 library for Python to get a value"
    },
    {
      "index": 608,
      "start_time": 1836900.0,
      "end_time": 1839440.0,
      "text": "x here, to get a value y here."
    },
    {
      "index": 609,
      "start_time": 1839440.0,
      "end_time": 1843510.0,
      "text": "Notice that there is one additional example down here."
    },
    {
      "index": 610,
      "start_time": 1843510.0,
      "end_time": 1845380.0,
      "text": "I&#39;m still demonstrating plus."
    },
    {
      "index": 611,
      "start_time": 1845380.0,
      "end_time": 1848520.0,
      "text": "I&#39;m still demonstrating minus, multiplication, division."
    },
    {
      "index": 612,
      "start_time": 1848520.0,
      "end_time": 1851660.0,
      "text": "And what is this?"
    },
    {
      "index": 613,
      "start_time": 1851660.0,
      "end_time": 1854790.0,
      "text": "So it turns out that in Python 3, if you want the old behavior"
    },
    {
      "index": 614,
      "start_time": 1854790.0,
      "end_time": 1859120.0,
      "text": "and you actually want to do integer division such that you not only divide"
    },
    {
      "index": 615,
      "start_time": 1859120.0,
      "end_time": 1862659.0,
      "text": "but effectively floor the value to the nearest int below it,"
    },
    {
      "index": 616,
      "start_time": 1862660.0,
      "end_time": 1865201.0,
      "text": "you can actually use this syntax, which somewhat confusingly,"
    },
    {
      "index": 617,
      "start_time": 1865200.0,
      "end_time": 1867930.0,
      "text": "perhaps looks like a comment in C. It is not a comment in Python."
    },
    {
      "index": 618,
      "start_time": 1867930.0,
      "end_time": 1870830.0,
      "text": "In fact, in Python, as you may have gleaned already,"
    },
    {
      "index": 619,
      "start_time": 1870830.0,
      "end_time": 1874950.0,
      "text": "comments typically will start with just a single hash symbol."
    },
    {
      "index": 620,
      "start_time": 1874950.0,
      "end_time": 1876890.0,
      "text": "But there&#39;s other ways to do comments as well."
    },
    {
      "index": 621,
      "start_time": 1876890.0,
      "end_time": 1880000.0,
      "text": "But notice one other curiosity, too."
    },
    {
      "index": 622,
      "start_time": 1880000.0,
      "end_time": 1884190.0,
      "text": "This program does not print out new lines when prompting the user."
    },
    {
      "index": 623,
      "start_time": 1884190.0,
      "end_time": 1887020.0,
      "text": "In fact, if I run this program, let me go ahead"
    },
    {
      "index": 624,
      "start_time": 1887020.0,
      "end_time": 1892130.0,
      "text": "and run this example-- which, again, is called ints.py."
    },
    {
      "index": 625,
      "start_time": 1892130.0,
      "end_time": 1895430.0,
      "text": "Notice that it prompts me for an int x and an int y."
    },
    {
      "index": 626,
      "start_time": 1895430.0,
      "end_time": 1897100.0,
      "text": "And I supply the new lines."
    },
    {
      "index": 627,
      "start_time": 1897100.0,
      "end_time": 1898670.0,
      "text": "They don&#39;t get printed for me."
    },
    {
      "index": 628,
      "start_time": 1898670.0,
      "end_time": 1901880.0,
      "text": "And then we get back the answers that we hopefully expect here."
    },
    {
      "index": 629,
      "start_time": 1901880.0,
      "end_time": 1905890.0,
      "text": "But what is this going on here?"
    },
    {
      "index": 630,
      "start_time": 1905890.0,
      "end_time": 1909782.0,
      "text": "Well, in the previous examples, I got away with not using /n anymore."
    },
    {
      "index": 631,
      "start_time": 1909780.0,
      "end_time": 1910988.0,
      "text": "On the one hand, that&#39;s nice."
    },
    {
      "index": 632,
      "start_time": 1910990.0,
      "end_time": 1913060.0,
      "text": "I don&#39;t have to remember this annoying thing that often you"
    },
    {
      "index": 633,
      "start_time": 1913060.0,
      "end_time": 1914284.0,
      "text": "might omit accidentally."
    },
    {
      "index": 634,
      "start_time": 1914280.0,
      "end_time": 1916446.0,
      "text": "And therefore, your prompt ends up on the same line."
    },
    {
      "index": 635,
      "start_time": 1916450.0,
      "end_time": 1918330.0,
      "text": "And just things look incorrect."
    },
    {
      "index": 636,
      "start_time": 1918330.0,
      "end_time": 1922950.0,
      "text": "Unfortunately, the price we pay by no longer having to call a /n in order"
    },
    {
      "index": 637,
      "start_time": 1922950.0,
      "end_time": 1927930.0,
      "text": "to get a new line from Python&#39;s print function is if you don&#39;t want that"
    },
    {
      "index": 638,
      "start_time": 1927930.0,
      "end_time": 1931190.0,
      "text": "freebie, if you don&#39;t want that /n, unfortunately,"
    },
    {
      "index": 639,
      "start_time": 1931190.0,
      "end_time": 1935550.0,
      "text": "you&#39;re going to have to pass a second argument to the print function"
    },
    {
      "index": 640,
      "start_time": 1935550.0,
      "end_time": 1939980.0,
      "text": "in Python that overrides what the default line ending is."
    },
    {
      "index": 641,
      "start_time": 1939980.0,
      "end_time": 1943600.0,
      "text": "So whereas you would be getting by default /n for free,"
    },
    {
      "index": 642,
      "start_time": 1943600.0,
      "end_time": 1948400.0,
      "text": "if I instead say comma end equals, quote, unquote, nothing,"
    },
    {
      "index": 643,
      "start_time": 1948400.0,
      "end_time": 1951030.0,
      "text": "that means Python, don&#39;t use the default /n."
    },
    {
      "index": 644,
      "start_time": 1951030.0,
      "end_time": 1954090.0,
      "text": "Instead, output nothing whatsoever."
    },
    {
      "index": 645,
      "start_time": 1954090.0,
      "end_time": 1955550.0,
      "text": "So it&#39;s a tradeoff."
    },
    {
      "index": 646,
      "start_time": 1955550.0,
      "end_time": 1958300.0,
      "text": "And again, much like you might have gleaned from the recent test,"
    },
    {
      "index": 647,
      "start_time": 1958300.0,
      "end_time": 1959440.0,
      "text": "there&#39;s this theme of tradeoffs."
    },
    {
      "index": 648,
      "start_time": 1959440.0,
      "end_time": 1962780.0,
      "text": "So even in terms of the usability of a language, might there be this tradeoff?"
    },
    {
      "index": 649,
      "start_time": 1962780.0,
      "end_time": 1967100.0,
      "text": "If you want one feature, you might have to give up some other altogether."
    },
    {
      "index": 650,
      "start_time": 1967100.0,
      "end_time": 1970740.0,
      "text": "So let&#39;s just tie this all together and implement a program together"
    },
    {
      "index": 651,
      "start_time": 1970740.0,
      "end_time": 1972270.0,
      "text": "for temperature as follows."
    },
    {
      "index": 652,
      "start_time": 1972270.0,
      "end_time": 1976920.0,
      "text": "Let me go ahead and create a file called temperature.py."
    },
    {
      "index": 653,
      "start_time": 1976920.0,
      "end_time": 1979500.0,
      "text": "And this simply I want to use to convert,"
    },
    {
      "index": 654,
      "start_time": 1979500.0,
      "end_time": 1983060.0,
      "text": "say, Fahrenheit to Celsius, to convert two temperatures."
    },
    {
      "index": 655,
      "start_time": 1983060.0,
      "end_time": 1985720.0,
      "text": "I&#39;m going to go ahead for convenience and use the CS library."
    },
    {
      "index": 656,
      "start_time": 1985720.0,
      "end_time": 1989880.0,
      "text": "I&#39;m going to declare a variable called f that&#39;s going to become, as we&#39;ll see,"
    },
    {
      "index": 657,
      "start_time": 1989880.0,
      "end_time": 1991740.0,
      "text": "of type float by using cs50.getfloat."
    },
    {
      "index": 658,
      "start_time": 1994510.0,
      "end_time": 1998500.0,
      "text": "And now I&#39;m going to declare another variable, c, for Celsius, that&#39;s"
    },
    {
      "index": 659,
      "start_time": 1998500.0,
      "end_time": 2005030.0,
      "text": "going to equal 5 divided by 9 times f minus 32,"
    },
    {
      "index": 660,
      "start_time": 2005030.0,
      "end_time": 2008574.0,
      "text": "which I&#39;m pretty sure is the formula for converting Fahrenheit to Celsius."
    },
    {
      "index": 661,
      "start_time": 2008570.0,
      "end_time": 2010486.0,
      "text": "And then I&#39;m going to go ahead and print this,"
    },
    {
      "index": 662,
      "start_time": 2010490.0,
      "end_time": 2013500.0,
      "text": "not with printf but with print, as follows."
    },
    {
      "index": 663,
      "start_time": 2013500.0,
      "end_time": 2019170.0,
      "text": "I&#39;m going to have some placeholder there formatting this variable c."
    },
    {
      "index": 664,
      "start_time": 2019170.0,
      "end_time": 2021600.0,
      "text": "And what do I actually want to put inside of here?"
    },
    {
      "index": 665,
      "start_time": 2021600.0,
      "end_time": 2025350.0,
      "text": "Well, if I want to go ahead and format it to just one decimal place,"
    },
    {
      "index": 666,
      "start_time": 2025350.0,
      "end_time": 2027340.0,
      "text": "I&#39;ll use .1f."
    },
    {
      "index": 667,
      "start_time": 2027340.0,
      "end_time": 2031310.0,
      "text": "Let&#39;s go ahead and run Python on temperature.py."
    },
    {
      "index": 668,
      "start_time": 2031310.0,
      "end_time": 2032000.0,
      "text": "Enter."
    },
    {
      "index": 669,
      "start_time": 2032000.0,
      "end_time": 2036850.0,
      "text": "Let&#39;s type in a temperature like 212, 100 in Celsius."
    },
    {
      "index": 670,
      "start_time": 2036850.0,
      "end_time": 2041322.0,
      "text": "Let&#39;s type in the only other temperature I really know, 32, zero in Celsius."
    },
    {
      "index": 671,
      "start_time": 2041320.0,
      "end_time": 2042528.0,
      "text": "So we&#39;ve done the conversion."
    },
    {
      "index": 672,
      "start_time": 2042530.0,
      "end_time": 2044470.0,
      "text": "And we&#39;ve not had to worry nearly as much"
    },
    {
      "index": 673,
      "start_time": 2044470.0,
      "end_time": 2052230.0,
      "text": "as we did a few weeks ago about all of the issues of integers"
    },
    {
      "index": 674,
      "start_time": 2052230.0,
      "end_time": 2054909.0,
      "text": "being truncated when you divide."
    },
    {
      "index": 675,
      "start_time": 2054909.9999999998,
      "end_time": 2055770.9999999998,
      "text": "All right."
    },
    {
      "index": 676,
      "start_time": 2055770.0,
      "end_time": 2058310.0,
      "text": "So let&#39;s not focus so much on math and operators."
    },
    {
      "index": 677,
      "start_time": 2058310.0,
      "end_time": 2062290.0,
      "text": "Let&#39;s actually do a little bit of logic by way of this example from a while"
    },
    {
      "index": 678,
      "start_time": 2062290.0,
      "end_time": 2062790.0,
      "text": "back."
    },
    {
      "index": 679,
      "start_time": 2062790.0,
      "end_time": 2067170.0,
      "text": "We had an example in C called logical.c, which simply did this."
    },
    {
      "index": 680,
      "start_time": 2067170.0,
      "end_time": 2068900.0,
      "text": "It asked me for a char."
    },
    {
      "index": 681,
      "start_time": 2068900.0,
      "end_time": 2071920.0,
      "text": "And it stored it inside of-- and actually, this"
    },
    {
      "index": 682,
      "start_time": 2071920.0,
      "end_time": 2075429.0,
      "text": "could have been this-- char c gets get char."
    },
    {
      "index": 683,
      "start_time": 2075429.9999999998,
      "end_time": 2082520.9999999998,
      "text": "And then I compared that char c against Y in capital letter or y lowercase."
    },
    {
      "index": 684,
      "start_time": 2082520.0,
      "end_time": 2084940.0,
      "text": "And if they matched, I printed yes."
    },
    {
      "index": 685,
      "start_time": 2084940.0,
      "end_time": 2087929.0,
      "text": "Otherwise, if it was capital N or lowercase n, I printed no."
    },
    {
      "index": 686,
      "start_time": 2087929.9999999998,
      "end_time": 2089050.9999999998,
      "text": "Else, I just said error."
    },
    {
      "index": 687,
      "start_time": 2089050.0000000002,
      "end_time": 2091620.0000000002,
      "text": "So it&#39;s just an arbitrary program that&#39;s meant to assess,"
    },
    {
      "index": 688,
      "start_time": 2091620.0,
      "end_time": 2097450.0,
      "text": "did I type yes or no effectively by its first letter, capitalized or otherwise?"
    },
    {
      "index": 689,
      "start_time": 2097450.0,
      "end_time": 2101630.0,
      "text": "Let&#39;s go ahead and port this, translate this to Python as follows."
    },
    {
      "index": 690,
      "start_time": 2101630.0,
      "end_time": 2103680.0,
      "text": "Let me go ahead and create a new file over here."
    },
    {
      "index": 691,
      "start_time": 2103680.0,
      "end_time": 2106054.0,
      "text": "We&#39;ll call this logical.py."
    },
    {
      "index": 692,
      "start_time": 2106050.0,
      "end_time": 2108716.0,
      "text": "And I&#39;m going to go ahead as before and import the CS50 library."
    },
    {
      "index": 693,
      "start_time": 2108720.0,
      "end_time": 2112490.0,
      "text": "But again, you could just use Python&#39;s built-in input function to do this."
    },
    {
      "index": 694,
      "start_time": 2112490.0,
      "end_time": 2116990.0,
      "text": "But at least this way, I&#39;m guaranteed to get exactly the data type I want."
    },
    {
      "index": 695,
      "start_time": 2116990.0,
      "end_time": 2118469.0,
      "text": "CS50.getchar."
    },
    {
      "index": 696,
      "start_time": 2118470.0,
      "end_time": 2120636.0,
      "text": "And then over here, I&#39;m going to now say conditions."
    },
    {
      "index": 697,
      "start_time": 2120640.0,
      "end_time": 2123285.0,
      "text": "So remember some of the syntax from before."
    },
    {
      "index": 698,
      "start_time": 2123280.0,
      "end_time": 2126700.0,
      "text": "You might be inclined to start saying, if open paren."
    },
    {
      "index": 699,
      "start_time": 2126700.0,
      "end_time": 2127870.0,
      "text": "But we don&#39;t need that here."
    },
    {
      "index": 700,
      "start_time": 2127870.0,
      "end_time": 2136520.0,
      "text": "We can instead just say if c equals equals yes, or c equals equals y,"
    },
    {
      "index": 701,
      "start_time": 2136520.0,
      "end_time": 2139980.0,
      "text": "then go ahead and print yes."
    },
    {
      "index": 702,
      "start_time": 2139980.0,
      "end_time": 2142300.0,
      "text": "Now, this just seems ridiculous."
    },
    {
      "index": 703,
      "start_time": 2142300.0,
      "end_time": 2145750.0,
      "text": "All these weeks later, finally, you can truly just say what you mean?"
    },
    {
      "index": 704,
      "start_time": 2145750.0,
      "end_time": 2149230.0,
      "text": "And indeed, in Python, there&#39;s not going to be the same double vertical bar"
    },
    {
      "index": 705,
      "start_time": 2149230.0,
      "end_time": 2153570.0,
      "text": "or double ampersand that we&#39;ve used now for some time to express or or and."
    },
    {
      "index": 706,
      "start_time": 2153570.0,
      "end_time": 2157520.0,
      "text": "Rather, we can really type this a bit more like an English sentence."
    },
    {
      "index": 707,
      "start_time": 2157520.0,
      "end_time": 2160680.0,
      "text": "It&#39;s still somewhat cryptic, to be sure, but at least there&#39;s less clutter."
    },
    {
      "index": 708,
      "start_time": 2160680.0,
      "end_time": 2162830.0,
      "text": "There&#39;s no required parentheses anymore."
    },
    {
      "index": 709,
      "start_time": 2162830.0,
      "end_time": 2164420.0,
      "text": "We don&#39;t need the curly braces even."
    },
    {
      "index": 710,
      "start_time": 2164420.0,
      "end_time": 2166460.0,
      "text": "We don&#39;t need vertical bars or ampersands."
    },
    {
      "index": 711,
      "start_time": 2166460.0,
      "end_time": 2171080.0,
      "text": "We can just use the word with which we&#39;re more familiar in the real world."
    },
    {
      "index": 712,
      "start_time": 2171080.0,
      "end_time": 2175670.0,
      "text": "But notice, too, I&#39;ve done something subtly different from C."
    },
    {
      "index": 713,
      "start_time": 2175670.0,
      "end_time": 2180560.0,
      "text": "In the C version, to compare this variable c against y"
    },
    {
      "index": 714,
      "start_time": 2180560.0,
      "end_time": 2185010.0,
      "text": "in capital letters or lowercase, I use single quotes."
    },
    {
      "index": 715,
      "start_time": 2185010.0,
      "end_time": 2187970.0,
      "text": "Why was that?"
    },
    {
      "index": 716,
      "start_time": 2187970.0,
      "end_time": 2190920.0,
      "text": "In C, you actually have a data type called char."
    },
    {
      "index": 717,
      "start_time": 2190920.0,
      "end_time": 2193800.0,
      "text": "And it&#39;s fundamentally distinct from a string."
    },
    {
      "index": 718,
      "start_time": 2193800.0,
      "end_time": 2198140.0,
      "text": "So if I&#39;m checking a char in C against some hard coded value,"
    },
    {
      "index": 719,
      "start_time": 2198140.0,
      "end_time": 2201340.0,
      "text": "I have to use single quotes to make clear that this is just a single Ascii"
    },
    {
      "index": 720,
      "start_time": 2201340.0,
      "end_time": 2203690.0,
      "text": "byte, capital Y or lowercase y."
    },
    {
      "index": 721,
      "start_time": 2203690.0,
      "end_time": 2206680.0,
      "text": "It&#39;s not capital Y /0."
    },
    {
      "index": 722,
      "start_time": 2206680.0,
      "end_time": 2208720.0,
      "text": "It&#39;s not lowercase y /0."
    },
    {
      "index": 723,
      "start_time": 2208720.0,
      "end_time": 2211710.0,
      "text": "It&#39;s just a single byte that I&#39;m trying to compare."
    },
    {
      "index": 724,
      "start_time": 2211710.0,
      "end_time": 2215650.0,
      "text": "But it turns out in Python, there really is no such thing as a single char."
    },
    {
      "index": 725,
      "start_time": 2215650.0,
      "end_time": 2221670.0,
      "text": "If you want a character like capital Y or lowercase y, that&#39;s fine."
    },
    {
      "index": 726,
      "start_time": 2221670.0,
      "end_time": 2224490.0,
      "text": "But you&#39;re going to get an entire string-- a string with just one"
    },
    {
      "index": 727,
      "start_time": 2224490.0,
      "end_time": 2227420.0,
      "text": "character in it plus whatever else is hidden inside"
    },
    {
      "index": 728,
      "start_time": 2227420.0,
      "end_time": 2229430.0,
      "text": "of a Python string object."
    },
    {
      "index": 729,
      "start_time": 2229430.0,
      "end_time": 2232430.0,
      "text": "But what that means for us is that we don&#39;t have to worry as much about,"
    },
    {
      "index": 730,
      "start_time": 2232430.0,
      "end_time": 2233060.0,
      "text": "is this a char?"
    },
    {
      "index": 731,
      "start_time": 2233060.0,
      "end_time": 2234030.0,
      "text": "Is this a string?"
    },
    {
      "index": 732,
      "start_time": 2234030.0,
      "end_time": 2236830.0,
      "text": "Just compare it in the more intuitive way."
    },
    {
      "index": 733,
      "start_time": 2236830.0,
      "end_time": 2239830.0,
      "text": "In fact, notice moreover what I am not using."
    },
    {
      "index": 734,
      "start_time": 2239830.0,
      "end_time": 2242370.0,
      "text": "In C, when we started to compare strings,"
    },
    {
      "index": 735,
      "start_time": 2242370.0,
      "end_time": 2245580.0,
      "text": "we used things like StrComp or string compare."
    },
    {
      "index": 736,
      "start_time": 2245580.0,
      "end_time": 2246240.0,
      "text": "No more."
    },
    {
      "index": 737,
      "start_time": 2246240.0,
      "end_time": 2248390.0,
      "text": "You want to test two strings for equality."
    },
    {
      "index": 738,
      "start_time": 2248390.0,
      "end_time": 2253910.0,
      "text": "Does c from the user actually equal y, capitalized or lowercase?"
    },
    {
      "index": 739,
      "start_time": 2253910.0,
      "end_time": 2255520.0,
      "text": "We can just double quote it like this."
    },
    {
      "index": 740,
      "start_time": 2255520.0,
      "end_time": 2259600.0,
      "text": "And in fact, it turns out that it doesn&#39;t matter in this context"
    },
    {
      "index": 741,
      "start_time": 2259600.0,
      "end_time": 2261620.0,
      "text": "whether I use double quotes or single quotes."
    },
    {
      "index": 742,
      "start_time": 2261620.0,
      "end_time": 2264740.0,
      "text": "Generally in Python, you can actually use either."
    },
    {
      "index": 743,
      "start_time": 2264740.0,
      "end_time": 2268170.0,
      "text": "I&#39;ll simply adopt the habit here, and throughout these examples,"
    },
    {
      "index": 744,
      "start_time": 2268170.0,
      "end_time": 2270290.0,
      "text": "of using double quotes, if only because they&#39;re"
    },
    {
      "index": 745,
      "start_time": 2270290.0,
      "end_time": 2274620.0,
      "text": "identical to what we&#39;ve done in CS50 for C. But realize that both of these"
    },
    {
      "index": 746,
      "start_time": 2274620.0,
      "end_time": 2275360.0,
      "text": "are correct."
    },
    {
      "index": 747,
      "start_time": 2275360.0,
      "end_time": 2280450.0,
      "text": "Stylistically, generally just be consistent with respect to yourself."
    },
    {
      "index": 748,
      "start_time": 2280450.0,
      "end_time": 2280950.0,
      "text": "All right."
    },
    {
      "index": 749,
      "start_time": 2280950.0,
      "end_time": 2284650.0,
      "text": "So let&#39;s do another example and start to build on the sophistication."
    },
    {
      "index": 750,
      "start_time": 2284650.0,
      "end_time": 2286330.0,
      "text": "Because this isn&#39;t all that impressive."
    },
    {
      "index": 751,
      "start_time": 2286330.0,
      "end_time": 2289100.0,
      "text": "And actually, this of course is not yet done."
    },
    {
      "index": 752,
      "start_time": 2289100.0,
      "end_time": 2295810.0,
      "text": "Else if c equals equals N or c equals equals lowercase n,"
    },
    {
      "index": 753,
      "start_time": 2295810.0,
      "end_time": 2297810.0,
      "text": "then I&#39;m going to go ahead and print out-- oops."
    },
    {
      "index": 754,
      "start_time": 2297810.0,
      "end_time": 2301410.0,
      "text": "Not with printf but with no."
    },
    {
      "index": 755,
      "start_time": 2301410.0,
      "end_time": 2306232.0,
      "text": "Else, colon, I&#39;m going to print out error."
    },
    {
      "index": 756,
      "start_time": 2306230.0,
      "end_time": 2307688.0,
      "text": "Almost forgot to finish my thought."
    },
    {
      "index": 757,
      "start_time": 2307690.0,
      "end_time": 2308950.0,
      "text": "So that&#39;s why the program was so short."
    },
    {
      "index": 758,
      "start_time": 2308950.0,
      "end_time": 2312286.0,
      "text": "Now it&#39;s almost as long although, again, if you ignore the curly braces,"
    },
    {
      "index": 759,
      "start_time": 2312290.0,
      "end_time": 2313664.0,
      "text": "it&#39;s pretty much the same length."
    },
    {
      "index": 760,
      "start_time": 2313660.0,
      "end_time": 2316110.0,
      "text": "Just a little syntactically simpler."
    },
    {
      "index": 761,
      "start_time": 2316110.0,
      "end_time": 2316610.0,
      "text": "All right."
    },
    {
      "index": 762,
      "start_time": 2316610.0,
      "end_time": 2318410.0,
      "text": "So let&#39;s build up something a little more"
    },
    {
      "index": 763,
      "start_time": 2318410.0,
      "end_time": 2321300.0,
      "text": "interesting in the interest of design."
    },
    {
      "index": 764,
      "start_time": 2321300.0,
      "end_time": 2325650.0,
      "text": "So some weeks ago, we introduced this example in C, the purpose of which,"
    },
    {
      "index": 765,
      "start_time": 2325650.0,
      "end_time": 2328709.0,
      "text": "in positive.c, was to implement a program that doesn&#39;t just"
    },
    {
      "index": 766,
      "start_time": 2328710.0,
      "end_time": 2329751.0,
      "text": "get an int from the user."
    },
    {
      "index": 767,
      "start_time": 2329750.0,
      "end_time": 2331330.0,
      "text": "It gets a positive integer."
    },
    {
      "index": 768,
      "start_time": 2331330.0,
      "end_time": 2333730.0,
      "text": "And this was a useful opportunity way back"
    },
    {
      "index": 769,
      "start_time": 2333730.0,
      "end_time": 2336860.0,
      "text": "when to implement a custom function of our own,"
    },
    {
      "index": 770,
      "start_time": 2336860.0,
      "end_time": 2338950.0,
      "text": "a feature that we had in Scratch."
    },
    {
      "index": 771,
      "start_time": 2338950.0,
      "end_time": 2341350.0,
      "text": "But it also was a nice way of abstracting away"
    },
    {
      "index": 772,
      "start_time": 2341350.0,
      "end_time": 2343770.0,
      "text": "what it means to be get positive int, because we"
    },
    {
      "index": 773,
      "start_time": 2343770.0,
      "end_time": 2347840.0,
      "text": "could use get int underneath the hood, but not necessarily care about it"
    },
    {
      "index": 774,
      "start_time": 2347840.0,
      "end_time": 2348800.0,
      "text": "thereafter."
    },
    {
      "index": 775,
      "start_time": 2348800.0,
      "end_time": 2350520.0,
      "text": "So in C, recall a few details."
    },
    {
      "index": 776,
      "start_time": 2350520.0,
      "end_time": 2353020.0,
      "text": "We needed, one, not only our header files up top."
    },
    {
      "index": 777,
      "start_time": 2353020.0,
      "end_time": 2355226.0,
      "text": "But we also need this forward declaration."
    },
    {
      "index": 778,
      "start_time": 2355230.0,
      "end_time": 2357104.0,
      "text": "We need this prototype at the top of the file"
    },
    {
      "index": 779,
      "start_time": 2357100.0,
      "end_time": 2359850.0,
      "text": "because C is going to read things top to bottom, left to right."
    },
    {
      "index": 780,
      "start_time": 2359850.0,
      "end_time": 2363600.0,
      "text": "So we&#39;d better tell Clang or whatever compiler we&#39;re using about the function"
    },
    {
      "index": 781,
      "start_time": 2363600.0,
      "end_time": 2366240.0,
      "text": "before we use it in the code itself."
    },
    {
      "index": 782,
      "start_time": 2366240.0,
      "end_time": 2369170.0,
      "text": "I now have an int i getting a positive int."
    },
    {
      "index": 783,
      "start_time": 2369170.0,
      "end_time": 2371100.0,
      "text": "And then I just go ahead and print this out."
    },
    {
      "index": 784,
      "start_time": 2371100.0,
      "end_time": 2373560.0,
      "text": "So the real magic seems to be below the break"
    },
    {
      "index": 785,
      "start_time": 2373560.0,
      "end_time": 2376800.0,
      "text": "here whereby we implemented get positive int."
    },
    {
      "index": 786,
      "start_time": 2376800.0,
      "end_time": 2379880.0,
      "text": "And to do this in C, notice a few features."
    },
    {
      "index": 787,
      "start_time": 2379880.0,
      "end_time": 2384750.0,
      "text": "One, we declared it as a function, get positive int, that takes no arguments"
    },
    {
      "index": 788,
      "start_time": 2384750.0,
      "end_time": 2386600.0,
      "text": "and returns an integer."
    },
    {
      "index": 789,
      "start_time": 2386600.0,
      "end_time": 2390270.0,
      "text": "Inside of that, we declared a variable n outside the scope of the"
    },
    {
      "index": 790,
      "start_time": 2390270.0,
      "end_time": 2394770.0,
      "text": "do while loop because we want n to exist both here and here,"
    },
    {
      "index": 791,
      "start_time": 2394770.0,
      "end_time": 2397420.0,
      "text": "as well as when we actually finally return it."
    },
    {
      "index": 792,
      "start_time": 2397420.0,
      "end_time": 2399420.0,
      "text": "And then in this do while loop, we just kept"
    },
    {
      "index": 793,
      "start_time": 2399420.0,
      "end_time": 2403080.0,
      "text": "pestering the user so long as he or she gave us a value that&#39;s less than one,"
    },
    {
      "index": 794,
      "start_time": 2403080.0,
      "end_time": 2405000.0,
      "text": "so non-positive."
    },
    {
      "index": 795,
      "start_time": 2405000.0,
      "end_time": 2407090.0,
      "text": "And then we returned it and printed it."
    },
    {
      "index": 796,
      "start_time": 2407090.0,
      "end_time": 2410030.0,
      "text": "Let&#39;s try to now port this to Python."
    },
    {
      "index": 797,
      "start_time": 2410030.0,
      "end_time": 2413710.0,
      "text": "In Python, let me go ahead now and do the following."
    },
    {
      "index": 798,
      "start_time": 2413710.0,
      "end_time": 2418330.0,
      "text": "I&#39;m going to create a new file called positive.py."
    },
    {
      "index": 799,
      "start_time": 2418330.0,
      "end_time": 2421770.0,
      "text": "I&#39;m going to go ahead and import the CS50 library as before."
    },
    {
      "index": 800,
      "start_time": 2421770.0,
      "end_time": 2425570.0,
      "text": "And I&#39;m going to go ahead and define a main function that takes no arguments."
    },
    {
      "index": 801,
      "start_time": 2425570.0,
      "end_time": 2427120.0,
      "text": "We&#39;re not going to worry about command line arguments."
    },
    {
      "index": 802,
      "start_time": 2427120.0,
      "end_time": 2429411.0,
      "text": "And indeed, even when we are going to worry about them,"
    },
    {
      "index": 803,
      "start_time": 2429410.0,
      "end_time": 2432139.0,
      "text": "we&#39;re not going to declare them inside those parentheses anymore."
    },
    {
      "index": 804,
      "start_time": 2432140.0,
      "end_time": 2437390.0,
      "text": "Now I&#39;m going to go ahead and do i get get positive int."
    },
    {
      "index": 805,
      "start_time": 2437390.0,
      "end_time": 2441410.0,
      "text": "And now I&#39;m going to go ahead and print out, with print,"
    },
    {
      "index": 806,
      "start_time": 2441410.0,
      "end_time": 2446940.0,
      "text": "the placeholder is a positive integer, closed quotes."
    },
    {
      "index": 807,
      "start_time": 2446940.0,
      "end_time": 2451930.0,
      "text": "And then I&#39;m going to do format i, plugging in that value."
    },
    {
      "index": 808,
      "start_time": 2451930.0,
      "end_time": 2454830.0,
      "text": "So let me shrink the screen here a little bit so that things"
    },
    {
      "index": 809,
      "start_time": 2454830.0,
      "end_time": 2457300.0,
      "text": "fit a little better on the Python side."
    },
    {
      "index": 810,
      "start_time": 2457300.0,
      "end_time": 2458880.0,
      "text": "And now that&#39;s it for main."
    },
    {
      "index": 811,
      "start_time": 2458880.0,
      "end_time": 2459680.0,
      "text": "No curly braces."
    },
    {
      "index": 812,
      "start_time": 2459680.0,
      "end_time": 2463290.0,
      "text": "I just unindent in order to now start my next thought, which"
    },
    {
      "index": 813,
      "start_time": 2463290.0,
      "end_time": 2464450.0,
      "text": "is going to be this."
    },
    {
      "index": 814,
      "start_time": 2464450.0,
      "end_time": 2469160.0,
      "text": "I&#39;m going to go ahead and define another function called get positive int."
    },
    {
      "index": 815,
      "start_time": 2469160.0,
      "end_time": 2470670.0,
      "text": "I don&#39;t use void in Python."
    },
    {
      "index": 816,
      "start_time": 2470670.0,
      "end_time": 2474570.0,
      "text": "I simply leave the parentheses empty and add a colon at the end to say,"
    },
    {
      "index": 817,
      "start_time": 2474570.0,
      "end_time": 2476660.0,
      "text": "here comes the function&#39;s implementation."
    },
    {
      "index": 818,
      "start_time": 2476660.0,
      "end_time": 2480500.0,
      "text": "And it turns out in Python, there isn&#39;t this do while construct."
    },
    {
      "index": 819,
      "start_time": 2480500.0,
      "end_time": 2485650.0,
      "text": "So the closest match to do while we did see earlier is just while."
    },
    {
      "index": 820,
      "start_time": 2485650.0,
      "end_time": 2488890.0,
      "text": "And a very common paradigm in Python is to deliberately induce,"
    },
    {
      "index": 821,
      "start_time": 2488890.0,
      "end_time": 2492150.0,
      "text": "as you might have in C, an infinite loop capitalizing True"
    },
    {
      "index": 822,
      "start_time": 2492150.0,
      "end_time": 2496810.0,
      "text": "because in Python, a bool that&#39;s true or false is going to be capitalized."
    },
    {
      "index": 823,
      "start_time": 2496810.0,
      "end_time": 2500280.0,
      "text": "And then inside of this loop, let&#39;s go ahead and do the following."
    },
    {
      "index": 824,
      "start_time": 2500280.0,
      "end_time": 2506620.0,
      "text": "Let&#39;s go ahead and say, print n is."
    },
    {
      "index": 825,
      "start_time": 2506620.0,
      "end_time": 2510680.0,
      "text": "And now below this, I&#39;m to say n gets get int."
    },
    {
      "index": 826,
      "start_time": 2510680.0,
      "end_time": 2512870.0,
      "text": "But this is inside the CS50 module."
    },
    {
      "index": 827,
      "start_time": 2512870.0,
      "end_time": 2514570.0,
      "text": "So I need to do that there."
    },
    {
      "index": 828,
      "start_time": 2514570.0,
      "end_time": 2517920.0,
      "text": "And then I&#39;m already in an infinite loop."
    },
    {
      "index": 829,
      "start_time": 2517920.0,
      "end_time": 2518790.0,
      "text": "So you know what?"
    },
    {
      "index": 830,
      "start_time": 2518790.0,
      "end_time": 2525460.0,
      "text": "If n is greater than or equal to 1, I&#39;m going to go ahead and break."
    },
    {
      "index": 831,
      "start_time": 2525460.0,
      "end_time": 2528910.0,
      "text": "So the logic is a little bit different this time."
    },
    {
      "index": 832,
      "start_time": 2528910.0,
      "end_time": 2533910.0,
      "text": "But I&#39;m breaking out of the loop once I have what I intend."
    },
    {
      "index": 833,
      "start_time": 2533910.0,
      "end_time": 2536200.0,
      "text": "So I need to do one last thing."
    },
    {
      "index": 834,
      "start_time": 2536200.0,
      "end_time": 2538610.0,
      "text": "Once I&#39;ve broken out of this loop, what do I"
    },
    {
      "index": 835,
      "start_time": 2538610.0,
      "end_time": 2542870.0,
      "text": "need to do to complete the implementation of get positive int?"
    },
    {
      "index": 836,
      "start_time": 2542870.0,
      "end_time": 2543710.0,
      "text": "I&#39;ve gotten it."
    },
    {
      "index": 837,
      "start_time": 2543710.0,
      "end_time": 2545580.0,
      "text": "But I need to hand it back to the user."
    },
    {
      "index": 838,
      "start_time": 2545580.0,
      "end_time": 2551650.0,
      "text": "So let me go ahead on this last line and return that value as n."
    },
    {
      "index": 839,
      "start_time": 2551650.0,
      "end_time": 2556370.0,
      "text": "So notice a few distinctions here versus C. Whereas in C a few weeks ago,"
    },
    {
      "index": 840,
      "start_time": 2556370.0,
      "end_time": 2559144.0,
      "text": "we had to give some hard thought to the issue of scope."
    },
    {
      "index": 841,
      "start_time": 2559140.0,
      "end_time": 2561306.0,
      "text": "Turns out we don&#39;t have to worry about that as much."
    },
    {
      "index": 842,
      "start_time": 2561310.0,
      "end_time": 2565400.0,
      "text": "As soon as I declare n here, it&#39;s going to be within scope within this function"
    },
    {
      "index": 843,
      "start_time": 2565400.0,
      "end_time": 2568670.0,
      "text": "such that I can return it down here, even though that return statement"
    },
    {
      "index": 844,
      "start_time": 2568670.0,
      "end_time": 2573500.0,
      "text": "is not indented and not inside, so to speak, that actual looping construct."
    },
    {
      "index": 845,
      "start_time": 2573500.0,
      "end_time": 2576700.0,
      "text": "Notice too, because we don&#39;t have a do while construct,"
    },
    {
      "index": 846,
      "start_time": 2576700.0,
      "end_time": 2580610.0,
      "text": "I had to re-implement it using while alone."
    },
    {
      "index": 847,
      "start_time": 2580610.0,
      "end_time": 2582590.0,
      "text": "And I actually could have done that in C."
    },
    {
      "index": 848,
      "start_time": 2582590.0,
      "end_time": 2585410.0,
      "text": "Do while does not give us any fundamental capabilities that we"
    },
    {
      "index": 849,
      "start_time": 2585410.0,
      "end_time": 2588450.0,
      "text": "couldn&#39;t implement for ourselves if we just implemented it"
    },
    {
      "index": 850,
      "start_time": 2588450.0,
      "end_time": 2591010.0,
      "text": "logically a little more like this."
    },
    {
      "index": 851,
      "start_time": 2591010.0,
      "end_time": 2593070.0,
      "text": "We&#39;re still printing out n is first."
    },
    {
      "index": 852,
      "start_time": 2593070.0,
      "end_time": 2594240.0,
      "text": "We&#39;re then getting an int."
    },
    {
      "index": 853,
      "start_time": 2594240.0,
      "end_time": 2595781.0,
      "text": "We&#39;re then checking if it&#39;s positive."
    },
    {
      "index": 854,
      "start_time": 2595780.0,
      "end_time": 2598369.0,
      "text": "And if so, we&#39;re breaking out and returning."
    },
    {
      "index": 855,
      "start_time": 2598370.0,
      "end_time": 2600680.0,
      "text": "There is one or two bugs in here."
    },
    {
      "index": 856,
      "start_time": 2600680.0,
      "end_time": 2602920.0,
      "text": "And we&#39;ll trip over these in just a moment."
    },
    {
      "index": 857,
      "start_time": 2602920.0,
      "end_time": 2612080.0,
      "text": "Let me go ahead now and save this file and then run Python positive.py, Enter."
    },
    {
      "index": 858,
      "start_time": 2612080.0,
      "end_time": 2615240.0,
      "text": "Nothing seemed to happen."
    },
    {
      "index": 859,
      "start_time": 2615240.0,
      "end_time": 2616020.0,
      "text": "Hm."
    },
    {
      "index": 860,
      "start_time": 2616020.0,
      "end_time": 2617120.0,
      "text": "It&#39;s not running anymore."
    },
    {
      "index": 861,
      "start_time": 2617120.0,
      "end_time": 2618850.0,
      "text": "I&#39;m back at my $prompt."
    },
    {
      "index": 862,
      "start_time": 2618850.0,
      "end_time": 2620094.0,
      "text": "Let me try running it again."
    },
    {
      "index": 863,
      "start_time": 2620090.0,
      "end_time": 2620881.0,
      "text": "Python positive.py."
    },
    {
      "index": 864,
      "start_time": 2623780.0,
      "end_time": 2625155.0,
      "text": "I mean, there&#39;s no error message."
    },
    {
      "index": 865,
      "start_time": 2625160.0,
      "end_time": 2629060.0,
      "text": "And in the world of C, no error message usually meant something&#39;s right."
    },
    {
      "index": 866,
      "start_time": 2629060.0,
      "end_time": 2630120.0,
      "text": "And it&#39;s right."
    },
    {
      "index": 867,
      "start_time": 2630120.0,
      "end_time": 2633760.0,
      "text": "I&#39;ve just kind of forgotten a key detail."
    },
    {
      "index": 868,
      "start_time": 2633760.0,
      "end_time": 2635260.0,
      "text": "I&#39;ve imported CS50 library."
    },
    {
      "index": 869,
      "start_time": 2635260.0,
      "end_time": 2636800.0,
      "text": "I&#39;ve defined main."
    },
    {
      "index": 870,
      "start_time": 2636800.0,
      "end_time": 2638290.0,
      "text": "I&#39;ve defined get positive int."
    },
    {
      "index": 871,
      "start_time": 2638290.0,
      "end_time": 2641090.0,
      "text": "But what is different in this world now with Python?"
    },
    {
      "index": 872,
      "start_time": 2641090.0,
      "end_time": 2646180.0,
      "text": "Main is not called by default. So if I want to actually call main,"
    },
    {
      "index": 873,
      "start_time": 2646180.0,
      "end_time": 2649450.0,
      "text": "I&#39;d better adopt a convention of, for instance, this paradigm."
    },
    {
      "index": 874,
      "start_time": 2649450.0,
      "end_time": 2655620.0,
      "text": "So if name equals equals main, then, with a colon,"
    },
    {
      "index": 875,
      "start_time": 2655620.0,
      "end_time": 2657870.0,
      "text": "actually call the main function."
    },
    {
      "index": 876,
      "start_time": 2657870.0,
      "end_time": 2661990.0,
      "text": "And technically, as an aside, this would still work even without this."
    },
    {
      "index": 877,
      "start_time": 2661990.0,
      "end_time": 2663690.0,
      "text": "We could simply put main down here."
    },
    {
      "index": 878,
      "start_time": 2663690.0,
      "end_time": 2665620.0,
      "text": "But let me wave my hand at that detail for now"
    },
    {
      "index": 879,
      "start_time": 2665620.0,
      "end_time": 2668280.0,
      "text": "and just emphasize that anytime you want to proactively call"
    },
    {
      "index": 880,
      "start_time": 2668280.0,
      "end_time": 2673230.0,
      "text": "main, if you&#39;ve set up your code in this way, we should indeed do it like this."
    },
    {
      "index": 881,
      "start_time": 2673230.0,
      "end_time": 2676340.0,
      "text": "Let me go ahead now and rerun Python positive.py."
    },
    {
      "index": 882,
      "start_time": 2676340.0,
      "end_time": 2678885.0,
      "text": "n is 42."
    },
    {
      "index": 883,
      "start_time": 2678890.0,
      "end_time": 2680425.0,
      "text": "n is a positive integer."
    },
    {
      "index": 884,
      "start_time": 2680420.0,
      "end_time": 2683250.0,
      "text": "Let me go ahead and run n is, and then 0."
    },
    {
      "index": 885,
      "start_time": 2683250.0,
      "end_time": 2683760.0,
      "text": "Nope."
    },
    {
      "index": 886,
      "start_time": 2683760.0,
      "end_time": 2684476.0,
      "text": "Negative 1."
    },
    {
      "index": 887,
      "start_time": 2684480.0,
      "end_time": 2685274.0,
      "text": "Nope."
    },
    {
      "index": 888,
      "start_time": 2685270.0,
      "end_time": 2686000.0,
      "text": "Foo."
    },
    {
      "index": 889,
      "start_time": 2686000.0,
      "end_time": 2686570.0,
      "text": "Retry."
    },
    {
      "index": 890,
      "start_time": 2686570.0,
      "end_time": 2689700.0,
      "text": "That&#39;s the CS50 library kicking in noticing that&#39;s a string."
    },
    {
      "index": 891,
      "start_time": 2689700.0,
      "end_time": 2691240.0,
      "text": "Let&#39;s try 50."
    },
    {
      "index": 892,
      "start_time": 2691240.0,
      "end_time": 2691820.0,
      "text": "And OK."
    },
    {
      "index": 893,
      "start_time": 2691820.0,
      "end_time": 2692332.0,
      "text": "That worked."
    },
    {
      "index": 894,
      "start_time": 2692330.0,
      "end_time": 2695038.0,
      "text": "Now, the bug I alluded to earlier is just that this looks stupid,"
    },
    {
      "index": 895,
      "start_time": 2695040.0,
      "end_time": 2697520.0,
      "text": "having the cursor now on the next line."
    },
    {
      "index": 896,
      "start_time": 2697520.0,
      "end_time": 2701260.0,
      "text": "I can fix this, recall, by adding the second argument whereby the line ending"
    },
    {
      "index": 897,
      "start_time": 2701260.0,
      "end_time": 2703540.0,
      "text": "for print is just quote unquote."
    },
    {
      "index": 898,
      "start_time": 2703540.0,
      "end_time": 2706650.0,
      "text": "Let me go ahead and rerun it. n is 42."
    },
    {
      "index": 899,
      "start_time": 2706650.0,
      "end_time": 2709460.0,
      "text": "And now things look a little bit cleaner."
    },
    {
      "index": 900,
      "start_time": 2709460.0,
      "end_time": 2713650.0,
      "text": "Now, at the risk of complicating, let me just point out one other detail."
    },
    {
      "index": 901,
      "start_time": 2713650.0,
      "end_time": 2716320.0,
      "text": "Technically, I could also do this."
    },
    {
      "index": 902,
      "start_time": 2716320.0,
      "end_time": 2721550.0,
      "text": "If you don&#39;t need a main function, then why do I have it at all?"
    },
    {
      "index": 903,
      "start_time": 2721550.0,
      "end_time": 2725610.0,
      "text": "It stands to reason that I could just write my program like this."
    },
    {
      "index": 904,
      "start_time": 2725610.0,
      "end_time": 2729490.0,
      "text": "Yes, I&#39;m defining an additional function, get positive int."
    },
    {
      "index": 905,
      "start_time": 2729490.0,
      "end_time": 2731290.0,
      "text": "And that&#39;s going to work as expected."
    },
    {
      "index": 906,
      "start_time": 2731290.0,
      "end_time": 2733291.0,
      "text": "But technically, if I don&#39;t need a main method--"
    },
    {
      "index": 907,
      "start_time": 2733290.0,
      "end_time": 2735372.0,
      "text": "and all of the simple examples we&#39;ve done thus far"
    },
    {
      "index": 908,
      "start_time": 2735370.0,
      "end_time": 2737467.0,
      "text": "just have me writing code right in the file itself"
    },
    {
      "index": 909,
      "start_time": 2737470.0,
      "end_time": 2742060.0,
      "text": "and then interpreting it at the command line-- I should be able to do this,"
    },
    {
      "index": 910,
      "start_time": 2742060.0,
      "end_time": 2742690.0,
      "text": "I would think."
    },
    {
      "index": 911,
      "start_time": 2742690.0,
      "end_time": 2744220.0,
      "text": "So let me try this."
    },
    {
      "index": 912,
      "start_time": 2744220.0,
      "end_time": 2749280.0,
      "text": "Let me go ahead and run again Python positive.py but on this new version."
    },
    {
      "index": 913,
      "start_time": 2749280.0,
      "end_time": 2750520.0,
      "text": "Enter."
    },
    {
      "index": 914,
      "start_time": 2750520.0,
      "end_time": 2753650.0,
      "text": "And now we get the first scary looking error message."
    },
    {
      "index": 915,
      "start_time": 2753650.0,
      "end_time": 2756600.0,
      "text": "So trace back most recent call last."
    },
    {
      "index": 916,
      "start_time": 2756600.0,
      "end_time": 2761400.0,
      "text": "File positive.py line 3, and module i get positive int."
    },
    {
      "index": 917,
      "start_time": 2761400.0,
      "end_time": 2764670.0,
      "text": "Name error name get positive int is not defined."
    },
    {
      "index": 918,
      "start_time": 2764670.0,
      "end_time": 2767240.0,
      "text": "So the first of our Clang-like error messages--"
    },
    {
      "index": 919,
      "start_time": 2767240.0,
      "end_time": 2771870.0,
      "text": "this one coming, of course, not from Clang, but from the Python interpreter."
    },
    {
      "index": 920,
      "start_time": 2771870.0,
      "end_time": 2775170.0,
      "text": "And even if the first few lines are indeed pretty cryptic--"
    },
    {
      "index": 921,
      "start_time": 2775170.0,
      "end_time": 2780320.0,
      "text": "name error name get positive int is not defined."
    },
    {
      "index": 922,
      "start_time": 2780320.0,
      "end_time": 2781100.0,
      "text": "But yes it is."
    },
    {
      "index": 923,
      "start_time": 2781100.0,
      "end_time": 2783900.0,
      "text": "It&#39;s right there at the moment on line 6."
    },
    {
      "index": 924,
      "start_time": 2783900.0,
      "end_time": 2787672.0,
      "text": "So it turns out Python is not all that much smarter than Clang"
    },
    {
      "index": 925,
      "start_time": 2787670.0,
      "end_time": 2789128.0,
      "text": "when it comes to reading your code."
    },
    {
      "index": 926,
      "start_time": 2789130.0,
      "end_time": 2792030.0,
      "text": "It too is going to read it top to bottom, left to right."
    },
    {
      "index": 927,
      "start_time": 2792030.0,
      "end_time": 2795790.0,
      "text": "And insofar as I&#39;m trying to call get positive int on line 3,"
    },
    {
      "index": 928,
      "start_time": 2795790.0,
      "end_time": 2799950.0,
      "text": "but I&#39;m not defining it until line 6, unacceptable."
    },
    {
      "index": 929,
      "start_time": 2799950.0,
      "end_time": 2803300.0,
      "text": "Now, you might be inclined to fix this like we did in C, whereby"
    },
    {
      "index": 930,
      "start_time": 2803300.0,
      "end_time": 2808470.0,
      "text": "you say, all right, well, let me just do get positive int up here"
    },
    {
      "index": 931,
      "start_time": 2808470.0,
      "end_time": 2810230.0,
      "text": "maybe, and just put a prototype."
    },
    {
      "index": 932,
      "start_time": 2810230.0,
      "end_time": 2813100.0,
      "text": "But this now looks especially weird."
    },
    {
      "index": 933,
      "start_time": 2813100.0,
      "end_time": 2815570.0,
      "text": "This now looks like a function call, not a prototype,"
    },
    {
      "index": 934,
      "start_time": 2815570.0,
      "end_time": 2818940.0,
      "text": "because we&#39;re omitting now the return type because there is none."
    },
    {
      "index": 935,
      "start_time": 2818940.0,
      "end_time": 2821060.0,
      "text": "And there&#39;s no semicolon here by convention."
    },
    {
      "index": 936,
      "start_time": 2821060.0,
      "end_time": 2824240.0,
      "text": "And indeed, if I do this again, it&#39;s the same error."
    },
    {
      "index": 937,
      "start_time": 2824240.0,
      "end_time": 2827020.0,
      "text": "Now the problem is I&#39;m calling it in the wrong place"
    },
    {
      "index": 938,
      "start_time": 2827020.0,
      "end_time": 2830450.0,
      "text": "even earlier-- on this line, still line 3, in addition"
    },
    {
      "index": 939,
      "start_time": 2830450.0,
      "end_time": 2833050.0,
      "text": "to line 5, which is now there."
    },
    {
      "index": 940,
      "start_time": 2833050.0,
      "end_time": 2834270.0,
      "text": "So how do we fix this?"
    },
    {
      "index": 941,
      "start_time": 2834270.0,
      "end_time": 2838160.0,
      "text": "Well, back in C, we didn&#39;t technically need prototypes in most cases."
    },
    {
      "index": 942,
      "start_time": 2838160.0,
      "end_time": 2841450.0,
      "text": "We could instead just kind of work around it"
    },
    {
      "index": 943,
      "start_time": 2841450.0,
      "end_time": 2845260.0,
      "text": "by moving the code to, say, the top of the file"
    },
    {
      "index": 944,
      "start_time": 2845260.0,
      "end_time": 2846860.0,
      "text": "and ignore the problem, really."
    },
    {
      "index": 945,
      "start_time": 2846860.0,
      "end_time": 2848060.0,
      "text": "And now run the program."
    },
    {
      "index": 946,
      "start_time": 2848060.0,
      "end_time": 2849740.0,
      "text": "And now it&#39;s back to working."
    },
    {
      "index": 947,
      "start_time": 2849740.0,
      "end_time": 2850549.0,
      "text": "Why is that?"
    },
    {
      "index": 948,
      "start_time": 2850550.0,
      "end_time": 2853841.0,
      "text": "Well, the Python interpreter is reading this file top to bottom, left to right."
    },
    {
      "index": 949,
      "start_time": 2853840.0,
      "end_time": 2855540.0,
      "text": "It imports the CS50 library."
    },
    {
      "index": 950,
      "start_time": 2855540.0,
      "end_time": 2857690.0,
      "text": "It defines a new function called get positive int."
    },
    {
      "index": 951,
      "start_time": 2857690.0,
      "end_time": 2862210.0,
      "text": "And then, on lines 11 and 12 now, it uses that function"
    },
    {
      "index": 952,
      "start_time": 2862210.0,
      "end_time": 2865010.0,
      "text": "and actually then prints out the return value."
    },
    {
      "index": 953,
      "start_time": 2865010.0,
      "end_time": 2867620.0,
      "text": "But again, this very quickly gets a little messy."
    },
    {
      "index": 954,
      "start_time": 2867620.0,
      "end_time": 2869480.0,
      "text": "Now to find what this program does, I have"
    },
    {
      "index": 955,
      "start_time": 2869480.0,
      "end_time": 2872335.0,
      "text": "to look all the way at the bottom of the file just to see my code."
    },
    {
      "index": 956,
      "start_time": 2872330.0,
      "end_time": 2875765.0,
      "text": "It would be nice if the actual logic of the program"
    },
    {
      "index": 957,
      "start_time": 2875770.0,
      "end_time": 2879800.0,
      "text": "were at the top of the file, as has been our norm with C, putting main up top."
    },
    {
      "index": 958,
      "start_time": 2879800.0,
      "end_time": 2883140.0,
      "text": "So another good reason for having a main method"
    },
    {
      "index": 959,
      "start_time": 2883140.0,
      "end_time": 2885280.0,
      "text": "is just to avoid these kinds of issues."
    },
    {
      "index": 960,
      "start_time": 2885280.0,
      "end_time": 2887740.0,
      "text": "If I rewind all of these changes that we just"
    },
    {
      "index": 961,
      "start_time": 2887740.0,
      "end_time": 2896060.0,
      "text": "made and go back to this last version, this avoids all of these issues."
    },
    {
      "index": 962,
      "start_time": 2896060.0,
      "end_time": 2900936.0,
      "text": "Because if you&#39;re not calling main until literally the last line in your file,"
    },
    {
      "index": 963,
      "start_time": 2900940.0,
      "end_time": 2902564.0,
      "text": "it&#39;s going to be defined at that point."
    },
    {
      "index": 964,
      "start_time": 2902560.0,
      "end_time": 2904700.0,
      "text": "So is any functions that it defines."
    },
    {
      "index": 965,
      "start_time": 2904700.0,
      "end_time": 2906680.0,
      "text": "And all of that will be implemented for you."
    },
    {
      "index": 966,
      "start_time": 2906680.0,
      "end_time": 2908790.0,
      "text": "And so now we&#39;re good to go."
    },
    {
      "index": 967,
      "start_time": 2908790.0,
      "end_time": 2911060.0,
      "text": "So again, we&#39;re complicating the program deliberately,"
    },
    {
      "index": 968,
      "start_time": 2911060.0,
      "end_time": 2916150.0,
      "text": "but to proactively address those kinds of issues."
    },
    {
      "index": 969,
      "start_time": 2916150.0,
      "end_time": 2919030.0,
      "text": "Let&#39;s introduce one other topic now."
    },
    {
      "index": 970,
      "start_time": 2919030.0,
      "end_time": 2921700.0,
      "text": "Abstraction has been a theme, not only recently in the test,"
    },
    {
      "index": 971,
      "start_time": 2921700.0,
      "end_time": 2923670.0,
      "text": "but also in the earliest weeks of the course."
    },
    {
      "index": 972,
      "start_time": 2923670.0,
      "end_time": 2925910.0,
      "text": "Well, you might recall from those early weeks,"
    },
    {
      "index": 973,
      "start_time": 2925910.0,
      "end_time": 2929910.0,
      "text": "we had examples like this, where we had an example called cough0.c, whose"
    },
    {
      "index": 974,
      "start_time": 2929910.0,
      "end_time": 2932690.0,
      "text": "purpose in life was to do [COUGHING]."
    },
    {
      "index": 975,
      "start_time": 2932690.0,
      "end_time": 2934540.0,
      "text": "So three coughs in a row."
    },
    {
      "index": 976,
      "start_time": 2934540.0,
      "end_time": 2937680.0,
      "text": "Now, this was clearly copy paste because all three of these lines"
    },
    {
      "index": 977,
      "start_time": 2937680.0,
      "end_time": 2938500.0,
      "text": "are equivalent."
    },
    {
      "index": 978,
      "start_time": 2938500.0,
      "end_time": 2939500.0,
      "text": "But that&#39;s fine for now."
    },
    {
      "index": 979,
      "start_time": 2939500.0,
      "end_time": 2944780.0,
      "text": "Let me go ahead and verbatim convert this to Python as closely as I can."
    },
    {
      "index": 980,
      "start_time": 2944780.0,
      "end_time": 2948260.0,
      "text": "And cough0.py turns out it&#39;s pretty easy."
    },
    {
      "index": 981,
      "start_time": 2948260.0,
      "end_time": 2951170.0,
      "text": "Print quote unquote cough."
    },
    {
      "index": 982,
      "start_time": 2951170.0,
      "end_time": 2953840.0,
      "text": "And then I can really demonstrate how poorly"
    },
    {
      "index": 983,
      "start_time": 2953840.0,
      "end_time": 2956770.0,
      "text": "designed this is by literally copying and pasting those three lines."
    },
    {
      "index": 984,
      "start_time": 2956770.0,
      "end_time": 2958170.0,
      "text": "I don&#39;t need standard IO.h."
    },
    {
      "index": 985,
      "start_time": 2958170.0,
      "end_time": 2959420.0,
      "text": "I don&#39;t need the CS50 library."
    },
    {
      "index": 986,
      "start_time": 2959420.0,
      "end_time": 2960220.0,
      "text": "I don&#39;t need main."
    },
    {
      "index": 987,
      "start_time": 2960220.0,
      "end_time": 2965570.0,
      "text": "We know-- because now, if I just do Python cough0.py, Enter, cough, cough,"
    },
    {
      "index": 988,
      "start_time": 2965570.0,
      "end_time": 2966270.0,
      "text": "cough."
    },
    {
      "index": 989,
      "start_time": 2966270.0,
      "end_time": 2966770.0,
      "text": "All right."
    },
    {
      "index": 990,
      "start_time": 2966770.0,
      "end_time": 2970120.0,
      "text": "But we improved upon this example in C. Recall"
    },
    {
      "index": 991,
      "start_time": 2970120.0,
      "end_time": 2975630.0,
      "text": "that in C, we then looked at cough1, which at least used a loop."
    },
    {
      "index": 992,
      "start_time": 2975630.0,
      "end_time": 2978220.0,
      "text": "So how do I do this in Python?"
    },
    {
      "index": 993,
      "start_time": 2978220.0,
      "end_time": 2981420.0,
      "text": "Let me go ahead and save this now as cough1.py."
    },
    {
      "index": 994,
      "start_time": 2981420.0,
      "end_time": 2983720.0,
      "text": "And let me try to borrow some logic from earlier."
    },
    {
      "index": 995,
      "start_time": 2983720.0,
      "end_time": 2986810.0,
      "text": "Let me do for i in."
    },
    {
      "index": 996,
      "start_time": 2986810.0,
      "end_time": 2987560.0,
      "text": "And you know what?"
    },
    {
      "index": 997,
      "start_time": 2987560.0,
      "end_time": 2989020.0,
      "text": "I&#39;m going to do range 3."
    },
    {
      "index": 998,
      "start_time": 2989020.0,
      "end_time": 2990190.0,
      "text": "We had 50 before."
    },
    {
      "index": 999,
      "start_time": 2990190.0,
      "end_time": 2992560.0,
      "text": "But I don&#39;t need it to iterate that many times."
    },
    {
      "index": 1000,
      "start_time": 2992560.0,
      "end_time": 2996240.0,
      "text": "Now let me just go ahead and print cough three times."
    },
    {
      "index": 1001,
      "start_time": 2996240.0,
      "end_time": 2999590.0,
      "text": "And now run Python cough1.py, Enter."
    },
    {
      "index": 1002,
      "start_time": 2999590.0,
      "end_time": 3001021.0,
      "text": "Cough, cough, cough."
    },
    {
      "index": 1003,
      "start_time": 3001020.0,
      "end_time": 3001519.0,
      "text": "All right."
    },
    {
      "index": 1004,
      "start_time": 3001520.0,
      "end_time": 3007000.0,
      "text": "But recall in the world of C, we improved further in cough2.c"
    },
    {
      "index": 1005,
      "start_time": 3007000.0,
      "end_time": 3007840.0,
      "text": "as follows."
    },
    {
      "index": 1006,
      "start_time": 3007840.0,
      "end_time": 3010410.0,
      "text": "We abstracted away, so to speak, what it means"
    },
    {
      "index": 1007,
      "start_time": 3010410.0,
      "end_time": 3015080.0,
      "text": "to be coughing by wrapping it in its own function called cough."
    },
    {
      "index": 1008,
      "start_time": 3015080.0,
      "end_time": 3018030.0,
      "text": "Because we don&#39;t really care that cough is implemented with printf."
    },
    {
      "index": 1009,
      "start_time": 3018030.0,
      "end_time": 3020740.0,
      "text": "We just like the idea, the semantics, if you will,"
    },
    {
      "index": 1010,
      "start_time": 3020740.0,
      "end_time": 3023052.0,
      "text": "of having a new custom function called cough."
    },
    {
      "index": 1011,
      "start_time": 3023050.0,
      "end_time": 3025008.0,
      "text": "So let&#39;s go ahead and try to do that in Python."
    },
    {
      "index": 1012,
      "start_time": 3025010.0,
      "end_time": 3029310.0,
      "text": "Let me go over here and create a new file called cough2.py."
    },
    {
      "index": 1013,
      "start_time": 3029310.0,
      "end_time": 3033980.0,
      "text": "And in here, let me go ahead and define main as before."
    },
    {
      "index": 1014,
      "start_time": 3033980.0,
      "end_time": 3037700.0,
      "text": "Inside of this, let me do for i in range 3."
    },
    {
      "index": 1015,
      "start_time": 3037700.0,
      "end_time": 3040590.0,
      "text": "And let me go ahead here and call proactively cough,"
    },
    {
      "index": 1016,
      "start_time": 3040590.0,
      "end_time": 3042780.0,
      "text": "even though it doesn&#39;t yet exist."
    },
    {
      "index": 1017,
      "start_time": 3042780.0,
      "end_time": 3046560.0,
      "text": "Let me go down here now and implement cough in such a way"
    },
    {
      "index": 1018,
      "start_time": 3046560.0,
      "end_time": 3049350.0,
      "text": "that it simply prints cough."
    },
    {
      "index": 1019,
      "start_time": 3049350.0,
      "end_time": 3052960.0,
      "text": "Let me go ahead now and do Python cough2.py."
    },
    {
      "index": 1020,
      "start_time": 3052960.0,
      "end_time": 3054110.0,
      "text": "Wait."
    },
    {
      "index": 1021,
      "start_time": 3054110.0,
      "end_time": 3055590.0,
      "text": "Something&#39;s wrong."
    },
    {
      "index": 1022,
      "start_time": 3055590.0,
      "end_time": 3058850.0,
      "text": "What&#39;s going to happen?"
    },
    {
      "index": 1023,
      "start_time": 3058850.0,
      "end_time": 3059474.0,
      "text": "Nothing."
    },
    {
      "index": 1024,
      "start_time": 3059470.0,
      "end_time": 3061011.0,
      "text": "I need to actually call the function."
    },
    {
      "index": 1025,
      "start_time": 3061010.0,
      "end_time": 3063855.0,
      "text": "And again, the paradigm that we&#39;ll adopt is this."
    },
    {
      "index": 1026,
      "start_time": 3063860.0,
      "end_time": 3070030.0,
      "text": "The name of the file is the default name of quote, unquote, __main__."
    },
    {
      "index": 1027,
      "start_time": 3070030.0,
      "end_time": 3072120.0,
      "text": "Then let me go ahead and call main."
    },
    {
      "index": 1028,
      "start_time": 3072120.0,
      "end_time": 3075180.0,
      "text": "So now if I run this again, voila."
    },
    {
      "index": 1029,
      "start_time": 3075180.0,
      "end_time": 3076510.0,
      "text": "Cough, cough, cough."
    },
    {
      "index": 1030,
      "start_time": 3076510.0,
      "end_time": 3078220.0,
      "text": "Notice again no prototype."
    },
    {
      "index": 1031,
      "start_time": 3078220.0,
      "end_time": 3080780.0,
      "text": "No imports from CS50 because we don&#39;t need it."
    },
    {
      "index": 1032,
      "start_time": 3080780.0,
      "end_time": 3082460.0,
      "text": "But let&#39;s improve upon this further."
    },
    {
      "index": 1033,
      "start_time": 3082460.0,
      "end_time": 3087680.0,
      "text": "In C, we took this one step further and then parameterized cough"
    },
    {
      "index": 1034,
      "start_time": 3087680.0,
      "end_time": 3091010.0,
      "text": "so that we could cough three times but not have to implement the loop"
    },
    {
      "index": 1035,
      "start_time": 3091010.0,
      "end_time": 3092180.0,
      "text": "ourselves in main."
    },
    {
      "index": 1036,
      "start_time": 3092180.0,
      "end_time": 3094480.0,
      "text": "We just want to punt, so to speak, or defer"
    },
    {
      "index": 1037,
      "start_time": 3094480.0,
      "end_time": 3098450.0,
      "text": "to the actual implementation of cough to cough as many times as we want."
    },
    {
      "index": 1038,
      "start_time": 3098450.0,
      "end_time": 3102970.0,
      "text": "So if I want to do that here, let me go ahead and save a file called cough3.py."
    },
    {
      "index": 1039,
      "start_time": 3102970.0,
      "end_time": 3108020.0,
      "text": "And let me go ahead and again define main to just do a cough, but this time"
    },
    {
      "index": 1040,
      "start_time": 3108020.0,
      "end_time": 3111370.0,
      "text": "three times, actually giving it an argument."
    },
    {
      "index": 1041,
      "start_time": 3111370.0,
      "end_time": 3114280.0,
      "text": "And then we go ahead and define cough again,"
    },
    {
      "index": 1042,
      "start_time": 3114280.0,
      "end_time": 3118980.0,
      "text": "but not with open paren, closeed paren, but with an actual variable called n."
    },
    {
      "index": 1043,
      "start_time": 3118980.0,
      "end_time": 3120710.0,
      "text": "Here too, I don&#39;t need its data type."
    },
    {
      "index": 1044,
      "start_time": 3120710.0,
      "end_time": 3122390.0,
      "text": "Python will figure that out for me."
    },
    {
      "index": 1045,
      "start_time": 3122390.0,
      "end_time": 3126760.0,
      "text": "And then here, I can do for i in range of not 3"
    },
    {
      "index": 1046,
      "start_time": 3126760.0,
      "end_time": 3131820.0,
      "text": "anymore, but n, because that&#39;s a local argument that&#39;s been passed in."
    },
    {
      "index": 1047,
      "start_time": 3131820.0,
      "end_time": 3135940.0,
      "text": "And now let me go ahead and print cough that many times."
    },
    {
      "index": 1048,
      "start_time": 3135940.0,
      "end_time": 3137970.0,
      "text": "Down here, let me go ahead and do my if."
    },
    {
      "index": 1049,
      "start_time": 3137970.0,
      "end_time": 3141900.0,
      "text": "The name of this file is the default name of __main."
    },
    {
      "index": 1050,
      "start_time": 3141900.0,
      "end_time": 3144650.0,
      "text": "Then go ahead and call main."
    },
    {
      "index": 1051,
      "start_time": 3144650.0,
      "end_time": 3148770.0,
      "text": "So now let me run this, cough3.py."
    },
    {
      "index": 1052,
      "start_time": 3148770.0,
      "end_time": 3151190.0,
      "text": "And I get cough, cough, cough."
    },
    {
      "index": 1053,
      "start_time": 3151190.0,
      "end_time": 3154219.0,
      "text": "And you recall we kind of took this to an extreme a few weeks ago."
    },
    {
      "index": 1054,
      "start_time": 3154220.0,
      "end_time": 3156511.0,
      "text": "Suppose I now want to implement the notion of sneezing."
    },
    {
      "index": 1055,
      "start_time": 3156510.0,
      "end_time": 3160150.0,
      "text": "Well, sneezing was deliberately introduced,"
    },
    {
      "index": 1056,
      "start_time": 3160150.0,
      "end_time": 3166730.0,
      "text": "not so much because it&#39;s all that useful, per se, as a function,"
    },
    {
      "index": 1057,
      "start_time": 3166730.0,
      "end_time": 3169970.0,
      "text": "but because it allowed me to factor out some common code."
    },
    {
      "index": 1058,
      "start_time": 3169970.0,
      "end_time": 3173570.0,
      "text": "It would be a little lazy of me if, to implement sneeze,"
    },
    {
      "index": 1059,
      "start_time": 3173570.0,
      "end_time": 3176530.0,
      "text": "I went ahead and did something like this, whereby I literally"
    },
    {
      "index": 1060,
      "start_time": 3176530.0,
      "end_time": 3178950.0,
      "text": "copy and paste the code, call this sneeze,"
    },
    {
      "index": 1061,
      "start_time": 3178950.0,
      "end_time": 3181340.0,
      "text": "and then say &quot;achoo&quot; here instead."
    },
    {
      "index": 1062,
      "start_time": 3181340.0,
      "end_time": 3184220.0,
      "text": "Because look how similar these two functions are."
    },
    {
      "index": 1063,
      "start_time": 3184220.0,
      "end_time": 3187070.0,
      "text": "I mean, they&#39;re literally identical except for the words"
    },
    {
      "index": 1064,
      "start_time": 3187070.0,
      "end_time": 3188430.0,
      "text": "being used therein."
    },
    {
      "index": 1065,
      "start_time": 3188430.0,
      "end_time": 3190420.0,
      "text": "The lines of code logically are the same."
    },
    {
      "index": 1066,
      "start_time": 3190420.0,
      "end_time": 3197250.0,
      "text": "So instead of that, let me go ahead and port this as I did in C as follows."
    },
    {
      "index": 1067,
      "start_time": 3197250.0,
      "end_time": 3203450.0,
      "text": "Let me go ahead and save this as cough4.py and in here go ahead"
    },
    {
      "index": 1068,
      "start_time": 3203450.0,
      "end_time": 3204830.0,
      "text": "and define main."
    },
    {
      "index": 1069,
      "start_time": 3204830.0,
      "end_time": 3207160.0,
      "text": "And main now is going to call cough three times."
    },
    {
      "index": 1070,
      "start_time": 3207160.0,
      "end_time": 3209320.0,
      "text": "And it&#39;s going to call sneeze three times, which"
    },
    {
      "index": 1071,
      "start_time": 3209320.0,
      "end_time": 3210920.0,
      "text": "just means I need to implement them."
    },
    {
      "index": 1072,
      "start_time": 3210920.0,
      "end_time": 3215596.0,
      "text": "So let me go ahead and define cough as before, taking in an integer n,"
    },
    {
      "index": 1073,
      "start_time": 3215600.0,
      "end_time": 3216224.0,
      "text": "we can call it."
    },
    {
      "index": 1074,
      "start_time": 3216220.0,
      "end_time": 3217930.0,
      "text": "But we could call it anything we want."
    },
    {
      "index": 1075,
      "start_time": 3217930.0,
      "end_time": 3219030.0,
      "text": "But now you know what?"
    },
    {
      "index": 1076,
      "start_time": 3219030.0,
      "end_time": 3223980.0,
      "text": "Let me generalize this and just have it call a say function"
    },
    {
      "index": 1077,
      "start_time": 3223980.0,
      "end_time": 3227200.0,
      "text": "with the word we want it to say, and how many times."
    },
    {
      "index": 1078,
      "start_time": 3227200.0,
      "end_time": 3229840.0,
      "text": "Meanwhile, let me go ahead and define sneeze"
    },
    {
      "index": 1079,
      "start_time": 3229840.0,
      "end_time": 3236770.0,
      "text": "as taking a similar int that simply says achoo, n that many times."
    },
    {
      "index": 1080,
      "start_time": 3236770.0,
      "end_time": 3239320.0,
      "text": "And now I just have to define say."
    },
    {
      "index": 1081,
      "start_time": 3239320.0,
      "end_time": 3242360.0,
      "text": "And before in C, on the left hand side here, took two arguments."
    },
    {
      "index": 1082,
      "start_time": 3242360.0,
      "end_time": 3244060.0,
      "text": "We can do that as well in Python."
    },
    {
      "index": 1083,
      "start_time": 3244060.0,
      "end_time": 3247870.0,
      "text": "We can simply say a word and n without worrying about their data type"
    },
    {
      "index": 1084,
      "start_time": 3247870.0,
      "end_time": 3249170.0,
      "text": "and declaring them."
    },
    {
      "index": 1085,
      "start_time": 3249170.0,
      "end_time": 3254680.0,
      "text": "And now in here, I need to do this for i in range of n."
    },
    {
      "index": 1086,
      "start_time": 3254680.0,
      "end_time": 3258350.0,
      "text": "Let me go ahead and print word."
    },
    {
      "index": 1087,
      "start_time": 3258350.0,
      "end_time": 3261430.0,
      "text": "Now technically, if I really wanted to be consistent,"
    },
    {
      "index": 1088,
      "start_time": 3261430.0,
      "end_time": 3266970.0,
      "text": "I could do print quote, unquote, curly braces, format word."
    },
    {
      "index": 1089,
      "start_time": 3266970.0,
      "end_time": 3269690.0,
      "text": "But I literally gain nothing in this case from doing that."
    },
    {
      "index": 1090,
      "start_time": 3269690.0,
      "end_time": 3272010.0,
      "text": "So it&#39;s a lot cleaner and a lot more readable"
    },
    {
      "index": 1091,
      "start_time": 3272010.0,
      "end_time": 3273770.0,
      "text": "just to literally print the word."
    },
    {
      "index": 1092,
      "start_time": 3273770.0,
      "end_time": 3275630.0,
      "text": "You don&#39;t strictly need that placeholder."
    },
    {
      "index": 1093,
      "start_time": 3275630.0,
      "end_time": 3280550.0,
      "text": "Then down here, let&#39;s do if the name of the file equals equals, main as before."
    },
    {
      "index": 1094,
      "start_time": 3280550.0,
      "end_time": 3281240.0,
      "text": "Call main."
    },
    {
      "index": 1095,
      "start_time": 3281240.0,
      "end_time": 3282570.0,
      "text": "Voila."
    },
    {
      "index": 1096,
      "start_time": 3282570.0,
      "end_time": 3286410.0,
      "text": "Let&#39;s go ahead now and do Python of cough4.py."
    },
    {
      "index": 1097,
      "start_time": 3286410.0,
      "end_time": 3287460.0,
      "text": "Enter."
    },
    {
      "index": 1098,
      "start_time": 3287460.0,
      "end_time": 3288620.0,
      "text": "Cough, cough, cough."
    },
    {
      "index": 1099,
      "start_time": 3288620.0,
      "end_time": 3290230.0,
      "text": "Achoo, achoo, achoo."
    },
    {
      "index": 1100,
      "start_time": 3290230.0,
      "end_time": 3292990.0,
      "text": "So it&#39;s kind of an exercise in futility in the end"
    },
    {
      "index": 1101,
      "start_time": 3292990.0,
      "end_time": 3295960.0,
      "text": "because the program still doesn&#39;t do anything that&#39;s"
    },
    {
      "index": 1102,
      "start_time": 3295960.0,
      "end_time": 3297580.0,
      "text": "all that fundamentally interesting."
    },
    {
      "index": 1103,
      "start_time": 3297580.0,
      "end_time": 3300370.0,
      "text": "But notice how quickly we&#39;ve moved from just printing"
    },
    {
      "index": 1104,
      "start_time": 3300370.0,
      "end_time": 3303280.0,
      "text": "something like hello world just a little bit ago to defining"
    },
    {
      "index": 1105,
      "start_time": 3303280.0,
      "end_time": 3306260.0,
      "text": "our own main function that calls two functions that are parameterized,"
    },
    {
      "index": 1106,
      "start_time": 3306260.0,
      "end_time": 3308426.0,
      "text": "each of which in turn calls some other function that"
    },
    {
      "index": 1107,
      "start_time": 3308430.0,
      "end_time": 3309554.0,
      "text": "takes multiple parameters."
    },
    {
      "index": 1108,
      "start_time": 3309550.0,
      "end_time": 3311360.0,
      "text": "So we&#39;re already very quickly building up"
    },
    {
      "index": 1109,
      "start_time": 3311360.0,
      "end_time": 3314250.0,
      "text": "these building blocks, even faster than we might have done"
    },
    {
      "index": 1110,
      "start_time": 3314250.0,
      "end_time": 3317200.0,
      "text": "in the earliest weeks of the class."
    },
    {
      "index": 1111,
      "start_time": 3317200.0,
      "end_time": 3317750.0,
      "text": "All right."
    },
    {
      "index": 1112,
      "start_time": 3317750.0,
      "end_time": 3321030.0,
      "text": "So that&#39;s essentially week one that we&#39;ve now converted to Python."
    },
    {
      "index": 1113,
      "start_time": 3321030.0,
      "end_time": 3324420.0,
      "text": "Recall now in week two of CS50, we started to look at strings."
    },
    {
      "index": 1114,
      "start_time": 3324420.0,
      "end_time": 3325950.0,
      "text": "We looked at command line arguments."
    },
    {
      "index": 1115,
      "start_time": 3325950.0,
      "end_time": 3329240.0,
      "text": "So let&#39;s now, with relatively fewer examples,"
    },
    {
      "index": 1116,
      "start_time": 3329240.0,
      "end_time": 3332320.0,
      "text": "compare and contrast what we did then to what we&#39;ll do now"
    },
    {
      "index": 1117,
      "start_time": 3332320.0,
      "end_time": 3334180.0,
      "text": "and see what new features we have."
    },
    {
      "index": 1118,
      "start_time": 3334180.0,
      "end_time": 3338367.0,
      "text": "Recall indeed that in week two, we implemented strlen ourselves."
    },
    {
      "index": 1119,
      "start_time": 3338370.0,
      "end_time": 3340203.0,
      "text": "Before we even started taking it for granted"
    },
    {
      "index": 1120,
      "start_time": 3340200.0,
      "end_time": 3343370.0,
      "text": "that there is a strlen function that returns the length of a string,"
    },
    {
      "index": 1121,
      "start_time": 3343370.0,
      "end_time": 3345570.0,
      "text": "recall that we implemented it as follows."
    },
    {
      "index": 1122,
      "start_time": 3345570.0,
      "end_time": 3347160.0,
      "text": "We got a string from the user."
    },
    {
      "index": 1123,
      "start_time": 3347160.0,
      "end_time": 3350200.0,
      "text": "We initialized some counting variable, like n to 0."
    },
    {
      "index": 1124,
      "start_time": 3350200.0,
      "end_time": 3353720.0,
      "text": "And then while that location in the string using,"
    },
    {
      "index": 1125,
      "start_time": 3353720.0,
      "end_time": 3357240.0,
      "text": "our square bracket notation, was not equal to the special sentinel value,"
    },
    {
      "index": 1126,
      "start_time": 3357240.0,
      "end_time": 3360630.0,
      "text": "/0, do n plus plus, thereby incrementing n,"
    },
    {
      "index": 1127,
      "start_time": 3360630.0,
      "end_time": 3363630.0,
      "text": "and then eventually print out what the value of n is."
    },
    {
      "index": 1128,
      "start_time": 3363630.0,
      "end_time": 3366950.0,
      "text": "So this, though, assumed in week two an understanding"
    },
    {
      "index": 1129,
      "start_time": 3366950.0,
      "end_time": 3369220.0,
      "text": "of what&#39;s going on underneath the hood."
    },
    {
      "index": 1130,
      "start_time": 3369220.0,
      "end_time": 3372482.0,
      "text": "In Python, we&#39;re not going to want to worry about what&#39;s"
    },
    {
      "index": 1131,
      "start_time": 3372480.0,
      "end_time": 3373688.0,
      "text": "going on underneath the hood."
    },
    {
      "index": 1132,
      "start_time": 3373690.0,
      "end_time": 3378520.0,
      "text": "Indeed, this whole principle of abstraction-- and more"
    },
    {
      "index": 1133,
      "start_time": 3378520.0,
      "end_time": 3382400.0,
      "text": "specifically, encapsulation-- whereby, these implementation details"
    },
    {
      "index": 1134,
      "start_time": 3382400.0,
      "end_time": 3387480.0,
      "text": "are deliberately hidden from us, is now something we can embrace as a feature."
    },
    {
      "index": 1135,
      "start_time": 3387480.0,
      "end_time": 3390960.0,
      "text": "No longer do we need to worry as much about how things are implemented,"
    },
    {
      "index": 1136,
      "start_time": 3390960.0,
      "end_time": 3393750.0,
      "text": "but just that they are implemented."
    },
    {
      "index": 1137,
      "start_time": 3393750.0,
      "end_time": 3397650.0,
      "text": "So increasingly will we start to rely on publicly available documentation"
    },
    {
      "index": 1138,
      "start_time": 3397650.0,
      "end_time": 3400780.0,
      "text": "and on examples online that use features of code,"
    },
    {
      "index": 1139,
      "start_time": 3400780.0,
      "end_time": 3402900.0,
      "text": "as opposed to worrying as much about how they&#39;re"
    },
    {
      "index": 1140,
      "start_time": 3402900.0,
      "end_time": 3405030.0,
      "text": "implemented underneath the hood."
    },
    {
      "index": 1141,
      "start_time": 3405030.0,
      "end_time": 3409530.0,
      "text": "So toward that end, let me go ahead and implement the equivalent"
    },
    {
      "index": 1142,
      "start_time": 3409530.0,
      "end_time": 3414910.0,
      "text": "of this program in Python in a manner that would be appropriate here"
    },
    {
      "index": 1143,
      "start_time": 3414910.0,
      "end_time": 3416850.0,
      "text": "with strlen.py."
    },
    {
      "index": 1144,
      "start_time": 3416850.0,
      "end_time": 3419740.0,
      "text": "I&#39;m going to go ahead and import the CS50 library so that I can"
    },
    {
      "index": 1145,
      "start_time": 3419740.0,
      "end_time": 3423310.0,
      "text": "get a string like this with get string."
    },
    {
      "index": 1146,
      "start_time": 3423310.0,
      "end_time": 3426650.0,
      "text": "And then I&#39;m going to print the length of s."
    },
    {
      "index": 1147,
      "start_time": 3426650.0,
      "end_time": 3429890.0,
      "text": "So recall, of course, in C, we could have done this with strlen."
    },
    {
      "index": 1148,
      "start_time": 3429890.0,
      "end_time": 3433655.0,
      "text": "In the world of Python, we&#39;re not going to use strlen, but rather len,"
    },
    {
      "index": 1149,
      "start_time": 3433660.0,
      "end_time": 3436225.0,
      "text": "or L-E-N for length, which it turns out can"
    },
    {
      "index": 1150,
      "start_time": 3436220.0,
      "end_time": 3439120.0,
      "text": "be used on any numbers of different variables and objects."
    },
    {
      "index": 1151,
      "start_time": 3439120.0,
      "end_time": 3440610.0,
      "text": "It can be used on strings."
    },
    {
      "index": 1152,
      "start_time": 3440610.0,
      "end_time": 3443360.0,
      "text": "It can be used on lists and other data structures still."
    },
    {
      "index": 1153,
      "start_time": 3443360.0,
      "end_time": 3446759.0,
      "text": "So for now, know that this is how we might print the length of a string."
    },
    {
      "index": 1154,
      "start_time": 3446760.0,
      "end_time": 3448051.0,
      "text": "So let&#39;s go ahead and try this."
    },
    {
      "index": 1155,
      "start_time": 3448050.0,
      "end_time": 3450200.0,
      "text": "Python of strlen.py."
    },
    {
      "index": 1156,
      "start_time": 3450200.0,
      "end_time": 3453060.0,
      "text": "Type in something like foo, which is three letters."
    },
    {
      "index": 1157,
      "start_time": 3453060.0,
      "end_time": 3455150.0,
      "text": "And indeed, that&#39;s what we get back."
    },
    {
      "index": 1158,
      "start_time": 3455150.0,
      "end_time": 3458820.0,
      "text": "Well, now let&#39;s actually take a look at the fact that we do still,"
    },
    {
      "index": 1159,
      "start_time": 3458820.0,
      "end_time": 3462390.0,
      "text": "nonetheless, have this notion of Ascii underneath the hood going"
    },
    {
      "index": 1160,
      "start_time": 3462390.0,
      "end_time": 3464920.0,
      "text": "on, although not necessarily Ascii but Unicode,"
    },
    {
      "index": 1161,
      "start_time": 3464920.0,
      "end_time": 3469340.0,
      "text": "which is a far more powerful encoding of symbols"
    },
    {
      "index": 1162,
      "start_time": 3469340.0,
      "end_time": 3474540.0,
      "text": "so that we can have far more characters than just, say, 128, or even 256."
    },
    {
      "index": 1163,
      "start_time": 3474540.0,
      "end_time": 3478130.0,
      "text": "Let me go ahead and create the following example."
    },
    {
      "index": 1164,
      "start_time": 3478130.0,
      "end_time": 3483100.0,
      "text": "We&#39;ll call this Ascii0.py so that it lines up to the example"
    },
    {
      "index": 1165,
      "start_time": 3483100.0,
      "end_time": 3485412.0,
      "text": "we did called Ascii0.c a few weeks back."
    },
    {
      "index": 1166,
      "start_time": 3485410.0,
      "end_time": 3487118.0,
      "text": "And let me go ahead and do the following."
    },
    {
      "index": 1167,
      "start_time": 3487120.0,
      "end_time": 3492950.0,
      "text": "For i in the range of 65, 65 plus 26."
    },
    {
      "index": 1168,
      "start_time": 3492950.0,
      "end_time": 3496260.0,
      "text": "So if I want to start iterating at 65, and then"
    },
    {
      "index": 1169,
      "start_time": 3496260.0,
      "end_time": 3499620.0,
      "text": "iterate ultimately over 26 characters like we did a few weeks ago,"
    },
    {
      "index": 1170,
      "start_time": 3499620.0,
      "end_time": 3501090.0,
      "text": "I can actually do this."
    },
    {
      "index": 1171,
      "start_time": 3501090.0,
      "end_time": 3504660.0,
      "text": "I can say something like, something is something,"
    },
    {
      "index": 1172,
      "start_time": 3504660.0,
      "end_time": 3508090.0,
      "text": "specifically if I format two values."
    },
    {
      "index": 1173,
      "start_time": 3508090.0,
      "end_time": 3511100.0,
      "text": "I essentially want to format i and i again."
    },
    {
      "index": 1174,
      "start_time": 3511100.0,
      "end_time": 3514420.0,
      "text": "But the first of these I want to actually print as a character."
    },
    {
      "index": 1175,
      "start_time": 3514420.0,
      "end_time": 3517620.0,
      "text": "So it turns out that if you have in a variable, like i,"
    },
    {
      "index": 1176,
      "start_time": 3517620.0,
      "end_time": 3521300.0,
      "text": "a decimal value, an integer, that corresponds underneath the hood"
    },
    {
      "index": 1177,
      "start_time": 3521300.0,
      "end_time": 3524750.0,
      "text": "to an Ascii value, or really Unicode value, which is a superset,"
    },
    {
      "index": 1178,
      "start_time": 3524750.0,
      "end_time": 3528120.0,
      "text": "you can call the CHR function, which is going to convert it"
    },
    {
      "index": 1179,
      "start_time": 3528120.0,
      "end_time": 3529740.0,
      "text": "to its character equivalent."
    },
    {
      "index": 1180,
      "start_time": 3529740.0,
      "end_time": 3537750.0,
      "text": "If I go ahead now and run Python of Ascii0.py, I&#39;ve made a mistake."
    },
    {
      "index": 1181,
      "start_time": 3537750.0,
      "end_time": 3540110.0,
      "text": "And you&#39;ll notice even CS50 IDE noticed this."
    },
    {
      "index": 1182,
      "start_time": 3540110.0,
      "end_time": 3541590.0,
      "text": "And I didn&#39;t notice CS50 IDE."
    },
    {
      "index": 1183,
      "start_time": 3541590.0,
      "end_time": 3544860.0,
      "text": "If I hover over that little x, it&#39;s yelling at me, invalid syntax."
    },
    {
      "index": 1184,
      "start_time": 3544860.0,
      "end_time": 3548910.0,
      "text": "Because CS50 IDE actually understands Python even more than it does C. So"
    },
    {
      "index": 1185,
      "start_time": 3548910.0,
      "end_time": 3552900.0,
      "text": "I can actually fix this with that additional in keyword, which I forgot."
    },
    {
      "index": 1186,
      "start_time": 3552900.0,
      "end_time": 3556150.0,
      "text": "And now I can see the exact same tabular output which,"
    },
    {
      "index": 1187,
      "start_time": 3556150.0,
      "end_time": 3559120.0,
      "text": "again, prints out capital A as 65."
    },
    {
      "index": 1188,
      "start_time": 3559120.0,
      "end_time": 3562810.0,
      "text": "So not necessarily a useful program other than to show us this equivalence."
    },
    {
      "index": 1189,
      "start_time": 3562810.0,
      "end_time": 3566090.0,
      "text": "Well, what about arguments at the command line?"
    },
    {
      "index": 1190,
      "start_time": 3566090.0,
      "end_time": 3570560.0,
      "text": "Let me go ahead and implement a program similar in spirit to argv0.c a while"
    },
    {
      "index": 1191,
      "start_time": 3570560.0,
      "end_time": 3572820.0,
      "text": "back, this time calling it .py."
    },
    {
      "index": 1192,
      "start_time": 3572820.0,
      "end_time": 3576010.0,
      "text": "And in here, let me go ahead and do this."
    },
    {
      "index": 1193,
      "start_time": 3576010.0,
      "end_time": 3579770.0,
      "text": "If-- and actually, let me go ahead and import sys first."
    },
    {
      "index": 1194,
      "start_time": 3579770.0,
      "end_time": 3583470.0,
      "text": "So sys is a system module that has a lot of lower level functionality,"
    },
    {
      "index": 1195,
      "start_time": 3583470.0,
      "end_time": 3586570.0,
      "text": "among them command line arguments-- which, again, we do not"
    },
    {
      "index": 1196,
      "start_time": 3586570.0,
      "end_time": 3588490.0,
      "text": "declare as being part of main."
    },
    {
      "index": 1197,
      "start_time": 3588490.0,
      "end_time": 3590980.0,
      "text": "They&#39;re globally accessible, if you will."
    },
    {
      "index": 1198,
      "start_time": 3590980.0,
      "end_time": 3592450.0,
      "text": "I&#39;m going to go ahead and do this."
    },
    {
      "index": 1199,
      "start_time": 3592450.0,
      "end_time": 3600810.0,
      "text": "If the number of command line arguments in that list there equals equals 2,"
    },
    {
      "index": 1200,
      "start_time": 3600810.0,
      "end_time": 3605220.0,
      "text": "then I&#39;m going to go ahead and print out hello placeholder."
    },
    {
      "index": 1201,
      "start_time": 3605220.0,
      "end_time": 3610839.0,
      "text": "And then format inside of that sys.argv bracket 1."
    },
    {
      "index": 1202,
      "start_time": 3610840.0,
      "end_time": 3613131.0,
      "text": "So if there are two command line arguments-- something,"
    },
    {
      "index": 1203,
      "start_time": 3613130.0,
      "end_time": 3614890.0,
      "text": "something-- I&#39;m going to print the second of those"
    },
    {
      "index": 1204,
      "start_time": 3614890.0,
      "end_time": 3618300.0,
      "text": "because the first of them is going to be the program&#39;s name or the file&#39;s name."
    },
    {
      "index": 1205,
      "start_time": 3618300.0,
      "end_time": 3622010.0,
      "text": "Else, I&#39;m going to go ahead and just print out generically hello world."
    },
    {
      "index": 1206,
      "start_time": 3622010.0,
      "end_time": 3623290.0,
      "text": "Let me go ahead and save that."
    },
    {
      "index": 1207,
      "start_time": 3623290.0,
      "end_time": 3625470.0,
      "text": "Run Python argv0.py."
    },
    {
      "index": 1208,
      "start_time": 3625470.0,
      "end_time": 3626410.0,
      "text": "Enter."
    },
    {
      "index": 1209,
      "start_time": 3626410.0,
      "end_time": 3627240.0,
      "text": "And voila."
    },
    {
      "index": 1210,
      "start_time": 3627240.0,
      "end_time": 3628551.0,
      "text": "We have hello world."
    },
    {
      "index": 1211,
      "start_time": 3628550.0,
      "end_time": 3630299.0,
      "text": "Now, as an aside-- and just so that you&#39;ve"
    },
    {
      "index": 1212,
      "start_time": 3630300.0,
      "end_time": 3633190.0,
      "text": "seen it-- there are other ways of outputting strings because frankly,"
    },
    {
      "index": 1213,
      "start_time": 3633190.0,
      "end_time": 3635564.0,
      "text": "this very quickly gets tedious if all you&#39;re trying to do"
    },
    {
      "index": 1214,
      "start_time": 3635560.0,
      "end_time": 3636596.0,
      "text": "is plug in some value."
    },
    {
      "index": 1215,
      "start_time": 3636600.0,
      "end_time": 3639050.0,
      "text": "Generally, for consistency, I&#39;ll still do it this way."
    },
    {
      "index": 1216,
      "start_time": 3639050.0,
      "end_time": 3641010.0,
      "text": "But we could have done something like this."
    },
    {
      "index": 1217,
      "start_time": 3641010.0,
      "end_time": 3644240.0,
      "text": "And those of you who took, for instance, AP Computer Science A"
    },
    {
      "index": 1218,
      "start_time": 3644240.0,
      "end_time": 3646880.0,
      "text": "in high school, or a Java class more generally,"
    },
    {
      "index": 1219,
      "start_time": 3646880.0,
      "end_time": 3649190.0,
      "text": "might know that the plus operator is sometimes used"
    },
    {
      "index": 1220,
      "start_time": 3649190.0,
      "end_time": 3652580.0,
      "text": "as the concatenation operator to take one string and another"
    },
    {
      "index": 1221,
      "start_time": 3652580.0,
      "end_time": 3653840.0,
      "text": "and jam them together."
    },
    {
      "index": 1222,
      "start_time": 3653840.0,
      "end_time": 3656340.0,
      "text": "And indeed, we could do this as follows."
    },
    {
      "index": 1223,
      "start_time": 3656340.0,
      "end_time": 3661400.0,
      "text": "I could now do Python of argv0.py and get the same result."
    },
    {
      "index": 1224,
      "start_time": 3661400.0,
      "end_time": 3666400.0,
      "text": "But you&#39;ll find generally that using the format approach, as I originally did,"
    },
    {
      "index": 1225,
      "start_time": 3666400.0,
      "end_time": 3670530.0,
      "text": "tends to be a little more sustainable once your code gets more complex."
    },
    {
      "index": 1226,
      "start_time": 3670530.0,
      "end_time": 3672020.0,
      "text": "Let&#39;s do something else."
    },
    {
      "index": 1227,
      "start_time": 3672020.0,
      "end_time": 3674960.0,
      "text": "Let&#39;s go ahead and print out a whole bunch of command line arguments,"
    },
    {
      "index": 1228,
      "start_time": 3674960.0,
      "end_time": 3679130.0,
      "text": "just as we did a few weeks ago, this time in argv1.py, which"
    },
    {
      "index": 1229,
      "start_time": 3679130.0,
      "end_time": 3681430.0,
      "text": "again corresponds to our earlier code."
    },
    {
      "index": 1230,
      "start_time": 3681430.0,
      "end_time": 3684610.0,
      "text": "And here, I&#39;m going to go ahead and import the sys module again and do"
    },
    {
      "index": 1231,
      "start_time": 3684610.0,
      "end_time": 3686550.0,
      "text": "for i in range."
    },
    {
      "index": 1232,
      "start_time": 3686550.0,
      "end_time": 3691430.0,
      "text": "And now this time, I&#39;m going to do the length of sys.argv which, to be clear,"
    },
    {
      "index": 1233,
      "start_time": 3691430.0,
      "end_time": 3697160.0,
      "text": "is going to give me the number of arguments in the argument vector."
    },
    {
      "index": 1234,
      "start_time": 3697160.0,
      "end_time": 3700510.0,
      "text": "And that list, called argv, which sounds awfully"
    },
    {
      "index": 1235,
      "start_time": 3700510.0,
      "end_time": 3706030.0,
      "text": "equivalent to what special variable that we kept using in C?"
    },
    {
      "index": 1236,
      "start_time": 3706030.0,
      "end_time": 3708960.0,
      "text": "If you recall, not just argv, but argc?"
    },
    {
      "index": 1237,
      "start_time": 3708960.0,
      "end_time": 3710820.0,
      "text": "The latter doesn&#39;t exist in Python."
    },
    {
      "index": 1238,
      "start_time": 3710820.0,
      "end_time": 3714140.0,
      "text": "But we can query for it by just asking Python, what"
    },
    {
      "index": 1239,
      "start_time": 3714140.0,
      "end_time": 3716200.0,
      "text": "is the length of the argument vector?"
    },
    {
      "index": 1240,
      "start_time": 3716200.0,
      "end_time": 3718060.0,
      "text": "That means what is argc?"
    },
    {
      "index": 1241,
      "start_time": 3718060.0,
      "end_time": 3722325.0,
      "text": "So I&#39;m going to go ahead now and just print out sys.argv bracket i."
    },
    {
      "index": 1242,
      "start_time": 3722320.0,
      "end_time": 3724195.0,
      "text": "And if you think through these lines of code,"
    },
    {
      "index": 1243,
      "start_time": 3724200.0,
      "end_time": 3728350.0,
      "text": "it would seem that this is going to iterate from 0 on up to the number"
    },
    {
      "index": 1244,
      "start_time": 3728350.0,
      "end_time": 3733270.0,
      "text": "of arguments in that argv vector, or list, and then print out each of them"
    },
    {
      "index": 1245,
      "start_time": 3733270.0,
      "end_time": 3734030.0,
      "text": "in turn."
    },
    {
      "index": 1246,
      "start_time": 3734030.0,
      "end_time": 3737090.0,
      "text": "So let me go ahead and run Python of argv1.py."
    },
    {
      "index": 1247,
      "start_time": 3737090.0,
      "end_time": 3738160.0,
      "text": "Enter."
    },
    {
      "index": 1248,
      "start_time": 3738160.0,
      "end_time": 3741760.0,
      "text": "And indeed, it just printed out one thing, the name of the program itself."
    },
    {
      "index": 1249,
      "start_time": 3741760.0,
      "end_time": 3746390.0,
      "text": "What if I did foo, bar, [INAUDIBLE], some arbitrary words, and hit Enter?"
    },
    {
      "index": 1250,
      "start_time": 3746390.0,
      "end_time": 3748460.0,
      "text": "Now it&#39;s going to print all of those as well."
    },
    {
      "index": 1251,
      "start_time": 3748460.0,
      "end_time": 3750793.0,
      "text": "So this is just printing out, as we did a few weeks ago,"
    },
    {
      "index": 1252,
      "start_time": 3750790.0,
      "end_time": 3754167.0,
      "text": "all of the words in argv."
    },
    {
      "index": 1253,
      "start_time": 3754170.0,
      "end_time": 3757100.0,
      "text": "But we can do something a little neater now as follows."
    },
    {
      "index": 1254,
      "start_time": 3757100.0,
      "end_time": 3762010.0,
      "text": "Suppose that in, argv2.py, just like a few weeks ago in argv2.c,"
    },
    {
      "index": 1255,
      "start_time": 3762010.0,
      "end_time": 3765340.0,
      "text": "I wanted to print out all of the characters"
    },
    {
      "index": 1256,
      "start_time": 3765340.0,
      "end_time": 3770000.0,
      "text": "in all of the words of the command line arguments."
    },
    {
      "index": 1257,
      "start_time": 3770000.0,
      "end_time": 3772080.0,
      "text": "I&#39;m going to go ahead and import sys again."
    },
    {
      "index": 1258,
      "start_time": 3772080.0,
      "end_time": 3775770.0,
      "text": "And now I&#39;m going to do for s in sys.argv."
    },
    {
      "index": 1259,
      "start_time": 3775770.0,
      "end_time": 3778530.0,
      "text": "So here&#39;s a new approach altogether."
    },
    {
      "index": 1260,
      "start_time": 3778530.0,
      "end_time": 3781662.0,
      "text": "And then do for c in s."
    },
    {
      "index": 1261,
      "start_time": 3781660.0,
      "end_time": 3784648.0,
      "text": "And then in here, I&#39;m going to do print c,"
    },
    {
      "index": 1262,
      "start_time": 3784650.0,
      "end_time": 3787110.0,
      "text": "and then eventually, just print a new line."
    },
    {
      "index": 1263,
      "start_time": 3787110.0,
      "end_time": 3789680.0,
      "text": "So now things are getting a little magical, or frankly,"
    },
    {
      "index": 1264,
      "start_time": 3789680.0,
      "end_time": 3791160.0,
      "text": "just a little convenient."
    },
    {
      "index": 1265,
      "start_time": 3791160.0,
      "end_time": 3793070.0,
      "text": "I&#39;m still importing the sys module so that I"
    },
    {
      "index": 1266,
      "start_time": 3793070.0,
      "end_time": 3795060.0,
      "text": "have access to argv in the first place."
    },
    {
      "index": 1267,
      "start_time": 3795060.0,
      "end_time": 3800070.0,
      "text": "And it turns out that insofar as sys.argv is just a list-- like in C,"
    },
    {
      "index": 1268,
      "start_time": 3800070.0,
      "end_time": 3802260.0,
      "text": "it&#39;s similar in spirit to an array-- I don&#39;t"
    },
    {
      "index": 1269,
      "start_time": 3802260.0,
      "end_time": 3806520.0,
      "text": "have to do the for loop with the int i and index into the array using bracket"
    },
    {
      "index": 1270,
      "start_time": 3806520.0,
      "end_time": 3807306.0,
      "text": "i."
    },
    {
      "index": 1271,
      "start_time": 3807310.0,
      "end_time": 3812884.0,
      "text": "I can get from Python&#39;s for keyword this beautiful feature, whereby"
    },
    {
      "index": 1272,
      "start_time": 3812880.0,
      "end_time": 3818110.0,
      "text": "if I just say, much like the ranges I&#39;ve been using it with thus far,"
    },
    {
      "index": 1273,
      "start_time": 3818110.0,
      "end_time": 3824630.0,
      "text": "for s in sys.argv, this is going to assign s so the first string in argv."
    },
    {
      "index": 1274,
      "start_time": 3824630.0,
      "end_time": 3827140.0,
      "text": "Then on the next iteration, to the next string in argv."
    },
    {
      "index": 1275,
      "start_time": 3827140.0,
      "end_time": 3832480.0,
      "text": "Then on the next iteration, the next string in argv, each time updating s."
    },
    {
      "index": 1276,
      "start_time": 3832480.0,
      "end_time": 3835070.0,
      "text": "Meanwhile, on line 4 here, which is indented"
    },
    {
      "index": 1277,
      "start_time": 3835070.0,
      "end_time": 3839815.0,
      "text": "as part of being inside this outermost loop, for c in s."
    },
    {
      "index": 1278,
      "start_time": 3839810.0,
      "end_time": 3844705.0,
      "text": "Well, it turns out that Python treats strings similar in spirit to C,"
    },
    {
      "index": 1279,
      "start_time": 3844710.0,
      "end_time": 3846700.0,
      "text": "as sequences of characters."
    },
    {
      "index": 1280,
      "start_time": 3846700.0,
      "end_time": 3849980.0,
      "text": "But rather than put the burden on you to declare an int called i or j"
    },
    {
      "index": 1281,
      "start_time": 3849980.0,
      "end_time": 3853290.0,
      "text": "or whatever, and then iterate over bracket i or bracket"
    },
    {
      "index": 1282,
      "start_time": 3853290.0,
      "end_time": 3856290.0,
      "text": "j in each of these variables, you can just tell Python,"
    },
    {
      "index": 1283,
      "start_time": 3856290.0,
      "end_time": 3860330.0,
      "text": "for each character in the string, for c-- and this could"
    },
    {
      "index": 1284,
      "start_time": 3860330.0,
      "end_time": 3866690.0,
      "text": "have been any variable name altogether in the current argument from argv--"
    },
    {
      "index": 1285,
      "start_time": 3866690.0,
      "end_time": 3868810.0,
      "text": "go ahead and just print out C."
    },
    {
      "index": 1286,
      "start_time": 3868810.0,
      "end_time": 3873140.0,
      "text": "So again, here we see another hint of the ease with which you can write code"
    },
    {
      "index": 1287,
      "start_time": 3873140.0,
      "end_time": 3876580.0,
      "text": "in a language like Python without having to worry nearly as much"
    },
    {
      "index": 1288,
      "start_time": 3876580.0,
      "end_time": 3880790.0,
      "text": "about low level implementation details about random access and square bracket"
    },
    {
      "index": 1289,
      "start_time": 3880790.0,
      "end_time": 3884350.0,
      "text": "notation and indexing into these arrays effectively."
    },
    {
      "index": 1290,
      "start_time": 3884350.0,
      "end_time": 3888120.0,
      "text": "You can just allow the language to hand you more of the data"
    },
    {
      "index": 1291,
      "start_time": 3888120.0,
      "end_time": 3889200.0,
      "text": "that you care about."
    },
    {
      "index": 1292,
      "start_time": 3889200.0,
      "end_time": 3892640.0,
      "text": "So let&#39;s run Python of argv2.py."
    },
    {
      "index": 1293,
      "start_time": 3892640.0,
      "end_time": 3893370.0,
      "text": "Enter."
    },
    {
      "index": 1294,
      "start_time": 3893370.0,
      "end_time": 3894670.0,
      "text": "And it looks a little weird."
    },
    {
      "index": 1295,
      "start_time": 3894670.0,
      "end_time": 3899490.0,
      "text": "But if I increase the screen, you&#39;ll see that it printed one character per line,"
    },
    {
      "index": 1296,
      "start_time": 3899490.0,
      "end_time": 3901330.0,
      "text": "exactly those command line arguments."
    },
    {
      "index": 1297,
      "start_time": 3901330.0,
      "end_time": 3906180.0,
      "text": "And if I do foo, you&#39;ll see argv2.py space"
    },
    {
      "index": 1298,
      "start_time": 3906180.0,
      "end_time": 3909380.0,
      "text": "F-O-O. It&#39;s doing the exact same thing."
    },
    {
      "index": 1299,
      "start_time": 3909380.0,
      "end_time": 3910610.0,
      "text": "So not a useful program."
    },
    {
      "index": 1300,
      "start_time": 3910610.0,
      "end_time": 3917590.0,
      "text": "But it indeed is allowing us to actually access those characters and strings"
    },
    {
      "index": 1301,
      "start_time": 3917590.0,
      "end_time": 3918310.0,
      "text": "still."
    },
    {
      "index": 1302,
      "start_time": 3918310.0,
      "end_time": 3922120.0,
      "text": "So let&#39;s just open up an example I wrote in advance to demonstrate"
    },
    {
      "index": 1303,
      "start_time": 3922120.0,
      "end_time": 3923880.0,
      "text": "one other point altogether."
    },
    {
      "index": 1304,
      "start_time": 3923880.0,
      "end_time": 3929350.0,
      "text": "If I go into week two&#39;s folder here from this week and go into exit.py,"
    },
    {
      "index": 1305,
      "start_time": 3929350.0,
      "end_time": 3930730.0,
      "text": "you&#39;ll see this example."
    },
    {
      "index": 1306,
      "start_time": 3930730.0,
      "end_time": 3932950.0,
      "text": "It doesn&#39;t do all that much, this program."
    },
    {
      "index": 1307,
      "start_time": 3932950.0,
      "end_time": 3934520.0,
      "text": "But it does seem to check this."
    },
    {
      "index": 1308,
      "start_time": 3934520.0,
      "end_time": 3937250.0,
      "text": "On line 4, it checks the length of sys.argv."
    },
    {
      "index": 1309,
      "start_time": 3937250.0,
      "end_time": 3939410.0,
      "text": "And if it doesn&#39;t equal 2, it yells at the user."
    },
    {
      "index": 1310,
      "start_time": 3939410.0,
      "end_time": 3940660.0,
      "text": "Missing command line argument."
    },
    {
      "index": 1311,
      "start_time": 3940660.0,
      "end_time": 3941890.0,
      "text": "And then it just exits."
    },
    {
      "index": 1312,
      "start_time": 3941890.0,
      "end_time": 3946950.0,
      "text": "So just like in C, we have the ability to return an exit code to the shell,"
    },
    {
      "index": 1313,
      "start_time": 3946950.0,
      "end_time": 3950780.0,
      "text": "to your prompt, not using return, as we did in C."
    },
    {
      "index": 1314,
      "start_time": 3950780.0,
      "end_time": 3955470.0,
      "text": "You still use return in Python, but to return from methods or functions."
    },
    {
      "index": 1315,
      "start_time": 3955470.0,
      "end_time": 3958280.0,
      "text": "In Python, when you want to exit the program altogether,"
    },
    {
      "index": 1316,
      "start_time": 3958280.0,
      "end_time": 3962380.0,
      "text": "because there is not necessarily a main function,"
    },
    {
      "index": 1317,
      "start_time": 3962380.0,
      "end_time": 3967594.0,
      "text": "you just call exit and then pass inside of its parentheses the number"
    },
    {
      "index": 1318,
      "start_time": 3967590.0,
      "end_time": 3969756.0,
      "text": "that you want to return-- the convention, as always,"
    },
    {
      "index": 1319,
      "start_time": 3969760.0,
      "end_time": 3973090.0,
      "text": "being 0 for success and anything nonzero for failure."
    },
    {
      "index": 1320,
      "start_time": 3973090.0,
      "end_time": 3975380.0,
      "text": "And so that&#39;s why I&#39;m arbitrarily, but conventionally,"
    },
    {
      "index": 1321,
      "start_time": 3975380.0,
      "end_time": 3977840.0,
      "text": "returning 1 here to the prompt."
    },
    {
      "index": 1322,
      "start_time": 3977840.0,
      "end_time": 3981140.0,
      "text": "I&#39;m exiting with an exit status code or exit code of 1"
    },
    {
      "index": 1323,
      "start_time": 3981140.0,
      "end_time": 3982510.0,
      "text": "to indicate as much here."
    },
    {
      "index": 1324,
      "start_time": 3982510.0,
      "end_time": 3984760.0,
      "text": "Otherwise, I&#39;m just printing out whatever the word is."
    },
    {
      "index": 1325,
      "start_time": 3984760.0,
      "end_time": 3989360.0,
      "text": "So if I run this program, and I go into today&#39;s second directory,"
    },
    {
      "index": 1326,
      "start_time": 3989360.0,
      "end_time": 3994890.0,
      "text": "and I run Python of exit.py, missing command line argument."
    },
    {
      "index": 1327,
      "start_time": 3994890.0,
      "end_time": 3997220.0,
      "text": "And you might recall this trick from a few weeks back."
    },
    {
      "index": 1328,
      "start_time": 3997220.0,
      "end_time": 4004820.0,
      "text": "If you, at your prompt, run echo$?, it will show you the exit code of the most"
    },
    {
      "index": 1329,
      "start_time": 4004820.0,
      "end_time": 4006540.0,
      "text": "recently run program."
    },
    {
      "index": 1330,
      "start_time": 4006540.0,
      "end_time": 4010530.0,
      "text": "So if I run this correctly this time with, for instance, my name,"
    },
    {
      "index": 1331,
      "start_time": 4010530.0,
      "end_time": 4011570.0,
      "text": "and it says hello David."
    },
    {
      "index": 1332,
      "start_time": 4011570.0,
      "end_time": 4016050.0,
      "text": "And now I do echo$?, I should see a 0."
    },
    {
      "index": 1333,
      "start_time": 4016050.0,
      "end_time": 4020030.0,
      "text": "So just a lower level way of seeing what&#39;s going on underneath the hood."
    },
    {
      "index": 1334,
      "start_time": 4020030.0,
      "end_time": 4024310.0,
      "text": "Well, let&#39;s go ahead and do another example demonstrating"
    },
    {
      "index": 1335,
      "start_time": 4024310.0,
      "end_time": 4026580.0,
      "text": "what also has changed for the better."
    },
    {
      "index": 1336,
      "start_time": 4026580.0,
      "end_time": 4028400.0,
      "text": "Let me go ahead and now do this."
    },
    {
      "index": 1337,
      "start_time": 4028400.0,
      "end_time": 4031710.0,
      "text": "In a file called compare1.py, which will line up,"
    },
    {
      "index": 1338,
      "start_time": 4031710.0,
      "end_time": 4034770.0,
      "text": "you&#39;ll find, with compare1.c a few weeks back,"
    },
    {
      "index": 1339,
      "start_time": 4034770.0,
      "end_time": 4036862.0,
      "text": "I&#39;m going to go ahead and import the CSV library."
    },
    {
      "index": 1340,
      "start_time": 4036860.0,
      "end_time": 4038818.0,
      "text": "I&#39;m going to go ahead and print out just quote,"
    },
    {
      "index": 1341,
      "start_time": 4038820.0,
      "end_time": 4042200.0,
      "text": "unquote s, and then kill the new line."
    },
    {
      "index": 1342,
      "start_time": 4042200.0,
      "end_time": 4046190.0,
      "text": "And then use s get CS50.getstring."
    },
    {
      "index": 1343,
      "start_time": 4046190.0,
      "end_time": 4049360.0,
      "text": "And then let me do this once more with a t variable,"
    },
    {
      "index": 1344,
      "start_time": 4049360.0,
      "end_time": 4051860.0,
      "text": "also getting rid of the new line, just for aesthetics."
    },
    {
      "index": 1345,
      "start_time": 4051860.0,
      "end_time": 4056210.0,
      "text": "And then t gets CS50.getstring."
    },
    {
      "index": 1346,
      "start_time": 4056210.0,
      "end_time": 4058451.0,
      "text": "And then let me go ahead and do a sanity check."
    },
    {
      "index": 1347,
      "start_time": 4058450.0,
      "end_time": 4061449.0,
      "text": "It turns out-- and you would only know this from reading our source code"
    },
    {
      "index": 1348,
      "start_time": 4061450.0,
      "end_time": 4064220.0,
      "text": "or the documentation therefore-- turns out that get string"
    },
    {
      "index": 1349,
      "start_time": 4064220.0,
      "end_time": 4067080.0,
      "text": "could return a special value."
    },
    {
      "index": 1350,
      "start_time": 4067080.0,
      "end_time": 4072560.0,
      "text": "It&#39;s not null because Python does not have pointers."
    },
    {
      "index": 1351,
      "start_time": 4072560.0,
      "end_time": 4075800.0,
      "text": "We don&#39;t have to worry about addresses anymore, per se."
    },
    {
      "index": 1352,
      "start_time": 4075800.0,
      "end_time": 4079230.0,
      "text": "But it does have special sentinel values like this one."
    },
    {
      "index": 1353,
      "start_time": 4079230.0,
      "end_time": 4085000.0,
      "text": "If s does not equal None with a capital N, and t does not equal None,"
    },
    {
      "index": 1354,
      "start_time": 4085000.0,
      "end_time": 4089910.0,
      "text": "indeed None is a special value similar in spirit to null or similar"
    },
    {
      "index": 1355,
      "start_time": 4089910.0,
      "end_time": 4092500.0,
      "text": "in spirit to false, but different from both."
    },
    {
      "index": 1356,
      "start_time": 4092500.0,
      "end_time": 4095560.0,
      "text": "It&#39;s not a pointer, as it is in C. And it&#39;s not a Boolean."
    },
    {
      "index": 1357,
      "start_time": 4095560.0,
      "end_time": 4097520.0,
      "text": "It&#39;s sort of the absence of a value."
    },
    {
      "index": 1358,
      "start_time": 4097520.0000000005,
      "end_time": 4100100.0000000005,
      "text": "And indeed we, in designing the CS50 library for Python,"
    },
    {
      "index": 1359,
      "start_time": 4100100.0000000005,
      "end_time": 4102120.0000000005,
      "text": "decided that if something goes wrong with"
    },
    {
      "index": 1360,
      "start_time": 4102120.0,
      "end_time": 4105691.0,
      "text": "get string-- maybe the computer or the interpreter is indeed out of memory,"
    },
    {
      "index": 1361,
      "start_time": 4105689.9999999995,
      "end_time": 4108147.9999999995,
      "text": "even though there is no notion of allocating memory per se."
    },
    {
      "index": 1362,
      "start_time": 4108149.9999999995,
      "end_time": 4112680.9999999995,
      "text": "But something goes wrong inside of get string for whatever reason,"
    },
    {
      "index": 1363,
      "start_time": 4112680.0000000005,
      "end_time": 4114950.0000000005,
      "text": "these calls could return None."
    },
    {
      "index": 1364,
      "start_time": 4114950.0,
      "end_time": 4118640.0,
      "text": "So I&#39;m just for good measure checking that s is not None and t"
    },
    {
      "index": 1365,
      "start_time": 4118640.0000000005,
      "end_time": 4122071.0000000005,
      "text": "is not None so that I can indeed trust that they&#39;re indeed strings,"
    },
    {
      "index": 1366,
      "start_time": 4122069.9999999995,
      "end_time": 4123777.9999999995,
      "text": "so that I can now do something like this."
    },
    {
      "index": 1367,
      "start_time": 4123779.9999999995,
      "end_time": 4128680.9999999995,
      "text": "If s equals equals t, then print same."
    },
    {
      "index": 1368,
      "start_time": 4128680.0000000005,
      "end_time": 4131510.0000000005,
      "text": "Else print different."
    },
    {
      "index": 1369,
      "start_time": 4131510.0,
      "end_time": 4135939.0,
      "text": "And you will recall, perhaps, that when we did this in C some time ago,"
    },
    {
      "index": 1370,
      "start_time": 4135939.9999999995,
      "end_time": 4137660.9999999995,
      "text": "this did not work."
    },
    {
      "index": 1371,
      "start_time": 4137660.0,
      "end_time": 4142220.0,
      "text": "In the world of C, line 10 would not have worked as intended"
    },
    {
      "index": 1372,
      "start_time": 4142220.0000000005,
      "end_time": 4147149.0000000005,
      "text": "because it would have been comparing two pointers, two memory addresses."
    },
    {
      "index": 1373,
      "start_time": 4147149.9999999995,
      "end_time": 4152630.9999999995,
      "text": "And insofar as in C, get string returns two distinct addresses."
    },
    {
      "index": 1374,
      "start_time": 4152630.0,
      "end_time": 4155720.0,
      "text": "Even if the user types the same word as we did a few weeks back,"
    },
    {
      "index": 1375,
      "start_time": 4155720.0000000005,
      "end_time": 4160240.0000000005,
      "text": "it&#39;s going to use the heap via malloc to give you two separate strings somewhere"
    },
    {
      "index": 1376,
      "start_time": 4160240.0,
      "end_time": 4163390.0,
      "text": "in memory whose first byte&#39;s address is going to be different."
    },
    {
      "index": 1377,
      "start_time": 4163390.0000000005,
      "end_time": 4166859.0000000005,
      "text": "And so s and t in the world of C were not the same."
    },
    {
      "index": 1378,
      "start_time": 4166859.9999999995,
      "end_time": 4168657.9999999995,
      "text": "But that was never really all that useful."
    },
    {
      "index": 1379,
      "start_time": 4168660.0,
      "end_time": 4170743.0,
      "text": "I didn&#39;t really care about those memory addresses."
    },
    {
      "index": 1380,
      "start_time": 4170740.0,
      "end_time": 4172073.0,
      "text": "I wanted to compare the strings."
    },
    {
      "index": 1381,
      "start_time": 4172069.9999999995,
      "end_time": 4174475.9999999995,
      "text": "And I had to resort back in the day to STR compare."
    },
    {
      "index": 1382,
      "start_time": 4174479.9999999995,
      "end_time": 4177010.9999999995,
      "text": "Well, as we&#39;ve already seen, you don&#39;t need"
    },
    {
      "index": 1383,
      "start_time": 4177010.0,
      "end_time": 4178750.0,
      "text": "to worry as much about that in Python."
    },
    {
      "index": 1384,
      "start_time": 4178750.0,
      "end_time": 4183930.0,
      "text": "If you want to compare s and t, just do it using equals equals as always."
    },
    {
      "index": 1385,
      "start_time": 4183930.0000000005,
      "end_time": 4191460.0000000005,
      "text": "So that when I run this program now and type in Python compare1.py,"
    },
    {
      "index": 1386,
      "start_time": 4191460.0,
      "end_time": 4194500.0,
      "text": "something like Zamaila, something like Zamaila."
    },
    {
      "index": 1387,
      "start_time": 4194500.0,
      "end_time": 4196130.0,
      "text": "Those are indeed the same."
    },
    {
      "index": 1388,
      "start_time": 4196130.0,
      "end_time": 4199860.0,
      "text": "But if I instead type Zamaila and then my own name,"
    },
    {
      "index": 1389,
      "start_time": 4199860.0,
      "end_time": 4202050.0,
      "text": "those are indeed different."
    },
    {
      "index": 1390,
      "start_time": 4202050.0,
      "end_time": 4207470.0,
      "text": "And so this is as expected whereby, if I type two strings that"
    },
    {
      "index": 1391,
      "start_time": 4207470.0,
      "end_time": 4211270.0,
      "text": "happen to be the same, and they&#39;re both retrieved by two different calls"
    },
    {
      "index": 1392,
      "start_time": 4211270.0,
      "end_time": 4213920.0,
      "text": "to get string, they&#39;re nonetheless going to be compared"
    },
    {
      "index": 1393,
      "start_time": 4213920.0,
      "end_time": 4217200.0,
      "text": "as expected for equality."
    },
    {
      "index": 1394,
      "start_time": 4217200.0,
      "end_time": 4220660.0,
      "text": "Let&#39;s do one other thing to demonstrate one other point of Python."
    },
    {
      "index": 1395,
      "start_time": 4220660.0,
      "end_time": 4222880.0,
      "text": "Let me go ahead and open up a new file."
    },
    {
      "index": 1396,
      "start_time": 4222880.0,
      "end_time": 4225620.0,
      "text": "I&#39;m going to call this copy1.py."
    },
    {
      "index": 1397,
      "start_time": 4225620.0,
      "end_time": 4227430.0,
      "text": "And you&#39;ll see that it lines up in spirit"
    },
    {
      "index": 1398,
      "start_time": 4227430.0,
      "end_time": 4229640.0,
      "text": "with copy1.c from a few weeks back."
    },
    {
      "index": 1399,
      "start_time": 4229640.0,
      "end_time": 4231240.0,
      "text": "Let me import the CS50 module."
    },
    {
      "index": 1400,
      "start_time": 4231240.0,
      "end_time": 4234820.0,
      "text": "Let me go ahead and print out s with new newline ending."
    },
    {
      "index": 1401,
      "start_time": 4234820.0,
      "end_time": 4237880.0,
      "text": "Let me go ahead and do CS50.getstring as before."
    },
    {
      "index": 1402,
      "start_time": 4237880.0,
      "end_time": 4239650.0,
      "text": "And let me go ahead and do a sanity check."
    },
    {
      "index": 1403,
      "start_time": 4239650.0,
      "end_time": 4243770.0,
      "text": "If s equals None, then let&#39;s just exit because this program&#39;s not"
    },
    {
      "index": 1404,
      "start_time": 4243770.0,
      "end_time": 4246910.0,
      "text": "going to be useful if something bad happened underneath the hood."
    },
    {
      "index": 1405,
      "start_time": 4246910.0,
      "end_time": 4251920.0,
      "text": "And now let me go ahead and capitalize this thing, as I tried weeks ago."
    },
    {
      "index": 1406,
      "start_time": 4251920.0,
      "end_time": 4254580.0,
      "text": "Let me go ahead and do t get s.capitalize."
    },
    {
      "index": 1407,
      "start_time": 4257100.0,
      "end_time": 4261160.0,
      "text": "And then print out s, and then a placeholder"
    },
    {
      "index": 1408,
      "start_time": 4261160.0,
      "end_time": 4263200.0,
      "text": "that I can format with s itself."
    },
    {
      "index": 1409,
      "start_time": 4263200.0,
      "end_time": 4266660.0,
      "text": "Then let me go ahead and print out t colon, and a placeholder, and then"
    },
    {
      "index": 1410,
      "start_time": 4266660.0,
      "end_time": 4268091.0,
      "text": "format t itself."
    },
    {
      "index": 1411,
      "start_time": 4268090.0,
      "end_time": 4270089.0,
      "text": "And then let me go ahead, just for good measure,"
    },
    {
      "index": 1412,
      "start_time": 4270090.0,
      "end_time": 4273179.0,
      "text": "and exit with 0, even though that will be assumed to be the default."
    },
    {
      "index": 1413,
      "start_time": 4273180.0,
      "end_time": 4274471.0,
      "text": "So what&#39;s going to happen here?"
    },
    {
      "index": 1414,
      "start_time": 4274470.0,
      "end_time": 4278210.0,
      "text": "Let me run this program, Python copy1.py."
    },
    {
      "index": 1415,
      "start_time": 4278210.0,
      "end_time": 4280620.0,
      "text": "Type in something like Zamaila in all lowercase."
    },
    {
      "index": 1416,
      "start_time": 4280620.0,
      "end_time": 4281500.0,
      "text": "Enter."
    },
    {
      "index": 1417,
      "start_time": 4281500.0,
      "end_time": 4285490.0,
      "text": "And you&#39;ll see that it&#39;s now uppercase just t, and not s."
    },
    {
      "index": 1418,
      "start_time": 4285490.0,
      "end_time": 4288600.0,
      "text": "Let me go ahead and do another example with Andy&#39;s name."
    },
    {
      "index": 1419,
      "start_time": 4288600.0,
      "end_time": 4291770.0,
      "text": "And we&#39;ve indeed capitalized Andy&#39;s name."
    },
    {
      "index": 1420,
      "start_time": 4291770.0,
      "end_time": 4292710.0,
      "text": "So what&#39;s going on?"
    },
    {
      "index": 1421,
      "start_time": 4292710.0,
      "end_time": 4294270.0,
      "text": "And what&#39;s with all these dots?"
    },
    {
      "index": 1422,
      "start_time": 4294270.0,
      "end_time": 4296550.0,
      "text": "The only time we ever really got into dots in C"
    },
    {
      "index": 1423,
      "start_time": 4296550.0,
      "end_time": 4299800.0,
      "text": "was when we had structures or pointers thereto."
    },
    {
      "index": 1424,
      "start_time": 4299800.0,
      "end_time": 4304380.0,
      "text": "But it turns out that Python is an object oriented programming"
    },
    {
      "index": 1425,
      "start_time": 4304380.0,
      "end_time": 4306660.0,
      "text": "language in the sense that it has support"
    },
    {
      "index": 1426,
      "start_time": 4306660.0,
      "end_time": 4310180.0,
      "text": "for objects, full-fledged objects, really built into it."
    },
    {
      "index": 1427,
      "start_time": 4310180.0,
      "end_time": 4311660.0,
      "text": "C just has structs."
    },
    {
      "index": 1428,
      "start_time": 4311660.0,
      "end_time": 4315720.0,
      "text": "And structs, by definition, contain typically only data."
    },
    {
      "index": 1429,
      "start_time": 4315720.0,
      "end_time": 4319270.0,
      "text": "They will contain fields like dorm or house or name,"
    },
    {
      "index": 1430,
      "start_time": 4319270.0,
      "end_time": 4322910.0,
      "text": "or whatever it is we&#39;re implementing, like a student structure in C."
    },
    {
      "index": 1431,
      "start_time": 4322910.0,
      "end_time": 4326610.0,
      "text": "But it turns out that in Python and in other object-oriented language,"
    },
    {
      "index": 1432,
      "start_time": 4326610.0,
      "end_time": 4329750.0,
      "text": "you can have inside of structures objects, as they&#39;re more"
    },
    {
      "index": 1433,
      "start_time": 4329750.0,
      "end_time": 4333310.0,
      "text": "properly called, not only pieces of data, as we&#39;ll eventually see,"
    },
    {
      "index": 1434,
      "start_time": 4333310.0,
      "end_time": 4335930.0,
      "text": "but also built-in functionality."
    },
    {
      "index": 1435,
      "start_time": 4335930.0,
      "end_time": 4339470.0,
      "text": "So the syntax, to be fair, has been very weird when we look at strings."
    },
    {
      "index": 1436,
      "start_time": 4339470.0,
      "end_time": 4345660.0,
      "text": "But if you trust me when I say a string, or an STR variable, is an object,"
    },
    {
      "index": 1437,
      "start_time": 4345660.0,
      "end_time": 4348190.0,
      "text": "that object has inside of it somewhere underneath the hood"
    },
    {
      "index": 1438,
      "start_time": 4348190.0,
      "end_time": 4350400.0,
      "text": "a sequence of characters, whatever I&#39;ve typed."
    },
    {
      "index": 1439,
      "start_time": 4350400.0,
      "end_time": 4352740.0,
      "text": "But it also has apparently built-in functionality."
    },
    {
      "index": 1440,
      "start_time": 4352740.0,
      "end_time": 4355380.0,
      "text": "Among that functionality is a function, a.k.a."
    },
    {
      "index": 1441,
      "start_time": 4355380.0,
      "end_time": 4357300.0,
      "text": "a method called format."
    },
    {
      "index": 1442,
      "start_time": 4357300.0,
      "end_time": 4360700.0,
      "text": "Similarly do string objects in Python have"
    },
    {
      "index": 1443,
      "start_time": 4360700.0,
      "end_time": 4366210.0,
      "text": "a built-in function called capitalize that do exactly as you would expect."
    },
    {
      "index": 1444,
      "start_time": 4366210.0,
      "end_time": 4368790.0,
      "text": "So in C, we had toupper."
    },
    {
      "index": 1445,
      "start_time": 4368790.0,
      "end_time": 4370710.0,
      "text": "But that operated on just a single character."
    },
    {
      "index": 1446,
      "start_time": 4370710.0,
      "end_time": 4374340.0,
      "text": "And the burden was entirely on me to figure out what character in a string"
    },
    {
      "index": 1447,
      "start_time": 4374340.0,
      "end_time": 4376790.0,
      "text": "I wanted to make uppercase."
    },
    {
      "index": 1448,
      "start_time": 4376790.0,
      "end_time": 4380370.0,
      "text": "In Python, this built-in capitalize function for the string class"
    },
    {
      "index": 1449,
      "start_time": 4380370.0,
      "end_time": 4383320.0,
      "text": "will do exactly what we intend, uppercasing"
    },
    {
      "index": 1450,
      "start_time": 4383320.0,
      "end_time": 4386260.0,
      "text": "the first letter in a string and leaving everything else untouched."
    },
    {
      "index": 1451,
      "start_time": 4386260.0,
      "end_time": 4389330.0,
      "text": "But it turns out that in Python, a string"
    },
    {
      "index": 1452,
      "start_time": 4389330.0,
      "end_time": 4395240.0,
      "text": "is immutable, which is to say that once it&#39;s created, you can&#39;t change it."
    },
    {
      "index": 1453,
      "start_time": 4395240.0,
      "end_time": 4396860.0,
      "text": "And this is not the case in C."
    },
    {
      "index": 1454,
      "start_time": 4396860.0,
      "end_time": 4400980.0,
      "text": "In C, when we used getstring, or scanf, or malloc,"
    },
    {
      "index": 1455,
      "start_time": 4400980.0,
      "end_time": 4404950.0,
      "text": "or created strings on the stack by allocating them effectively as arrays,"
    },
    {
      "index": 1456,
      "start_time": 4404950.0,
      "end_time": 4409260.0,
      "text": "if we allocated memory on the heap or the stack and put strings there,"
    },
    {
      "index": 1457,
      "start_time": 4409260.0,
      "end_time": 4410971.0,
      "text": "we could change those strings thereafter."
    },
    {
      "index": 1458,
      "start_time": 4410970.0,
      "end_time": 4413219.0,
      "text": "And in fact, the earliest version of this program in C"
    },
    {
      "index": 1459,
      "start_time": 4413220.0,
      "end_time": 4419420.0,
      "text": "was buggy insofar as it accidentally capitalized both s and t,"
    },
    {
      "index": 1460,
      "start_time": 4419420.0,
      "end_time": 4421620.0,
      "text": "even though we only intended to capitalize t."
    },
    {
      "index": 1461,
      "start_time": 4421620.0,
      "end_time": 4425030.0,
      "text": "But it works right out of the box with Python, at least as implemented here."
    },
    {
      "index": 1462,
      "start_time": 4425030.0,
      "end_time": 4428220.0,
      "text": "Because it turns out once s exists as a string, that&#39;s it."
    },
    {
      "index": 1463,
      "start_time": 4428220.0,
      "end_time": 4430470.0,
      "text": "That&#39;s the sequence of characters you&#39;re going to get."
    },
    {
      "index": 1464,
      "start_time": 4430470.0,
      "end_time": 4432820.0,
      "text": "You can&#39;t go in and change just one of them."
    },
    {
      "index": 1465,
      "start_time": 4432820.0,
      "end_time": 4434570.0,
      "text": "And so what&#39;s really happening here when I"
    },
    {
      "index": 1466,
      "start_time": 4434570.0,
      "end_time": 4439270.0,
      "text": "call s.capitalize is this function is designed underneath the hood"
    },
    {
      "index": 1467,
      "start_time": 4439270.0,
      "end_time": 4443160.0,
      "text": "by the authors of Python to give you a copy of s"
    },
    {
      "index": 1468,
      "start_time": 4443160.0,
      "end_time": 4446970.0,
      "text": "but quickly change the first letter to a capital letter,"
    },
    {
      "index": 1469,
      "start_time": 4446970.0,
      "end_time": 4449340.0,
      "text": "and then return the resulting copy."
    },
    {
      "index": 1470,
      "start_time": 4449340.0,
      "end_time": 4451000.0,
      "text": "All of that happens for me."
    },
    {
      "index": 1471,
      "start_time": 4451000.0,
      "end_time": 4452630.0,
      "text": "I do not need to use malloc."
    },
    {
      "index": 1472,
      "start_time": 4452630.0,
      "end_time": 4453957.0,
      "text": "I do not need to do STR copy."
    },
    {
      "index": 1473,
      "start_time": 4453960.0,
      "end_time": 4455793.0,
      "text": "I don&#39;t need to iterate over the characters."
    },
    {
      "index": 1474,
      "start_time": 4455790.0,
      "end_time": 4459816.0,
      "text": "All of this we get for free, so to speak, with the language."
    },
    {
      "index": 1475,
      "start_time": 4462490.0,
      "end_time": 4469560.0,
      "text": "Let&#39;s look now at just where else we can go."
    },
    {
      "index": 1476,
      "start_time": 4469560.0,
      "end_time": 4473000.0,
      "text": "One of the biggest problems we ran into, recall, in C"
    },
    {
      "index": 1477,
      "start_time": 4473000.0,
      "end_time": 4475720.0,
      "text": "was near the end of our focus on it."
    },
    {
      "index": 1478,
      "start_time": 4475720.0,
      "end_time": 4480500.0,
      "text": "And we started tripping over issues like memory."
    },
    {
      "index": 1479,
      "start_time": 4480500.0,
      "end_time": 4484400.0,
      "text": "You&#39;ll recall in C, we had this example here, noswap.c."
    },
    {
      "index": 1480,
      "start_time": 4484400.0,
      "end_time": 4486560.0,
      "text": "And this program was pretty arbitrary."
    },
    {
      "index": 1481,
      "start_time": 4486560.0,
      "end_time": 4489080.0,
      "text": "It allocated an x and a y int and assigned"
    },
    {
      "index": 1482,
      "start_time": 4489080.0,
      "end_time": 4491020.0,
      "text": "them the values 1 and 2 respectively."
    },
    {
      "index": 1483,
      "start_time": 4491020.0,
      "end_time": 4494200.0,
      "text": "It claimed to swap them by calling the swap function."
    },
    {
      "index": 1484,
      "start_time": 4494200.0,
      "end_time": 4496760.0,
      "text": "But then even though it said it swapped them,"
    },
    {
      "index": 1485,
      "start_time": 4496760.0,
      "end_time": 4499914.0,
      "text": "it swapped only copies of those variables."
    },
    {
      "index": 1486,
      "start_time": 4499910.0,
      "end_time": 4502826.0,
      "text": "And indeed, the swap function, if we scroll down below the break here,"
    },
    {
      "index": 1487,
      "start_time": 4502830.0,
      "end_time": 4506250.0,
      "text": "you&#39;ll see that it declares two parameters, a and b,"
    },
    {
      "index": 1488,
      "start_time": 4506250.0,
      "end_time": 4512190.0,
      "text": "that by nature of how C argument passing happens become copies of x and y"
    },
    {
      "index": 1489,
      "start_time": 4512190.0,
      "end_time": 4515440.0,
      "text": "such that a and b do get successfully swapped,"
    },
    {
      "index": 1490,
      "start_time": 4515440.0,
      "end_time": 4518920.0,
      "text": "but there&#39;s no permanent effect on the caller&#39;s variables"
    },
    {
      "index": 1491,
      "start_time": 4518920.0,
      "end_time": 4522890.0,
      "text": "in main&#39;s stack frame because that was fundamentally flawed."
    },
    {
      "index": 1492,
      "start_time": 4522890.0,
      "end_time": 4526660.0,
      "text": "And so we fundamentally fix that with this version here."
    },
    {
      "index": 1493,
      "start_time": 4526660.0,
      "end_time": 4530210.0,
      "text": "In swap.c some weeks ago, we instead started"
    },
    {
      "index": 1494,
      "start_time": 4530210.0,
      "end_time": 4534310.0,
      "text": "passing an x and y by reference, by their addresses"
    },
    {
      "index": 1495,
      "start_time": 4534310.0,
      "end_time": 4537530.0,
      "text": "using the ampersand operator to get their address in memory,"
    },
    {
      "index": 1496,
      "start_time": 4537530.0,
      "end_time": 4541910.0,
      "text": "passing in effectively pointers, as declared here with the star operator."
    },
    {
      "index": 1497,
      "start_time": 4541910.0,
      "end_time": 4545270.0,
      "text": "And then we had to use the star operator inside here of swap"
    },
    {
      "index": 1498,
      "start_time": 4545270.0,
      "end_time": 4548780.0,
      "text": "to dereference those pointers, those addresses, and to go to them"
    },
    {
      "index": 1499,
      "start_time": 4548780.0,
      "end_time": 4552550.0,
      "text": "and actually change or get the values at those addresses."
    },
    {
      "index": 1500,
      "start_time": 4552550.0,
      "end_time": 4554560.0,
      "text": "So this worked."
    },
    {
      "index": 1501,
      "start_time": 4554560.0,
      "end_time": 4559710.0,
      "text": "But let me go ahead now and implement in Python something very similar."
    },
    {
      "index": 1502,
      "start_time": 4559710.0,
      "end_time": 4563710.0,
      "text": "I&#39;ve already written this one up in advance in noswap.py."
    },
    {
      "index": 1503,
      "start_time": 4563710.0,
      "end_time": 4565410.0,
      "text": "And it looks like the following."
    },
    {
      "index": 1504,
      "start_time": 4565410.0,
      "end_time": 4566454.0,
      "text": "I define main up top."
    },
    {
      "index": 1505,
      "start_time": 4566450.0,
      "end_time": 4568366.0,
      "text": "I&#39;m not going to bother using the CS50 library"
    },
    {
      "index": 1506,
      "start_time": 4568370.0,
      "end_time": 4569990.0,
      "text": "because everything is hard coded here."
    },
    {
      "index": 1507,
      "start_time": 4569990.0,
      "end_time": 4572200.0,
      "text": "x and y shall be 1 and 2 respectively."
    },
    {
      "index": 1508,
      "start_time": 4572200.0,
      "end_time": 4575340.0,
      "text": "Don&#39;t need to mention int again because it&#39;s loosely tied to this language."
    },
    {
      "index": 1509,
      "start_time": 4575340.0,
      "end_time": 4577256.0,
      "text": "Now I&#39;m going to go ahead and print x is this,"
    },
    {
      "index": 1510,
      "start_time": 4577260.0,
      "end_time": 4581554.0,
      "text": "y is this, swapping dot, dot, dot, passing in x and y."
    },
    {
      "index": 1511,
      "start_time": 4581550.0,
      "end_time": 4585400.0,
      "text": "And then I do what&#39;s here swapped."
    },
    {
      "index": 1512,
      "start_time": 4585400.0,
      "end_time": 4586370.0,
      "text": "I claim it&#39;s swapped."
    },
    {
      "index": 1513,
      "start_time": 4586370.0,
      "end_time": 4587730.0,
      "text": "I print them out again."
    },
    {
      "index": 1514,
      "start_time": 4587730.0,
      "end_time": 4589360.0,
      "text": "Swap seems to be implemented."
    },
    {
      "index": 1515,
      "start_time": 4589360.0,
      "end_time": 4591010.0,
      "text": "I&#39;m a little nervous about this."
    },
    {
      "index": 1516,
      "start_time": 4591010.0,
      "end_time": 4595980.0,
      "text": "This seems to really be just an implementation of literally noswap.c."
    },
    {
      "index": 1517,
      "start_time": 4595980.0,
      "end_time": 4598100.0,
      "text": "So let&#39;s try to confirm as much."
    },
    {
      "index": 1518,
      "start_time": 4598100.0,
      "end_time": 4607090.0,
      "text": "Let me go ahead now and go into this fourth week&#39;s directory in Python"
    },
    {
      "index": 1519,
      "start_time": 4607090.0,
      "end_time": 4610320.0,
      "text": "noswap.py, Enter."
    },
    {
      "index": 1520,
      "start_time": 4610320.0,
      "end_time": 4612290.0,
      "text": "Indeed, it doesn&#39;t seem to work."
    },
    {
      "index": 1521,
      "start_time": 4612290.0,
      "end_time": 4617080.0,
      "text": "So it would seem that Python 2 passes these things in by reference."
    },
    {
      "index": 1522,
      "start_time": 4617080.0,
      "end_time": 4618760.0,
      "text": "So how do I fix this?"
    },
    {
      "index": 1523,
      "start_time": 4618760.0,
      "end_time": 4623960.0,
      "text": "Unfortunately, the fix isn&#39;t as-- and this is kind of an understatement--"
    },
    {
      "index": 1524,
      "start_time": 4623960.0,
      "end_time": 4629210.0,
      "text": "easy as it was in C to just change these arguments to be by reference,"
    },
    {
      "index": 1525,
      "start_time": 4629210.0,
      "end_time": 4631530.0,
      "text": "and then use pointers to actually dereference them"
    },
    {
      "index": 1526,
      "start_time": 4631530.0,
      "end_time": 4635880.0,
      "text": "and actually do the actual swap because we don&#39;t have pointers in Python."
    },
    {
      "index": 1527,
      "start_time": 4635880.0,
      "end_time": 4639546.0,
      "text": "So in some way, here&#39;s another tradeoff that&#39;s been thematic."
    },
    {
      "index": 1528,
      "start_time": 4639550.0,
      "end_time": 4641174.0,
      "text": "We were getting all these new features."
    },
    {
      "index": 1529,
      "start_time": 4641170.0,
      "end_time": 4643120.0,
      "text": "Things are relatively simpler syntactically,"
    },
    {
      "index": 1530,
      "start_time": 4643120.0,
      "end_time": 4645620.0,
      "text": "even though it will take some getting used to, by all means,"
    },
    {
      "index": 1531,
      "start_time": 4645620.0,
      "end_time": 4646710.0,
      "text": "and some practice."
    },
    {
      "index": 1532,
      "start_time": 4646710.0,
      "end_time": 4651910.0,
      "text": "But now we&#39;ve given up that ability to look underneath the hood and change"
    },
    {
      "index": 1533,
      "start_time": 4651910.0,
      "end_time": 4654100.0,
      "text": "what&#39;s going on underneath the hood."
    },
    {
      "index": 1534,
      "start_time": 4654100.0,
      "end_time": 4656080.0,
      "text": "So pointers were scary."
    },
    {
      "index": 1535,
      "start_time": 4656080.0,
      "end_time": 4657170.0,
      "text": "And pointers were hard."
    },
    {
      "index": 1536,
      "start_time": 4657170.0,
      "end_time": 4659945.0,
      "text": "And managing memory is risky because you risk seg faults,"
    },
    {
      "index": 1537,
      "start_time": 4659940.0,
      "end_time": 4662315.0,
      "text": "and you might have memory leaks, and all of the headaches"
    },
    {
      "index": 1538,
      "start_time": 4662320.0,
      "end_time": 4666710.0,
      "text": "you might have had with psets four or five or any number of the challenges we"
    },
    {
      "index": 1539,
      "start_time": 4666710.0,
      "end_time": 4667894.0,
      "text": "had involving addresses."
    },
    {
      "index": 1540,
      "start_time": 4667890.0,
      "end_time": 4670056.0,
      "text": "You really start to bang your head against the wall,"
    },
    {
      "index": 1541,
      "start_time": 4670060.0,
      "end_time": 4673300.0,
      "text": "potentially, because you have access to that level of detail."
    },
    {
      "index": 1542,
      "start_time": 4673300.0,
      "end_time": 4676010.0,
      "text": "Unfortunately, as soon as it&#39;s taken away,"
    },
    {
      "index": 1543,
      "start_time": 4676010.0,
      "end_time": 4679570.0,
      "text": "we would seem to lose the ability to solve certain problems."
    },
    {
      "index": 1544,
      "start_time": 4679570.0,
      "end_time": 4683510.0,
      "text": "And indeed, in this case, can&#39;t really solve it in the same way."
    },
    {
      "index": 1545,
      "start_time": 4683510.0,
      "end_time": 4686110.0,
      "text": "There are multiple ways we could address this."
    },
    {
      "index": 1546,
      "start_time": 4686110.0,
      "end_time": 4690260.0,
      "text": "But let me propose one that has the advantage of introducing"
    },
    {
      "index": 1547,
      "start_time": 4690260.0,
      "end_time": 4694600.0,
      "text": "a tiny piece of syntax that&#39;s pretty cool to see it the first time."
    },
    {
      "index": 1548,
      "start_time": 4694600.0,
      "end_time": 4699820.0,
      "text": "So in swap.py, let me go ahead and declare x is 1 and y is 2."
    },
    {
      "index": 1549,
      "start_time": 4699820.0,
      "end_time": 4704390.0,
      "text": "Let me go ahead and print out x is this placeholder, and then plug in x there."
    },
    {
      "index": 1550,
      "start_time": 4704390.0,
      "end_time": 4707430.0,
      "text": "And then go ahead and print out y is this placeholder,"
    },
    {
      "index": 1551,
      "start_time": 4707430.0,
      "end_time": 4711340.0,
      "text": "and then plug in this placeholder there."
    },
    {
      "index": 1552,
      "start_time": 4711340.0,
      "end_time": 4715220.0,
      "text": "And now let me go ahead and say print swapping dot, dot, dot."
    },
    {
      "index": 1553,
      "start_time": 4715220.0,
      "end_time": 4717790.0,
      "text": "And then we&#39;ll come back to this to do."
    },
    {
      "index": 1554,
      "start_time": 4717790.0,
      "end_time": 4724000.0,
      "text": "And now I&#39;m going to go ahead and say print swapped boldly,"
    },
    {
      "index": 1555,
      "start_time": 4724000.0,
      "end_time": 4731150.0,
      "text": "and then print x is this placeholder, x, and then print y"
    },
    {
      "index": 1556,
      "start_time": 4731150.0,
      "end_time": 4734660.0,
      "text": "is this placeholder, and then format y."
    },
    {
      "index": 1557,
      "start_time": 4734660.0,
      "end_time": 4737050.0,
      "text": "So all that remains to do is the interesting part."
    },
    {
      "index": 1558,
      "start_time": 4737050.0,
      "end_time": 4739590.0,
      "text": "So it turns out we could do something like this."
    },
    {
      "index": 1559,
      "start_time": 4739590.0,
      "end_time": 4745490.0,
      "text": "We could say temp gets x, and then x gets y, and y gets temp."
    },
    {
      "index": 1560,
      "start_time": 4745490.0,
      "end_time": 4746600.0,
      "text": "And that would work."
    },
    {
      "index": 1561,
      "start_time": 4746600.0,
      "end_time": 4749480.0,
      "text": "It&#39;s a little inelegant because now, the beauty"
    },
    {
      "index": 1562,
      "start_time": 4749480.0,
      "end_time": 4751347.0,
      "text": "of having a swap function before in C was"
    },
    {
      "index": 1563,
      "start_time": 4751350.0,
      "end_time": 4752933.0,
      "text": "that we were factoring out that logic."
    },
    {
      "index": 1564,
      "start_time": 4752930.0,
      "end_time": 4754320.0,
      "text": "We could use it in multiple places."
    },
    {
      "index": 1565,
      "start_time": 4754320.0,
      "end_time": 4755660.0,
      "text": "Made the code a little more readable."
    },
    {
      "index": 1566,
      "start_time": 4755660.0,
      "end_time": 4758034.0,
      "text": "And now, in the middle of this beautiful print statement,"
    },
    {
      "index": 1567,
      "start_time": 4758030.0,
      "end_time": 4759246.0,
      "text": "I&#39;ve got this mess here."
    },
    {
      "index": 1568,
      "start_time": 4759250.0,
      "end_time": 4761930.0,
      "text": "But it turns out that&#39;s the right spirit, at least"
    },
    {
      "index": 1569,
      "start_time": 4761930.0,
      "end_time": 4763610.0,
      "text": "to keeping the solution simple."
    },
    {
      "index": 1570,
      "start_time": 4763610.0,
      "end_time": 4765630.0,
      "text": "But notice what you can do in Python."
    },
    {
      "index": 1571,
      "start_time": 4765630.0,
      "end_time": 4770460.0,
      "text": "It turns out that you can actually swap two things at once."
    },
    {
      "index": 1572,
      "start_time": 4770460.0,
      "end_time": 4774020.0,
      "text": "And it&#39;s because of a feature that&#39;s implicit in the syntax here."
    },
    {
      "index": 1573,
      "start_time": 4774020.0,
      "end_time": 4777990.0,
      "text": "These are actually data types on each side of the equals sign."
    },
    {
      "index": 1574,
      "start_time": 4777990.0,
      "end_time": 4780650.0,
      "text": "It turns out that Python supports not just lists,"
    },
    {
      "index": 1575,
      "start_time": 4780650.0,
      "end_time": 4783280.0,
      "text": "which we&#39;ve generally known thus far as arrays in C,"
    },
    {
      "index": 1576,
      "start_time": 4783280.0,
      "end_time": 4787130.0,
      "text": "but it also supports, again, tuples, a data structure that"
    },
    {
      "index": 1577,
      "start_time": 4787130.0,
      "end_time": 4790320.0,
      "text": "allows you a comma separated list of values,"
    },
    {
      "index": 1578,
      "start_time": 4790320.0,
      "end_time": 4793960.0,
      "text": "the burden of which is entirely on you to remember what comes first,"
    },
    {
      "index": 1579,
      "start_time": 4793960.0,
      "end_time": 4795675.0,
      "text": "what comes last, what&#39;s in the middle."
    },
    {
      "index": 1580,
      "start_time": 4795670.0,
      "end_time": 4798795.0,
      "text": "But by way of doing this-- and I can do this in a couple of different ways."
    },
    {
      "index": 1581,
      "start_time": 4798800.0,
      "end_time": 4800810.0,
      "text": "And I can do it not even just with tuples."
    },
    {
      "index": 1582,
      "start_time": 4800810.0,
      "end_time": 4804020.0,
      "text": "You can think of this a little more like this, like an xy coordinates,"
    },
    {
      "index": 1583,
      "start_time": 4804020.0,
      "end_time": 4805790.0,
      "text": "Cartesian plane and so forth."
    },
    {
      "index": 1584,
      "start_time": 4805790.0,
      "end_time": 4809100.0,
      "text": "You can actually consider this as happening really simultaneously,"
    },
    {
      "index": 1585,
      "start_time": 4809100.0,
      "end_time": 4812310.0,
      "text": "but letting the language, Python and its interpreter,"
    },
    {
      "index": 1586,
      "start_time": 4812310.0,
      "end_time": 4816240.0,
      "text": "figure out how to do that switcheroo without losing"
    },
    {
      "index": 1587,
      "start_time": 4816240.0,
      "end_time": 4818560.0,
      "text": "one or both of the variables in the process."
    },
    {
      "index": 1588,
      "start_time": 4818560.0,
      "end_time": 4820960.0,
      "text": "It doesn&#39;t matter to us the low level implementation"
    },
    {
      "index": 1589,
      "start_time": 4820960.0,
      "end_time": 4824400.0,
      "text": "detail that that might actually require some kind of temporary storage."
    },
    {
      "index": 1590,
      "start_time": 4824400.0,
      "end_time": 4826700.0,
      "text": "That is now a feature of the language that we"
    },
    {
      "index": 1591,
      "start_time": 4826700.0,
      "end_time": 4832040.0,
      "text": "get for free if we actually want to assign two values simultaneously."
    },
    {
      "index": 1592,
      "start_time": 4832040.0,
      "end_time": 4834370.0,
      "text": "And this is actually powerful for that same reason."
    },
    {
      "index": 1593,
      "start_time": 4834370.0,
      "end_time": 4837140.0,
      "text": "It turns out that if you have some function called"
    },
    {
      "index": 1594,
      "start_time": 4837140.0,
      "end_time": 4841750.0,
      "text": "foo that returns a single value, you could do something like this"
    },
    {
      "index": 1595,
      "start_time": 4841750.0,
      "end_time": 4845140.0,
      "text": "to get back that value, as we&#39;ve been doing all throughout these examples."
    },
    {
      "index": 1596,
      "start_time": 4845140.0,
      "end_time": 4848980.0,
      "text": "But it turns out foo could potentially return two values, which"
    },
    {
      "index": 1597,
      "start_time": 4848980.0,
      "end_time": 4850320.0,
      "text": "you could assign like this."
    },
    {
      "index": 1598,
      "start_time": 4850320.0,
      "end_time": 4852780.0,
      "text": "Or foo could return three values like this."
    },
    {
      "index": 1599,
      "start_time": 4852780.0,
      "end_time": 4855930.0,
      "text": "If foo was indeed implemented as returning a tuple,"
    },
    {
      "index": 1600,
      "start_time": 4855930.0,
      "end_time": 4858465.0,
      "text": "a comma separated list of values like this."
    },
    {
      "index": 1601,
      "start_time": 4858460.0,
      "end_time": 4860835.0,
      "text": "So you don&#39;t want to take this necessarily to an extreme."
    },
    {
      "index": 1602,
      "start_time": 4860840.0,
      "end_time": 4862840.0,
      "text": "But in C, you might recall that we did not"
    },
    {
      "index": 1603,
      "start_time": 4862840.0,
      "end_time": 4866050.0,
      "text": "have this capability of being able to return multiple values."
    },
    {
      "index": 1604,
      "start_time": 4866050.0,
      "end_time": 4868960.0,
      "text": "And that is now an option, although there&#39;s alternatives"
    },
    {
      "index": 1605,
      "start_time": 4868960.0,
      "end_time": 4872460.0,
      "text": "to needing to do that altogether."
    },
    {
      "index": 1606,
      "start_time": 4872460.0,
      "end_time": 4876700.0,
      "text": "So we&#39;re almost caught up in time in Python vis-a-vis where we started"
    },
    {
      "index": 1607,
      "start_time": 4876700.0,
      "end_time": 4878940.0,
      "text": "and where we ended with C. But let&#39;s introduce"
    },
    {
      "index": 1608,
      "start_time": 4878940.0,
      "end_time": 4883460.0,
      "text": "one other feature of Python that allows us to translate something"
    },
    {
      "index": 1609,
      "start_time": 4883460.0,
      "end_time": 4885110.0,
      "text": "from C as well."
    },
    {
      "index": 1610,
      "start_time": 4885110.0,
      "end_time": 4888310.0,
      "text": "Recall that we introduced structures some time ago."
    },
    {
      "index": 1611,
      "start_time": 4888310.0,
      "end_time": 4890870.0,
      "text": "And indeed, I&#39;m going to go ahead here and save"
    },
    {
      "index": 1612,
      "start_time": 4890870.0,
      "end_time": 4897050.0,
      "text": "a file called structs0.py, which is a bit misleading because these"
    },
    {
      "index": 1613,
      "start_time": 4897050.0,
      "end_time": 4898300.0,
      "text": "aren&#39;t technically structures."
    },
    {
      "index": 1614,
      "start_time": 4898300.0,
      "end_time": 4900500.0,
      "text": "They&#39;re objects, as I&#39;m about to use."
    },
    {
      "index": 1615,
      "start_time": 4900500.0,
      "end_time": 4902240.0,
      "text": "But we&#39;ll clarify that in a moment."
    },
    {
      "index": 1616,
      "start_time": 4902240.0,
      "end_time": 4904930.0,
      "text": "Let me go ahead here and import CS50."
    },
    {
      "index": 1617,
      "start_time": 4904930.0,
      "end_time": 4910680.0,
      "text": "And let me also import, using slightly different syntax, this."
    },
    {
      "index": 1618,
      "start_time": 4910680.0,
      "end_time": 4916950.0,
      "text": "In a moment, I&#39;m going to create on the fly my own Python module, my own class,"
    },
    {
      "index": 1619,
      "start_time": 4916950.0,
      "end_time": 4920850.0,
      "text": "if you will, called student, inside of which"
    },
    {
      "index": 1620,
      "start_time": 4920850.0,
      "end_time": 4924290.0,
      "text": "is going to be a class called Student capital S."
    },
    {
      "index": 1621,
      "start_time": 4924290.0,
      "end_time": 4928110.0,
      "text": "And first, let&#39;s assume that it exists so that I can just"
    },
    {
      "index": 1622,
      "start_time": 4928110.0,
      "end_time": 4930190.0,
      "text": "take on faith that it will soon exist."
    },
    {
      "index": 1623,
      "start_time": 4930190.0,
      "end_time": 4935580.0,
      "text": "And let me give myself a list of students like this, an empty array,"
    },
    {
      "index": 1624,
      "start_time": 4935580.0,
      "end_time": 4938860.0,
      "text": "if you will, as implied by the square bracket notation here."
    },
    {
      "index": 1625,
      "start_time": 4938860.0,
      "end_time": 4939634.0,
      "text": "So new syntax."
    },
    {
      "index": 1626,
      "start_time": 4939630.0,
      "end_time": 4941296.0,
      "text": "But what&#39;s nice is it&#39;s pretty readable."
    },
    {
      "index": 1627,
      "start_time": 4941300.0,
      "end_time": 4943510.0,
      "text": "On the left is the variable&#39;s name, assigning"
    },
    {
      "index": 1628,
      "start_time": 4943510.0,
      "end_time": 4944800.0,
      "text": "what&#39;s on the right hand side."
    },
    {
      "index": 1629,
      "start_time": 4944800.0,
      "end_time": 4947480.0,
      "text": "We&#39;ve seen square brackets for arrays or lists more generally."
    },
    {
      "index": 1630,
      "start_time": 4947480.0,
      "end_time": 4950460.0,
      "text": "So this just means give me an empty list and assign it to students."
    },
    {
      "index": 1631,
      "start_time": 4950460.0,
      "end_time": 4955320.0,
      "text": "Unlike strings, a list in Python is mutable, changeable."
    },
    {
      "index": 1632,
      "start_time": 4955320.0,
      "end_time": 4958910.0,
      "text": "So this does not mean that students is forever going to be an empty list."
    },
    {
      "index": 1633,
      "start_time": 4958910.0,
      "end_time": 4962930.0,
      "text": "We can add and append things to it, much like a stack or a queue or a linked"
    },
    {
      "index": 1634,
      "start_time": 4962930.0,
      "end_time": 4964962.0,
      "text": "list more generally."
    },
    {
      "index": 1635,
      "start_time": 4964960.0,
      "end_time": 4966418.0,
      "text": "So now let me go ahead and do this."
    },
    {
      "index": 1636,
      "start_time": 4966420.0,
      "end_time": 4970390.0,
      "text": "For i in range three-- I&#39;m just going to arbitrarily do this three times, just"
    },
    {
      "index": 1637,
      "start_time": 4970390.0,
      "end_time": 4971930.0,
      "text": "like we did a few weeks ago."
    },
    {
      "index": 1638,
      "start_time": 4971930.0,
      "end_time": 4977110.0,
      "text": "I&#39;m going to in here now print out print name with no line ending, just"
    },
    {
      "index": 1639,
      "start_time": 4977110.0,
      "end_time": 4978440.0,
      "text": "to keep things pretty."
    },
    {
      "index": 1640,
      "start_time": 4978440.0,
      "end_time": 4980810.0,
      "text": "Let me go ahead then and use CS50.getstring"
    },
    {
      "index": 1641,
      "start_time": 4980810.0,
      "end_time": 4983030.0,
      "text": "to actually get a student&#39;s name."
    },
    {
      "index": 1642,
      "start_time": 4983030.0,
      "end_time": 4986270.0,
      "text": "Then let me say hey, give me your dorm with no line ending,"
    },
    {
      "index": 1643,
      "start_time": 4986270.0,
      "end_time": 4987430.0,
      "text": "just to keep it clean."
    },
    {
      "index": 1644,
      "start_time": 4987430.0,
      "end_time": 4990290.0,
      "text": "And then use dorm CS50 get string."
    },
    {
      "index": 1645,
      "start_time": 4990290.0,
      "end_time": 4997110.0,
      "text": "And then down here, let me do students.append students name dorm."
    },
    {
      "index": 1646,
      "start_time": 4997110.0,
      "end_time": 4998560.0,
      "text": "So this is new now."
    },
    {
      "index": 1647,
      "start_time": 4998560.0,
      "end_time": 5000970.0,
      "text": "And we&#39;ll come back to this in just a moment."
    },
    {
      "index": 1648,
      "start_time": 5000970.0,
      "end_time": 5003460.0,
      "text": "Then after this loop, let&#39;s just for good measure do this."
    },
    {
      "index": 1649,
      "start_time": 5003460.0,
      "end_time": 5008690.0,
      "text": "For students in students, print the following placeholder"
    },
    {
      "index": 1650,
      "start_time": 5008690.0,
      "end_time": 5011200.0,
      "text": "is in placeholder."
    },
    {
      "index": 1651,
      "start_time": 5011200.0,
      "end_time": 5016580.0,
      "text": "Then format student.name, student.dorm."
    },
    {
      "index": 1652,
      "start_time": 5016580.0,
      "end_time": 5020120.0,
      "text": "So now things are getting a little more interesting."
    },
    {
      "index": 1653,
      "start_time": 5020120.0,
      "end_time": 5022920.0,
      "text": "I have now done a few things in this program."
    },
    {
      "index": 1654,
      "start_time": 5022920.0,
      "end_time": 5025040.0,
      "text": "I have imported something called a student, which"
    },
    {
      "index": 1655,
      "start_time": 5025040.0,
      "end_time": 5026920.0,
      "text": "doesn&#39;t yet exist but will in a moment."
    },
    {
      "index": 1656,
      "start_time": 5026920.0,
      "end_time": 5031280.0,
      "text": "I have declared a variable, or a list, specifically,"
    },
    {
      "index": 1657,
      "start_time": 5031280.0,
      "end_time": 5033530.0,
      "text": "called students, and assigned it an empty list."
    },
    {
      "index": 1658,
      "start_time": 5033530.0,
      "end_time": 5035290.0,
      "text": "Then I&#39;m iterating three times arbitrarily"
    },
    {
      "index": 1659,
      "start_time": 5035290.0,
      "end_time": 5038660.0,
      "text": "just so we have a demo to play with saying, give me your name,"
    },
    {
      "index": 1660,
      "start_time": 5038660.0,
      "end_time": 5041250.0,
      "text": "give me your dorm, and then this."
    },
    {
      "index": 1661,
      "start_time": 5041250.0,
      "end_time": 5044910.0,
      "text": "So students is an object, as we say, a structure in C."
    },
    {
      "index": 1662,
      "start_time": 5044910.0,
      "end_time": 5049137.0,
      "text": "But now we call them objects, inside of which is going to be data."
    },
    {
      "index": 1663,
      "start_time": 5049140.0,
      "end_time": 5050223.0,
      "text": "There&#39;s not much data now."
    },
    {
      "index": 1664,
      "start_time": 5050220.0,
      "end_time": 5051450.0,
      "text": "It&#39;s just an empty list."
    },
    {
      "index": 1665,
      "start_time": 5051450.0,
      "end_time": 5054060.0,
      "text": "But it turns out, if you read the documentation for Python,"
    },
    {
      "index": 1666,
      "start_time": 5054060.0,
      "end_time": 5058660.0,
      "text": "you&#39;ll see that a list has some built-in functions, or methods, as"
    },
    {
      "index": 1667,
      "start_time": 5058660.0,
      "end_time": 5062650.0,
      "text": "well-- not just data, but also functionality-- one of which"
    },
    {
      "index": 1668,
      "start_time": 5062650.0,
      "end_time": 5064069.0,
      "text": "is called append."
    },
    {
      "index": 1669,
      "start_time": 5064070.0,
      "end_time": 5065861.0,
      "text": "And if we read the documentation, we see we"
    },
    {
      "index": 1670,
      "start_time": 5065860.0,
      "end_time": 5070450.0,
      "text": "can pass in an argument to append that is a variable or a value"
    },
    {
      "index": 1671,
      "start_time": 5070450.0,
      "end_time": 5073440.0,
      "text": "that we want to append to the list, add to the end of it."
    },
    {
      "index": 1672,
      "start_time": 5073440.0,
      "end_time": 5076150.0,
      "text": "And we&#39;ll see in a moment what this syntax means."
    },
    {
      "index": 1673,
      "start_time": 5076150.0,
      "end_time": 5082880.0,
      "text": "It turns out this is similar in spirit to using malloc in C to malloc a struct"
    },
    {
      "index": 1674,
      "start_time": 5082880.0,
      "end_time": 5087790.0,
      "text": "and then put inside of it two values, name and dorm."
    },
    {
      "index": 1675,
      "start_time": 5087790.0,
      "end_time": 5091390.0,
      "text": "But what&#39;s nice about Python and languages like PHP and Ruby"
    },
    {
      "index": 1676,
      "start_time": 5091390.0,
      "end_time": 5094420.0,
      "text": "and Java, all of which support something similar in spirit,"
    },
    {
      "index": 1677,
      "start_time": 5094420.0,
      "end_time": 5098940.0,
      "text": "is this single line gives me a new student object, inside of which"
    },
    {
      "index": 1678,
      "start_time": 5098940.0,
      "end_time": 5102230.0,
      "text": "is that student&#39;s name and dorm as strings."
    },
    {
      "index": 1679,
      "start_time": 5102230.0,
      "end_time": 5104900.0,
      "text": "Later, outside of this loop, just for good measure,"
    },
    {
      "index": 1680,
      "start_time": 5104900.0,
      "end_time": 5107490.0,
      "text": "we reiterate over this list as follows."
    },
    {
      "index": 1681,
      "start_time": 5107490.0,
      "end_time": 5110330.0,
      "text": "For student in students, well, what is this doing?"
    },
    {
      "index": 1682,
      "start_time": 5110330.0,
      "end_time": 5114250.0,
      "text": "This, again, is an iterable list."
    },
    {
      "index": 1683,
      "start_time": 5114250.0,
      "end_time": 5121180.0,
      "text": "So not irritable, iterable list, whereby you can iterate over this list,"
    },
    {
      "index": 1684,
      "start_time": 5121180.0,
      "end_time": 5125760.0,
      "text": "calling each element inside of it temporarily student,"
    },
    {
      "index": 1685,
      "start_time": 5125760.0,
      "end_time": 5127560.0,
      "text": "as in our previous use of for."
    },
    {
      "index": 1686,
      "start_time": 5127560.0,
      "end_time": 5129940.0,
      "text": "And then just print so-and-so is in this dorm,"
    },
    {
      "index": 1687,
      "start_time": 5129940.0,
      "end_time": 5135430.0,
      "text": "formatting those two values using the same dot notation as we used in C."
    },
    {
      "index": 1688,
      "start_time": 5135430.0,
      "end_time": 5137424.0,
      "text": "So we need a students object."
    },
    {
      "index": 1689,
      "start_time": 5137420.0,
      "end_time": 5138836.0,
      "text": "Otherwise, what&#39;s going to happen?"
    },
    {
      "index": 1690,
      "start_time": 5138840.0,
      "end_time": 5141690.0,
      "text": "Let me go ahead and try to run this incorrectly as follows."
    },
    {
      "index": 1691,
      "start_time": 5141690.0,
      "end_time": 5144000.0,
      "text": "Python struct0.py."
    },
    {
      "index": 1692,
      "start_time": 5144000.0,
      "end_time": 5145290.0,
      "text": "Enter."
    },
    {
      "index": 1693,
      "start_time": 5145290.0,
      "end_time": 5146100.0,
      "text": "Import error."
    },
    {
      "index": 1694,
      "start_time": 5146100.0,
      "end_time": 5147950.0,
      "text": "No module named student."
    },
    {
      "index": 1695,
      "start_time": 5147950.0,
      "end_time": 5151380.0,
      "text": "So creating a Python module, it turns out, is super simple."
    },
    {
      "index": 1696,
      "start_time": 5151380.0,
      "end_time": 5153390.0,
      "text": "I create a file called student.py."
    },
    {
      "index": 1697,
      "start_time": 5153390.0,
      "end_time": 5155450.0,
      "text": "I now have a module called Student."
    },
    {
      "index": 1698,
      "start_time": 5155450.0,
      "end_time": 5157190.0,
      "text": "Of course, there&#39;s nothing in there."
    },
    {
      "index": 1699,
      "start_time": 5157190.0,
      "end_time": 5159260.0,
      "text": "So I need to actually populate it."
    },
    {
      "index": 1700,
      "start_time": 5159260.0,
      "end_time": 5160700.0,
      "text": "So let me go ahead and do this."
    },
    {
      "index": 1701,
      "start_time": 5160700.0,
      "end_time": 5164050.0,
      "text": "And we&#39;ll come back to this in the future with a bit more complexity."
    },
    {
      "index": 1702,
      "start_time": 5164050.0,
      "end_time": 5166840.0,
      "text": "But for now, let me introduce, with a bit of a wave"
    },
    {
      "index": 1703,
      "start_time": 5166840.0,
      "end_time": 5168270.0,
      "text": "of the hand, the following."
    },
    {
      "index": 1704,
      "start_time": 5168270.0,
      "end_time": 5172440.0,
      "text": "If I want to create a structure called Student, technically in Python,"
    },
    {
      "index": 1705,
      "start_time": 5172440.0,
      "end_time": 5174380.0,
      "text": "it&#39;s called a class."
    },
    {
      "index": 1706,
      "start_time": 5174380.0,
      "end_time": 5176810.0,
      "text": "And that class should be Student, the convention of which"
    },
    {
      "index": 1707,
      "start_time": 5176810.0,
      "end_time": 5179420.0,
      "text": "is to call your structures in Python, your classes,"
    },
    {
      "index": 1708,
      "start_time": 5179420.0,
      "end_time": 5181830.0,
      "text": "with a capital letter for the first letter."
    },
    {
      "index": 1709,
      "start_time": 5181830.0,
      "end_time": 5185610.0,
      "text": "And now I&#39;m going to define a standard method called"
    },
    {
      "index": 1710,
      "start_time": 5185610.0,
      "end_time": 5190720.0,
      "text": "init that takes as its first argument a parameter that&#39;s conventionally"
    },
    {
      "index": 1711,
      "start_time": 5190720.0,
      "end_time": 5195250.0,
      "text": "called self, and then any number of other arguments that I want to pass it."
    },
    {
      "index": 1712,
      "start_time": 5195250.0,
      "end_time": 5198280.0,
      "text": "And then inside here, I&#39;m going to do self.name"
    },
    {
      "index": 1713,
      "start_time": 5198280.0,
      "end_time": 5202010.0,
      "text": "gets name and self.dorm gets dorm."
    },
    {
      "index": 1714,
      "start_time": 5202010.0,
      "end_time": 5205740.0,
      "text": "So this is perhaps the most new-looking piece of code"
    },
    {
      "index": 1715,
      "start_time": 5205740.0,
      "end_time": 5207640.0,
      "text": "that we&#39;ve seen thus far in Python."
    },
    {
      "index": 1716,
      "start_time": 5207640.0,
      "end_time": 5209920.0,
      "text": "And we&#39;ll explain it just at a high level for now."
    },
    {
      "index": 1717,
      "start_time": 5209920.0,
      "end_time": 5213360.0,
      "text": "But in line 1, we&#39;re saying, hey Python, give me a new structure."
    },
    {
      "index": 1718,
      "start_time": 5213360.0,
      "end_time": 5217600.0,
      "text": "Give me a class called Student, capital S. Line 2, hey Python, inside"
    },
    {
      "index": 1719,
      "start_time": 5217600.0,
      "end_time": 5221340.0,
      "text": "of this class, there shall be a method, a function,"
    },
    {
      "index": 1720,
      "start_time": 5221340.0,
      "end_time": 5223890.0,
      "text": "that&#39;s called init for initialization."
    },
    {
      "index": 1721,
      "start_time": 5223890.0,
      "end_time": 5226950.0,
      "text": "And it&#39;s going to take by convention three arguments, the first of which"
    },
    {
      "index": 1722,
      "start_time": 5226950.0,
      "end_time": 5229950.0,
      "text": "you just have to do, let&#39;s say, for now, the second and third"
    },
    {
      "index": 1723,
      "start_time": 5229950.0,
      "end_time": 5232280.0,
      "text": "and beyond of which are completely up to you."
    },
    {
      "index": 1724,
      "start_time": 5232280.0,
      "end_time": 5234380.0,
      "text": "Name and dorm is what I chose."
    },
    {
      "index": 1725,
      "start_time": 5234380.0,
      "end_time": 5236510.0,
      "text": "And what&#39;s neat is this."
    },
    {
      "index": 1726,
      "start_time": 5236510.0,
      "end_time": 5243300.0,
      "text": "Lines 3 and 4 mean whatever the user passes into me as a student&#39;s name"
    },
    {
      "index": 1727,
      "start_time": 5243300.0,
      "end_time": 5249720.0,
      "text": "and dorm when this class is instantiated, allocated as an object,"
    },
    {
      "index": 1728,
      "start_time": 5249720.0,
      "end_time": 5255150.0,
      "text": "go ahead and remember their name and dorm inside of these instance variables"
    },
    {
      "index": 1729,
      "start_time": 5255150.0,
      "end_time": 5258680.0,
      "text": "called self.name and self.dorm."
    },
    {
      "index": 1730,
      "start_time": 5258680.0,
      "end_time": 5261020.0,
      "text": "So if you think of the scenario as follows,"
    },
    {
      "index": 1731,
      "start_time": 5261020.0,
      "end_time": 5266900.0,
      "text": "in struct0.py, we had this line of code toward the end."
    },
    {
      "index": 1732,
      "start_time": 5266900.0,
      "end_time": 5271000.0,
      "text": "Not only were we appending something to the list called Students."
    },
    {
      "index": 1733,
      "start_time": 5271000.0,
      "end_time": 5273330.0,
      "text": "We had this highlighted portion of code."
    },
    {
      "index": 1734,
      "start_time": 5273330.0,
      "end_time": 5277930.0,
      "text": "Capital Student, open paren, name, dorm, closed paren."
    },
    {
      "index": 1735,
      "start_time": 5277930.0,
      "end_time": 5281400.0,
      "text": "That is similar in spirit, again, to calling malloc in C"
    },
    {
      "index": 1736,
      "start_time": 5281400.0,
      "end_time": 5285590.0,
      "text": "and automatically, all in one breath, installing inside of it"
    },
    {
      "index": 1737,
      "start_time": 5285590.0,
      "end_time": 5287110.0,
      "text": "two values, name and dorm."
    },
    {
      "index": 1738,
      "start_time": 5287110.0,
      "end_time": 5290260.0,
      "text": "So if this is similar in spirit to malloc, you can think of this line"
    },
    {
      "index": 1739,
      "start_time": 5290260.0,
      "end_time": 5296120.0,
      "text": "here, this highlighted portion, as creating somewhere in memory,"
    },
    {
      "index": 1740,
      "start_time": 5296120.0,
      "end_time": 5300270.0,
      "text": "in your computer-- doesn&#39;t matter where-- a structure like my fist here,"
    },
    {
      "index": 1741,
      "start_time": 5300270.0,
      "end_time": 5302020.0,
      "text": "passing into it name and dorm."
    },
    {
      "index": 1742,
      "start_time": 5302020.0,
      "end_time": 5307920.0,
      "text": "And then what happens on those two lines of code in student.py, lines 3 and 4,"
    },
    {
      "index": 1743,
      "start_time": 5307920.0,
      "end_time": 5311320.0,
      "text": "is if name and dorm are the two values that were passed in,"
    },
    {
      "index": 1744,
      "start_time": 5311320.0,
      "end_time": 5315900.0,
      "text": "they get stored inside of this structure and saved permanently"
    },
    {
      "index": 1745,
      "start_time": 5315900.0,
      "end_time": 5319746.0,
      "text": "in what are called instance variables inside of self."
    },
    {
      "index": 1746,
      "start_time": 5319750.0,
      "end_time": 5323824.0,
      "text": "Self just refers to the object that has been allocated."
    },
    {
      "index": 1747,
      "start_time": 5323820.0,
      "end_time": 5325860.0,
      "text": "So we&#39;ll come back to that before long."
    },
    {
      "index": 1748,
      "start_time": 5325860.0,
      "end_time": 5329250.0,
      "text": "But just take on faith for now that init has to be the name of the method"
    },
    {
      "index": 1749,
      "start_time": 5329250.0,
      "end_time": 5330100.0,
      "text": "that you use."
    },
    {
      "index": 1750,
      "start_time": 5330100.0,
      "end_time": 5333830.0,
      "text": "Self is conventionally used as the first argument there."
    },
    {
      "index": 1751,
      "start_time": 5333830.0,
      "end_time": 5337150.0,
      "text": "And this just ensures that we&#39;re remembering a student&#39;s"
    },
    {
      "index": 1752,
      "start_time": 5337150.0,
      "end_time": 5340070.0,
      "text": "name and his or her dorm as well."
    },
    {
      "index": 1753,
      "start_time": 5340070.0,
      "end_time": 5343920.0,
      "text": "So if I now run this, you&#39;ll see I&#39;m prompted for David."
    },
    {
      "index": 1754,
      "start_time": 5343920.0,
      "end_time": 5351930.0,
      "text": "And I&#39;ll say Mather and Zamaila and Courier and Rob and Kirkland."
    },
    {
      "index": 1755,
      "start_time": 5351930.0,
      "end_time": 5352740.0,
      "text": "Enter."
    },
    {
      "index": 1756,
      "start_time": 5352740.0,
      "end_time": 5354490.0,
      "text": "And the program doesn&#39;t do all that much."
    },
    {
      "index": 1757,
      "start_time": 5354490.0,
      "end_time": 5357170.0,
      "text": "But it manipulates and it creates these objects,"
    },
    {
      "index": 1758,
      "start_time": 5357170.0,
      "end_time": 5360390.0,
      "text": "and ultimately does something useful with them."
    },
    {
      "index": 1759,
      "start_time": 5360390.0,
      "end_time": 5362620.0,
      "text": "But it throws the information away."
    },
    {
      "index": 1760,
      "start_time": 5362620.0,
      "end_time": 5365170.0,
      "text": "And so for our command line examples here,"
    },
    {
      "index": 1761,
      "start_time": 5365170.0,
      "end_time": 5369310.0,
      "text": "let&#39;s do one final example that improves upon that as follows."
    },
    {
      "index": 1762,
      "start_time": 5369310.0,
      "end_time": 5374190.0,
      "text": "Let me go ahead and create a new file called structs1.py, similar in spirit"
    },
    {
      "index": 1763,
      "start_time": 5374190.0,
      "end_time": 5377900.0,
      "text": "to what we did some time ago in structs1.c."
    },
    {
      "index": 1764,
      "start_time": 5377900.0,
      "end_time": 5380150.0,
      "text": "I&#39;m going to start with that same code from before."
    },
    {
      "index": 1765,
      "start_time": 5380150.0,
      "end_time": 5382680.0,
      "text": "And I&#39;m going to keep around student.py."
    },
    {
      "index": 1766,
      "start_time": 5382680.0,
      "end_time": 5385744.0,
      "text": "But instead just printing it, you know what?"
    },
    {
      "index": 1767,
      "start_time": 5385740.0,
      "end_time": 5387906.0,
      "text": "I&#39;m going to get rid of the printing of these names."
    },
    {
      "index": 1768,
      "start_time": 5387910.0,
      "end_time": 5389430.0,
      "text": "I&#39;m going instead do this."
    },
    {
      "index": 1769,
      "start_time": 5389430.0,
      "end_time": 5396500.0,
      "text": "File gets open students.csv, w, quote, unquote."
    },
    {
      "index": 1770,
      "start_time": 5396500.0,
      "end_time": 5403130.0,
      "text": "Writer gets csv.writer file for student in students, just as before."
    },
    {
      "index": 1771,
      "start_time": 5403130.0,
      "end_time": 5411320.0,
      "text": "Writer.writerow student.name, student.dorm, file.close."
    },
    {
      "index": 1772,
      "start_time": 5414840.0,
      "end_time": 5417680.0,
      "text": "Definitely a mouthful, and it&#39;s not perfect yet."
    },
    {
      "index": 1773,
      "start_time": 5417680.0,
      "end_time": 5419610.0,
      "text": "But let&#39;s try to glean what I&#39;m doing."
    },
    {
      "index": 1774,
      "start_time": 5419610.0,
      "end_time": 5422230.0,
      "text": "Open turns out is similar in spirit to fopen from C."
    },
    {
      "index": 1775,
      "start_time": 5422230.0,
      "end_time": 5425520.0,
      "text": "And it takes two arguments just like in C, which is wonderful,"
    },
    {
      "index": 1776,
      "start_time": 5425520.0,
      "end_time": 5427650.0,
      "text": "the name of the file to open and the mode"
    },
    {
      "index": 1777,
      "start_time": 5427650.0,
      "end_time": 5430620.0,
      "text": "in which you want to open it-- writing, w, or reading, r."
    },
    {
      "index": 1778,
      "start_time": 5430620.0,
      "end_time": 5432320.0,
      "text": "And there&#39;s a few other options too."
    },
    {
      "index": 1779,
      "start_time": 5432320.0,
      "end_time": 5436760.0,
      "text": "This just returns to me a reference to that file somehow."
    },
    {
      "index": 1780,
      "start_time": 5436760.0,
      "end_time": 5439370.0,
      "text": "And indeed, all this time I&#39;ve been describing variables"
    },
    {
      "index": 1781,
      "start_time": 5439370.0,
      "end_time": 5440600.0,
      "text": "as just that, variables."
    },
    {
      "index": 1782,
      "start_time": 5440600.0,
      "end_time": 5445560.0,
      "text": "But technically speaking, all of these variables-- x and y, and now file and s"
    },
    {
      "index": 1783,
      "start_time": 5445560.0,
      "end_time": 5449510.0,
      "text": "and t and others-- are references or symbols that"
    },
    {
      "index": 1784,
      "start_time": 5449510.0,
      "end_time": 5452559.0,
      "text": "have been bound to objects in memory."
    },
    {
      "index": 1785,
      "start_time": 5452560.0,
      "end_time": 5454851.0,
      "text": "Which is just to say that you&#39;ll see online, especially"
    },
    {
      "index": 1786,
      "start_time": 5454850.0,
      "end_time": 5457599.0,
      "text": "when reading up on Python, that there&#39;s certain terminology that&#39;s"
    },
    {
      "index": 1787,
      "start_time": 5457600.0,
      "end_time": 5458851.0,
      "text": "associated with the language."
    },
    {
      "index": 1788,
      "start_time": 5458850.0,
      "end_time": 5461910.0,
      "text": "But at the end of the day, the ideas are no different fundamentally"
    },
    {
      "index": 1789,
      "start_time": 5461910.0,
      "end_time": 5465470.0,
      "text": "from what we&#39;ve been doing in Scratch and in C. These are just a variable"
    },
    {
      "index": 1790,
      "start_time": 5465470.0,
      "end_time": 5466360.0,
      "text": "called file."
    },
    {
      "index": 1791,
      "start_time": 5466360.0,
      "end_time": 5468290.0,
      "text": "Here&#39;s another variable called writer."
    },
    {
      "index": 1792,
      "start_time": 5468290.0,
      "end_time": 5473300.0,
      "text": "And it is storing the return value of CSV.writer file."
    },
    {
      "index": 1793,
      "start_time": 5473300.0,
      "end_time": 5473966.0,
      "text": "So what&#39;s this?"
    },
    {
      "index": 1794,
      "start_time": 5473970.0,
      "end_time": 5476094.0,
      "text": "I only knew this by reading up on the documentation"
    },
    {
      "index": 1795,
      "start_time": 5476090.0,
      "end_time": 5479820.0,
      "text": "because I was curious in Python, how do I actually save my data inside"
    },
    {
      "index": 1796,
      "start_time": 5479820.0,
      "end_time": 5483420.0,
      "text": "of a CSV, Comma Separated Values file?"
    },
    {
      "index": 1797,
      "start_time": 5483420.0,
      "end_time": 5485720.0,
      "text": "This is sort of a very super simple Excel"
    },
    {
      "index": 1798,
      "start_time": 5485720.0,
      "end_time": 5488570.0,
      "text": "file that just uses commas to separate what are effectively"
    },
    {
      "index": 1799,
      "start_time": 5488570.0,
      "end_time": 5489990.0,
      "text": "different columns in a file."
    },
    {
      "index": 1800,
      "start_time": 5489990.0,
      "end_time": 5495286.0,
      "text": "So my goal here is to ultimately print David, Mather, Enter."
    },
    {
      "index": 1801,
      "start_time": 5495290.0,
      "end_time": 5497684.0,
      "text": "Zamaila, Courier, Enter."
    },
    {
      "index": 1802,
      "start_time": 5497680.0,
      "end_time": 5500247.0,
      "text": "Rob, Kirkland, Enter."
    },
    {
      "index": 1803,
      "start_time": 5500250.0,
      "end_time": 5500833.0,
      "text": "And that&#39;s it."
    },
    {
      "index": 1804,
      "start_time": 5500830.0,
      "end_time": 5503260.0,
      "text": "And save it permanently on disk, if you will,"
    },
    {
      "index": 1805,
      "start_time": 5503260.0,
      "end_time": 5505830.0,
      "text": "so that we actually keep this information around."
    },
    {
      "index": 1806,
      "start_time": 5505830.0,
      "end_time": 5507460.0,
      "text": "So what does this do for me?"
    },
    {
      "index": 1807,
      "start_time": 5507460.0,
      "end_time": 5512230.0,
      "text": "It turns out that Python comes with a built-in feature called the CSV"
    },
    {
      "index": 1808,
      "start_time": 5512230.0,
      "end_time": 5515880.0,
      "text": "Module, inside of which is a whole bunch of functionality, some of which"
    },
    {
      "index": 1809,
      "start_time": 5515880.0,
      "end_time": 5519500.0,
      "text": "is this one here, a class called writer that"
    },
    {
      "index": 1810,
      "start_time": 5519500.0,
      "end_time": 5522910.0,
      "text": "takes one argument when you instantiate it called file."
    },
    {
      "index": 1811,
      "start_time": 5522910.0,
      "end_time": 5526960.0,
      "text": "So this just means, hey Python, give me a writer for CSVs."
    },
    {
      "index": 1812,
      "start_time": 5526960.0,
      "end_time": 5531790.0,
      "text": "Give me an object whose purpose in life is to write CSV files to hard drives."
    },
    {
      "index": 1813,
      "start_time": 5531790.0,
      "end_time": 5534096.0,
      "text": "Iterate over my students in students."
    },
    {
      "index": 1814,
      "start_time": 5534100.0,
      "end_time": 5535974.0,
      "text": "And then just from reading the documentation,"
    },
    {
      "index": 1815,
      "start_time": 5535970.0,
      "end_time": 5541610.0,
      "text": "I know that I can call writer.writerow, which is a bit hard to say quickly"
    },
    {
      "index": 1816,
      "start_time": 5541610.0,
      "end_time": 5543790.0,
      "text": "several times, but writerow."
    },
    {
      "index": 1817,
      "start_time": 5543790.0,
      "end_time": 5547130.0,
      "text": "And then it takes as an argument a tuple in this case."
    },
    {
      "index": 1818,
      "start_time": 5547130.0,
      "end_time": 5548890.0,
      "text": "That&#39;s why there&#39;s the double parentheses."
    },
    {
      "index": 1819,
      "start_time": 5548890.0,
      "end_time": 5554260.0,
      "text": "A tuple, a comma separated list of values, which in this case"
    },
    {
      "index": 1820,
      "start_time": 5554260.0,
      "end_time": 5557750.0,
      "text": "I want to be student.name and student.dorm."
    },
    {
      "index": 1821,
      "start_time": 5557750.0,
      "end_time": 5559340.0,
      "text": "Then I close the file at the end."
    },
    {
      "index": 1822,
      "start_time": 5559340.0,
      "end_time": 5563480.0,
      "text": "So the net result here is kind of underwhelming to run."
    },
    {
      "index": 1823,
      "start_time": 5563480.0,
      "end_time": 5565690.0,
      "text": "And indeed, we&#39;re about to see a bug."
    },
    {
      "index": 1824,
      "start_time": 5565690.0,
      "end_time": 5568076.0,
      "text": "Python structs1.py."
    },
    {
      "index": 1825,
      "start_time": 5568080.0,
      "end_time": 5568580.0,
      "text": "Enter."
    },
    {
      "index": 1826,
      "start_time": 5571090.0,
      "end_time": 5576400.0,
      "text": "David Mather, Zamaila Courier, Rob Kirkland."
    },
    {
      "index": 1827,
      "start_time": 5576400.0,
      "end_time": 5576980.0,
      "text": "Damn it."
    },
    {
      "index": 1828,
      "start_time": 5576980.0,
      "end_time": 5579300.0,
      "text": "After all that input, then there&#39;s an error."
    },
    {
      "index": 1829,
      "start_time": 5579300.0,
      "end_time": 5583430.0,
      "text": "But this is actually illustrative of another feature, or design aspect,"
    },
    {
      "index": 1830,
      "start_time": 5583430.0,
      "end_time": 5584880.0,
      "text": "of Python."
    },
    {
      "index": 1831,
      "start_time": 5584880.0,
      "end_time": 5587150.0,
      "text": "I&#39;m not necessarily going to get compilation errors."
    },
    {
      "index": 1832,
      "start_time": 5587150.0,
      "end_time": 5590080.0,
      "text": "I might actually get runtime logical errors."
    },
    {
      "index": 1833,
      "start_time": 5590080.0,
      "end_time": 5593010.0,
      "text": "If I have made a mistake in my program that"
    },
    {
      "index": 1834,
      "start_time": 5593010.0,
      "end_time": 5596420.0,
      "text": "isn&#39;t something super simple or dumb or frustrating,"
    },
    {
      "index": 1835,
      "start_time": 5596420.0,
      "end_time": 5600510.0,
      "text": "like leaving off a parenthesis or a misplaced comma,"
    },
    {
      "index": 1836,
      "start_time": 5600510.0,
      "end_time": 5602900.0,
      "text": "or something like that that&#39;s syntactically invalid,"
    },
    {
      "index": 1837,
      "start_time": 5602900.0,
      "end_time": 5606097.0,
      "text": "Python might not notice that my program is buggy."
    },
    {
      "index": 1838,
      "start_time": 5606100.0,
      "end_time": 5608433.0,
      "text": "Because if it scans my code top to bottom, left to right"
    },
    {
      "index": 1839,
      "start_time": 5608430.0,
      "end_time": 5610490.0,
      "text": "and doesn&#39;t notice some glaring syntax issue,"
    },
    {
      "index": 1840,
      "start_time": 5610490.0,
      "end_time": 5614400.0,
      "text": "it might proceed to just run the program for me, that is, interpret the program."
    },
    {
      "index": 1841,
      "start_time": 5614400.0,
      "end_time": 5619660.0,
      "text": "Only once the Python interpreter gets to a line of code that syntactically"
    },
    {
      "index": 1842,
      "start_time": 5619660.0,
      "end_time": 5625550.0,
      "text": "is correct but confuses it might it bail out with a so-called runtime error,"
    },
    {
      "index": 1843,
      "start_time": 5625550.0,
      "end_time": 5627840.0,
      "text": "or more properly, throw an exception."
    },
    {
      "index": 1844,
      "start_time": 5627840.0,
      "end_time": 5630200.0,
      "text": "This one&#39;s saying name CSV is not defined."
    },
    {
      "index": 1845,
      "start_time": 5630200.0,
      "end_time": 5632540.0,
      "text": "And indeed, if I scroll up, the first time"
    },
    {
      "index": 1846,
      "start_time": 5632540.0,
      "end_time": 5637750.0,
      "text": "I mention CSV was indeed on this line with the x, undefined variable CSV."
    },
    {
      "index": 1847,
      "start_time": 5637750.0,
      "end_time": 5638520.0,
      "text": "You know what?"
    },
    {
      "index": 1848,
      "start_time": 5638520.0,
      "end_time": 5639375.0,
      "text": "I messed up."
    },
    {
      "index": 1849,
      "start_time": 5639380.0,
      "end_time": 5642212.0,
      "text": "I should have imported the CSV module."
    },
    {
      "index": 1850,
      "start_time": 5642210.0,
      "end_time": 5644293.0,
      "text": "And I would only know that from the documentation."
    },
    {
      "index": 1851,
      "start_time": 5644290.0,
      "end_time": 5648382.0,
      "text": "But I can infer as much from the fact that CSV does not exist."
    },
    {
      "index": 1852,
      "start_time": 5648380.0,
      "end_time": 5649588.0,
      "text": "Let&#39;s try this one more time."
    },
    {
      "index": 1853,
      "start_time": 5649590.0,
      "end_time": 5657510.0,
      "text": "David Mather, Zamaila Courier, Rob Kirkland, and Enter."
    },
    {
      "index": 1854,
      "start_time": 5657510.0,
      "end_time": 5659340.0,
      "text": "Nothing seems to happen."
    },
    {
      "index": 1855,
      "start_time": 5659340.0,
      "end_time": 5664930.0,
      "text": "But notice students.csv has now appeared."
    },
    {
      "index": 1856,
      "start_time": 5664930.0,
      "end_time": 5669470.0,
      "text": "And indeed, I have David, Mather, Zamaila, Courier, Rob, Kirkland."
    },
    {
      "index": 1857,
      "start_time": 5669470.0,
      "end_time": 5671820.0,
      "text": "I have my own tiny little database."
    },
    {
      "index": 1858,
      "start_time": 5671820.0,
      "end_time": 5674370.0,
      "text": "It&#39;s not a database in a particularly fancy sense."
    },
    {
      "index": 1859,
      "start_time": 5674370.0,
      "end_time": 5675210.0,
      "text": "I can&#39;t query it."
    },
    {
      "index": 1860,
      "start_time": 5675210.0,
      "end_time": 5676600.0,
      "text": "I can&#39;t change it very easily."
    },
    {
      "index": 1861,
      "start_time": 5676600.0,
      "end_time": 5679140.0,
      "text": "I have to just rewrite the whole thing out essentially."
    },
    {
      "index": 1862,
      "start_time": 5679140.0,
      "end_time": 5681870.0,
      "text": "But I have now persisted this data."
    },
    {
      "index": 1863,
      "start_time": 5681870.0,
      "end_time": 5684740.0,
      "text": "And never before in these Python examples"
    },
    {
      "index": 1864,
      "start_time": 5684740.0,
      "end_time": 5686490.0,
      "text": "have we kept any of the information around"
    },
    {
      "index": 1865,
      "start_time": 5686490.0,
      "end_time": 5690930.0,
      "text": "until now, much like the equivalent C version."
    },
    {
      "index": 1866,
      "start_time": 5690930.0,
      "end_time": 5693010.0,
      "text": "So guess what else we can do with Python."
    },
    {
      "index": 1867,
      "start_time": 5693010.0,
      "end_time": 5695520.0,
      "text": "Not only can we re implement all of week&#39;s 1"
    },
    {
      "index": 1868,
      "start_time": 5695520.0,
      "end_time": 5697850.0,
      "text": "through 5 examples from C in Python."
    },
    {
      "index": 1869,
      "start_time": 5697850.0,
      "end_time": 5701330.0,
      "text": "So can we implement the entirety of our recent spell checker."
    },
    {
      "index": 1870,
      "start_time": 5701330.0,
      "end_time": 5704200.0,
      "text": "For instance, you may recall that the staff solution for speller"
    },
    {
      "index": 1871,
      "start_time": 5704200.0,
      "end_time": 5707300.0,
      "text": "was run a little something as follows at the prompt, whereby"
    },
    {
      "index": 1872,
      "start_time": 5707300.0,
      "end_time": 5709040.0,
      "text": "we specify optionally a dictionary."
    },
    {
      "index": 1873,
      "start_time": 5709040.0,
      "end_time": 5710956.0,
      "text": "But I&#39;m going to go ahead and use the default."
    },
    {
      "index": 1874,
      "start_time": 5710960.0,
      "end_time": 5714084.0,
      "text": "And then I can spell check something like AustinPowers.text,"
    },
    {
      "index": 1875,
      "start_time": 5714080.0,
      "end_time": 5717600.0,
      "text": "which, in the CS50 staff solution, which this one happens to use a try,"
    },
    {
      "index": 1876,
      "start_time": 5717600.0,
      "end_time": 5721600.0,
      "text": "took me a total of 0.05 seconds to spell check a pretty"
    },
    {
      "index": 1877,
      "start_time": 5721600.0,
      "end_time": 5724860.0,
      "text": "big dictionary with 19,190 words."
    },
    {
      "index": 1878,
      "start_time": 5724860.0,
      "end_time": 5727230.0,
      "text": "But it took me a long time to implement that try."
    },
    {
      "index": 1879,
      "start_time": 5727230.0,
      "end_time": 5729188.0,
      "text": "It probably took you quite a while to implement"
    },
    {
      "index": 1880,
      "start_time": 5729190.0,
      "end_time": 5732242.0,
      "text": "your try, your hash table, your linked list, or other data structure."
    },
    {
      "index": 1881,
      "start_time": 5732240.0,
      "end_time": 5735160.0,
      "text": "But let me propose that today, we have in our speller"
    },
    {
      "index": 1882,
      "start_time": 5735160.0,
      "end_time": 5737954.0,
      "text": "directory a reimplementation of speller in Python."
    },
    {
      "index": 1883,
      "start_time": 5737950.0,
      "end_time": 5740366.0,
      "text": "And this was the program you didn&#39;t need to worry too much"
    },
    {
      "index": 1884,
      "start_time": 5740370.0,
      "end_time": 5743346.0,
      "text": "about in C. Speller.c we asked you to read through and understand."
    },
    {
      "index": 1885,
      "start_time": 5743350.0,
      "end_time": 5744724.0,
      "text": "But you didn&#39;t need to change it."
    },
    {
      "index": 1886,
      "start_time": 5744720.0,
      "end_time": 5747090.0,
      "text": "And so indeed today, we won&#39;t change it either."
    },
    {
      "index": 1887,
      "start_time": 5747090.0,
      "end_time": 5754070.0,
      "text": "But I&#39;m going to go ahead and create a file called dictionary.py,"
    },
    {
      "index": 1888,
      "start_time": 5754070.0,
      "end_time": 5758300.0,
      "text": "inside of which is going to be my very own implementation of this dictionary."
    },
    {
      "index": 1889,
      "start_time": 5758300.0,
      "end_time": 5763510.0,
      "text": "And it turns out in Python, we can implement speller as follows."
    },
    {
      "index": 1890,
      "start_time": 5763510.0,
      "end_time": 5768040.0,
      "text": "Class dictionary, thereby giving me really the equivalent of a structure,"
    },
    {
      "index": 1891,
      "start_time": 5768040.0,
      "end_time": 5771050.0,
      "text": "much like we have in C. And I&#39;m going to go ahead inside of this"
    },
    {
      "index": 1892,
      "start_time": 5771050.0,
      "end_time": 5775300.0,
      "text": "and declare a function that&#39;s by default, and convention called init."
    },
    {
      "index": 1893,
      "start_time": 5775300.0,
      "end_time": 5778050.0,
      "text": "That takes in one argument, in this case called self."
    },
    {
      "index": 1894,
      "start_time": 5778050.0,
      "end_time": 5782810.0,
      "text": "And I&#39;m going to simply do self.words gets set where set, it turns out,"
    },
    {
      "index": 1895,
      "start_time": 5782810.0,
      "end_time": 5784830.0,
      "text": "is a function in Python that returns to me"
    },
    {
      "index": 1896,
      "start_time": 5784830.0,
      "end_time": 5789870.0,
      "text": "an empty set, a collection of values that facilitate, generally,"
    },
    {
      "index": 1897,
      "start_time": 5789870.0,
      "end_time": 5793210.0,
      "text": "on the average case, constant time lookups of whether something&#39;s there,"
    },
    {
      "index": 1898,
      "start_time": 5793210.0,
      "end_time": 5796350.0,
      "text": "and constant time insertions of putting something into that set,"
    },
    {
      "index": 1899,
      "start_time": 5796350.0,
      "end_time": 5797940.0,
      "text": "much like a mathematical set."
    },
    {
      "index": 1900,
      "start_time": 5797940.0,
      "end_time": 5803000.0,
      "text": "I&#39;m now going to go ahead and implement my load function in Python as follows,"
    },
    {
      "index": 1901,
      "start_time": 5803000.0,
      "end_time": 5806940.0,
      "text": "whereby I take in self as an argument as before, by convention, but then also"
    },
    {
      "index": 1902,
      "start_time": 5806940.0,
      "end_time": 5809520.0,
      "text": "the name of the file to use as my dictionary."
    },
    {
      "index": 1903,
      "start_time": 5809520.0,
      "end_time": 5812330.0,
      "text": "And similar to C, I&#39;m going to use a function like fopen,"
    },
    {
      "index": 1904,
      "start_time": 5812330.0,
      "end_time": 5816180.0,
      "text": "but this time called open, where I simply pass in dictionary and quote,"
    },
    {
      "index": 1905,
      "start_time": 5816180.0,
      "end_time": 5817480.0,
      "text": "unquote, r."
    },
    {
      "index": 1906,
      "start_time": 5817480.0,
      "end_time": 5824040.0,
      "text": "And then for each line in that file, I am going to access the set called words"
    },
    {
      "index": 1907,
      "start_time": 5824040.0,
      "end_time": 5828940.0,
      "text": "and add to it the line I&#39;ve just encountered after stripping off"
    },
    {
      "index": 1908,
      "start_time": 5828940.0,
      "end_time": 5831620.0,
      "text": "the trailing new line."
    },
    {
      "index": 1909,
      "start_time": 5831620.0,
      "end_time": 5834400.0,
      "text": "Then I am going to close the file."
    },
    {
      "index": 1910,
      "start_time": 5834400.0,
      "end_time": 5836190.0,
      "text": "And I&#39;m going to return true."
    },
    {
      "index": 1911,
      "start_time": 5836190.0,
      "end_time": 5838800.0,
      "text": "And I&#39;m going to have finished my homework for load."
    },
    {
      "index": 1912,
      "start_time": 5838800.0,
      "end_time": 5840820.0,
      "text": "With just those few lines of code, can we"
    },
    {
      "index": 1913,
      "start_time": 5840820.0,
      "end_time": 5844020.0,
      "text": "reimplement the entirety of the load function"
    },
    {
      "index": 1914,
      "start_time": 5844020.0,
      "end_time": 5849570.0,
      "text": "for problem set 5 speller dictionary in Python itself?"
    },
    {
      "index": 1915,
      "start_time": 5849570.0,
      "end_time": 5853080.0,
      "text": "Now the check function, maybe that&#39;s where the price is paid."
    },
    {
      "index": 1916,
      "start_time": 5853080.0,
      "end_time": 5855745.0,
      "text": "Maybe the tradeoff is check&#39;s going to be really, really scary."
    },
    {
      "index": 1917,
      "start_time": 5855750.0,
      "end_time": 5858375.0,
      "text": "So I&#39;m going to implement this one as a method inside here too,"
    },
    {
      "index": 1918,
      "start_time": 5858370.0,
      "end_time": 5860820.0,
      "text": "taking in a word that we want to spellcheck."
    },
    {
      "index": 1919,
      "start_time": 5860820.0,
      "end_time": 5866960.0,
      "text": "And I&#39;m going to return word.lower in self.words."
    },
    {
      "index": 1920,
      "start_time": 5866960.0,
      "end_time": 5868530.0,
      "text": "And that&#39;s it for the check method."
    },
    {
      "index": 1921,
      "start_time": 5868530.0,
      "end_time": 5869700.0,
      "text": "What is this doing?"
    },
    {
      "index": 1922,
      "start_time": 5869700.0,
      "end_time": 5875750.0,
      "text": "This is saying, return, true or false, whether the lowercase version"
    },
    {
      "index": 1923,
      "start_time": 5875750.0,
      "end_time": 5880570.0,
      "text": "of the given word is in my own word set."
    },
    {
      "index": 1924,
      "start_time": 5880570.0,
      "end_time": 5883820.0,
      "text": "So self.words just refers to this container that&#39;s initially empty"
    },
    {
      "index": 1925,
      "start_time": 5883820.0,
      "end_time": 5886730.0,
      "text": "but that has just been populated by the load method"
    },
    {
      "index": 1926,
      "start_time": 5886730.0,
      "end_time": 5890560.0,
      "text": "by adding in all of the words that we loaded from that file."
    },
    {
      "index": 1927,
      "start_time": 5890560.0,
      "end_time": 5893690.0,
      "text": "So this true or false is implemented as follows."
    },
    {
      "index": 1928,
      "start_time": 5893690.0,
      "end_time": 5897550.0,
      "text": "Lowercase the given word and check whether it&#39;s in that set,"
    },
    {
      "index": 1929,
      "start_time": 5897550.0,
      "end_time": 5900820.0,
      "text": "and return true or false in just one line."
    },
    {
      "index": 1930,
      "start_time": 5900820.0,
      "end_time": 5901550.0,
      "text": "Well, all right."
    },
    {
      "index": 1931,
      "start_time": 5901550.0,
      "end_time": 5904060.0,
      "text": "Maybe size is going to be where the price is paid."
    },
    {
      "index": 1932,
      "start_time": 5904060.0,
      "end_time": 5906400.0,
      "text": "Maybe size is what&#39;s really broken here."
    },
    {
      "index": 1933,
      "start_time": 5906400.0,
      "end_time": 5908600.0,
      "text": "So let&#39;s go ahead and implement size."
    },
    {
      "index": 1934,
      "start_time": 5908600.0,
      "end_time": 5912590.0,
      "text": "And let me return self.words."
    },
    {
      "index": 1935,
      "start_time": 5912590.0,
      "end_time": 5913090.0,
      "text": "All right."
    },
    {
      "index": 1936,
      "start_time": 5913090.0,
      "end_time": 5916540.0,
      "text": "That one&#39;s perhaps not a surprise since size in C is also pretty easy."
    },
    {
      "index": 1937,
      "start_time": 5916540.0,
      "end_time": 5917830.0,
      "text": "But what about unload?"
    },
    {
      "index": 1938,
      "start_time": 5917830.0,
      "end_time": 5921510.0,
      "text": "Well, how about in unload, we similarly declare it."
    },
    {
      "index": 1939,
      "start_time": 5921510.0,
      "end_time": 5923940.0,
      "text": "Well, there&#39;s nothing to unload because Python does"
    },
    {
      "index": 1940,
      "start_time": 5923940.0,
      "end_time": 5925592.0,
      "text": "all of your memory management for you."
    },
    {
      "index": 1941,
      "start_time": 5925590.0,
      "end_time": 5928048.0,
      "text": "So even though you might be allocating more and more memory"
    },
    {
      "index": 1942,
      "start_time": 5928050.0,
      "end_time": 5930980.0,
      "text": "as you use this set, there&#39;s nothing to actually unload"
    },
    {
      "index": 1943,
      "start_time": 5930980.0,
      "end_time": 5933380.0,
      "text": "because the interpreter will do that for you."
    },
    {
      "index": 1944,
      "start_time": 5933380.0,
      "end_time": 5937550.0,
      "text": "So it turns out that all of these conversions from C to Python"
    },
    {
      "index": 1945,
      "start_time": 5937550.0,
      "end_time": 5939602.0,
      "text": "are useful in part because clearly, you can"
    },
    {
      "index": 1946,
      "start_time": 5939600.0,
      "end_time": 5941558.0,
      "text": "implement the same kinds of programs that we&#39;ve"
    },
    {
      "index": 1947,
      "start_time": 5941560.0,
      "end_time": 5942768.0,
      "text": "been implementing for a week."
    },
    {
      "index": 1948,
      "start_time": 5942770.0,
      "end_time": 5947922.0,
      "text": "And frankly, in many cases, more easily and quicker, or with fewer lines"
    },
    {
      "index": 1949,
      "start_time": 5947920.0,
      "end_time": 5951240.0,
      "text": "of code, or in a way that&#39;s just much less painful to write."
    },
    {
      "index": 1950,
      "start_time": 5951240.0,
      "end_time": 5954380.0,
      "text": "All of that low level stuff where you&#39;re implementing hash tables or trees"
    },
    {
      "index": 1951,
      "start_time": 5954380.0,
      "end_time": 5957760.0,
      "text": "or tries is wonderfully illustrative of how those things work, and hopefully"
    },
    {
      "index": 1952,
      "start_time": 5957760.0,
      "end_time": 5961140.0,
      "text": "gives you a true understanding of what&#39;s going on underneath the hood."
    },
    {
      "index": 1953,
      "start_time": 5961140.0,
      "end_time": 5962020.0,
      "text": "But my god."
    },
    {
      "index": 1954,
      "start_time": 5962020.0,
      "end_time": 5966190.0,
      "text": "If you just wanted to store words in a dictionary, if you"
    },
    {
      "index": 1955,
      "start_time": 5966190.0,
      "end_time": 5969670.0,
      "text": "had to implement dozens of lines of code to implement your own try,"
    },
    {
      "index": 1956,
      "start_time": 5969670.0,
      "end_time": 5972930.0,
      "text": "or your own hash table or linked list, programming very quickly"
    },
    {
      "index": 1957,
      "start_time": 5972930.0,
      "end_time": 5977650.0,
      "text": "devolves into an incredibly mundane, frustrating profession."
    },
    {
      "index": 1958,
      "start_time": 5977650.0,
      "end_time": 5981650.0,
      "text": "But in this case do we begin to see hints of other languages,"
    },
    {
      "index": 1959,
      "start_time": 5981650.0,
      "end_time": 5984730.0,
      "text": "Python among them, that allow us to solve the same problems much more"
    },
    {
      "index": 1960,
      "start_time": 5984730.0,
      "end_time": 5987610.0,
      "text": "quickly, much more efficiently, much more effectively, much more"
    },
    {
      "index": 1961,
      "start_time": 5987610.0,
      "end_time": 5990210.0,
      "text": "pleasurably, such that now we can start to stand"
    },
    {
      "index": 1962,
      "start_time": 5990210.0,
      "end_time": 5992830.0,
      "text": "on the shoulders of even more people who have come before us,"
    },
    {
      "index": 1963,
      "start_time": 5992830.0,
      "end_time": 5994720.0,
      "text": "start building on not only this language,"
    },
    {
      "index": 1964,
      "start_time": 5994720.0,
      "end_time": 5997040.0,
      "text": "but on other APIs and libraries."
    },
    {
      "index": 1965,
      "start_time": 5997040.0,
      "end_time": 6000570.0,
      "text": "And indeed, that&#39;s now why we introduced Python."
    },
    {
      "index": 1966,
      "start_time": 6000570.0,
      "end_time": 6002540.0,
      "text": "No longer in the weeks to come are we going"
    },
    {
      "index": 1967,
      "start_time": 6002540.0,
      "end_time": 6006930.0,
      "text": "to be focusing on the command line alone, but rather"
    },
    {
      "index": 1968,
      "start_time": 6006930.0,
      "end_time": 6009140.0,
      "text": "on web-based interfaces."
    },
    {
      "index": 1969,
      "start_time": 6009140.0,
      "end_time": 6013390.0,
      "text": "Indeed, in Python do we have the ability to so much more easily than in C"
    },
    {
      "index": 1970,
      "start_time": 6013390.0,
      "end_time": 6017470.0,
      "text": "write web-based software, actual websites that"
    },
    {
      "index": 1971,
      "start_time": 6017470.0,
      "end_time": 6020140.0,
      "text": "are dynamic, not just built out of HTML and CSS,"
    },
    {
      "index": 1972,
      "start_time": 6020140.0,
      "end_time": 6024160.0,
      "text": "but that have shopping carts and use databases and send emails or SMSes,"
    },
    {
      "index": 1973,
      "start_time": 6024160.0,
      "end_time": 6027290.0,
      "text": "or any number of dynamic features, all of which, to be fair,"
    },
    {
      "index": 1974,
      "start_time": 6027290.0,
      "end_time": 6030900.0,
      "text": "we could implement in C. But it would be the most painful experience"
    },
    {
      "index": 1975,
      "start_time": 6030900.0,
      "end_time": 6033970.0,
      "text": "in the world to implement a dynamic website with all"
    },
    {
      "index": 1976,
      "start_time": 6033970.0,
      "end_time": 6038760.0,
      "text": "of those features in a lower level language like C. But with Python can"
    },
    {
      "index": 1977,
      "start_time": 6038760.0,
      "end_time": 6042100.0,
      "text": "we start to do this so much more readily."
    },
    {
      "index": 1978,
      "start_time": 6042100.0,
      "end_time": 6045690.0,
      "text": "So how do we go about using Python to generate websites?"
    },
    {
      "index": 1979,
      "start_time": 6045690.0,
      "end_time": 6049190.0,
      "text": "A couple of weeks ago when we first looked at HTML and CSS"
    },
    {
      "index": 1980,
      "start_time": 6049190.0,
      "end_time": 6053200.0,
      "text": "and talked more generally about HTTP, we hard coded everything we wrote."
    },
    {
      "index": 1981,
      "start_time": 6053200.0,
      "end_time": 6055570.0,
      "text": "We wrote HTML in our text editor."
    },
    {
      "index": 1982,
      "start_time": 6055570.0,
      "end_time": 6057840.0,
      "text": "We wrote CSS in our text editor."
    },
    {
      "index": 1983,
      "start_time": 6057840.0,
      "end_time": 6059160.0,
      "text": "We saved those files."
    },
    {
      "index": 1984,
      "start_time": 6059160.0,
      "end_time": 6062000.0,
      "text": "And then we loaded them using our browser."
    },
    {
      "index": 1985,
      "start_time": 6062000.0,
      "end_time": 6063720.0,
      "text": "But there was nothing dynamic about it."
    },
    {
      "index": 1986,
      "start_time": 6063720.0,
      "end_time": 6067420.0,
      "text": "There was no even hello world program that dynamically took my name."
    },
    {
      "index": 1987,
      "start_time": 6067420.0,
      "end_time": 6069770.0,
      "text": "But we did discuss, in the context of HTTP,"
    },
    {
      "index": 1988,
      "start_time": 6069770.0,
      "end_time": 6073050.0,
      "text": "this ability of web browsers and web servers"
    },
    {
      "index": 1989,
      "start_time": 6073050.0,
      "end_time": 6078760.0,
      "text": "to use HTML parameters in order to transmit inputs in between the two."
    },
    {
      "index": 1990,
      "start_time": 6078760.0,
      "end_time": 6080580.0,
      "text": "For instance, we talked about get, whereby"
    },
    {
      "index": 1991,
      "start_time": 6080580.0,
      "end_time": 6085060.0,
      "text": "you can pass in these key value pairs via the get string, the query string,"
    },
    {
      "index": 1992,
      "start_time": 6085060.0,
      "end_time": 6086240.0,
      "text": "in the URL itself."
    },
    {
      "index": 1993,
      "start_time": 6086240.0,
      "end_time": 6088450.0,
      "text": "We talked a bit about post, whereby you could"
    },
    {
      "index": 1994,
      "start_time": 6088450.0,
      "end_time": 6091520.0,
      "text": "transmit more sensitive information, or bigger things like photographs"
    },
    {
      "index": 1995,
      "start_time": 6091520.0,
      "end_time": 6093450.0,
      "text": "and passwords and confidential information,"
    },
    {
      "index": 1996,
      "start_time": 6093450.0,
      "end_time": 6098860.0,
      "text": "via post, which is still passing in key value pairs from browser to server."
    },
    {
      "index": 1997,
      "start_time": 6098860.0,
      "end_time": 6101130.0,
      "text": "But we didn&#39;t at the time have any ability"
    },
    {
      "index": 1998,
      "start_time": 6101130.0,
      "end_time": 6105730.0,
      "text": "to actually read or parse those inputs and produce dynamic outputs."
    },
    {
      "index": 1999,
      "start_time": 6105730.0,
      "end_time": 6108410.0,
      "text": "In fact, the most dynamic we got a couple of weeks ago"
    },
    {
      "index": 2000,
      "start_time": 6108410.0,
      "end_time": 6112100.0,
      "text": "was with those search examples whereby I reimplemented the front end"
    },
    {
      "index": 2001,
      "start_time": 6112100.0,
      "end_time": 6117360.0,
      "text": "interface of Google, sort of our very low budget version of Google&#39;s website."
    },
    {
      "index": 2002,
      "start_time": 6117360.0,
      "end_time": 6119700.0,
      "text": "And then I just completely punted to their back end"
    },
    {
      "index": 2003,
      "start_time": 6119700.0,
      "end_time": 6125430.0,
      "text": "using the action attribute of https://www.google.com/search,"
    },
    {
      "index": 2004,
      "start_time": 6125430.0,
      "end_time": 6130220.0,
      "text": "pretty much deferring entirely to Google all of the interesting, dynamic output"
    },
    {
      "index": 2005,
      "start_time": 6130220.0,
      "end_time": 6131740.0,
      "text": "for my search results."
    },
    {
      "index": 2006,
      "start_time": 6131740.0,
      "end_time": 6134770.0,
      "text": "So today, we won&#39;t generate those search results ourselves."
    },
    {
      "index": 2007,
      "start_time": 6134770.0,
      "end_time": 6139600.0,
      "text": "But we will give ourselves, now that we have a language and the environment"
    },
    {
      "index": 2008,
      "start_time": 6139600.0,
      "end_time": 6142970.0,
      "text": "with which to handle those inputs, we will give ourselves"
    },
    {
      "index": 2009,
      "start_time": 6142970.0,
      "end_time": 6146640.0,
      "text": "the capability to start creating websites more like that."
    },
    {
      "index": 2010,
      "start_time": 6146640.0,
      "end_time": 6152480.0,
      "text": "In fact, ultimately, the goal of creating web-based software"
    },
    {
      "index": 2011,
      "start_time": 6152480.0,
      "end_time": 6154450.0,
      "text": "is to dynamically output stuff like this."
    },
    {
      "index": 2012,
      "start_time": 6154450.0,
      "end_time": 6157670.0,
      "text": "This, of course, is the simplest web page"
    },
    {
      "index": 2013,
      "start_time": 6157670.0,
      "end_time": 6159670.0,
      "text": "we could perhaps implement in HTML."
    },
    {
      "index": 2014,
      "start_time": 6159670.0,
      "end_time": 6161057.0,
      "text": "But it&#39;s entirely hard coded."
    },
    {
      "index": 2015,
      "start_time": 6161060.0,
      "end_time": 6163393.0,
      "text": "Wouldn&#39;t it be nice if we could minimally, for instance,"
    },
    {
      "index": 2016,
      "start_time": 6163390.0,
      "end_time": 6165930.0,
      "text": "add someone&#39;s name dynamically to that output"
    },
    {
      "index": 2017,
      "start_time": 6165930.0,
      "end_time": 6168240.0,
      "text": "so that it actually interacts with them in some way?"
    },
    {
      "index": 2018,
      "start_time": 6168240.0,
      "end_time": 6172600.0,
      "text": "And you can, of course, extrapolate from that kind of feature"
    },
    {
      "index": 2019,
      "start_time": 6172600.0,
      "end_time": 6175000.0,
      "text": "to things like Gmail, where it&#39;s constantly,"
    },
    {
      "index": 2020,
      "start_time": 6175000.0,
      "end_time": 6177342.0,
      "text": "dynamically interacting with your keyboard input"
    },
    {
      "index": 2021,
      "start_time": 6177340.0,
      "end_time": 6180298.0,
      "text": "based on who you put in the To field, what you put in the subject line."
    },
    {
      "index": 2022,
      "start_time": 6180300.0,
      "end_time": 6183930.0,
      "text": "The website&#39;s going to do and behave differently in order to send that mail."
    },
    {
      "index": 2023,
      "start_time": 6183930.0,
      "end_time": 6186840.0,
      "text": "Facebook Messenger or Gchat or any number of tools"
    },
    {
      "index": 2024,
      "start_time": 6186840.0,
      "end_time": 6189380.0,
      "text": "are constantly taking web-based input from users"
    },
    {
      "index": 2025,
      "start_time": 6189380.0,
      "end_time": 6191160.0,
      "text": "and producing dynamically output."
    },
    {
      "index": 2026,
      "start_time": 6191160.0,
      "end_time": 6193320.0,
      "text": "But how do we get at that input and output?"
    },
    {
      "index": 2027,
      "start_time": 6193320.0,
      "end_time": 6198430.0,
      "text": "Especially since at the end of the day, this is all HTML boils down to."
    },
    {
      "index": 2028,
      "start_time": 6198430.0,
      "end_time": 6200500.0,
      "text": "Inside of those virtual envelopes, so to speak,"
    },
    {
      "index": 2029,
      "start_time": 6200500.0,
      "end_time": 6203460.0,
      "text": "going between client and server or browser and server,"
    },
    {
      "index": 2030,
      "start_time": 6203460.0,
      "end_time": 6205580.0,
      "text": "are requests like these from the client."
    },
    {
      "index": 2031,
      "start_time": 6205580.0,
      "end_time": 6208430.0,
      "text": "Get me the home page using this version of HTML"
    },
    {
      "index": 2032,
      "start_time": 6208430.0,
      "end_time": 6210280.0,
      "text": "specifically from this host name here."
    },
    {
      "index": 2033,
      "start_time": 6210280.0,
      "end_time": 6213280.0,
      "text": "And then maybe some other additional detail and maybe some parameters"
    },
    {
      "index": 2034,
      "start_time": 6213280.0,
      "end_time": 6215096.0,
      "text": "in that URL string."
    },
    {
      "index": 2035,
      "start_time": 6215100.0,
      "end_time": 6217224.0,
      "text": "Meanwhile, the server is going to respond similarly"
    },
    {
      "index": 2036,
      "start_time": 6217220.0,
      "end_time": 6221200.0,
      "text": "with something pretty simple-- a textual response, some HTML headers like this"
    },
    {
      "index": 2037,
      "start_time": 6221200.0,
      "end_time": 6226030.0,
      "text": "saying the content type is text HTML, if it indeed is, followed by the HTML"
    },
    {
      "index": 2038,
      "start_time": 6226030.0,
      "end_time": 6227640.0,
      "text": "that the server has generated."
    },
    {
      "index": 2039,
      "start_time": 6227640.0,
      "end_time": 6230660.0,
      "text": "So it would seem that we need the ability, when"
    },
    {
      "index": 2040,
      "start_time": 6230660.0,
      "end_time": 6234070.0,
      "text": "writing web-based software, to be able to,"
    },
    {
      "index": 2041,
      "start_time": 6234070.0,
      "end_time": 6237440.0,
      "text": "one, dynamically generate HTML based on who the user is"
    },
    {
      "index": 2042,
      "start_time": 6237440.0,
      "end_time": 6239470.0,
      "text": "or what he or she wants to see dynamically."
    },
    {
      "index": 2043,
      "start_time": 6239470.0,
      "end_time": 6242950.0,
      "text": "So we have the ability to write HTML, of course, per two weeks ago."
    },
    {
      "index": 2044,
      "start_time": 6242950.0,
      "end_time": 6246490.0,
      "text": "But we haven&#39;t yet printed it or generated it dynamically."
    },
    {
      "index": 2045,
      "start_time": 6246490.0,
      "end_time": 6250750.0,
      "text": "And we&#39;re also going to need a feature whereby, somehow or other,"
    },
    {
      "index": 2046,
      "start_time": 6250750.0,
      "end_time": 6255140.0,
      "text": "any HTTP parameters coming to us from browsers"
    },
    {
      "index": 2047,
      "start_time": 6255140.0,
      "end_time": 6258590.0,
      "text": "can be interpreted so that if a user is trying to add something"
    },
    {
      "index": 2048,
      "start_time": 6258590.0,
      "end_time": 6262730.0,
      "text": "to their shopping cart, we can actually see what it is they&#39;ve requested"
    },
    {
      "index": 2049,
      "start_time": 6262730.0,
      "end_time": 6264460.0,
      "text": "to add to their shopping cart."
    },
    {
      "index": 2050,
      "start_time": 6264460.0,
      "end_time": 6267527.0,
      "text": "So it turns out we need just one mental model, if you will,"
    },
    {
      "index": 2051,
      "start_time": 6267530.0,
      "end_time": 6268613.0,
      "text": "for this world of the web."
    },
    {
      "index": 2052,
      "start_time": 6268610.0,
      "end_time": 6271109.0,
      "text": "Back in the day, this mental model didn&#39;t necessarily exist."
    },
    {
      "index": 2053,
      "start_time": 6271110.0,
      "end_time": 6275481.0,
      "text": "But over time, we humans have come up with certain paradigms, or design"
    },
    {
      "index": 2054,
      "start_time": 6275480.0,
      "end_time": 6280270.0,
      "text": "patterns, so to speak, that guide common implementations of web-based software"
    },
    {
      "index": 2055,
      "start_time": 6280270.0,
      "end_time": 6281120.0,
      "text": "or mobile software."
    },
    {
      "index": 2056,
      "start_time": 6281120.0,
      "end_time": 6284200.0,
      "text": "Because the world realized over time that they adopted certain habits."
    },
    {
      "index": 2057,
      "start_time": 6284200.0,
      "end_time": 6286890.0,
      "text": "Or there are certain convenient ways to implement software."
    },
    {
      "index": 2058,
      "start_time": 6286890.0,
      "end_time": 6289620.0,
      "text": "And one such method, or one such design pattern,"
    },
    {
      "index": 2059,
      "start_time": 6289620.0,
      "end_time": 6293490.0,
      "text": "is generally called MVC, Model View Controller."
    },
    {
      "index": 2060,
      "start_time": 6293490.0,
      "end_time": 6296430.0,
      "text": "And in this world, the controller is really"
    },
    {
      "index": 2061,
      "start_time": 6296430.0,
      "end_time": 6300530.0,
      "text": "where the brains of your program or your website are-- all of the logic."
    },
    {
      "index": 2062,
      "start_time": 6300530.0,
      "end_time": 6302950.0,
      "text": "The logging in of users, logging out of users,"
    },
    {
      "index": 2063,
      "start_time": 6302950.0,
      "end_time": 6305760.0,
      "text": "adding things to a shopping cart, removing things, checking out,"
    },
    {
      "index": 2064,
      "start_time": 6305760.0,
      "end_time": 6308790.0,
      "text": "billing them, all of that sort of business logic so to speak."
    },
    {
      "index": 2065,
      "start_time": 6308790.0,
      "end_time": 6311610.0,
      "text": "And that exists in one or more files, typically,"
    },
    {
      "index": 2066,
      "start_time": 6311610.0,
      "end_time": 6314720.0,
      "text": "on a web server that collectively are called the controller."
    },
    {
      "index": 2067,
      "start_time": 6314720.0,
      "end_time": 6316950.0,
      "text": "So it&#39;s not a technical term per se."
    },
    {
      "index": 2068,
      "start_time": 6316950.0,
      "end_time": 6320640.0,
      "text": "It&#39;s just a descriptor for what your code is ultimately doing."
    },
    {
      "index": 2069,
      "start_time": 6320640.0,
      "end_time": 6325270.0,
      "text": "View, meanwhile, the V in MVC, refers to the aesthetics of your site"
    },
    {
      "index": 2070,
      "start_time": 6325270.0,
      "end_time": 6329150.0,
      "text": "typically-- the templates that you use for HTML,"
    },
    {
      "index": 2071,
      "start_time": 6329150.0,
      "end_time": 6332710.0,
      "text": "or the CSS files that you use in order to style your website."
    },
    {
      "index": 2072,
      "start_time": 6332710.0,
      "end_time": 6336260.0,
      "text": "In other words, while the thinking, all of the code logic"
    },
    {
      "index": 2073,
      "start_time": 6336260.0,
      "end_time": 6338580.0,
      "text": "might be embedded in files called your controller,"
    },
    {
      "index": 2074,
      "start_time": 6338580.0,
      "end_time": 6341140.0,
      "text": "all of the sort of fluffier but still important stuff."
    },
    {
      "index": 2075,
      "start_time": 6341140.0,
      "end_time": 6344120.0,
      "text": "The aesthetic stuff, might be in the view side of things."
    },
    {
      "index": 2076,
      "start_time": 6344120.0,
      "end_time": 6348780.0,
      "text": "And then lastly is the M in MVC, Model, which is where your data typically"
    },
    {
      "index": 2077,
      "start_time": 6348780.0,
      "end_time": 6349690.0,
      "text": "comes from."
    },
    {
      "index": 2078,
      "start_time": 6349690.0,
      "end_time": 6352810.0,
      "text": "So we just did an example using a CSV file."
    },
    {
      "index": 2079,
      "start_time": 6352810.0,
      "end_time": 6354190.0,
      "text": "That&#39;s a model of some sort."
    },
    {
      "index": 2080,
      "start_time": 6354190.0,
      "end_time": 6355290.0,
      "text": "It&#39;s a super simple model."
    },
    {
      "index": 2081,
      "start_time": 6355290.0,
      "end_time": 6359440.0,
      "text": "But a model is just a general term describing where your data lives"
    },
    {
      "index": 2082,
      "start_time": 6359440.0,
      "end_time": 6360396.0,
      "text": "and how you access it."
    },
    {
      "index": 2083,
      "start_time": 6360400.0,
      "end_time": 6362274.0,
      "text": "And before long, we&#39;re going to use a fancier"
    },
    {
      "index": 2084,
      "start_time": 6362270.0,
      "end_time": 6365000.0,
      "text": "version of a model, an actual database server,"
    },
    {
      "index": 2085,
      "start_time": 6365000.0,
      "end_time": 6367570.0,
      "text": "that we can query and insert into and delete from and edit,"
    },
    {
      "index": 2086,
      "start_time": 6367570.0,
      "end_time": 6369770.0,
      "text": "and any number of other features as well."
    },
    {
      "index": 2087,
      "start_time": 6369770.0,
      "end_time": 6376450.0,
      "text": "But for now, today, let&#39;s just focus on the C and the V in MVC as follows."
    },
    {
      "index": 2088,
      "start_time": 6376450.0,
      "end_time": 6379200.0,
      "text": "I&#39;m going to go ahead and open up CS50 IDE, where we have"
    },
    {
      "index": 2089,
      "start_time": 6379200.0,
      "end_time": 6382240.0,
      "text": "a simple program here called serve.py."
    },
    {
      "index": 2090,
      "start_time": 6382240.0,
      "end_time": 6385870.0,
      "text": "And this is perhaps among the lowest level"
    },
    {
      "index": 2091,
      "start_time": 6385870.0,
      "end_time": 6389550.0,
      "text": "ways we could go about implementing our own web server."
    },
    {
      "index": 2092,
      "start_time": 6389550.0,
      "end_time": 6391840.0,
      "text": "So again, CS50 IDE comes with its own web server."
    },
    {
      "index": 2093,
      "start_time": 6391840.0,
      "end_time": 6393000.0,
      "text": "And Google has its own web server."
    },
    {
      "index": 2094,
      "start_time": 6393000.0,
      "end_time": 6394450.0,
      "text": "And Facebook has its own web server."
    },
    {
      "index": 2095,
      "start_time": 6394450.0,
      "end_time": 6397574.0,
      "text": "And many of them are using, like us, open source software, freely available"
    },
    {
      "index": 2096,
      "start_time": 6397570.0,
      "end_time": 6399126.0,
      "text": "software that&#39;s super popular."
    },
    {
      "index": 2097,
      "start_time": 6399130.0,
      "end_time": 6402570.0,
      "text": "But suppose we want to implement our own web"
    },
    {
      "index": 2098,
      "start_time": 6402570.0,
      "end_time": 6407870.0,
      "text": "server that listens on TCP port 80 for HTTP requests"
    },
    {
      "index": 2099,
      "start_time": 6407870.0,
      "end_time": 6409190.0,
      "text": "for those virtual envelopes."
    },
    {
      "index": 2100,
      "start_time": 6409190.0,
      "end_time": 6410920.0,
      "text": "In Python, we might do it as follows."
    },
    {
      "index": 2101,
      "start_time": 6410920.0,
      "end_time": 6415290.0,
      "text": "And a lot of the words on the screen might be new."
    },
    {
      "index": 2102,
      "start_time": 6415290.0,
      "end_time": 6418900.0,
      "text": "But the syntax is fundamentally the same as what we&#39;ve been focusing on today."
    },
    {
      "index": 2103,
      "start_time": 6418900.0,
      "end_time": 6424040.0,
      "text": "So from some module that comes with Python called HTTP server imports"
    },
    {
      "index": 2104,
      "start_time": 6424040.0,
      "end_time": 6428540.0,
      "text": "a class called base HTTP request handler and HTTP server."
    },
    {
      "index": 2105,
      "start_time": 6428540.0,
      "end_time": 6433594.0,
      "text": "So it turns out that Python comes with some built-in web server functionality."
    },
    {
      "index": 2106,
      "start_time": 6433590.0,
      "end_time": 6435506.0,
      "text": "It&#39;s not all that user friendly, as we&#39;ll see."
    },
    {
      "index": 2107,
      "start_time": 6435510.0,
      "end_time": 6437250.0,
      "text": "We have to do a lot of work to use it."
    },
    {
      "index": 2108,
      "start_time": 6437250.0,
      "end_time": 6439820.0,
      "text": "And the names are fairly verbose unto themselves."
    },
    {
      "index": 2109,
      "start_time": 6439820.0,
      "end_time": 6442750.0,
      "text": "But it comes with the ability, as a language,"
    },
    {
      "index": 2110,
      "start_time": 6442750.0,
      "end_time": 6447020.0,
      "text": "to let you implement a web server, a piece of software"
    },
    {
      "index": 2111,
      "start_time": 6447020.0,
      "end_time": 6450410.0,
      "text": "that when you run it just starts listening on the internet,"
    },
    {
      "index": 2112,
      "start_time": 6450410.0,
      "end_time": 6456520.0,
      "text": "on your computer&#39;s IP address on TCP port 80 for incoming HTTP requests"
    },
    {
      "index": 2113,
      "start_time": 6456520.0,
      "end_time": 6458800.0,
      "text": "and then responds to them as you see fit."
    },
    {
      "index": 2114,
      "start_time": 6458800.0,
      "end_time": 6462330.0,
      "text": "So we&#39;ve defined a class here called HTTP server request"
    },
    {
      "index": 2115,
      "start_time": 6462330.0,
      "end_time": 6466230.0,
      "text": "handler that descends from this parent class, so to speak."
    },
    {
      "index": 2116,
      "start_time": 6466230.0,
      "end_time": 6468020.0,
      "text": "But more on that in the days to come."
    },
    {
      "index": 2117,
      "start_time": 6468020.0,
      "end_time": 6471990.0,
      "text": "On line 7 here, I&#39;m defining a method conventionally called do Get,"
    },
    {
      "index": 2118,
      "start_time": 6471990.0,
      "end_time": 6474910.0,
      "text": "where Get is capitalized, thereby making super clear that this"
    },
    {
      "index": 2119,
      "start_time": 6474910.0,
      "end_time": 6477260.0,
      "text": "is the function, the method, that&#39;s going"
    },
    {
      "index": 2120,
      "start_time": 6477260.0,
      "end_time": 6480940.0,
      "text": "to be called if our server receives a request via HTTP"
    },
    {
      "index": 2121,
      "start_time": 6480940.0,
      "end_time": 6483720.0,
      "text": "get, as opposed to post or something else."
    },
    {
      "index": 2122,
      "start_time": 6483720.0,
      "end_time": 6486900.0,
      "text": "Self is, again, the convention when implementing a class for methods"
    },
    {
      "index": 2123,
      "start_time": 6486900.0,
      "end_time": 6490940.0,
      "text": "to take in a reference to themselves, so to speak."
    },
    {
      "index": 2124,
      "start_time": 6490940.0,
      "end_time": 6494800.0,
      "text": "A reference to the containing object will just call self."
    },
    {
      "index": 2125,
      "start_time": 6494800.0,
      "end_time": 6498590.0,
      "text": "Now inside here-- and you&#39;d only know this from having read the documentation"
    },
    {
      "index": 2126,
      "start_time": 6498590.0,
      "end_time": 6500950.0,
      "text": "or having done this before-- notice that we&#39;re going"
    },
    {
      "index": 2127,
      "start_time": 6500950.0,
      "end_time": 6502610.0,
      "text": "to do a few things in this web server."
    },
    {
      "index": 2128,
      "start_time": 6502610.0,
      "end_time": 6503520.0,
      "text": "Super simple."
    },
    {
      "index": 2129,
      "start_time": 6503520.0,
      "end_time": 6506210.0,
      "text": "We&#39;re going to, no matter what, just send a response"
    },
    {
      "index": 2130,
      "start_time": 6506210.0,
      "end_time": 6507670.0,
      "text": "code, a status code of 200."
    },
    {
      "index": 2131,
      "start_time": 6507670.0,
      "end_time": 6509570.0,
      "text": "Everything is always OK in this server."
    },
    {
      "index": 2132,
      "start_time": 6509570.0,
      "end_time": 6510410.0,
      "text": "It&#39;s not realistic."
    },
    {
      "index": 2133,
      "start_time": 6510410.0,
      "end_time": 6512760.0,
      "text": "Things could certainly go wrong, especially if the user asks us"
    },
    {
      "index": 2134,
      "start_time": 6512760.0,
      "end_time": 6514310.0,
      "text": "for something that we don&#39;t have."
    },
    {
      "index": 2135,
      "start_time": 6514310.0,
      "end_time": 6516057.0,
      "text": "A 404 for might be more appropriate."
    },
    {
      "index": 2136,
      "start_time": 6516060.0,
      "end_time": 6518643.0,
      "text": "But we&#39;re going to keep the example simple and no matter what,"
    },
    {
      "index": 2137,
      "start_time": 6518640.0,
      "end_time": 6520620.0,
      "text": "send 200, OK."
    },
    {
      "index": 2138,
      "start_time": 6520620.0,
      "end_time": 6524600.0,
      "text": "Meanwhile, we&#39;re also going to send another HTTP header using this Python"
    },
    {
      "index": 2139,
      "start_time": 6524600.0,
      "end_time": 6526800.0,
      "text": "call here of self.sendheaader."
    },
    {
      "index": 2140,
      "start_time": 6526800.0,
      "end_time": 6530380.0,
      "text": "And to be clear, these features-- send response, send headers,"
    },
    {
      "index": 2141,
      "start_time": 6530380.0,
      "end_time": 6533230.0,
      "text": "soon end headers-- are methods or functions"
    },
    {
      "index": 2142,
      "start_time": 6533230.0,
      "end_time": 6536280.0,
      "text": "that come with Python&#39;s built-in web server"
    },
    {
      "index": 2143,
      "start_time": 6536280.0,
      "end_time": 6539790.0,
      "text": "that we are simply extending the capabilities of at the moment."
    },
    {
      "index": 2144,
      "start_time": 6539790.0,
      "end_time": 6541520.0,
      "text": "What is the header that we want to send?"
    },
    {
      "index": 2145,
      "start_time": 6541520.0,
      "end_time": 6544380.0,
      "text": "Content type colon text HTML."
    },
    {
      "index": 2146,
      "start_time": 6544380.0,
      "end_time": 6548130.0,
      "text": "So we&#39;re going to behave exactly like that canonical example I put up again"
    },
    {
      "index": 2147,
      "start_time": 6548130.0,
      "end_time": 6549120.0,
      "text": "a moment ago."
    },
    {
      "index": 2148,
      "start_time": 6549120.0,
      "end_time": 6552040.0,
      "text": "Lasly, we&#39;re going to send a super simple message."
    },
    {
      "index": 2149,
      "start_time": 6552040.0,
      "end_time": 6558750.0,
      "text": "We&#39;re simply going to write essentially to the socket connection"
    },
    {
      "index": 2150,
      "start_time": 6558750.0,
      "end_time": 6561870.0,
      "text": "that my server has with the browser, the internet connection that we have."
    },
    {
      "index": 2151,
      "start_time": 6561870.0,
      "end_time": 6564200.0,
      "text": "I&#39;m going to write the following bytes."
    },
    {
      "index": 2152,
      "start_time": 6564200.0,
      "end_time": 6565630.0,
      "text": "Hello, world."
    },
    {
      "index": 2153,
      "start_time": 6565630.0,
      "end_time": 6567770.0,
      "text": "And I&#39;m going to use an encoding called UTF-8,"
    },
    {
      "index": 2154,
      "start_time": 6567770.0,
      "end_time": 6570229.0,
      "text": "which is a way of encoding Unicode, which, again,"
    },
    {
      "index": 2155,
      "start_time": 6570230.0,
      "end_time": 6572271.0,
      "text": "is an encoding scheme that&#39;s a superset of Ascii,"
    },
    {
      "index": 2156,
      "start_time": 6572270.0,
      "end_time": 6575170.0,
      "text": "as we discussed back in week 0."
    },
    {
      "index": 2157,
      "start_time": 6575170.0,
      "end_time": 6575850.0,
      "text": "That&#39;s it."
    },
    {
      "index": 2158,
      "start_time": 6575850.0,
      "end_time": 6577220.0,
      "text": "Return."
    },
    {
      "index": 2159,
      "start_time": 6577220.0,
      "end_time": 6582480.0,
      "text": "Now, this just defines a class, my own customisation of a web server."
    },
    {
      "index": 2160,
      "start_time": 6582480.0,
      "end_time": 6585530.0,
      "text": "Python comes with a web server built in-- specifically,"
    },
    {
      "index": 2161,
      "start_time": 6585530.0,
      "end_time": 6589850.0,
      "text": "that class called base HTTP request handler."
    },
    {
      "index": 2162,
      "start_time": 6589850.0,
      "end_time": 6591880.0,
      "text": "And I&#39;m simply extending its capabilities"
    },
    {
      "index": 2163,
      "start_time": 6591880.0,
      "end_time": 6596710.0,
      "text": "to specifically return hello world with content type text HTML"
    },
    {
      "index": 2164,
      "start_time": 6596710.0,
      "end_time": 6598447.0,
      "text": "and with a status code of 200."
    },
    {
      "index": 2165,
      "start_time": 6598450.0,
      "end_time": 6600533.0,
      "text": "That wouldn&#39;t necessarily be the case by default--"
    },
    {
      "index": 2166,
      "start_time": 6600530.0,
      "end_time": 6602380.0,
      "text": "certainly not that generic message."
    },
    {
      "index": 2167,
      "start_time": 6602380.0,
      "end_time": 6604040.0,
      "text": "But I have to start this server."
    },
    {
      "index": 2168,
      "start_time": 6604040.0,
      "end_time": 6610447.0,
      "text": "And I could add a main function or implement this in any number of ways."
    },
    {
      "index": 2169,
      "start_time": 6610450.0,
      "end_time": 6611783.0,
      "text": "But I&#39;m going to keep it simple."
    },
    {
      "index": 2170,
      "start_time": 6611780.0,
      "end_time": 6614530.0,
      "text": "At the bottom of the file, I&#39;m going to configure the server here,"
    },
    {
      "index": 2171,
      "start_time": 6614530.0,
      "end_time": 6617960.0,
      "text": "hard coding port 8080 to be the value of this variable."
    },
    {
      "index": 2172,
      "start_time": 6617960.0,
      "end_time": 6620090.0,
      "text": "A server address here is going to be a tuple."
    },
    {
      "index": 2173,
      "start_time": 6620090.0,
      "end_time": 6622589.0,
      "text": "And you would only know this, again, from the documentation."
    },
    {
      "index": 2174,
      "start_time": 6622590.0,
      "end_time": 6626121.0,
      "text": "This tuple, this comma separated list of values,"
    },
    {
      "index": 2175,
      "start_time": 6626120.0,
      "end_time": 6629130.0,
      "text": "is going to be this weird-looking IP address, and then"
    },
    {
      "index": 2176,
      "start_time": 6629130.0,
      "end_time": 6630889.0,
      "text": "that same value, 8080."
    },
    {
      "index": 2177,
      "start_time": 6630890.0,
      "end_time": 6633181.0,
      "text": "And this weird-looking at IP addresses is a convention."
    },
    {
      "index": 2178,
      "start_time": 6633180.0,
      "end_time": 6636600.0,
      "text": "If you specify that you want a web server to listen,"
    },
    {
      "index": 2179,
      "start_time": 6636600.0,
      "end_time": 6641310.0,
      "text": "to talk on IP address 0.0.0.0, that&#39;s generally"
    },
    {
      "index": 2180,
      "start_time": 6641310.0,
      "end_time": 6645920.0,
      "text": "shorthand notation for saying, listen on all possible network interfaces that"
    },
    {
      "index": 2181,
      "start_time": 6645920.0,
      "end_time": 6650060.0,
      "text": "are built into my computer, whether it&#39;s CS50 IDE, or an actual server,"
    },
    {
      "index": 2182,
      "start_time": 6650060.0,
      "end_time": 6651670.0,
      "text": "or a Mac, or a PC."
    },
    {
      "index": 2183,
      "start_time": 6651670.0,
      "end_time": 6653530.0,
      "text": "This is sort of like the wildcard saying,"
    },
    {
      "index": 2184,
      "start_time": 6653530.0,
      "end_time": 6656130.0,
      "text": "just listen on any one of your ethernet cables"
    },
    {
      "index": 2185,
      "start_time": 6656130.0,
      "end_time": 6660900.0,
      "text": "or Wi-Fi connections for incoming requests, but specifically on this port"
    },
    {
      "index": 2186,
      "start_time": 6660900.0,
      "end_time": 6662120.0,
      "text": "8080."
    },
    {
      "index": 2187,
      "start_time": 6662120.0,
      "end_time": 6665950.0,
      "text": "This last line here essentially instantiates an HTTP server,"
    },
    {
      "index": 2188,
      "start_time": 6665950.0,
      "end_time": 6670660.0,
      "text": "passing into it our request handler, which is that customization of behavior"
    },
    {
      "index": 2189,
      "start_time": 6670660.0,
      "end_time": 6671850.0,
      "text": "that I described earlier."
    },
    {
      "index": 2190,
      "start_time": 6671850.0,
      "end_time": 6673940.0,
      "text": "And then lastly, nicely enough, there&#39;s a method,"
    },
    {
      "index": 2191,
      "start_time": 6673940.0,
      "end_time": 6677550.0,
      "text": "a function built into this Python server called serve forever,"
    },
    {
      "index": 2192,
      "start_time": 6677550.0,
      "end_time": 6680390.0,
      "text": "which just turns the server on and never turns it off"
    },
    {
      "index": 2193,
      "start_time": 6680390.0,
      "end_time": 6683110.0,
      "text": "unless I forcibly kill it with, say, Control-C."
    },
    {
      "index": 2194,
      "start_time": 6683110.0,
      "end_time": 6686320.0,
      "text": "So let&#39;s go ahead and actually run this."
    },
    {
      "index": 2195,
      "start_time": 6686320.0,
      "end_time": 6693150.0,
      "text": "I&#39;m going to go ahead into the folder containing serve.py"
    },
    {
      "index": 2196,
      "start_time": 6693150.0,
      "end_time": 6697670.0,
      "text": "and run Python serve.py, Enter."
    },
    {
      "index": 2197,
      "start_time": 6697670.0,
      "end_time": 6700210.0,
      "text": "And nothing seems to happen just yet."
    },
    {
      "index": 2198,
      "start_time": 6700210.0,
      "end_time": 6704020.0,
      "text": "But I&#39;m going to go ahead and open up another tab in CS50 IDE."
    },
    {
      "index": 2199,
      "start_time": 6704020.0,
      "end_time": 6713270.0,
      "text": "And I&#39;m going to go to http://127.0.0.0:8080."
    },
    {
      "index": 2200,
      "start_time": 6713270.0,
      "end_time": 6714724.0,
      "text": "So why this IP address?"
    },
    {
      "index": 2201,
      "start_time": 6714720.0,
      "end_time": 6717386.0,
      "text": "Even though this is a little inconsistent with what I just said,"
    },
    {
      "index": 2202,
      "start_time": 6717390.0,
      "end_time": 6721310.0,
      "text": "technically, 0.0.0.0 is not your actual IP address."
    },
    {
      "index": 2203,
      "start_time": 6721310.0,
      "end_time": 6723460.0,
      "text": "It&#39;s, again, just kind of a wildcard string"
    },
    {
      "index": 2204,
      "start_time": 6723460.0,
      "end_time": 6726340.0,
      "text": "that represents all of your possible network interfaces."
    },
    {
      "index": 2205,
      "start_time": 6726340.0,
      "end_time": 6728750.0,
      "text": "Every computer on the internet, generally,"
    },
    {
      "index": 2206,
      "start_time": 6728750.0,
      "end_time": 6732440.0,
      "text": "has a local host address-- not its public IP,"
    },
    {
      "index": 2207,
      "start_time": 6732440.0,
      "end_time": 6734990.0,
      "text": "not even a private IP that&#39;s in your own home"
    },
    {
      "index": 2208,
      "start_time": 6734990.0,
      "end_time": 6744980.0,
      "text": "network behind your own firewall-- but 127.0.0.1"
    },
    {
      "index": 2209,
      "start_time": 6744980.0,
      "end_time": 6748560.0,
      "text": "represents your own local host address, an IP address"
    },
    {
      "index": 2210,
      "start_time": 6748560.0,
      "end_time": 6750540.0,
      "text": "that by default every computer in the interest"
    },
    {
      "index": 2211,
      "start_time": 6750540.0,
      "end_time": 6753470.0,
      "text": "has insofar as it refers to itself."
    },
    {
      "index": 2212,
      "start_time": 6753470.0,
      "end_time": 6757300.0,
      "text": "So we all have generally, in our own Macs and PCs, or CS50 IDEs,"
    },
    {
      "index": 2213,
      "start_time": 6757300.0,
      "end_time": 6761170.0,
      "text": "access to this IP address, which just refers to myself."
    },
    {
      "index": 2214,
      "start_time": 6761170.0,
      "end_time": 6763350.0,
      "text": "And port 8080 after the colon."
    },
    {
      "index": 2215,
      "start_time": 6763350.0,
      "end_time": 6765950.0,
      "text": "Normally, using a browser, you don&#39;t specify the port number"
    },
    {
      "index": 2216,
      "start_time": 6765950.0,
      "end_time": 6768670.0,
      "text": "by saying colon 80 or colon 443."
    },
    {
      "index": 2217,
      "start_time": 6768670.0,
      "end_time": 6771570.0,
      "text": "But in this case, because it&#39;s a nonstandard port, what"
    },
    {
      "index": 2218,
      "start_time": 6771570.0,
      "end_time": 6777180.0,
      "text": "I want to do with Google Chrome here is talk to my computer on this local host"
    },
    {
      "index": 2219,
      "start_time": 6777180.0,
      "end_time": 6779000.0,
      "text": "address on that port."
    },
    {
      "index": 2220,
      "start_time": 6779000.0,
      "end_time": 6781954.0,
      "text": "Now, if you play along at home using CS50 IDE on the web,"
    },
    {
      "index": 2221,
      "start_time": 6781950.0,
      "end_time": 6783616.0,
      "text": "your address will actually be different."
    },
    {
      "index": 2222,
      "start_time": 6783620.0,
      "end_time": 6789010.0,
      "text": "I simply happen to be using a local version of CS50 IDE on my own Mac"
    },
    {
      "index": 2223,
      "start_time": 6789010.0,
      "end_time": 6792076.0,
      "text": "here so that I don&#39;t have to combat with any Wi-Fi issues."
    },
    {
      "index": 2224,
      "start_time": 6792080.0,
      "end_time": 6793954.0,
      "text": "But the idea is going to be exactly the same."
    },
    {
      "index": 2225,
      "start_time": 6793950.0,
      "end_time": 6797910.0,
      "text": "Whatever your workspace&#39;s IP address is or host name,"
    },
    {
      "index": 2226,
      "start_time": 6797910.0,
      "end_time": 6801430.0,
      "text": "the English version of it, colon 8080, is what you will type."
    },
    {
      "index": 2227,
      "start_time": 6801430.0,
      "end_time": 6802434.0,
      "text": "Let me hit Enter."
    },
    {
      "index": 2228,
      "start_time": 6802430.0,
      "end_time": 6803846.0,
      "text": "But it&#39;s not all that interesting."
    },
    {
      "index": 2229,
      "start_time": 6803850.0,
      "end_time": 6807600.0,
      "text": "Indeed, if I view the page source, as we have in the past, this is not HTML."
    },
    {
      "index": 2230,
      "start_time": 6807600.0,
      "end_time": 6812550.0,
      "text": "I&#39;ve been super lazy right now, simply outputting a promise via that header"
    },
    {
      "index": 2231,
      "start_time": 6812550.0,
      "end_time": 6814940.0,
      "text": "that I&#39;m outputting a content type of text HTML."
    },
    {
      "index": 2232,
      "start_time": 6814940.0,
      "end_time": 6816480.0,
      "text": "But this isn&#39;t really HTML."
    },
    {
      "index": 2233,
      "start_time": 6816480.0,
      "end_time": 6817480.0,
      "text": "This is just text."
    },
    {
      "index": 2234,
      "start_time": 6817480.0,
      "end_time": 6819990.0,
      "text": "And so this really isn&#39;t a full-fledged web server."
    },
    {
      "index": 2235,
      "start_time": 6819990.0,
      "end_time": 6825470.0,
      "text": "It&#39;s certainly not dynamic in that I&#39;ve literally hard coded hello world."
    },
    {
      "index": 2236,
      "start_time": 6825470.0,
      "end_time": 6830490.0,
      "text": "So let&#39;s do something a little better, a little more pleasurable to write."
    },
    {
      "index": 2237,
      "start_time": 6830490.0,
      "end_time": 6835030.0,
      "text": "And for that, we&#39;re actually going to need something called a framework."
    },
    {
      "index": 2238,
      "start_time": 6835030.0,
      "end_time": 6838700.0,
      "text": "And so it turns out that writing code like this-- totally possible,"
    },
    {
      "index": 2239,
      "start_time": 6838700.0,
      "end_time": 6840109.0,
      "text": "and folks did it for some time."
    },
    {
      "index": 2240,
      "start_time": 6840110.0,
      "end_time": 6842151.0,
      "text": "But eventually did people realize, you know what?"
    },
    {
      "index": 2241,
      "start_time": 6842150.0,
      "end_time": 6845000.0,
      "text": "We&#39;re doing the same kinds of lines of code again and again."
    },
    {
      "index": 2242,
      "start_time": 6845000.0,
      "end_time": 6847920.0,
      "text": "This isn&#39;t particularly fun to implement the website or the product"
    },
    {
      "index": 2243,
      "start_time": 6847920.0,
      "end_time": 6848880.0,
      "text": "that I&#39;m working on."
    },
    {
      "index": 2244,
      "start_time": 6848880.0,
      "end_time": 6852380.0,
      "text": "Let me actually start to borrow ideas from past projects"
    },
    {
      "index": 2245,
      "start_time": 6852380.0,
      "end_time": 6853700.0,
      "text": "into current projects."
    },
    {
      "index": 2246,
      "start_time": 6853700.0,
      "end_time": 6855920.0,
      "text": "And thus were born things called frameworks,"
    },
    {
      "index": 2247,
      "start_time": 6855920.0,
      "end_time": 6858840.0,
      "text": "collections of code written by other people that are often"
    },
    {
      "index": 2248,
      "start_time": 6858840.0,
      "end_time": 6862840.0,
      "text": "free or open source that you can then use in your own projects"
    },
    {
      "index": 2249,
      "start_time": 6862840.0,
      "end_time": 6863982.0,
      "text": "to make your life easier."
    },
    {
      "index": 2250,
      "start_time": 6863980.0,
      "end_time": 6865188.0,
      "text": "And indeed, this is thematic."
    },
    {
      "index": 2251,
      "start_time": 6865190.0,
      "end_time": 6868660.0,
      "text": "Especially as we get farther and farther from C and lower level"
    },
    {
      "index": 2252,
      "start_time": 6868660.0,
      "end_time": 6872540.0,
      "text": "languages toward Python, and eventually JavaScript and beyond,"
    },
    {
      "index": 2253,
      "start_time": 6872540.0,
      "end_time": 6874420.0,
      "text": "you&#39;ll find that it&#39;s thematic for people"
    },
    {
      "index": 2254,
      "start_time": 6874420.0,
      "end_time": 6876420.0,
      "text": "to sort of stand again on each other&#39;s shoulders"
    },
    {
      "index": 2255,
      "start_time": 6876420.0,
      "end_time": 6882850.0,
      "text": "and use past problems solved to solve future problems more quickly."
    },
    {
      "index": 2256,
      "start_time": 6882850.0,
      "end_time": 6884220.0,
      "text": "So what do I mean by that?"
    },
    {
      "index": 2257,
      "start_time": 6884220.0,
      "end_time": 6886790.0,
      "text": "Well, one of the very first things I did way back in the day"
    },
    {
      "index": 2258,
      "start_time": 6886790.0,
      "end_time": 6891590.0,
      "text": "when learning web programming myself, after having taken CS50 and CS51, is I"
    },
    {
      "index": 2259,
      "start_time": 6891590.0,
      "end_time": 6893170.0,
      "text": "taught myself a language called Perl."
    },
    {
      "index": 2260,
      "start_time": 6893170.0,
      "end_time": 6896110.0,
      "text": "It&#39;s not really in vogue these days, though still around and still"
    },
    {
      "index": 2261,
      "start_time": 6896110.0,
      "end_time": 6896990.0,
      "text": "under development."
    },
    {
      "index": 2262,
      "start_time": 6896990.0,
      "end_time": 6900300.0,
      "text": "But it&#39;s similar in spirit to what we&#39;re talking about today in Python."
    },
    {
      "index": 2263,
      "start_time": 6900300.0,
      "end_time": 6902920.0,
      "text": "And I happened to use that language back in the day"
    },
    {
      "index": 2264,
      "start_time": 6902920.0,
      "end_time": 6906310.0,
      "text": "to implement a website, the first ever website for the freshman"
    },
    {
      "index": 2265,
      "start_time": 6906310.0,
      "end_time": 6907539.0,
      "text": "intramural sports program."
    },
    {
      "index": 2266,
      "start_time": 6907540.0,
      "end_time": 6909331.0,
      "text": "So all the freshmen or first years who want"
    },
    {
      "index": 2267,
      "start_time": 6909330.0,
      "end_time": 6912710.0,
      "text": "to participate in sports just for fun, back in my day,"
    },
    {
      "index": 2268,
      "start_time": 6912710.0,
      "end_time": 6916800.0,
      "text": "we would register for sports by walking across Harvard Yard, uphill"
    },
    {
      "index": 2269,
      "start_time": 6916800.0,
      "end_time": 6919830.0,
      "text": "both ways in the snow, and then slide a piece of paper"
    },
    {
      "index": 2270,
      "start_time": 6919830.0,
      "end_time": 6922210.0,
      "text": "under one of the proctor&#39;s or RA&#39;s doors saying,"
    },
    {
      "index": 2271,
      "start_time": 6922210.0,
      "end_time": 6925380.0,
      "text": "I want to register for volleyball, or soccer, or whatever it was."
    },
    {
      "index": 2272,
      "start_time": 6925380.0,
      "end_time": 6929390.0,
      "text": "So this was an opportunity ripe for disruption with computers."
    },
    {
      "index": 2273,
      "start_time": 6929390.0,
      "end_time": 6931960.0,
      "text": "So I taught myself web programming back in the day"
    },
    {
      "index": 2274,
      "start_time": 6931960.0,
      "end_time": 6934120.0,
      "text": "and volunteered to make this website for the group"
    },
    {
      "index": 2275,
      "start_time": 6934120.0,
      "end_time": 6936280.0,
      "text": "so that students like myself could just-- well,"
    },
    {
      "index": 2276,
      "start_time": 6936280.0,
      "end_time": 6939950.0,
      "text": "maybe students not like myself could register for sports online."
    },
    {
      "index": 2277,
      "start_time": 6939950.0,
      "end_time": 6941424.0,
      "text": "And so what did I actually do?"
    },
    {
      "index": 2278,
      "start_time": 6941420.0,
      "end_time": 6943086.0,
      "text": "Well, we won&#39;t look at the Perl version."
    },
    {
      "index": 2279,
      "start_time": 6943090.0,
      "end_time": 6948720.0,
      "text": "We&#39;ll look instead at a Python version using a very popular framework,"
    },
    {
      "index": 2280,
      "start_time": 6948720.0,
      "end_time": 6951170.0,
      "text": "freely available code called Flask."
    },
    {
      "index": 2281,
      "start_time": 6951170.0,
      "end_time": 6953500.0,
      "text": "So Flask is technically a micro framework"
    },
    {
      "index": 2282,
      "start_time": 6953500.0,
      "end_time": 6956050.0,
      "text": "in that it doesn&#39;t have a huge number of features."
    },
    {
      "index": 2283,
      "start_time": 6956050.0,
      "end_time": 6958350.0,
      "text": "But it&#39;s got relatively few features that people really"
    },
    {
      "index": 2284,
      "start_time": 6958350.0,
      "end_time": 6961750.0,
      "text": "seem to lately that helps you get worked on faster."
    },
    {
      "index": 2285,
      "start_time": 6961750.0,
      "end_time": 6962865.0,
      "text": "And by that I mean this."
    },
    {
      "index": 2286,
      "start_time": 6962870.0,
      "end_time": 6966205.0,
      "text": "This is how I might implement the simplest of websites for the freshman"
    },
    {
      "index": 2287,
      "start_time": 6966200.0,
      "end_time": 6967730.0,
      "text": "intramural sports program."
    },
    {
      "index": 2288,
      "start_time": 6967730.0,
      "end_time": 6970120.0,
      "text": "Now, admittedly, it&#39;s lacking in quite a few features."
    },
    {
      "index": 2289,
      "start_time": 6970120.0,
      "end_time": 6971540.0,
      "text": "But let&#39;s see how it works."
    },
    {
      "index": 2290,
      "start_time": 6971540.0,
      "end_time": 6974740.0,
      "text": "And indeed, with some of our future web-based projects in CS50,"
    },
    {
      "index": 2291,
      "start_time": 6974740.0,
      "end_time": 6978020.0,
      "text": "will we build upon Flask and borrow these same ideas."
    },
    {
      "index": 2292,
      "start_time": 6978020.0,
      "end_time": 6981150.0,
      "text": "So you&#39;ll notice that from Flask, am I importing"
    },
    {
      "index": 2293,
      "start_time": 6981150.0,
      "end_time": 6983790.0,
      "text": "a whole bunch of potential features, none"
    },
    {
      "index": 2294,
      "start_time": 6983790.0,
      "end_time": 6986580.0,
      "text": "of which I want to implement myself, all of which, pretty much,"
    },
    {
      "index": 2295,
      "start_time": 6986580.0,
      "end_time": 6991650.0,
      "text": "I would have had to implement myself if I used that base HTTP web server that"
    },
    {
      "index": 2296,
      "start_time": 6991650.0,
      "end_time": 6992930.0,
      "text": "comes with Python itself."
    },
    {
      "index": 2297,
      "start_time": 6992930.0,
      "end_time": 6996680.0,
      "text": "So Flask is built on top of that built-in functionality."
    },
    {
      "index": 2298,
      "start_time": 6996680.0,
      "end_time": 6997740.0,
      "text": "How does it work?"
    },
    {
      "index": 2299,
      "start_time": 6997740.0,
      "end_time": 7002770.0,
      "text": "Once I&#39;ve imported this module&#39;s components and classes,"
    },
    {
      "index": 2300,
      "start_time": 7002770.0,
      "end_time": 7004610.0,
      "text": "I&#39;m going to go ahead and instantiate, so"
    },
    {
      "index": 2301,
      "start_time": 7004610.0,
      "end_time": 7008920.0,
      "text": "to speak, an application of type Flask, passing in the name of this file."
    },
    {
      "index": 2302,
      "start_time": 7008920.0,
      "end_time": 7011200.0,
      "text": "So this is just a special symbol, __name,"
    },
    {
      "index": 2303,
      "start_time": 7011200.0,
      "end_time": 7015160.0,
      "text": "that we&#39;ve seen before in the context of main that just refers to this file."
    },
    {
      "index": 2304,
      "start_time": 7015160.0,
      "end_time": 7020310.0,
      "text": "So this says, hey Python, give me a Flask application based on this file."
    },
    {
      "index": 2305,
      "start_time": 7020310.0,
      "end_time": 7023190.0,
      "text": "So now notice on line 5, a slightly new syntax,"
    },
    {
      "index": 2306,
      "start_time": 7023190.0,
      "end_time": 7024920.0,
      "text": "something we&#39;ll call a decorator."
    },
    {
      "index": 2307,
      "start_time": 7024920.0,
      "end_time": 7030570.0,
      "text": "And it&#39;s a one liner in this case that simply provides Python with a hint"
    },
    {
      "index": 2308,
      "start_time": 7030570.0,
      "end_time": 7035470.0,
      "text": "that the following method should be called anytime the user"
    },
    {
      "index": 2309,
      "start_time": 7035470.0,
      "end_time": 7037460.0,
      "text": "requests a particular route."
    },
    {
      "index": 2310,
      "start_time": 7037460.0,
      "end_time": 7042850.0,
      "text": "A route, typically, is something like /foo or /bar or /search or the like."
    },
    {
      "index": 2311,
      "start_time": 7042850.0,
      "end_time": 7046130.0,
      "text": "So a route is like the path that you are requesting on the web server,"
    },
    {
      "index": 2312,
      "start_time": 7046130.0,
      "end_time": 7048150.0,
      "text": "slash generally being the default."
    },
    {
      "index": 2313,
      "start_time": 7048150.0,
      "end_time": 7052250.0,
      "text": "So this is saying to Python, anytime the user requests"
    },
    {
      "index": 2314,
      "start_time": 7052250.0,
      "end_time": 7056069.0,
      "text": "slash, the default home page, go ahead and call this index method."
    },
    {
      "index": 2315,
      "start_time": 7056070.0,
      "end_time": 7057861.0,
      "text": "Technically, we could have called anything."
    },
    {
      "index": 2316,
      "start_time": 7057860.0,
      "end_time": 7059580.0,
      "text": "But this is a good convention."
    },
    {
      "index": 2317,
      "start_time": 7059580.0,
      "end_time": 7061050.0,
      "text": "And return what?"
    },
    {
      "index": 2318,
      "start_time": 7061050.0,
      "end_time": 7063190.0,
      "text": "The rendering of this template."
    },
    {
      "index": 2319,
      "start_time": 7063190.0,
      "end_time": 7066140.0,
      "text": "In other words, don&#39;t just return a few bytes, hello world."
    },
    {
      "index": 2320,
      "start_time": 7066140.0,
      "end_time": 7068180.0,
      "text": "Return this whole HTML file."
    },
    {
      "index": 2321,
      "start_time": 7068180.0,
      "end_time": 7071680.0,
      "text": "But it&#39;s a template in the sense that we can plug in values, as we&#39;ll soon see."
    },
    {
      "index": 2322,
      "start_time": 7071680.0,
      "end_time": 7076620.0,
      "text": "Meanwhile, hey Python, when you see a request for /register,"
    },
    {
      "index": 2323,
      "start_time": 7076620.0,
      "end_time": 7080510.0,
      "text": "not using get by default, but by using post,"
    },
    {
      "index": 2324,
      "start_time": 7080510.0,
      "end_time": 7084250.0,
      "text": "which might happen in a form submission, go ahead and call this method called"
    },
    {
      "index": 2325,
      "start_time": 7084250.0,
      "end_time": 7084940.0,
      "text": "Register."
    },
    {
      "index": 2326,
      "start_time": 7084940.0,
      "end_time": 7087360.0,
      "text": "And just as a sanity check, let&#39;s do this."
    },
    {
      "index": 2327,
      "start_time": 7087360.0,
      "end_time": 7093010.0,
      "text": "If the request that we have received has a form in it"
    },
    {
      "index": 2328,
      "start_time": 7093010.0,
      "end_time": 7098630.0,
      "text": "that has a Name input in it that&#39;s blank, equals quote, unquote,"
    },
    {
      "index": 2329,
      "start_time": 7098630.0,
      "end_time": 7105820.0,
      "text": "or the request we&#39;ve received has a form whose Dorm field is blank,"
    },
    {
      "index": 2330,
      "start_time": 7105820.0,
      "end_time": 7110280.0,
      "text": "then return this template instead, failure.html."
    },
    {
      "index": 2331,
      "start_time": 7110280.0,
      "end_time": 7112300.0,
      "text": "Otherwise, return success."
    },
    {
      "index": 2332,
      "start_time": 7112300.0,
      "end_time": 7116800.0,
      "text": "So in other words, if the user has submitted a form to register for sports"
    },
    {
      "index": 2333,
      "start_time": 7116800.0,
      "end_time": 7120090.0,
      "text": "and he or she has not given us their name or their dorm,"
    },
    {
      "index": 2334,
      "start_time": 7120090.0,
      "end_time": 7121790.0,
      "text": "let&#39;s render this failure message."
    },
    {
      "index": 2335,
      "start_time": 7121790.0,
      "end_time": 7123840.0,
      "text": "Don&#39;t let them register because we don&#39;t even know who they are"
    },
    {
      "index": 2336,
      "start_time": 7123840.0,
      "end_time": 7124810.0,
      "text": "or where they&#39;re from."
    },
    {
      "index": 2337,
      "start_time": 7124810.0,
      "end_time": 7127780.0,
      "text": "So we&#39;re going to display failure.html."
    },
    {
      "index": 2338,
      "start_time": 7127780.0,
      "end_time": 7131130.0,
      "text": "Otherwise, by default, we&#39;ll display success.html."
    },
    {
      "index": 2339,
      "start_time": 7131130.0,
      "end_time": 7132680.0,
      "text": "So let&#39;s see what this looks like."
    },
    {
      "index": 2340,
      "start_time": 7132680.0,
      "end_time": 7137030.0,
      "text": "I&#39;m going to go ahead and hit Control-C to get out of the old web server."
    },
    {
      "index": 2341,
      "start_time": 7137030.0,
      "end_time": 7139540.0,
      "text": "I&#39;m going to go into this Frosh IMs directory."
    },
    {
      "index": 2342,
      "start_time": 7139540.0,
      "end_time": 7141750.0,
      "text": "And this time, instead of running Python,"
    },
    {
      "index": 2343,
      "start_time": 7141750.0,
      "end_time": 7144697.0,
      "text": "I&#39;m instead going to run Flask, Run."
    },
    {
      "index": 2344,
      "start_time": 7144700.0,
      "end_time": 7146783.0,
      "text": "And then I&#39;m going to be just super specific here."
    },
    {
      "index": 2345,
      "start_time": 7146780.0,
      "end_time": 7150940.0,
      "text": "I&#39;m going to say the host I want to use is every possible interface."
    },
    {
      "index": 2346,
      "start_time": 7150940.0,
      "end_time": 7152732.0,
      "text": "And then the port I&#39;m going to use is 8080,"
    },
    {
      "index": 2347,
      "start_time": 7152730.0,
      "end_time": 7154771.0,
      "text": "though you can configure these in different ways."
    },
    {
      "index": 2348,
      "start_time": 7154770.0,
      "end_time": 7155917.0,
      "text": "And I&#39;m going to hit Enter."
    },
    {
      "index": 2349,
      "start_time": 7155920.0,
      "end_time": 7157836.0,
      "text": "A whole bunch of stuff scrolled on the screen."
    },
    {
      "index": 2350,
      "start_time": 7157840.0,
      "end_time": 7161504.0,
      "text": "But the essence of it is that serving Flask App application."
    },
    {
      "index": 2351,
      "start_time": 7161500.0,
      "end_time": 7165010.0,
      "text": "Debug mode and CS50 IDE is turned on by default at the moment."
    },
    {
      "index": 2352,
      "start_time": 7165010.0,
      "end_time": 7166910.0,
      "text": "And now we&#39;re ready to go."
    },
    {
      "index": 2353,
      "start_time": 7166910.0,
      "end_time": 7171210.0,
      "text": "If I now go back to my web page and reload, I&#39;m still at the same URL."
    },
    {
      "index": 2354,
      "start_time": 7171210.0,
      "end_time": 7173850.0,
      "text": "But a different web server is now responding to my requests."
    },
    {
      "index": 2355,
      "start_time": 7173850.0,
      "end_time": 7180186.0,
      "text": "And this is sort of in the spirit of 1996, &#39;97, whenever I implemented this."
    },
    {
      "index": 2356,
      "start_time": 7180190.0,
      "end_time": 7181564.0,
      "text": "This is what the web looked like."
    },
    {
      "index": 2357,
      "start_time": 7181560.0,
      "end_time": 7183580.0,
      "text": "And in fact, this might be a little worse."
    },
    {
      "index": 2358,
      "start_time": 7183580.0,
      "end_time": 7187102.0,
      "text": "So now, suppose I&#39;m kind of in a rush."
    },
    {
      "index": 2359,
      "start_time": 7187100.0,
      "end_time": 7188558.0,
      "text": "I just want to register for sports."
    },
    {
      "index": 2360,
      "start_time": 7188560.0,
      "end_time": 7190530.0,
      "text": "I don&#39;t think to provide my name or dorm."
    },
    {
      "index": 2361,
      "start_time": 7190530.0,
      "end_time": 7192410.0,
      "text": "Let me hit Register."
    },
    {
      "index": 2362,
      "start_time": 7192410.0,
      "end_time": 7193190.0,
      "text": "And I&#39;m yelled at."
    },
    {
      "index": 2363,
      "start_time": 7193190.0,
      "end_time": 7194870.0,
      "text": "You must provide your name and dorm."
    },
    {
      "index": 2364,
      "start_time": 7194870.0,
      "end_time": 7195830.0,
      "text": "And notice, where am I?"
    },
    {
      "index": 2365,
      "start_time": 7195830.0,
      "end_time": 7199760.0,
      "text": "If I look at the URL, I&#39;m at that same IP and port"
    },
    {
      "index": 2366,
      "start_time": 7199760.0,
      "end_time": 7203290.0,
      "text": "number, which will vary based on where you are in the world and what service"
    },
    {
      "index": 2367,
      "start_time": 7203290.0,
      "end_time": 7205380.0,
      "text": "you&#39;re using, like CS50 IDE."
    },
    {
      "index": 2368,
      "start_time": 7205380.0,
      "end_time": 7207971.0,
      "text": "But I&#39;m at /register, that route."
    },
    {
      "index": 2369,
      "start_time": 7207970.0,
      "end_time": 7208469.0,
      "text": "All right."
    },
    {
      "index": 2370,
      "start_time": 7208470.0,
      "end_time": 7209502.0,
      "text": "Let me go back."
    },
    {
      "index": 2371,
      "start_time": 7209500.0,
      "end_time": 7211458.0,
      "text": "Let me go ahead and give them my name at least."
    },
    {
      "index": 2372,
      "start_time": 7211460.0,
      "end_time": 7211960.0,
      "text": "David."
    },
    {
      "index": 2373,
      "start_time": 7211960.0,
      "end_time": 7212920.0,
      "text": "Register."
    },
    {
      "index": 2374,
      "start_time": 7212920.0,
      "end_time": 7214020.0,
      "text": "And voila."
    },
    {
      "index": 2375,
      "start_time": 7214020.0,
      "end_time": 7217620.0,
      "text": "I am being yelled at again because even though I provided my name,"
    },
    {
      "index": 2376,
      "start_time": 7217620.0,
      "end_time": 7219130.0,
      "text": "I&#39;ve not provided my dorm still."
    },
    {
      "index": 2377,
      "start_time": 7219130.0,
      "end_time": 7222780.0,
      "text": "So this seems to be a fairly lightweight error message."
    },
    {
      "index": 2378,
      "start_time": 7222780.0,
      "end_time": 7223740.0,
      "text": "But let me cooperate."
    },
    {
      "index": 2379,
      "start_time": 7223740.0,
      "end_time": 7226590.0,
      "text": "Let me provide both David and say Matthews, and click Register."
    },
    {
      "index": 2380,
      "start_time": 7226590.0,
      "end_time": 7227410.0,
      "text": "Aha."
    },
    {
      "index": 2381,
      "start_time": 7227410.0,
      "end_time": 7228630.0,
      "text": "You are registered."
    },
    {
      "index": 2382,
      "start_time": 7228630.0,
      "end_time": 7229720.0,
      "text": "Well, not really."
    },
    {
      "index": 2383,
      "start_time": 7229720.0,
      "end_time": 7230670.0,
      "text": "So why not really?"
    },
    {
      "index": 2384,
      "start_time": 7230670.0,
      "end_time": 7234000.0,
      "text": "Well, that&#39;s because this particular website has no database yet."
    },
    {
      "index": 2385,
      "start_time": 7234000.0,
      "end_time": 7235520.0,
      "text": "There&#39;s no place to store the data."
    },
    {
      "index": 2386,
      "start_time": 7235520.0,
      "end_time": 7236790.0,
      "text": "There&#39;s not even a CSV file."
    },
    {
      "index": 2387,
      "start_time": 7236790.0,
      "end_time": 7238081.0,
      "text": "There&#39;s no email functionality."
    },
    {
      "index": 2388,
      "start_time": 7238080.0,
      "end_time": 7240289.0,
      "text": "All it&#39;s being used for today is to demonstrate"
    },
    {
      "index": 2389,
      "start_time": 7240290.0,
      "end_time": 7244160.0,
      "text": "how we can check for the presence of form submissions"
    },
    {
      "index": 2390,
      "start_time": 7244160.0,
      "end_time": 7247590.0,
      "text": "properly to make sure the user is actually providing those values."
    },
    {
      "index": 2391,
      "start_time": 7247590.0,
      "end_time": 7252290.0,
      "text": "So if I actually go back into CS50 IDE, let&#39;s go into this Frosh IMs directory,"
    },
    {
      "index": 2392,
      "start_time": 7252290.0,
      "end_time": 7254860.0,
      "text": "inside if which is a Templates directory,"
    },
    {
      "index": 2393,
      "start_time": 7254860.0,
      "end_time": 7258550.0,
      "text": "and take a look at Failure, the first thing that we saw."
    },
    {
      "index": 2394,
      "start_time": 7258550.0,
      "end_time": 7260820.0,
      "text": "Now, this admittedly looks a bit cryptic."
    },
    {
      "index": 2395,
      "start_time": 7260820.0,
      "end_time": 7265060.0,
      "text": "But for a moment, notice that it&#39;s extending something called layout.html."
    },
    {
      "index": 2396,
      "start_time": 7265060.0,
      "end_time": 7268260.0,
      "text": "And actually, it looks like there&#39;s these special syntax here."
    },
    {
      "index": 2397,
      "start_time": 7268260.0,
      "end_time": 7272100.0,
      "text": "So it turns out that Flask supports a templating language."
    },
    {
      "index": 2398,
      "start_time": 7272100.0,
      "end_time": 7272990.0,
      "text": "It&#39;s not HTML."
    },
    {
      "index": 2399,
      "start_time": 7272990.0,
      "end_time": 7274120.0,
      "text": "It&#39;s not CSS."
    },
    {
      "index": 2400,
      "start_time": 7274120.0,
      "end_time": 7275210.0,
      "text": "It&#39;s not even Python."
    },
    {
      "index": 2401,
      "start_time": 7275210.0,
      "end_time": 7277560.0,
      "text": "It&#39;s sort of a mini language unto itself,"
    },
    {
      "index": 2402,
      "start_time": 7277560.0,
      "end_time": 7282200.0,
      "text": "a templating language that gives you simple instructions and features that"
    },
    {
      "index": 2403,
      "start_time": 7282200.0,
      "end_time": 7285720.0,
      "text": "allow you to dynamically plug in values to your HTML."
    },
    {
      "index": 2404,
      "start_time": 7285720.0,
      "end_time": 7287750.0,
      "text": "So they don&#39;t have to hard code everything."
    },
    {
      "index": 2405,
      "start_time": 7287750.0,
      "end_time": 7291390.0,
      "text": "And so this is saying, hey Flask, go and get"
    },
    {
      "index": 2406,
      "start_time": 7291390.0,
      "end_time": 7294900.0,
      "text": "the template file called layout.html, and then"
    },
    {
      "index": 2407,
      "start_time": 7294900.0,
      "end_time": 7298470.0,
      "text": "plug in this title, and then this body."
    },
    {
      "index": 2408,
      "start_time": 7298470.0,
      "end_time": 7300010.0,
      "text": "So block title here."
    },
    {
      "index": 2409,
      "start_time": 7300010.0,
      "end_time": 7303246.0,
      "text": "Notice the funky syntax, curly brace with percent sign,"
    },
    {
      "index": 2410,
      "start_time": 7303250.0,
      "end_time": 7305354.0,
      "text": "percent sign with curly brace."
    },
    {
      "index": 2411,
      "start_time": 7305350.0,
      "end_time": 7310070.0,
      "text": "This is literally saying, hey Flask, the title of this page shall be Failure."
    },
    {
      "index": 2412,
      "start_time": 7310070.0,
      "end_time": 7313590.0,
      "text": "And the body of this page, as per this block here,"
    },
    {
      "index": 2413,
      "start_time": 7313590.0,
      "end_time": 7316460.0,
      "text": "shall be, quote, unquote, &quot;You must provide your name and dorm.&quot;"
    },
    {
      "index": 2414,
      "start_time": 7316460.0,
      "end_time": 7322480.0,
      "text": "Meanwhile, if we open up success.html, it&#39;s similar in spirit."
    },
    {
      "index": 2415,
      "start_time": 7322480.0,
      "end_time": 7325299.0,
      "text": "But notice it has a title of Success."
    },
    {
      "index": 2416,
      "start_time": 7325300.0,
      "end_time": 7327091.0,
      "text": "And it has a body of, &quot;You are registered.&quot;"
    },
    {
      "index": 2417,
      "start_time": 7327090.0,
      "end_time": 7327850.0,
      "text": "Well, not really."
    },
    {
      "index": 2418,
      "start_time": 7327850.0,
      "end_time": 7329920.0,
      "text": "So nothing interesting is happening."
    },
    {
      "index": 2419,
      "start_time": 7329920.0,
      "end_time": 7333830.0,
      "text": "But this body and this title will be plugged into this layout,"
    },
    {
      "index": 2420,
      "start_time": 7333830.0,
      "end_time": 7334969.0,
      "text": "this other template file."
    },
    {
      "index": 2421,
      "start_time": 7334970.0,
      "end_time": 7336136.0,
      "text": "So let&#39;s now look at layout."
    },
    {
      "index": 2422,
      "start_time": 7339620.0,
      "end_time": 7341420.0,
      "text": "This looks more familiar."
    },
    {
      "index": 2423,
      "start_time": 7341420.0,
      "end_time": 7345850.0,
      "text": "So layout.html is sort of the parent of these children--"
    },
    {
      "index": 2424,
      "start_time": 7345850.0,
      "end_time": 7348360.0,
      "text": "success.html and failure.html."
    },
    {
      "index": 2425,
      "start_time": 7348360.0,
      "end_time": 7350840.0,
      "text": "And this is because I realized, when designing"
    },
    {
      "index": 2426,
      "start_time": 7350840.0,
      "end_time": 7354420.0,
      "text": "the website for the first time, I don&#39;t want to have to copy and paste"
    },
    {
      "index": 2427,
      "start_time": 7354420.0,
      "end_time": 7356080.0,
      "text": "a whole lot of similar HTML."
    },
    {
      "index": 2428,
      "start_time": 7356080.0,
      "end_time": 7359950.0,
      "text": "I don&#39;t want to have HTML in every file, head in every file,"
    },
    {
      "index": 2429,
      "start_time": 7359950.0,
      "end_time": 7362420.0,
      "text": "title in every file, body in every file."
    },
    {
      "index": 2430,
      "start_time": 7362420.0,
      "end_time": 7365730.0,
      "text": "There&#39;s a lot of redundancy, a lot of structure to these web pages."
    },
    {
      "index": 2431,
      "start_time": 7365730.0,
      "end_time": 7367590.0,
      "text": "It would be nice if I can kind of come up"
    },
    {
      "index": 2432,
      "start_time": 7367590.0,
      "end_time": 7371150.0,
      "text": "with a general layout, the aesthetics for my overarching website,"
    },
    {
      "index": 2433,
      "start_time": 7371150.0,
      "end_time": 7375900.0,
      "text": "and then, on a per page basis, just plug-in a custom title,"
    },
    {
      "index": 2434,
      "start_time": 7375900.0,
      "end_time": 7378470.0,
      "text": "just plug-in a custom body."
    },
    {
      "index": 2435,
      "start_time": 7378470.0,
      "end_time": 7380490.0,
      "text": "And that&#39;s all this funky syntax is doing."
    },
    {
      "index": 2436,
      "start_time": 7380490.0,
      "end_time": 7384890.0,
      "text": "It&#39;s saying, hey Flask, put the body of this page here."
    },
    {
      "index": 2437,
      "start_time": 7384890.0,
      "end_time": 7387270.0,
      "text": "And hey Flask, put the title of this page here."
    },
    {
      "index": 2438,
      "start_time": 7387270.0,
      "end_time": 7389510.0,
      "text": "So again, this has nothing to do with Python per se,"
    },
    {
      "index": 2439,
      "start_time": 7389510.0,
      "end_time": 7393140.0,
      "text": "nothing to do with HTML or CSS per se, except that it"
    },
    {
      "index": 2440,
      "start_time": 7393140.0,
      "end_time": 7397390.0,
      "text": "is a templating language, another language used for really"
    },
    {
      "index": 2441,
      "start_time": 7397390.0,
      "end_time": 7398880.0,
      "text": "plugging in values in this way."
    },
    {
      "index": 2442,
      "start_time": 7398880.0,
      "end_time": 7402300.0,
      "text": "And it&#39;s conventionally used in exactly this context with Python,"
    },
    {
      "index": 2443,
      "start_time": 7402300.0,
      "end_time": 7405150.0,
      "text": "with CSS, and with HTML."
    },
    {
      "index": 2444,
      "start_time": 7405150.0,
      "end_time": 7408100.0,
      "text": "It helps us keep things a little cleaner and avoiding"
    },
    {
      "index": 2445,
      "start_time": 7408100.0,
      "end_time": 7410030.0,
      "text": "a whole lot of copy, paste."
    },
    {
      "index": 2446,
      "start_time": 7410030.0,
      "end_time": 7412450.0,
      "text": "The form, meanwhile, that we originally saw"
    },
    {
      "index": 2447,
      "start_time": 7412450.0,
      "end_time": 7414940.0,
      "text": "is perhaps even more familiar except for the block up top."
    },
    {
      "index": 2448,
      "start_time": 7414940.0,
      "end_time": 7417100.0,
      "text": "It too extends layout.html."
    },
    {
      "index": 2449,
      "start_time": 7417100.0,
      "end_time": 7419180.0,
      "text": "It has the title of Frosh IMs."
    },
    {
      "index": 2450,
      "start_time": 7419180.0,
      "end_time": 7421090.0,
      "text": "And then it&#39;s pretty much just got an H1 tag,"
    },
    {
      "index": 2451,
      "start_time": 7421090.0,
      "end_time": 7423089.0,
      "text": "which you might recall from a couple weeks back."
    },
    {
      "index": 2452,
      "start_time": 7423090.0,
      "end_time": 7424081.0,
      "text": "It&#39;s got a form tag."
    },
    {
      "index": 2453,
      "start_time": 7424080.0,
      "end_time": 7427940.0,
      "text": "It&#39;s got some BR for line breaks, a select element, and more."
    },
    {
      "index": 2454,
      "start_time": 7427940.0,
      "end_time": 7430740.0,
      "text": "And the only thing that&#39;s a little interesting here is notice this."
    },
    {
      "index": 2455,
      "start_time": 7430740.0,
      "end_time": 7436550.0,
      "text": "Whereas two weeks ago, I hard coded an action value like google.com/search"
    },
    {
      "index": 2456,
      "start_time": 7436550.0,
      "end_time": 7442580.0,
      "text": "or to my own file, this is a nice abstraction, if you will,"
    },
    {
      "index": 2457,
      "start_time": 7442580.0,
      "end_time": 7448990.0,
      "text": "whereby I can say in my template, give me the URL for my register route."
    },
    {
      "index": 2458,
      "start_time": 7448990.0,
      "end_time": 7452270.0,
      "text": "Now realistically, it&#39;s probably just /register because that&#39;s what we hard"
    },
    {
      "index": 2459,
      "start_time": 7452270.0,
      "end_time": 7453440.0,
      "text": "coded into the file."
    },
    {
      "index": 2460,
      "start_time": 7453440.0,
      "end_time": 7455550.0,
      "text": "But it would be nice to not have to hard code"
    },
    {
      "index": 2461,
      "start_time": 7455550.0,
      "end_time": 7457580.0,
      "text": "things that could change over time."
    },
    {
      "index": 2462,
      "start_time": 7457580.0,
      "end_time": 7461640.0,
      "text": "And so this URL for is a way of dynamically asking the templating"
    },
    {
      "index": 2463,
      "start_time": 7461640.0,
      "end_time": 7464760.0,
      "text": "language, you go figure out what this route is called"
    },
    {
      "index": 2464,
      "start_time": 7464760.0,
      "end_time": 7469430.0,
      "text": "and plug in the appropriate relative URL here."
    },
    {
      "index": 2465,
      "start_time": 7469430.0,
      "end_time": 7472520.0,
      "text": "So that&#39;s all Frosh IMs does on the front end."
    },
    {
      "index": 2466,
      "start_time": 7472520.0,
      "end_time": 7473670.0,
      "text": "What&#39;s the back end?"
    },
    {
      "index": 2467,
      "start_time": 7473670.0,
      "end_time": 7476750.0,
      "text": "Well for that, we need to look at application.py."
    },
    {
      "index": 2468,
      "start_time": 7476750.0,
      "end_time": 7478680.0,
      "text": "Again, this is where we started."
    },
    {
      "index": 2469,
      "start_time": 7478680.0,
      "end_time": 7484940.0,
      "text": "When I submit via post that super simple HTML form to /register, that is,"
    },
    {
      "index": 2470,
      "start_time": 7484940.0,
      "end_time": 7487480.0,
      "text": "this route, first, this if condition runs."
    },
    {
      "index": 2471,
      "start_time": 7487480.0,
      "end_time": 7492620.0,
      "text": "If the request form&#39;s Name field is blank or its Dorm is blank,"
    },
    {
      "index": 2472,
      "start_time": 7492620.0,
      "end_time": 7493540.0,
      "text": "return failure."
    },
    {
      "index": 2473,
      "start_time": 7493540.0,
      "end_time": 7496370.0,
      "text": "Else, return success."
    },
    {
      "index": 2474,
      "start_time": 7496370.0,
      "end_time": 7498200.0,
      "text": "But this isn&#39;t especially dynamic."
    },
    {
      "index": 2475,
      "start_time": 7498200.0,
      "end_time": 7501730.0,
      "text": "It would be nice, if I keep saying &quot;dynamic,&quot; that things actually"
    },
    {
      "index": 2476,
      "start_time": 7501730.0,
      "end_time": 7502620.0,
      "text": "are dynamic."
    },
    {
      "index": 2477,
      "start_time": 7502620.0,
      "end_time": 7504970.0,
      "text": "So let&#39;s look at one final example."
    },
    {
      "index": 2478,
      "start_time": 7504970.0,
      "end_time": 7509000.0,
      "text": "So now let&#39;s rerun Flask in this Store subdirectory, still on the same IP,"
    },
    {
      "index": 2479,
      "start_time": 7509000.0,
      "end_time": 7513580.0,
      "text": "still on the same ports, but now serving a different application on the same."
    },
    {
      "index": 2480,
      "start_time": 7513580.0,
      "end_time": 7515480.0,
      "text": "Indeed, when we now reload the browser, we"
    },
    {
      "index": 2481,
      "start_time": 7515480.0,
      "end_time": 7521180.0,
      "text": "see not the Frosh IMs site, but a super, super simple e-commerce site,"
    },
    {
      "index": 2482,
      "start_time": 7521180.0,
      "end_time": 7525560.0,
      "text": "a web storefront that allows us to buy apparently foos and bars and bazes."
    },
    {
      "index": 2483,
      "start_time": 7525560.0,
      "end_time": 7527370.0,
      "text": "This is just an email form."
    },
    {
      "index": 2484,
      "start_time": 7527370.0,
      "end_time": 7528614.0,
      "text": "These are text fields here."
    },
    {
      "index": 2485,
      "start_time": 7528610.0,
      "end_time": 7530026.0,
      "text": "These are just labels on the side."
    },
    {
      "index": 2486,
      "start_time": 7530030.0,
      "end_time": 7531222.0,
      "text": "And this is a Submit button."
    },
    {
      "index": 2487,
      "start_time": 7531220.0,
      "end_time": 7532928.0,
      "text": "And the shopping cart ultimately is going"
    },
    {
      "index": 2488,
      "start_time": 7532930.0,
      "end_time": 7536410.0,
      "text": "to show me how many of these things I&#39;ve added to my shopping cart already."
    },
    {
      "index": 2489,
      "start_time": 7536410.0,
      "end_time": 7541110.0,
      "text": "Indeed, let&#39;s try adding one foo, two bars, and three bazes,"
    },
    {
      "index": 2490,
      "start_time": 7541110.0,
      "end_time": 7542470.0,
      "text": "and click Purchase."
    },
    {
      "index": 2491,
      "start_time": 7542470.0,
      "end_time": 7544950.0,
      "text": "I&#39;m redirected automatically to my cart."
    },
    {
      "index": 2492,
      "start_time": 7544950.0,
      "end_time": 7548330.0,
      "text": "And I just see a reminder that I&#39;ve got one foo, one bar, one baz."
    },
    {
      "index": 2493,
      "start_time": 7548330.0,
      "end_time": 7550590.0,
      "text": "And let&#39;s just confirm that this is indeed the case."
    },
    {
      "index": 2494,
      "start_time": 7550590.0,
      "end_time": 7552440.0,
      "text": "Let me go ahead and continue shopping."
    },
    {
      "index": 2495,
      "start_time": 7552440.0,
      "end_time": 7555190.0,
      "text": "And let me go ahead and buy 10 more foos."
    },
    {
      "index": 2496,
      "start_time": 7555190.0,
      "end_time": 7556520.0,
      "text": "Click Purchase."
    },
    {
      "index": 2497,
      "start_time": 7556520.0,
      "end_time": 7558870.0,
      "text": "And indeed, it&#39;s incremented this properly."
    },
    {
      "index": 2498,
      "start_time": 7558870.0,
      "end_time": 7562030.0,
      "text": "And indeed, while you can&#39;t quite see what I&#39;m doing on my keyboard,"
    },
    {
      "index": 2499,
      "start_time": 7562030.0,
      "end_time": 7563770.0,
      "text": "I&#39;m hitting Reload now."
    },
    {
      "index": 2500,
      "start_time": 7563770.0,
      "end_time": 7565620.0,
      "text": "And nothing&#39;s changing."
    },
    {
      "index": 2501,
      "start_time": 7565620.0,
      "end_time": 7568300.0,
      "text": "Indeed, if I close the window and then reopen it,"
    },
    {
      "index": 2502,
      "start_time": 7568300.0,
      "end_time": 7570620.0,
      "text": "you&#39;ll see that it retains state."
    },
    {
      "index": 2503,
      "start_time": 7570620.0,
      "end_time": 7573830.0,
      "text": "In other words, no matter whether I close or open my browser,"
    },
    {
      "index": 2504,
      "start_time": 7573830.0,
      "end_time": 7576720.0,
      "text": "it seems to be remembering that I&#39;ve got 11 foos, two bars, and three"
    },
    {
      "index": 2505,
      "start_time": 7576720.0,
      "end_time": 7579480.0,
      "text": "bazes in my shopping cart, so to speak."
    },
    {
      "index": 2506,
      "start_time": 7579480.0,
      "end_time": 7582230.0,
      "text": "So how did we implement this functionality?"
    },
    {
      "index": 2507,
      "start_time": 7582230.0,
      "end_time": 7586110.0,
      "text": "Well first, notice that the store itself is super simple."
    },
    {
      "index": 2508,
      "start_time": 7586110.0,
      "end_time": 7590370.0,
      "text": "It&#39;s just some HTML and a template that has a whole bunch of input fields"
    },
    {
      "index": 2509,
      "start_time": 7590370.0,
      "end_time": 7593560.0,
      "text": "textually for foos, for bars, and for bazes,"
    },
    {
      "index": 2510,
      "start_time": 7593560.0,
      "end_time": 7595730.0,
      "text": "as well as that Submit button called Purchase."
    },
    {
      "index": 2511,
      "start_time": 7595730.0,
      "end_time": 7598460.0,
      "text": "And it, like before, extends layout.html,"
    },
    {
      "index": 2512,
      "start_time": 7598460.0,
      "end_time": 7601020.0,
      "text": "which this application has its own copy of."
    },
    {
      "index": 2513,
      "start_time": 7601020.0,
      "end_time": 7603201.0,
      "text": "The cart, meanwhile, is actually pretty simple."
    },
    {
      "index": 2514,
      "start_time": 7603200.0,
      "end_time": 7605449.0,
      "text": "And notice what&#39;s nice about this templating language."
    },
    {
      "index": 2515,
      "start_time": 7605450.0,
      "end_time": 7606695.0,
      "text": "It lets us do this."
    },
    {
      "index": 2516,
      "start_time": 7606690.0,
      "end_time": 7611435.0,
      "text": "This is a file called cart.html that also descends from that layout."
    },
    {
      "index": 2517,
      "start_time": 7611440.0,
      "end_time": 7614110.0,
      "text": "And we have this H1 tag here that just says Cart."
    },
    {
      "index": 2518,
      "start_time": 7614110.0,
      "end_time": 7618160.0,
      "text": "And now notice this template language looks quite like Python here."
    },
    {
      "index": 2519,
      "start_time": 7618160.0,
      "end_time": 7620030.0,
      "text": "Has for item in cart."
    },
    {
      "index": 2520,
      "start_time": 7620030.0,
      "end_time": 7623500.0,
      "text": "And it allows me using this curly bracket notation, two of them"
    },
    {
      "index": 2521,
      "start_time": 7623500.0,
      "end_time": 7627740.0,
      "text": "on the left, two of them on the right, to plug-in"
    },
    {
      "index": 2522,
      "start_time": 7627740.0,
      "end_time": 7630680.0,
      "text": "the Quantity field of this Item object."
    },
    {
      "index": 2523,
      "start_time": 7630680.0,
      "end_time": 7633170.0,
      "text": "So it seems that Cart is some kind of list,"
    },
    {
      "index": 2524,
      "start_time": 7633170.0,
      "end_time": 7637680.0,
      "text": "and Item are the elements, the objects inside of that list."
    },
    {
      "index": 2525,
      "start_time": 7637680.0,
      "end_time": 7641290.0,
      "text": "And this is giving me the Quantity field inside of this structure"
    },
    {
      "index": 2526,
      "start_time": 7641290.0,
      "end_time": 7643240.0,
      "text": "and the Name field inside of this structure."
    },
    {
      "index": 2527,
      "start_time": 7643240.0,
      "end_time": 7649490.0,
      "text": "And that&#39;s why I see 11 foo and two bar and three baz in my templating language"
    },
    {
      "index": 2528,
      "start_time": 7649490.0,
      "end_time": 7649990.0,
      "text": "here."
    },
    {
      "index": 2529,
      "start_time": 7649990.0,
      "end_time": 7653320.0,
      "text": "I&#39;m just interesting over what apparently is my shopping cart."
    },
    {
      "index": 2530,
      "start_time": 7653320.0,
      "end_time": 7656400.0,
      "text": "Now this invites the question, what is this shopping cart?"
    },
    {
      "index": 2531,
      "start_time": 7656400.0,
      "end_time": 7661010.0,
      "text": "And for that last detail, we need to look at application.py."
    },
    {
      "index": 2532,
      "start_time": 7661010.0,
      "end_time": 7663790.0,
      "text": "So as before, we instantiate a Flask application up here."
    },
    {
      "index": 2533,
      "start_time": 7663790.0,
      "end_time": 7668250.0,
      "text": "But we also configure it with a property called secret key"
    },
    {
      "index": 2534,
      "start_time": 7668250.0,
      "end_time": 7669760.0,
      "text": "per the documentation for Flask."
    },
    {
      "index": 2535,
      "start_time": 7669760.0,
      "end_time": 7671969.0,
      "text": "You probably shouldn&#39;t use a value of shh,"
    },
    {
      "index": 2536,
      "start_time": 7671970.0,
      "end_time": 7673511.0,
      "text": "but for now we&#39;ll keep things simple."
    },
    {
      "index": 2537,
      "start_time": 7673510.0,
      "end_time": 7676910.0,
      "text": "But that key, long story short, is used to ensure with higher probability"
    },
    {
      "index": 2538,
      "start_time": 7676910.0,
      "end_time": 7680300.0,
      "text": "the security of the sessions of the shopping cart that we&#39;re using."
    },
    {
      "index": 2539,
      "start_time": 7680300.0,
      "end_time": 7682300.0,
      "text": "This line here again declares a route for slash,"
    },
    {
      "index": 2540,
      "start_time": 7682300.0,
      "end_time": 7685680.0,
      "text": "specifying we only want to accept get and post."
    },
    {
      "index": 2541,
      "start_time": 7685680.0,
      "end_time": 7688724.0,
      "text": "Turns out there&#39;s other verbs like put and patch and others,"
    },
    {
      "index": 2542,
      "start_time": 7688720.0,
      "end_time": 7690386.0,
      "text": "but we&#39;re going to ignore those for now."
    },
    {
      "index": 2543,
      "start_time": 7690390.0,
      "end_time": 7694000.0,
      "text": "And if that route is requested, call this method store."
    },
    {
      "index": 2544,
      "start_time": 7694000.0,
      "end_time": 7698550.0,
      "text": "Meanwhile that method says, hey, if the request method is post-- that is,"
    },
    {
      "index": 2545,
      "start_time": 7698550.0,
      "end_time": 7701670.0,
      "text": "if the user submitted a form not by get but by post--"
    },
    {
      "index": 2546,
      "start_time": 7701670.0,
      "end_time": 7705400.0,
      "text": "go ahead and iterate over the three possible items"
    },
    {
      "index": 2547,
      "start_time": 7705400.0,
      "end_time": 7708630.0,
      "text": "that we sell in the store, foo, bar, and baz."
    },
    {
      "index": 2548,
      "start_time": 7708630.0,
      "end_time": 7711650.0,
      "text": "If the item is not already in the session--"
    },
    {
      "index": 2549,
      "start_time": 7711650.0,
      "end_time": 7714210.0,
      "text": "and you can think of session as our shopping cart."
    },
    {
      "index": 2550,
      "start_time": 7714210.0,
      "end_time": 7717490.0,
      "text": "It&#39;s a special object dictionary that allows us to store"
    },
    {
      "index": 2551,
      "start_time": 7717490.0,
      "end_time": 7720330.0,
      "text": "keys and values, a hash table of sorts."
    },
    {
      "index": 2552,
      "start_time": 7720330.0,
      "end_time": 7724810.0,
      "text": "Then go ahead and add to the session, the shopping cart, that item-- foo"
    },
    {
      "index": 2553,
      "start_time": 7724810.0,
      "end_time": 7730790.0,
      "text": "or bar or baz-- and then as an integer the number of foos or bars"
    },
    {
      "index": 2554,
      "start_time": 7730790.0,
      "end_time": 7733340.0,
      "text": "or bazes that the user requested via the form."
    },
    {
      "index": 2555,
      "start_time": 7733340.0,
      "end_time": 7737380.0,
      "text": "We&#39;re calling int here, effectively casting whatever that value is."
    },
    {
      "index": 2556,
      "start_time": 7737380.0,
      "end_time": 7741010.0,
      "text": "Because it turns out HTTP, all of those messages going back and forth"
    },
    {
      "index": 2557,
      "start_time": 7741010.0,
      "end_time": 7743030.0,
      "text": "all this time are purely textual."
    },
    {
      "index": 2558,
      "start_time": 7743030.0,
      "end_time": 7748340.0,
      "text": "So even though it looks like 10 or 1 or 2 or 3, those are actually strings."
    },
    {
      "index": 2559,
      "start_time": 7748340.0,
      "end_time": 7751260.0,
      "text": "So using int here converts that to the integer."
    },
    {
      "index": 2560,
      "start_time": 7751260.0,
      "end_time": 7754700.0,
      "text": "So we&#39;re actually storing numbers with which we can do simple arithmetic."
    },
    {
      "index": 2561,
      "start_time": 7754700.0,
      "end_time": 7758980.0,
      "text": "Otherwise, if a foo or bar or baz was already in the shopping cart,"
    },
    {
      "index": 2562,
      "start_time": 7758980.0,
      "end_time": 7762380.0,
      "text": "go ahead with Python&#39;s plus equal operator, which C also"
    },
    {
      "index": 2563,
      "start_time": 7762380.0,
      "end_time": 7766200.0,
      "text": "had, and just increment that count from 1 to 10, for instance,"
    },
    {
      "index": 2564,
      "start_time": 7766200.0,
      "end_time": 7767580.0,
      "text": "as I did a moment ago."
    },
    {
      "index": 2565,
      "start_time": 7767580.0,
      "end_time": 7773520.0,
      "text": "And then redirect the user to whatever the URL is for the cart routes."
    },
    {
      "index": 2566,
      "start_time": 7773520.0,
      "end_time": 7775780.0,
      "text": "In other words, after I add something to my cart,"
    },
    {
      "index": 2567,
      "start_time": 7775780.0,
      "end_time": 7779370.0,
      "text": "let&#39;s just show me the cart right away rather than showing me the order form"
    },
    {
      "index": 2568,
      "start_time": 7779370.0,
      "end_time": 7780160.0,
      "text": "instead."
    },
    {
      "index": 2569,
      "start_time": 7780160.0,
      "end_time": 7783350.0,
      "text": "Otherwise, if the user requested this page via get,"
    },
    {
      "index": 2570,
      "start_time": 7783350.0,
      "end_time": 7787260.0,
      "text": "go ahead by default and just return store.html, which"
    },
    {
      "index": 2571,
      "start_time": 7787260.0,
      "end_time": 7791700.0,
      "text": "is that simple form that lists the text fields and the numbers of foos and bars"
    },
    {
      "index": 2572,
      "start_time": 7791700.0,
      "end_time": 7794310.0,
      "text": "and bazes that you might want to buy."
    },
    {
      "index": 2573,
      "start_time": 7794310.0,
      "end_time": 7797630.0,
      "text": "Meanwhile, the shopping cart is implemented in this application"
    },
    {
      "index": 2574,
      "start_time": 7797630.0,
      "end_time": 7798300.0,
      "text": "as follows."
    },
    {
      "index": 2575,
      "start_time": 7798300.0,
      "end_time": 7802550.0,
      "text": "Here&#39;s a route for /cart, in which case a method called cart is called."
    },
    {
      "index": 2576,
      "start_time": 7802550.0,
      "end_time": 7806920.0,
      "text": "We then declare inside of this method an empty list called cart."
    },
    {
      "index": 2577,
      "start_time": 7806920.0,
      "end_time": 7809610.0,
      "text": "And then as before, we iterate over the available items"
    },
    {
      "index": 2578,
      "start_time": 7809610.0,
      "end_time": 7811890.0,
      "text": "in our store-- foo and bar and baz."
    },
    {
      "index": 2579,
      "start_time": 7811890.0,
      "end_time": 7813480.0,
      "text": "And then what do we do?"
    },
    {
      "index": 2580,
      "start_time": 7813480.0,
      "end_time": 7820590.0,
      "text": "We simply append to this cart, this list object, the following."
    },
    {
      "index": 2581,
      "start_time": 7820590.0,
      "end_time": 7825790.0,
      "text": "We append what&#39;s called a dictionary, a hash table, a collection of key value"
    },
    {
      "index": 2582,
      "start_time": 7825790.0,
      "end_time": 7834890.0,
      "text": "pairs, simply by associating a name with an item capitalized properly,"
    },
    {
      "index": 2583,
      "start_time": 7834890.0,
      "end_time": 7837820.0,
      "text": "and a quantity associated with the actual number"
    },
    {
      "index": 2584,
      "start_time": 7837820.0,
      "end_time": 7839690.0,
      "text": "of those items in my session."
    },
    {
      "index": 2585,
      "start_time": 7839690.0,
      "end_time": 7844660.0,
      "text": "And then we return this time not just the template via its name, cart.html."
    },
    {
      "index": 2586,
      "start_time": 7844660.0,
      "end_time": 7851070.0,
      "text": "We furthermore render cart.html, passing into that template"
    },
    {
      "index": 2587,
      "start_time": 7851070.0,
      "end_time": 7855290.0,
      "text": "a variable called cart whose value is also cart."
    },
    {
      "index": 2588,
      "start_time": 7855290.0,
      "end_time": 7857860.0,
      "text": "In other words, this variable is going to be called cart."
    },
    {
      "index": 2589,
      "start_time": 7857860.0,
      "end_time": 7860186.0,
      "text": "And it&#39;s going to be equal to whatever this list is."
    },
    {
      "index": 2590,
      "start_time": 7860190.0,
      "end_time": 7862064.0,
      "text": "And it&#39;s these two lines here in the for loop"
    },
    {
      "index": 2591,
      "start_time": 7862060.0,
      "end_time": 7866020.0,
      "text": "that are appending a set of key value pairs"
    },
    {
      "index": 2592,
      "start_time": 7866020.0,
      "end_time": 7869890.0,
      "text": "so that we know how many foos we have, how many bars, and how many bazes."
    },
    {
      "index": 2593,
      "start_time": 7869890.0,
      "end_time": 7874610.0,
      "text": "And that&#39;s why in cart.html do we have access to, on line 9"
    },
    {
      "index": 2594,
      "start_time": 7874610.0,
      "end_time": 7880300.0,
      "text": "here, a cart list over which we can iterate."
    },
    {
      "index": 2595,
      "start_time": 7880300.0,
      "end_time": 7883640.0,
      "text": "So there, we&#39;re just scratching the surface of what we can do."
    },
    {
      "index": 2596,
      "start_time": 7883640.0,
      "end_time": 7885810.0,
      "text": "But we now have a language with which we can"
    },
    {
      "index": 2597,
      "start_time": 7885810.0,
      "end_time": 7887610.0,
      "text": "express these new kinds of features."
    },
    {
      "index": 2598,
      "start_time": 7887610.0,
      "end_time": 7891782.0,
      "text": "We now have a server environment that allows us to actually execute"
    },
    {
      "index": 2599,
      "start_time": 7891780.0,
      "end_time": 7893488.0,
      "text": "Python code not only at the command line,"
    },
    {
      "index": 2600,
      "start_time": 7893490.0,
      "end_time": 7898430.0,
      "text": "but also via HTTP and in turn TCP/IP, and in general,"
    },
    {
      "index": 2601,
      "start_time": 7898430.0,
      "end_time": 7899760.0,
      "text": "over the internet itself."
    },
    {
      "index": 2602,
      "start_time": 7899760.0,
      "end_time": 7902940.0,
      "text": "So now, using this language-- and soon a database,"
    },
    {
      "index": 2603,
      "start_time": 7902940.0,
      "end_time": 7905720.0,
      "text": "and soon a client side language called JavaScript and more-- can"
    },
    {
      "index": 2604,
      "start_time": 7905720.0,
      "end_time": 7908678.0,
      "text": "we start to build the very kinds of websites with which you&#39;re probably"
    },
    {
      "index": 2605,
      "start_time": 7908680.0,
      "end_time": 7912012.0,
      "text": "already familiar and using them every day on your laptops and phones."
    },
    {
      "index": 2606,
      "start_time": 7912010.0,
      "end_time": 7915530.0,
      "text": "We&#39;re just now beginning our foray into web programming."
    },
    {
      "index": 2607,
      "start_time": 7915530.0,
      "end_time": 7918490.0,
      "text": "And next week, we&#39;ll add a back end so that we can actually"
    },
    {
      "index": 2608,
      "start_time": 7918490.0,
      "end_time": 7922328.0,
      "text": "do all this and more."
    },
    {
      "index": 2609,
      "start_time": 7922330.0,
      "end_time": 7922996.0,
      "text": "[AUDIO PLAYBACK]"
    },
    {
      "index": 2610,
      "start_time": 7922990.0,
      "end_time": 7926714.0,
      "text": "[MUSIC PLAYING]"
    },
    {
      "index": 2611,
      "start_time": 7926720.0,
      "end_time": 7927969.0,
      "text": "-I never even got to know him."
    },
    {
      "index": 2612,
      "start_time": 7935430.0,
      "end_time": 7937805.0,
      "text": "I just-- I don&#39;t know what happened."
    },
    {
      "index": 2613,
      "start_time": 7942750.0,
      "end_time": 7943740.0,
      "text": "Please, please."
    },
    {
      "index": 2614,
      "start_time": 7943750.0,
      "end_time": 7947935.0,
      "text": "I-- I need to be alone."
    },
    {
      "index": 2615,
      "start_time": 7947930.0,
      "end_time": 7951427.0,
      "text": "The people need to know."
    },
    {
      "index": 2616,
      "start_time": 7951430.0,
      "end_time": 7952993.0,
      "text": "[INAUDIBLE]"
    },
    {
      "index": 2617,
      "start_time": 7952990.0,
      "end_time": 7953490.0,
      "text": "No."
    },
    {
      "index": 2618,
      "start_time": 7953490.0,
      "end_time": 7954920.0,
      "text": "Please-- please go."
    },
    {
      "index": 2619,
      "start_time": 7971870.0,
      "end_time": 7974536.0,
      "text": "I never did get that dinner with him at his favorite restaurant."
    },
    {
      "index": 2620,
      "start_time": 7978440.0,
      "end_time": 7988440.0,
      "text": "[END PLAYBACK]"
    }
  ]
}