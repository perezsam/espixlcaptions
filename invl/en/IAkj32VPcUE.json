{
  "video_id": "IAkj32VPcUE",
  "title": "Inside the CPU - Computerphile",
  "es": 0,
  "json": [
    {
      "index": 1,
      "start_time": 0.0,
      "end_time": 4080.0,
      "text": "In a previous video, we looked at how CPU's can use caches to speed up accesses to memory."
    },
    {
      "index": 2,
      "start_time": 4580.0,
      "end_time": 8880.0,
      "text": "So, the CPU has to fetch things from memory; it might be a bit of data, it might be an instruction"
    },
    {
      "index": 3,
      "start_time": 8880.0,
      "end_time": 11720.0,
      "text": "And it goes through the cache to try and access it."
    },
    {
      "index": 4,
      "start_time": 11720.0,
      "end_time": 15580.0,
      "text": "And the cache keeps a local copy in fast memory to try and speed up the accesses"
    },
    {
      "index": 5,
      "start_time": 16360.0,
      "end_time": 20940.0,
      "text": "But what we didn't talk about is:\nWhat does a CPU do with what it's fetched from memory"
    },
    {
      "index": 6,
      "start_time": 20940.0,
      "end_time": 23140.0,
      "text": "what is it actually doing and how does it process it?"
    },
    {
      "index": 7,
      "start_time": 26020.0,
      "end_time": 28080.0,
      "text": "So the CPU is fetching values from memory."
    },
    {
      "index": 8,
      "start_time": 28120.0,
      "end_time": 31680.0,
      "text": "We'll ignore the cache for now, because it doesn't matter if the CPU has a cache or not"
    },
    {
      "index": 9,
      "start_time": 31680.0,
      "end_time": 33460.0,
      "text": "it's still gonna do roughly the same things"
    },
    {
      "index": 10,
      "start_time": 33460.0,
      "end_time": 35920.0,
      "text": "And we're also gonna look at very old CPU's"
    },
    {
      "index": 11,
      "start_time": 35920.0,
      "end_time": 37600.0,
      "text": "the sort of things that are in 8-bit machines"
    },
    {
      "index": 12,
      "start_time": 37600.0,
      "end_time": 39720.0,
      "text": "purely because they're simpler to deal with"
    },
    {
      "index": 13,
      "start_time": 39720.0,
      "end_time": 40880.0,
      "text": "and simpler to see what's going on"
    },
    {
      "index": 14,
      "start_time": 40880.0,
      "end_time": 45420.0,
      "text": "The same idea is still applied to an ARM CPU today or an X86 chip"
    },
    {
      "index": 15,
      "start_time": 45420.0,
      "end_time": 48480.0,
      "text": "or whatever it is you got in your machine."
    },
    {
      "index": 16,
      "start_time": 48480.0,
      "end_time": 51880.0,
      "text": "Modern CPU's use what's called \nthe Van Neumann architecture"
    },
    {
      "index": 17,
      "start_time": 51980.0,
      "end_time": 56580.0,
      "text": "and what this basically means is\nthat you have a CPU"
    },
    {
      "index": 18,
      "start_time": 56620.0,
      "end_time": 61320.0,
      "text": "and you have a block of memory."
    },
    {
      "index": 19,
      "start_time": 61960.0,
      "end_time": 64700.0,
      "text": "And that memory is connected to the CPU\nby two buses"
    },
    {
      "index": 20,
      "start_time": 64700.0,
      "end_time": 67400.0,
      "text": "Each is just a collection of several wires that are connecting"
    },
    {
      "index": 21,
      "start_time": 67400.0,
      "end_time": 71780.0,
      "text": "And again we're looking at old-fashioned macines. \nOn a modern machine it gets a bit more complicated"
    },
    {
      "index": 22,
      "start_time": 71780.0,
      "end_time": 73680.0,
      "text": "But the idea, the principle, is the same."
    },
    {
      "index": 23,
      "start_time": 74560.0,
      "end_time": 76080.0,
      "text": "So we have an addess bus"
    },
    {
      "index": 24,
      "start_time": 77520.0,
      "end_time": 82300.0,
      "text": "and the idea is that the CPU can generate a number in here in binary"
    },
    {
      "index": 25,
      "start_time": 82320.0,
      "end_time": 84960.0,
      "text": "to access any particular value in here."
    },
    {
      "index": 26,
      "start_time": 84960.0,
      "end_time": 87540.0,
      "text": "So we say that the first one is at adress 0"
    },
    {
      "index": 27,
      "start_time": 87880.0,
      "end_time": 90420.0,
      "text": "and we're gonna use a 6502 as an example"
    },
    {
      "index": 28,
      "start_time": 90420.0,
      "end_time": 100400.0,
      "text": "We'll say that the last one is at address 65535 in decimal, or FFFF in hexadecimal"
    },
    {
      "index": 29,
      "start_time": 100800.0,
      "end_time": 104180.0,
      "text": "So we can generate any of these numbers on 16 bits of this address bus"
    },
    {
      "index": 30,
      "start_time": 104200.0,
      "end_time": 107840.0,
      "text": "to access any of the individual bytes \nin this memory"
    },
    {
      "index": 31,
      "start_time": 109400.0,
      "end_time": 112060.0,
      "text": "How do we get the data between the two?\nWell we have another bus"
    },
    {
      "index": 32,
      "start_time": 112100.0,
      "end_time": 116180.0,
      "text": "which is called the data bus,\nwhich connects the two together"
    },
    {
      "index": 33,
      "start_time": 116180.0,
      "end_time": 118260.0,
      "text": "Now the reason why this is a Van Neumann machine"
    },
    {
      "index": 34,
      "start_time": 118480.0,
      "end_time": 121920.0,
      "text": "is because this memory can \ncontain both the program"
    },
    {
      "index": 35,
      "start_time": 121920.0,
      "end_time": 125840.0,
      "text": "i.e. the bytes that make up the instructions\nthat the CPU can execute"
    },
    {
      "index": 36,
      "start_time": 126100.0,
      "end_time": 128320.0,
      "text": "and the data"
    },
    {
      "index": 37,
      "start_time": 128500.0,
      "end_time": 131540.0,
      "text": "So the same block of memory\ncontain some bytes"
    },
    {
      "index": 38,
      "start_time": 131540.0,
      "end_time": 133120.0,
      "text": "which contain program instructions"
    },
    {
      "index": 39,
      "start_time": 133120.0,
      "end_time": 134800.0,
      "text": "some bytes which contain data"
    },
    {
      "index": 40,
      "start_time": 135120.0,
      "end_time": 137620.0,
      "text": "And the CPU if you wanted to could \ntreat the program as data"
    },
    {
      "index": 41,
      "start_time": 137660.0,
      "end_time": 139520.0,
      "text": "or treat the data as program"
    },
    {
      "index": 42,
      "start_time": 139520.0,
      "end_time": 141200.0,
      "text": "Well if you do that then it would probably crash"
    },
    {
      "index": 43,
      "start_time": 141200.0,
      "end_time": 144680.0,
      "text": "So what we've got here is an old BBC Micro\nusing a 6502 CPU"
    },
    {
      "index": 44,
      "start_time": 144680.0,
      "end_time": 148880.0,
      "text": "and we're gonna just write a very, very simple\nmachine code program"
    },
    {
      "index": 45,
      "start_time": 148980.0,
      "end_time": 150820.0,
      "text": "that uses"
    },
    {
      "index": 46,
      "start_time": 150820.0,
      "end_time": 154200.0,
      "text": "well the operation is saying just to\nprint out the letter C for computerphile"
    },
    {
      "index": 47,
      "start_time": 154300.0,
      "end_time": 156700.0,
      "text": "So if you assemble it,\nwe're using hexadecimal"
    },
    {
      "index": 48,
      "start_time": 156920.0,
      "end_time": 159400.0,
      "text": "we've started our program at 084C"
    },
    {
      "index": 49,
      "start_time": 159900.0,
      "end_time": 162800.0,
      "text": "So that's the address,\nwere our program is being created"
    },
    {
      "index": 50,
      "start_time": 162800.0,
      "end_time": 164480.0,
      "text": "And our program is very simple"
    },
    {
      "index": 51,
      "start_time": 164480.0,
      "end_time": 166780.0,
      "text": "It loads one of the CPU's registers"
    },
    {
      "index": 52,
      "start_time": 166780.0,
      "end_time": 168900.0,
      "text": "which is just basically a temporary data store\nthat you can use"
    },
    {
      "index": 53,
      "start_time": 168900.0,
      "end_time": 170820.0,
      "text": "and this one is called the accumulator"
    },
    {
      "index": 54,
      "start_time": 170820.0,
      "end_time": 173880.0,
      "text": "with the ascii code 67 which represents\na capital C"
    },
    {
      "index": 55,
      "start_time": 173880.0,
      "end_time": 177380.0,
      "text": "and then it says:\njump to the subroutine at this address"
    },
    {
      "index": 56,
      "start_time": 177380.0,
      "end_time": 179860.0,
      "text": "which will print out that particular character"
    },
    {
      "index": 57,
      "start_time": 179860.0,
      "end_time": 182540.0,
      "text": "And then we tell it we want to stop\nso we gotta return"
    },
    {
      "index": 58,
      "start_time": 182540.0,
      "end_time": 184160.0,
      "text": "from subroutine.\nAnd if we run this"
    },
    {
      "index": 59,
      "start_time": 184160.0,
      "end_time": 188160.0,
      "text": "and type in the address,\nso we're at ... 84C"
    },
    {
      "index": 60,
      "start_time": 188160.0,
      "end_time": 190600.0,
      "text": "then you'll see that it prints out the letter C"
    },
    {
      "index": 61,
      "start_time": 190600.0,
      "end_time": 192560.0,
      "text": "and then we get a prompt\nto carry on doing things"
    },
    {
      "index": 62,
      "start_time": 192560.0,
      "end_time": 195520.0,
      "text": "So our program,\nwe write it in assembly language"
    },
    {
      "index": 63,
      "start_time": 195520.0,
      "end_time": 197100.0,
      "text": "which we can understand as humans"
    },
    {
      "index": 64,
      "start_time": 197120.0,
      "end_time": 201300.0,
      "text": "-ish, LDA: Load Accumulator\nJSR: Jump to subroutine"
    },
    {
      "index": 65,
      "start_time": 201300.0,
      "end_time": 202960.0,
      "text": "RTS: Return to subroutine"
    },
    {
      "index": 66,
      "start_time": 202960.0,
      "end_time": 205020.0,
      "text": "You get the idea once you've done it a few times"
    },
    {
      "index": 67,
      "start_time": 205020.0,
      "end_time": 208340.0,
      "text": "And the computer converts this\ninto a series of numbers, in binary"
    },
    {
      "index": 68,
      "start_time": 208340.0,
      "end_time": 212740.0,
      "text": "The CPU is working in binary but to make it easier to read we display it as hexadecimal"
    },
    {
      "index": 69,
      "start_time": 212960.0,
      "end_time": 215760.0,
      "text": "So our program becomes:\nA9, 43"
    },
    {
      "index": 70,
      "start_time": 215860.0,
      "end_time": 218860.0,
      "text": "20 EE FF\n60"
    },
    {
      "index": 71,
      "start_time": 218860.0,
      "end_time": 220240.0,
      "text": "That's the program we've written"
    },
    {
      "index": 72,
      "start_time": 222300.0,
      "end_time": 226620.0,
      "text": "And the CPU, when it runs it\nneeds to fetch those bytes from memory"
    },
    {
      "index": 73,
      "start_time": 227560.0,
      "end_time": 228980.0,
      "text": "into the CPU"
    },
    {
      "index": 74,
      "start_time": 228980.0,
      "end_time": 230320.0,
      "text": "Now, how does it do that?"
    },
    {
      "index": 75,
      "start_time": 230320.0,
      "end_time": 237120.0,
      "text": "To get the first byte we need to \nput the address: 084C on the address bus"
    },
    {
      "index": 76,
      "start_time": 237120.0,
      "end_time": 242400.0,
      "text": "and a bit later on, the memory will send back\nthe byte that represents the instruction: A9"
    },
    {
      "index": 77,
      "start_time": 242400.0,
      "end_time": 245320.0,
      "text": "Now, how does the CPU know where to get these instructions from?"
    },
    {
      "index": 78,
      "start_time": 245320.0,
      "end_time": 247800.0,
      "text": "Well, it's quite simple. \nInside the CPU"
    },
    {
      "index": 79,
      "start_time": 247800.0,
      "end_time": 252800.0,
      "text": "there is a register, which we call\nthe program counter, or PC on a 6502"
    },
    {
      "index": 80,
      "start_time": 252840.0,
      "end_time": 256720.0,
      "text": "or something like an X86 machine it's\nknown as the instruction pointer."
    },
    {
      "index": 81,
      "start_time": 257260.0,
      "end_time": 262060.0,
      "text": "And all that does is store the address\nto the next instruction to execute"
    },
    {
      "index": 82,
      "start_time": 262960.0,
      "end_time": 266640.0,
      "text": "So when we were starting up here, \nit would have 084C in it"
    },
    {
      "index": 83,
      "start_time": 266640.0,
      "end_time": 269140.0,
      "text": "That's the address to the instruction we want to execute"
    },
    {
      "index": 84,
      "start_time": 269140.0,
      "end_time": 273220.0,
      "text": "So when the CPU wants to fetch the \ninstruction it's gonna execute"
    },
    {
      "index": 85,
      "start_time": 273520.0,
      "end_time": 276200.0,
      "text": "It puts that address on the address bus"
    },
    {
      "index": 86,
      "start_time": 276200.0,
      "end_time": 279860.0,
      "text": "and the memory then sends the instruction \nback to the CPU"
    },
    {
      "index": 87,
      "start_time": 279860.0,
      "end_time": 282220.0,
      "text": "So the first thing the CPU is \ngonna do to run our program"
    },
    {
      "index": 88,
      "start_time": 282360.0,
      "end_time": 284200.0,
      "text": "is to fetch the instruction"
    },
    {
      "index": 89,
      "start_time": 284200.0,
      "end_time": 285960.0,
      "text": "and the way it does that is by \nputting the address from"
    },
    {
      "index": 90,
      "start_time": 285960.0,
      "end_time": 288240.0,
      "text": "the program counter onto\nthe address bus"
    },
    {
      "index": 91,
      "start_time": 289240.0,
      "end_time": 292580.0,
      "text": "and then fetching the actual instruction"
    },
    {
      "index": 92,
      "start_time": 292580.0,
      "end_time": 295720.0,
      "text": "So the memory provides it,\nbut the CPU then reads that in"
    },
    {
      "index": 93,
      "start_time": 295900.0,
      "end_time": 297740.0,
      "text": "on it's input on the data bus"
    },
    {
      "index": 94,
      "start_time": 297740.0,
      "end_time": 301120.0,
      "text": "Now it needs to fetch the whole \ninstruction that the CPU is gonna execute"
    },
    {
      "index": 95,
      "start_time": 301120.0,
      "end_time": 304000.0,
      "text": "and on the example we saw there \nit was relatively straightforward"
    },
    {
      "index": 96,
      "start_time": 304000.0,
      "end_time": 306140.0,
      "text": "because the instruction was only\na byte long"
    },
    {
      "index": 97,
      "start_time": 307320.0,
      "end_time": 309240.0,
      "text": "Not all CPU's are that simple"
    },
    {
      "index": 98,
      "start_time": 309240.0,
      "end_time": 314760.0,
      "text": "Some CPU's will vary these things,\nso this hardware can actually be quite complicated"
    },
    {
      "index": 99,
      "start_time": 314760.0,
      "end_time": 317600.0,
      "text": "so it needs to work out how long \nthe instruction is"
    },
    {
      "index": 100,
      "start_time": 318080.0,
      "end_time": 320340.0,
      "text": "So it could be as short as one byte"
    },
    {
      "index": 101,
      "start_time": 320340.0,
      "end_time": 323680.0,
      "text": "it could be as long on some CPU's\nas 15 bytes"
    },
    {
      "index": 102,
      "start_time": 323680.0,
      "end_time": 327480.0,
      "text": "and you sometimes don't know how long it's gonna be until you've read at few of the bytes"
    },
    {
      "index": 103,
      "start_time": 327480.0,
      "end_time": 330080.0,
      "text": "So this hardware can be relatively trivial"
    },
    {
      "index": 104,
      "start_time": 330080.0,
      "end_time": 334200.0,
      "text": "So an ARM CPU makes it very, very simple\nit says: all instructions are 32 bits long"
    },
    {
      "index": 105,
      "start_time": 334480.0,
      "end_time": 339360.0,
      "text": "So the Archimedes over there\ncan fetch the instruction very, very simply"
    },
    {
      "index": 106,
      "start_time": 339400.0,
      "end_time": 340580.0,
      "text": "32 bits"
    },
    {
      "index": 107,
      "start_time": 341040.0,
      "end_time": 345200.0,
      "text": "On something like an x86, it can be\nany length up to 15 bytes or so"
    },
    {
      "index": 108,
      "start_time": 345200.0,
      "end_time": 348240.0,
      "text": "and so this becomes more complicated,\nyou have to sort of work out"
    },
    {
      "index": 109,
      "start_time": 348240.0,
      "end_time": 349440.0,
      "text": "what it is utnil you've got it"
    },
    {
      "index": 110,
      "start_time": 349780.0,
      "end_time": 351700.0,
      "text": "But we fetch the instruction"
    },
    {
      "index": 111,
      "start_time": 351700.0,
      "end_time": 354520.0,
      "text": "So in the example we've got, \nwe've got A9 here"
    },
    {
      "index": 112,
      "start_time": 354520.0,
      "end_time": 356600.0,
      "text": "So we now need to work out what A9 does"
    },
    {
      "index": 113,
      "start_time": 356600.0,
      "end_time": 360420.0,
      "text": "Well, we need to decode it into \nwhat we want the CPU to actually do"
    },
    {
      "index": 114,
      "start_time": 360420.0,
      "end_time": 363320.0,
      "text": "So we need to have another bit \nof our CPU's hardware"
    },
    {
      "index": 115,
      "start_time": 363380.0,
      "end_time": 367280.0,
      "text": "which we're dedicating to\ndecoding the instruction"
    },
    {
      "index": 116,
      "start_time": 367280.0,
      "end_time": 369540.0,
      "text": "So we have a part of the CPU which is \nfetching it"
    },
    {
      "index": 117,
      "start_time": 369540.0,
      "end_time": 371280.0,
      "text": "and part of the CPU which is then\ndecoding it"
    },
    {
      "index": 118,
      "start_time": 371960.0,
      "end_time": 375320.0,
      "text": "So it gets A9 into it:\nSo the A9 comes into the decode"
    },
    {
      "index": 119,
      "start_time": 375900.0,
      "end_time": 379260.0,
      "text": "And it says: Well okay, that's a load instruction."
    },
    {
      "index": 120,
      "start_time": 379540.0,
      "end_time": 381940.0,
      "text": "So I need to fetch a value from memory"
    },
    {
      "index": 121,
      "start_time": 382240.0,
      "end_time": 383520.0,
      "text": "which was the 43"
    },
    {
      "index": 122,
      "start_time": 383640.0,
      "end_time": 387740.0,
      "text": "the ASCII code for the capital letter C\nthat we saw earlier"
    },
    {
      "index": 123,
      "start_time": 387740.0,
      "end_time": 390180.0,
      "text": "So we need to fetch something else \nfrom memory"
    },
    {
      "index": 124,
      "start_time": 390180.0,
      "end_time": 393000.0,
      "text": "We need to access memory again,\nand we need to work out what address"
    },
    {
      "index": 125,
      "start_time": 393000.0,
      "end_time": 394020.0,
      "text": "that's gonna be."
    },
    {
      "index": 126,
      "start_time": 395420.0,
      "end_time": 398540.0,
      "text": "We also then need to,\nonce we've got that value,"
    },
    {
      "index": 127,
      "start_time": 398580.0,
      "end_time": 402780.0,
      "text": "update the right register \nto store that value"
    },
    {
      "index": 128,
      "start_time": 402780.0,
      "end_time": 404120.0,
      "text": "So we've gotta do things in sequence."
    },
    {
      "index": 129,
      "start_time": 404120.0,
      "end_time": 407420.0,
      "text": "So part of the Decode logic is to\ntake the single instruction byte,"
    },
    {
      "index": 130,
      "start_time": 407720.0,
      "end_time": 408760.0,
      "text": "or how long it is,"
    },
    {
      "index": 131,
      "start_time": 408760.0,
      "end_time": 413560.0,
      "text": "and work out what's the sequence that we need to drive the other bits of the CPU to do"
    },
    {
      "index": 132,
      "start_time": 413560.0,
      "end_time": 416080.0,
      "text": "And so that also means that we have\nanother bit of the CPU"
    },
    {
      "index": 133,
      "start_time": 416080.0,
      "end_time": 417840.0,
      "text": "which is the actual bit that does things,"
    },
    {
      "index": 134,
      "start_time": 418160.0,
      "end_time": 422800.0,
      "text": "which is gonna be all the logic \nwhich actually executes instructions"
    },
    {
      "index": 135,
      "start_time": 422800.0,
      "end_time": 424380.0,
      "text": "So we start off by fetching it"
    },
    {
      "index": 136,
      "start_time": 424380.0,
      "end_time": 426860.0,
      "text": "and then once we've fetched it\nwe can start decoding it"
    },
    {
      "index": 137,
      "start_time": 426860.0,
      "end_time": 427680.0,
      "text": "and then we can execute it"
    },
    {
      "index": 138,
      "start_time": 427720.0,
      "end_time": 430020.0,
      "text": "And the decode logic is responsible for saying:"
    },
    {
      "index": 139,
      "start_time": 430020.0,
      "end_time": 432760.0,
      "text": "Put the address for where you want to get the value,\nthat you can load into memory from"
    },
    {
      "index": 140,
      "start_time": 432760.0,
      "end_time": 435820.0,
      "text": "and then store it,\nonce it's been loaded into the CPU"
    },
    {
      "index": 141,
      "start_time": 435820.0,
      "end_time": 436900.0,
      "text": "So you're doing things in order:"
    },
    {
      "index": 142,
      "start_time": 436900.0,
      "end_time": 438280.0,
      "text": "We have to fetch it first"
    },
    {
      "index": 143,
      "start_time": 438280.0,
      "end_time": 440180.0,
      "text": "and we can't decode it until we've fetched it"
    },
    {
      "index": 144,
      "start_time": 440660.0,
      "end_time": 443380.0,
      "text": "and we can't execute things \nuntil we've decoded it"
    },
    {
      "index": 145,
      "start_time": 443880.0,
      "end_time": 447480.0,
      "text": "So, at any one time, \nwe'll probably find on a simple CPU"
    },
    {
      "index": 146,
      "start_time": 447480.0,
      "end_time": 450620.0,
      "text": "that quite a few of the bits of the \nCPU wouldn't actually be doing anything"
    },
    {
      "index": 147,
      "start_time": 450620.0,
      "end_time": 452180.0,
      "text": "So, while we're fetching the value\nfrom memory"
    },
    {
      "index": 148,
      "start_time": 452180.0,
      "end_time": 454540.0,
      "text": "to work out how we're gonna decode it"
    },
    {
      "index": 149,
      "start_time": 454540.0,
      "end_time": 457060.0,
      "text": "the decode and the execute logic \naren't doing anything"
    },
    {
      "index": 150,
      "start_time": 457060.0,
      "end_time": 458960.0,
      "text": "They're just sitting there, waiting for their turn"
    },
    {
      "index": 151,
      "start_time": 458960.0,
      "end_time": 461720.0,
      "text": "And then, when we decode it,\nit's not fetching anything"
    },
    {
      "index": 152,
      "start_time": 461720.0,
      "end_time": 463220.0,
      "text": "and it's not executing anything"
    },
    {
      "index": 153,
      "start_time": 463220.0,
      "end_time": 466260.0,
      "text": "So we're sort of moving through these different\nstates one after the other"
    },
    {
      "index": 154,
      "start_time": 466260.0,
      "end_time": 467720.0,
      "text": "And that takes different amounts of time"
    },
    {
      "index": 155,
      "start_time": 467720.0,
      "end_time": 471060.0,
      "text": "If we're fetching 15 bytes it's gonna take longer than\nif we're fetching one"
    },
    {
      "index": 156,
      "start_time": 471060.0,
      "end_time": 473080.0,
      "text": "decoding it might well be shorter"
    },
    {
      "index": 157,
      "start_time": 473080.0,
      "end_time": 476460.0,
      "text": "than if we're fetching something from memory,\ncos' this is all inside the CPU"
    },
    {
      "index": 158,
      "start_time": 476460.0,
      "end_time": 479020.0,
      "text": "And the execution depends on \nwhat's actually happening"
    },
    {
      "index": 159,
      "start_time": 479020.0,
      "end_time": 481500.0,
      "text": "So your CPU will work like this:\nIt will go through each phase,"
    },
    {
      "index": 160,
      "start_time": 481500.0,
      "end_time": 484500.0,
      "text": "then once it's done that, \nit'll start on the next clock tick"
    },
    {
      "index": 161,
      "start_time": 484500.0,
      "end_time": 486480.0,
      "text": "all the CPU's are synchronized to a clock,"
    },
    {
      "index": 162,
      "start_time": 486480.0,
      "end_time": 488240.0,
      "text": "which just keeps things moving in sequence"
    },
    {
      "index": 163,
      "start_time": 488240.0,
      "end_time": 491700.0,
      "text": "and you can build a CPU. \nSomething like the 6502 worked like that"
    },
    {
      "index": 164,
      "start_time": 491700.0,
      "end_time": 496240.0,
      "text": "But, as we said, lots of the CPU aren't actually \ndoing anything at any time"
    },
    {
      "index": 165,
      "start_time": 496300.0,
      "end_time": 498940.0,
      "text": "which is a bit wasteful of the resources"
    },
    {
      "index": 166,
      "start_time": 498940.0,
      "end_time": 501220.0,
      "text": "So is there another way you can do this?"
    },
    {
      "index": 167,
      "start_time": 501220.0,
      "end_time": 503580.0,
      "text": "And the answer is yes!\nYou can do what's called"
    },
    {
      "index": 168,
      "start_time": 503580.0,
      "end_time": 506100.0,
      "text": "a sort of pipe-lined model of a CPU"
    },
    {
      "index": 169,
      "start_time": 506120.0,
      "end_time": 511200.0,
      "text": "So what you do here is,\nyou still have the same 3 bits of the CPU"
    },
    {
      "index": 170,
      "start_time": 512000.0,
      "end_time": 514560.0,
      "text": "But you say: Okay, so we gotta fetch (f)"
    },
    {
      "index": 171,
      "start_time": 514679.99999999994,
      "end_time": 515799.99999999994,
      "text": "instruction one"
    },
    {
      "index": 172,
      "start_time": 515799.99999999994,
      "end_time": 519119.99999999994,
      "text": "In the next bit of time,\nI'm gonna start decoding this one"
    },
    {
      "index": 173,
      "start_time": 519140.0,
      "end_time": 522180.0,
      "text": "So, I'm gonna start decoding instruction one"
    },
    {
      "index": 174,
      "start_time": 522179.99999999994,
      "end_time": 524900.0,
      "text": "But I'm gonna say: I'm not using \nthe fetch logic here,"
    },
    {
      "index": 175,
      "start_time": 524900.0,
      "end_time": 527160.0,
      "text": "so I'm gonna have this start to get things ready"
    },
    {
      "index": 176,
      "start_time": 527160.0,
      "end_time": 529440.0,
      "text": "and, start to do things ahead of schedule"
    },
    {
      "index": 177,
      "start_time": 529560.0,
      "end_time": 533540.0,
      "text": "I'm also at the same time\ngonna fetch instruction 2"
    },
    {
      "index": 178,
      "start_time": 533540.0,
      "end_time": 536500.0,
      "text": "So now I'm doing two things,\ntwo bit's of my CPU in use the same time"
    },
    {
      "index": 179,
      "start_time": 536500.0,
      "end_time": 539980.0,
      "text": "I'm fetching the next instruction,\nwhile decoding the first one"
    },
    {
      "index": 180,
      "start_time": 539980.0,
      "end_time": 544380.0,
      "text": "And once we've done decoding, I can start\nexecuting the first instruction"
    },
    {
      "index": 181,
      "start_time": 544440.0,
      "end_time": 545560.0,
      "text": "So I execute that"
    },
    {
      "index": 182,
      "start_time": 545680.0,
      "end_time": 550060.0,
      "text": "But at the same time, I can start\ndecoding instruction 2"
    },
    {
      "index": 183,
      "start_time": 550100.0,
      "end_time": 554000.0,
      "text": "and hopefully, \nI can start fetching instruction 3"
    },
    {
      "index": 184,
      "start_time": 554000.0,
      "end_time": 558440.0,
      "text": "So what? It is still taking the same\namount of time to execute that first instruction"
    },
    {
      "index": 185,
      "start_time": 558440.0,
      "end_time": 561300.0,
      "text": "So the beauty is when it \ncomes to executing instruction two"
    },
    {
      "index": 186,
      "start_time": 561300.0,
      "end_time": 563880.0,
      "text": "it completes exactly one \ncycle after the other"
    },
    {
      "index": 187,
      "start_time": 563880.0,
      "end_time": 567420.0,
      "text": "rather than having to wait for it to go through \nthe fetch and decode and execute cycles"
    },
    {
      "index": 188,
      "start_time": 567420.0,
      "end_time": 570020.0,
      "text": "we can just execute it as soon as we've\nfinished instruction one"
    },
    {
      "index": 189,
      "start_time": 570020.0,
      "end_time": 572140.0,
      "text": "So each instruction still takes the \nsame amount of time"
    },
    {
      "index": 190,
      "start_time": 572140.0,
      "end_time": 575240.0,
      "text": "it's gonna take, say, three clock cycles\nto go through the CPU"
    },
    {
      "index": 191,
      "start_time": 575240.0,
      "end_time": 577700.0,
      "text": "but because we've sort of pipelined it together"
    },
    {
      "index": 192,
      "start_time": 577700.0,
      "end_time": 579960.0,
      "text": "they actually appear to execute one after each other"
    },
    {
      "index": 193,
      "start_time": 579960.0,
      "end_time": 582580.0,
      "text": "so it appears to execute one clock cycle\nafter each other"
    },
    {
      "index": 194,
      "start_time": 582580.0,
      "end_time": 585880.0,
      "text": "And we could do this again\nSo we could start decoding"
    },
    {
      "index": 195,
      "start_time": 585960.0,
      "end_time": 587780.0,
      "text": "instruction 3 here"
    },
    {
      "index": 196,
      "start_time": 587780.0,
      "end_time": 589520.0,
      "text": "at the same time as we're executing instruction two"
    },
    {
      "index": 197,
      "start_time": 589520.0,
      "end_time": 590640.0,
      "text": "Now there can be problems"
    },
    {
      "index": 198,
      "start_time": 590640.0,
      "end_time": 593940.0,
      "text": "This works for some instructions,\nbut say this instruction"
    },
    {
      "index": 199,
      "start_time": 593940.0,
      "end_time": 596100.0,
      "text": "said \"store this value in memory\""
    },
    {
      "index": 200,
      "start_time": 596100.0,
      "end_time": 597360.0,
      "text": "Now you've got a problem"
    },
    {
      "index": 201,
      "start_time": 597360.0,
      "end_time": 600100.0,
      "text": "You've only got one address bus \nand one data bus"
    },
    {
      "index": 202,
      "start_time": 600100.0,
      "end_time": 603180.0,
      "text": "so you can only access or store\none thing in memory at a time"
    },
    {
      "index": 203,
      "start_time": 603180.0,
      "end_time": 606440.0,
      "text": "You can't execute a store instruction and fetch a value from memory"
    },
    {
      "index": 204,
      "start_time": 606440.0,
      "end_time": 609620.0,
      "text": "So you wouldn't be able to fetch it until the next clock cycle"
    },
    {
      "index": 205,
      "start_time": 609620.0,
      "end_time": 611640.0,
      "text": "So we fetch instruction four there"
    },
    {
      "index": 206,
      "start_time": 612160.0,
      "end_time": 614560.0,
      "text": "while executing instruction three"
    },
    {
      "index": 207,
      "start_time": 614560.0,
      "end_time": 616120.0,
      "text": "But we can't decode anything here"
    },
    {
      "index": 208,
      "start_time": 616120.0,
      "end_time": 619260.0,
      "text": "So in this clock cycle, we can \ndecode instruction four"
    },
    {
      "index": 209,
      "start_time": 619640.0,
      "end_time": 621840.0,
      "text": "and fetch instruction five"
    },
    {
      "index": 210,
      "start_time": 621840.0,
      "end_time": 622900.0,
      "text": "but we can't execute anything"
    },
    {
      "index": 211,
      "start_time": 622900.0,
      "end_time": 626160.0,
      "text": "We've got what's called a \"bubble\"\nin our pipelines,"
    },
    {
      "index": 212,
      "start_time": 626220.0,
      "end_time": 627420.0,
      "text": "or pipeline store"
    },
    {
      "index": 213,
      "start_time": 627420.0,
      "end_time": 631060.0,
      "text": "because at this point,\nthe design of the CPU doesn't let us"
    },
    {
      "index": 214,
      "start_time": 631240.0,
      "end_time": 632680.0,
      "text": "fetch an instruction"
    },
    {
      "index": 215,
      "start_time": 632680.0,
      "end_time": 634660.0,
      "text": "and execute an instruction at the same time"
    },
    {
      "index": 216,
      "start_time": 634820.0,
      "end_time": 637700.0,
      "text": "it's ... what is called \"pipeline hazards\""
    },
    {
      "index": 217,
      "start_time": 637700.0,
      "end_time": 639720.0,
      "text": "that you can get when designing a pipeline CPU"
    },
    {
      "index": 218,
      "start_time": 639720.0,
      "end_time": 642160.0,
      "text": "because the design of the CPU\ndoesn't let you"
    },
    {
      "index": 219,
      "start_time": 642160.0,
      "end_time": 644720.0,
      "text": "do the things you need to \ndo at the same time"
    },
    {
      "index": 220,
      "start_time": 644720.0,
      "end_time": 646500.0,
      "text": "at the same time.\nSo you have to"
    },
    {
      "index": 221,
      "start_time": 646500.0,
      "end_time": 649200.0,
      "text": "delay things, which means that \nyou get a bubble"
    },
    {
      "index": 222,
      "start_time": 649280.0,
      "end_time": 652880.0,
      "text": "So, you can't quite get up to \none instruction per cycle"
    },
    {
      "index": 223,
      "start_time": 652940.0,
      "end_time": 653740.0,
      "text": "efficiency"
    },
    {
      "index": 224,
      "start_time": 653740.0,
      "end_time": 655460.0,
      "text": "But you can certainly get closer"
    },
    {
      "index": 225,
      "start_time": 655460.0,
      "end_time": 657320.0,
      "text": "than you could if you \njust had everything"
    },
    {
      "index": 226,
      "start_time": 657320.0,
      "end_time": 659300.0,
      "text": "to do one instruction at a time."
    }
  ]
}