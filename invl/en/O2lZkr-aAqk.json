{
  "video_id": "O2lZkr-aAqk",
  "title": "Category Theory 2.1: Functions, epimorphisms",
  "es": 0,
  "json": [
    {
      "index": 1,
      "start_time": 8430.0,
      "end_time": 18869.0,
      "text": "last time I defined a category for you, and explained that the most important"
    },
    {
      "index": 2,
      "start_time": 18869.0,
      "end_time": 28260.0,
      "text": "features of a category composability and identity and then"
    },
    {
      "index": 3,
      "start_time": 28260.0,
      "end_time": 34650.0,
      "text": "I started talking about the most important example of a category that we"
    },
    {
      "index": 4,
      "start_time": 34650.0,
      "end_time": 42899.0,
      "text": "use in programming, that&#39;s the category of types and functions, right. so in"
    },
    {
      "index": 5,
      "start_time": 42899.0,
      "end_time": 45329.0,
      "text": "programming we have types and functions."
    },
    {
      "index": 6,
      "start_time": 45329.0,
      "end_time": 52320.0,
      "text": "But the model for types and functions is really sets, sets and"
    },
    {
      "index": 7,
      "start_time": 52320.0,
      "end_time": 58230.0,
      "text": "functions between sets, right. So I mean every time you design a language you have"
    },
    {
      "index": 8,
      "start_time": 58230.0,
      "end_time": 60960.0,
      "text": "to provide semantics for the language right?"
    },
    {
      "index": 9,
      "start_time": 60960.0,
      "end_time": 66000.0,
      "text": "What does it mean, certain things in language and a lot of languages are"
    },
    {
      "index": 10,
      "start_time": 66000.0,
      "end_time": 71280.0,
      "text": "defined using so-called operational semantics i mean the ones who actually"
    },
    {
      "index": 11,
      "start_time": 71280.0,
      "end_time": 74340.0,
      "text": "have semantics, right."
    },
    {
      "index": 12,
      "start_time": 74340.0,
      "end_time": 82080.0,
      "text": "There are very few of them, none of the major ones. But they sort of like, have part of its semantics"
    },
    {
      "index": 13,
      "start_time": 82080.0,
      "end_time": 89400.0,
      "text": "defined right? And there are two ways of defining semantics one is by telling"
    },
    {
      "index": 14,
      "start_time": 89400.0,
      "end_time": 93960.0,
      "text": "how this thing executes right, so it&#39;s called operational semantics, because you&#39;re"
    },
    {
      "index": 15,
      "start_time": 93960.0,
      "end_time": 100049.0,
      "text": "defining operations of of the language. You know how one expression or"
    },
    {
      "index": 16,
      "start_time": 100049.0,
      "end_time": 105750.0,
      "text": "statement can be transformed into another simpler one and so on. And"
    },
    {
      "index": 17,
      "start_time": 105750.0,
      "end_time": 115259.0,
      "text": "the other is called denotational semantics where you actually map it into"
    },
    {
      "index": 18,
      "start_time": 115259.0,
      "end_time": 120030.0,
      "text": "some other area that you understand and in particular the most interesting"
    },
    {
      "index": 19,
      "start_time": 120030.0,
      "end_time": 129000.0,
      "text": "way of mapping this is into mathematics, right so you build a mathematical model you say &quot;this statement in the"
    },
    {
      "index": 20,
      "start_time": 129000.0,
      "end_time": 133680.0,
      "text": "&quot;language or this construct in the language corresponds some mathematical"
    },
    {
      "index": 21,
      "start_time": 133680.0,
      "end_time": 143040.0,
      "text": "&quot;thing.&quot; and this mathematical thing for instance for types is a set of values. For"
    },
    {
      "index": 22,
      "start_time": 143040.0,
      "end_time": 149520.0,
      "text": "functions, it&#39;s a function between sets. Ok, that&#39;s why it&#39;s so important and that&#39;s why I"
    },
    {
      "index": 23,
      "start_time": 149520.0,
      "end_time": 153840.0,
      "text": "will just talk about type sometimes and sometimes I will say Set, sometimes i"
    },
    {
      "index": 24,
      "start_time": 153840.0,
      "end_time": 159600.0,
      "text": "will say type because I have this semantics in mind"
    },
    {
      "index": 25,
      "start_time": 159600.0,
      "end_time": 171450.0,
      "text": "Ok? So what is important is that a function in programming, especially when"
    },
    {
      "index": 26,
      "start_time": 171450.0,
      "end_time": 177480.0,
      "text": "you are considering you know imperative programming it&#39;s not exactly the same as"
    },
    {
      "index": 27,
      "start_time": 177480.0,
      "end_time": 183239.0,
      "text": "the function in mathematics right so we have to like be more specific by"
    },
    {
      "index": 28,
      "start_time": 183239.0,
      "end_time": 188160.0,
      "text": "&quot;function between sets&quot; we really understand something that in programming"
    },
    {
      "index": 29,
      "start_time": 188160.0,
      "end_time": 193980.0,
      "text": "would be called pure function right? And it will be a pure function and a total"
    },
    {
      "index": 30,
      "start_time": 193980.0,
      "end_time": 198330.0,
      "text": "function because a mathematical function is defined for every argument"
    },
    {
      "index": 31,
      "start_time": 198330.0,
      "end_time": 203549.0,
      "text": "not just for some arguments right? This is like the major source of problems in"
    },
    {
      "index": 32,
      "start_time": 203549.0,
      "end_time": 207450.0,
      "text": "programming that we have these partial functions, functions are defined for some"
    },
    {
      "index": 33,
      "start_time": 207450.0,
      "end_time": 211709.0,
      "text": "arguments and for other arguments they explode, right? I mean if they throw"
    },
    {
      "index": 34,
      "start_time": 211709.0,
      "end_time": 216930.0,
      "text": "exception that and then we catch this exception it&#39;s fine right but quite often"
    },
    {
      "index": 35,
      "start_time": 216930.0,
      "end_time": 219020.0,
      "text": "they don&#39;t they just"
    },
    {
      "index": 36,
      "start_time": 219020.0,
      "end_time": 232610.0,
      "text": "destroy the computer, explode and stuff. So, a total function is defined for all its"
    },
    {
      "index": 37,
      "start_time": 232610.0,
      "end_time": 237170.0,
      "text": "arguments right and these arguments are taken from some type so like if it&#39;s a"
    },
    {
      "index": 38,
      "start_time": 237170.0,
      "end_time": 244790.0,
      "text": "function on integers it has to be defined for all integers right? And"
    },
    {
      "index": 39,
      "start_time": 244790.0,
      "end_time": 249650.0,
      "text": "it&#39;s a pure function and how can you tell if a function is pure? So I have this test"
    },
    {
      "index": 40,
      "start_time": 249650.0,
      "end_time": 256250.0,
      "text": "for a purity of a function: a function is pure if you can memoise it which means"
    },
    {
      "index": 41,
      "start_time": 256250.0,
      "end_time": 263360.0,
      "text": "ah you know you can turn it into a lookup table right? Because for every"
    },
    {
      "index": 42,
      "start_time": 263360.0,
      "end_time": 271100.0,
      "text": "value of an argument it should return one particular value right? And you can"
    },
    {
      "index": 43,
      "start_time": 271100.0,
      "end_time": 275570.0,
      "text": "just remember this value, okay, you call this function once it evaluates it and then"
    },
    {
      "index": 44,
      "start_time": 275570.0,
      "end_time": 281360.0,
      "text": "you can remember the next time you do a lookup into a table right? So if you have"
    },
    {
      "index": 45,
      "start_time": 281360.0,
      "end_time": 285710.0,
      "text": "like you know, types that are finite that only have a finite number of"
    },
    {
      "index": 46,
      "start_time": 285710.0,
      "end_time": 291920.0,
      "text": "elements like boolean right then it&#39;s really easy to tabulate them,"
    },
    {
      "index": 47,
      "start_time": 291920.0,
      "end_time": 296240.0,
      "text": "functions on characters if it&#39;s just ASCII characters, they are really easy to tabulate"
    },
    {
      "index": 48,
      "start_time": 296240.0,
      "end_time": 307160.0,
      "text": "right, all these functions like `isAlpha`, you know, or `isPrintable`, they"
    },
    {
      "index": 49,
      "start_time": 307160.0,
      "end_time": 310590.0,
      "text": "are all actually tabulated, so they are very fast."
    },
    {
      "index": 50,
      "start_time": 310590.0,
      "end_time": 320310.0,
      "text": "Now functions on, let&#39;s say integers or strings, they usually cannot be"
    },
    {
      "index": 51,
      "start_time": 320310.0,
      "end_time": 327450.0,
      "text": "tabulated right but that&#39;s only a problem because of resources right? If we"
    },
    {
      "index": 52,
      "start_time": 327450.0,
      "end_time": 333240.0,
      "text": "had infinite resources we could tabulate it. So ask yourself the question &quot;can I"
    },
    {
      "index": 53,
      "start_time": 333240.0,
      "end_time": 339900.0,
      "text": "actually memoise this function?&quot; and for instance a function like `getChar` cannot"
    },
    {
      "index": 54,
      "start_time": 339900.0,
      "end_time": 345500.0,
      "text": "be memoised, right? You call it once and  then you say &quot;Oh, it returned &#39;h&#39;, good."
    },
    {
      "index": 55,
      "start_time": 345500.0,
      "end_time": 352770.0,
      "text": "&quot;I&#39;ll just remember it and from now on whenever somebody calls function getChar I will return &#39;h&#39;"
    },
    {
      "index": 56,
      "start_time": 352770.0,
      "end_time": 359880.0,
      "text": "&quot;and that&#39;s it&quot;. No, you can&#39;t do this, right, so this is not a pure function. Now of course"
    },
    {
      "index": 57,
      "start_time": 359880.0,
      "end_time": 365640.0,
      "text": "you might say &quot;okay, but how can you program using only pure functions&quot; right?"
    },
    {
      "index": 58,
      "start_time": 365640.0,
      "end_time": 368220.0,
      "text": "We need things like side effects"
    },
    {
      "index": 59,
      "start_time": 368220.0,
      "end_time": 374580.0,
      "text": "So all this stuff can be described on top of pure functions, but"
    },
    {
      "index": 60,
      "start_time": 374580.0,
      "end_time": 380790.0,
      "text": "what we really want is to get to the bottom of the abstraction like what is the"
    },
    {
      "index": 61,
      "start_time": 380790.0,
      "end_time": 390060.0,
      "text": "lowest level (or the highest level of abstraction depending on how you look at it) right?"
    },
    {
      "index": 62,
      "start_time": 390060.0,
      "end_time": 392880.0,
      "text": "so what is the atom, what are the building blocks"
    },
    {
      "index": 63,
      "start_time": 392880.0,
      "end_time": 398460.0,
      "text": "what are the simplest building blocks from which we can build more"
    },
    {
      "index": 64,
      "start_time": 398460.0,
      "end_time": 406380.0,
      "text": "complex stuff right? Using again the same idea of composability so first we want"
    },
    {
      "index": 65,
      "start_time": 406380.0,
      "end_time": 411750.0,
      "text": "to decompose the problem, get to the little blocks at the bottom, and then"
    },
    {
      "index": 66,
      "start_time": 411750.0,
      "end_time": 413970.0,
      "text": "recompose stuff from there."
    },
    {
      "index": 67,
      "start_time": 413970.0,
      "end_time": 420000.0,
      "text": "So when we are decomposing this idea of using procedures and data types and so"
    },
    {
      "index": 68,
      "start_time": 420000.0,
      "end_time": 426840.0,
      "text": "on, we eventually get to the bottom and that&#39;s pure functions. So on top of your"
    },
    {
      "index": 69,
      "start_time": 426840.0,
      "end_time": 431370.0,
      "text": "functions we can be building more complex stuff, including things like I/O"
    },
    {
      "index": 70,
      "start_time": 431370.0,
      "end_time": 439050.0,
      "text": "So now that we have this category of types and functions, right and I talked a little"
    },
    {
      "index": 71,
      "start_time": 439050.0,
      "end_time": 447150.0,
      "text": "bit about this, now let me expand on functions, because functions are very"
    },
    {
      "index": 72,
      "start_time": 447150.0,
      "end_time": 454229.0,
      "text": "interesting, there&#39;s much more to know about functions than we usually consider"
    },
    {
      "index": 73,
      "start_time": 454229.0,
      "end_time": 461550.0,
      "text": "right? So they are really interesting beasts. Even these pure"
    },
    {
      "index": 74,
      "start_time": 461550.0,
      "end_time": 467370.0,
      "text": "functions right? Total pure functions. We have to look at them from a"
    },
    {
      "index": 75,
      "start_time": 467370.0,
      "end_time": 475080.0,
      "text": "slightly different perspective- from a perspective of how we can use them"
    },
    {
      "index": 76,
      "start_time": 475080.0,
      "end_time": 485650.0,
      "text": "as morphisms in our category right? The category Set"
    },
    {
      "index": 77,
      "start_time": 485650.0,
      "end_time": 495270.0,
      "text": "which contains sets and functions between sets."
    },
    {
      "index": 78,
      "start_time": 495270.0,
      "end_time": 503700.0,
      "text": "So functions are defined in mathematics as special kinds of relations"
    },
    {
      "index": 79,
      "start_time": 503700.0,
      "end_time": 512880.0,
      "text": "ok what&#39;s a relation? Relation is, you know, take two sets they have elements"
    },
    {
      "index": 80,
      "start_time": 512880.0,
      "end_time": 520500.0,
      "text": "right. Now we&#39;re talking about set as in set theory, not as a category. In a category"
    },
    {
      "index": 81,
      "start_time": 520500.0,
      "end_time": 529320.0,
      "text": "won&#39;t be able to look at elements, but in set theory we can look at elements right? A relation is"
    },
    {
      "index": 82,
      "start_time": 529320.0,
      "end_time": 544540.0,
      "text": "just a subset of pairs of elements"
    },
    {
      "index": 83,
      "start_time": 544540.0,
      "end_time": 553089.0,
      "text": "So it&#39;s just a pairing of things, we say this element in a relation"
    },
    {
      "index": 84,
      "start_time": 553089.0,
      "end_time": 560680.0,
      "text": "with this element, ok? And again as I explained we are using our brains to"
    },
    {
      "index": 85,
      "start_time": 560680.0,
      "end_time": 565480.0,
      "text": "understand these things and here we are like talking about relationships so"
    },
    {
      "index": 86,
      "start_time": 565480.0,
      "end_time": 572470.0,
      "text": "this is, you know our relationship frame, talking about social"
    },
    {
      "index": 87,
      "start_time": 572470.0,
      "end_time": 575529.0,
      "text": "interactions in mathematics."
    },
    {
      "index": 88,
      "start_time": 575529.0,
      "end_time": 585880.0,
      "text": "Yes you have a question &gt; Does the relation have to be total?"
    },
    {
      "index": 89,
      "start_time": 585880.0,
      "end_time": 592200.0,
      "text": "In general? No."
    },
    {
      "index": 90,
      "start_time": 592200.0,
      "end_time": 597260.0,
      "text": "We&#39;re just talking about general relations in mathematics right?"
    },
    {
      "index": 91,
      "start_time": 597260.0,
      "end_time": 602820.0,
      "text": "So we say ok, this person is in a relation with this person and they are, lets say friends."
    },
    {
      "index": 92,
      "start_time": 602820.0,
      "end_time": 606750.0,
      "text": "So this guy&#39;s a friend of this guy maybe this guy&#39;s not a friend of this"
    },
    {
      "index": 93,
      "start_time": 606750.0,
      "end_time": 612630.0,
      "text": "guy so the relation doesn&#39;t have to be symmetric you know? So, let me define a"
    },
    {
      "index": 94,
      "start_time": 612630.0,
      "end_time": 614460.0,
      "text": "relation okay?"
    },
    {
      "index": 95,
      "start_time": 614460.0,
      "end_time": 619800.0,
      "text": "First of all what is a set of pairs? A set of pairs in mathematics is called a"
    },
    {
      "index": 96,
      "start_time": 619800.0,
      "end_time": 628650.0,
      "text": "Cartesian product, right? So we have two sets, S1 and S2, and we can do"
    },
    {
      "index": 97,
      "start_time": 628650.0,
      "end_time": 633420.0,
      "text": "a Cartesian product of it so all elements from one set are paired with"
    },
    {
      "index": 98,
      "start_time": 633420.0,
      "end_time": 639150.0,
      "text": "all possible evidence from the other set so the set of all pairs forms the"
    },
    {
      "index": 99,
      "start_time": 639150.0,
      "end_time": 646470.0,
      "text": "Cartesian product. Now we take a subset of this Cartesian product, we just pick"
    },
    {
      "index": 100,
      "start_time": 646470.0,
      "end_time": 653790.0,
      "text": "some pairs, randomly or not, you know, if they are meaningful. We just"
    },
    {
      "index": 101,
      "start_time": 653790.0,
      "end_time": 659730.0,
      "text": "pick a subset and any subset of this Cartesian product is a relation by"
    },
    {
      "index": 102,
      "start_time": 659730.0,
      "end_time": 665790.0,
      "text": "definition that&#39;s a relation ok? So there are no other requirements, just a subset of"
    },
    {
      "index": 103,
      "start_time": 665790.0,
      "end_time": 667860.0,
      "text": "the Cartesian product, that&#39;s a relation."
    },
    {
      "index": 104,
      "start_time": 667860.0,
      "end_time": 678690.0,
      "text": "So in this sense relation does not have a directionality, right, whereas functions"
    },
    {
      "index": 105,
      "start_time": 678690.0,
      "end_time": 686040.0,
      "text": "functions have direction functions are these arrows so this is one of the most"
    },
    {
      "index": 106,
      "start_time": 686040.0,
      "end_time": 691170.0,
      "text": "important things to understand, that functions have some kind of"
    },
    {
      "index": 107,
      "start_time": 691170.0,
      "end_time": 697680.0,
      "text": "directionality. So what kind of condition do we have to impose on the"
    },
    {
      "index": 108,
      "start_time": 697680.0,
      "end_time": 706790.0,
      "text": "relation for it to become a function? And in a relation we can have this element"
    },
    {
      "index": 109,
      "start_time": 706790.0,
      "end_time": 712010.0,
      "text": "you know, pick an element in this set, it can be in relation with many elements in this"
    },
    {
      "index": 110,
      "start_time": 712010.0,
      "end_time": 721790.0,
      "text": "other set right? And vice versa, an element from set can be in relation–"
    },
    {
      "index": 111,
      "start_time": 721790.0,
      "end_time": 732140.0,
      "text": "(well okay I&#39;m drawing, putting these arrows in this direction). So many elements from set S1 can be"
    },
    {
      "index": 112,
      "start_time": 732140.0,
      "end_time": 739220.0,
      "text": "in relation with a single element in set 2, or one element from set 1"
    },
    {
      "index": 113,
      "start_time": 739220.0,
      "end_time": 745670.0,
      "text": "can be in relation with many elements from set 2, both are ok for every"
    },
    {
      "index": 114,
      "start_time": 745670.0,
      "end_time": 752150.0,
      "text": "relation. One of them is not okay for functions."
    },
    {
      "index": 115,
      "start_time": 752150.0,
      "end_time": 757220.0,
      "text": "(I need an eraser)"
    },
    {
      "index": 116,
      "start_time": 757220.0,
      "end_time": 759260.0,
      "text": "I&#39;m not gonna use my hand!"
    },
    {
      "index": 117,
      "start_time": 759260.0,
      "end_time": 767330.0,
      "text": "Which one is bad for a function? The top one right? One element, one argument of a"
    },
    {
      "index": 118,
      "start_time": 767330.0,
      "end_time": 774530.0,
      "text": "function cannot be mapped into a bunch of things. It has to be mapped to one thing"
    },
    {
      "index": 119,
      "start_time": 774530.0,
      "end_time": 782060.0,
      "text": "ok? It&#39;s still ok for multiple arguments to be mapped into the same value for a"
    },
    {
      "index": 120,
      "start_time": 782060.0,
      "end_time": 789440.0,
      "text": "function, but not the other way. So that&#39;s where the directionality comes from. Last,"
    },
    {
      "index": 121,
      "start_time": 789440.0,
      "end_time": 798320.0,
      "text": "we want to be considering total functions for our category right? So this"
    },
    {
      "index": 122,
      "start_time": 798320.0,
      "end_time": 807770.0,
      "text": "whole set has to be mapped. All elements of this set must be mapped into something in this other set"
    },
    {
      "index": 123,
      "start_time": 807770.0,
      "end_time": 816680.0,
      "text": "Ok? However it&#39;s not true that all the elements from this set have to"
    },
    {
      "index": 124,
      "start_time": 816680.0,
      "end_time": 825550.0,
      "text": "counter, you know, have to come from this set. So this could be a subset that&#39;s being mapped"
    },
    {
      "index": 125,
      "start_time": 825550.0,
      "end_time": 831640.0,
      "text": "Ok? Now these things have names so let me name these things for future reference"
    },
    {
      "index": 126,
      "start_time": 831640.0,
      "end_time": 836230.0,
      "text": "so that we can talk about them easily. So if you have a function f,"
    },
    {
      "index": 127,
      "start_time": 836230.0,
      "end_time": 846339.0,
      "text": "(so this is like a graph of the function f) this is called the domain"
    },
    {
      "index": 128,
      "start_time": 846339.0,
      "end_time": 852610.0,
      "text": "of a function, right? The domain of the function is just this set from"
    },
    {
      "index": 129,
      "start_time": 852610.0,
      "end_time": 855220.0,
      "text": "which we have started, the whole set."
    },
    {
      "index": 130,
      "start_time": 855220.0,
      "end_time": 864120.0,
      "text": "that&#39;s its domain. This set is called the codomain."
    },
    {
      "index": 131,
      "start_time": 864120.0,
      "end_time": 872010.0,
      "text": "And this subset that was obtained by mapping the whole domain is usually"
    },
    {
      "index": 132,
      "start_time": 872010.0,
      "end_time": 878190.0,
      "text": "called the image of the function."
    },
    {
      "index": 133,
      "start_time": 878190.0,
      "end_time": 882750.0,
      "text": "Ok?"
    },
    {
      "index": 134,
      "start_time": 882750.0,
      "end_time": 886410.0,
      "text": "So functions are not symmetric in this way, you"
    },
    {
      "index": 135,
      "start_time": 886410.0,
      "end_time": 892470.0,
      "text": "see? This is the whole set, this could be a subset. Multiple elements can be"
    },
    {
      "index": 136,
      "start_time": 892470.0,
      "end_time": 897180.0,
      "text": "merged into one element but not vice versa."
    },
    {
      "index": 137,
      "start_time": 897180.0,
      "end_time": 904980.0,
      "text": "So there is this directionality and this directionality is very important"
    },
    {
      "index": 138,
      "start_time": 904980.0,
      "end_time": 910020.0,
      "text": "That&#39;s a very important intuition about functions, and this is"
    },
    {
      "index": 139,
      "start_time": 910020.0,
      "end_time": 915480.0,
      "text": "not only an intuition about functions because later we&#39;ll see that in"
    },
    {
      "index": 140,
      "start_time": 915480.0,
      "end_time": 920430.0,
      "text": "category theory also we have all kinds of other mappings, we have mappings between"
    },
    {
      "index": 141,
      "start_time": 920430.0,
      "end_time": 927980.0,
      "text": "categories called functors, we have mappings between functors which are called natural transformations"
    },
    {
      "index": 142,
      "start_time": 927980.0,
      "end_time": 932970.0,
      "text": "and so on. All these mappings have the same kind of"
    },
    {
      "index": 143,
      "start_time": 932970.0,
      "end_time": 944580.0,
      "text": "directionality, ok? And the simplest way to understand this directionality"
    },
    {
      "index": 144,
      "start_time": 944580.0,
      "end_time": 954030.0,
      "text": "is asking &quot;is the function invertible?&quot;. Like, if I go from here to here is it"
    },
    {
      "index": 145,
      "start_time": 954030.0,
      "end_time": 958350.0,
      "text": "possible to go back?"
    },
    {
      "index": 146,
      "start_time": 958350.0,
      "end_time": 967890.0,
      "text": "And usually it&#39;s not. So if there is a function f from some A to B, you"
    },
    {
      "index": 147,
      "start_time": 967890.0,
      "end_time": 974610.0,
      "text": "know, there isn&#39;t always a function that goes the other way around, that is the"
    },
    {
      "index": 148,
      "start_time": 974610.0,
      "end_time": 980790.0,
      "text": "inverse of this function. How do we define an inverse of a function?"
    },
    {
      "index": 149,
      "start_time": 980790.0,
      "end_time": 988320.0,
      "text": "Well, if you have a function that goes from A to B, and I will be"
    },
    {
      "index": 150,
      "start_time": 988320.0,
      "end_time": 992100.0,
      "text": "using this notation that is just taken from Haskell,"
    },
    {
      "index": 151,
      "start_time": 992100.0,
      "end_time": 998340.0,
      "text": "So f is a function, double colon means &quot;this is the type of function&quot;,"
    },
    {
      "index": 152,
      "start_time": 998340.0,
      "end_time": 1007280.0,
      "text": "the type of function, it goes from a to b. Alright so this is set A, set B, type a type b."
    },
    {
      "index": 153,
      "start_time": 1007280.0,
      "end_time": 1013700.0,
      "text": "Ok? So this function is invertible if there is another function that goes in"
    },
    {
      "index": 154,
      "start_time": 1013700.0,
      "end_time": 1021260.0,
      "text": "the other direction, from b to a. That&#39;s the inverse of this one, what does"
    },
    {
      "index": 155,
      "start_time": 1021260.0,
      "end_time": 1029709.0,
      "text": "it mean? It means that g after f equals id."
    },
    {
      "index": 156,
      "start_time": 1029710.0,
      "end_time": 1043960.0,
      "text": "Ok? So if you first go f to B and then go back from B to A using g, you should end up"
    },
    {
      "index": 157,
      "start_time": 1043960.0,
      "end_time": 1051011.0,
      "text": "in the same, exactly the same point. So if you have an x here, x maps it to"
    },
    {
      "index": 158,
      "start_time": 1051010.0,
      "end_time": 1062289.0,
      "text": "some y here and then you apply g to y, you should get back to x ok? That"
    },
    {
      "index": 159,
      "start_time": 1062290.0,
      "end_time": 1068680.0,
      "text": "means the inverse, ok, but we can compose them two ways right? So g after f is one,"
    },
    {
      "index": 160,
      "start_time": 1068680.0,
      "end_time": 1075101.0,
      "text": "but there&#39;s also a composition f after g and this one also has to be an identity."
    },
    {
      "index": 161,
      "start_time": 1075100.0,
      "end_time": 1085330.0,
      "text": "So we go g first and then f, and you should end up at the same point ok? So this makes it"
    },
    {
      "index": 162,
      "start_time": 1085330.0,
      "end_time": 1093340.0,
      "text": "symmetric. So a function that&#39;s invertible is automatically symmetric ok?"
    },
    {
      "index": 163,
      "start_time": 1093340.0,
      "end_time": 1102740.0,
      "text": "And the function that is invertible is called isomorphism."
    },
    {
      "index": 164,
      "start_time": 1102740.0,
      "end_time": 1110600.0,
      "text": "So this is the definition of isomorphism and notice an interesting thing:"
    },
    {
      "index": 165,
      "start_time": 1110600.0,
      "end_time": 1117890.0,
      "text": "this is in the language of categories."
    },
    {
      "index": 166,
      "start_time": 1117890.0,
      "end_time": 1130280.0,
      "text": "Maybe with a little bit of additional notation, if f goes from A to B and g"
    },
    {
      "index": 167,
      "start_time": 1130280.0,
      "end_time": 1139040.0,
      "text": "goes from B to A then this is an identity in which object? In A. Right? So"
    },
    {
      "index": 168,
      "start_time": 1139040.0,
      "end_time": 1150150.0,
      "text": "Now let&#39;s forget about this picture and say A, B, this is f, this is g."
    },
    {
      "index": 169,
      "start_time": 1150150.0,
      "end_time": 1166800.0,
      "text": "Ok? So g after f, I&#39;ll get identity on a. and then f after g, is the same as"
    },
    {
      "index": 170,
      "start_time": 1166800.0,
      "end_time": 1178740.0,
      "text": "identity on b. Okay, and I have written this in categorical language, I&#39;m not talking"
    },
    {
      "index": 171,
      "start_time": 1178740.0,
      "end_time": 1185670.0,
      "text": "anymore about elements, right? Here I was talking about elements of sets, I"
    },
    {
      "index": 172,
      "start_time": 1185670.0,
      "end_time": 1192810.0,
      "text": "don&#39;t need to. Okay? Now I can go back to categories and say &quot;this is a definition"
    },
    {
      "index": 173,
      "start_time": 1192810.0,
      "end_time": 1201300.0,
      "text": "of isomorphism in any category&quot;. Not only in a category of sets, in any category because"
    },
    {
      "index": 174,
      "start_time": 1201300.0,
      "end_time": 1211530.0,
      "text": "it&#39;s expressed in terms of composition and identity, nothing else, right? So f is"
    },
    {
      "index": 175,
      "start_time": 1211530.0,
      "end_time": 1216900.0,
      "text": "an isomorphism if there exists a g with these properties"
    },
    {
      "index": 176,
      "start_time": 1216900.0,
      "end_time": 1220120.0,
      "text": "Ok?"
    },
    {
      "index": 177,
      "start_time": 1220120.0,
      "end_time": 1227770.0,
      "text": "So isomorphisms are great because isomorphisms, like, identify two"
    },
    {
      "index": 178,
      "start_time": 1227770.0,
      "end_time": 1233770.0,
      "text": "sets they say &quot;this set really looks like this set&quot;, that there&#39;s like one to one"
    },
    {
      "index": 179,
      "start_time": 1233770.0,
      "end_time": 1240370.0,
      "text": "mapping between elements of these sets right? So that&#39;s, you know, if this is a two"
    },
    {
      "index": 180,
      "start_time": 1240370.0,
      "end_time": 1244060.0,
      "text": "element set and this is a two element set, you know I have a mapping between"
    },
    {
      "index": 181,
      "start_time": 1244060.0,
      "end_time": 1250960.0,
      "text": "these elements. That&#39;s great, right? For my purposes they are sort of like"
    },
    {
      "index": 182,
      "start_time": 1250960.0,
      "end_time": 1256570.0,
      "text": "identical right? It&#39;s not really identity, it&#39;s isomorphism, but I have an"
    },
    {
      "index": 183,
      "start_time": 1256570.0,
      "end_time": 1262510.0,
      "text": "identification between these two sets. So for finite sets you know an isomorphism"
    },
    {
      "index": 184,
      "start_time": 1262510.0,
      "end_time": 1269260.0,
      "text": "is just an identification of elements, this element corresponds to this, this"
    },
    {
      "index": 185,
      "start_time": 1269260.0,
      "end_time": 1270940.0,
      "text": "corresponds to this and so on,"
    },
    {
      "index": 186,
      "start_time": 1270940.0,
      "end_time": 1279550.0,
      "text": "one-to-one correspondence. For infinite sets, of course, this is a little bit more"
    },
    {
      "index": 187,
      "start_time": 1279550.0,
      "end_time": 1286180.0,
      "text": "complicated. For instance you can have a one-to-one correspondence between"
    },
    {
      "index": 188,
      "start_time": 1286180.0,
      "end_time": 1297110.0,
      "text": "natural numbers and even numbers."
    },
    {
      "index": 189,
      "start_time": 1297110.0,
      "end_time": 1302010.0,
      "text": "y = 2x"
    },
    {
      "index": 190,
      "start_time": 1302010.0,
      "end_time": 1307770.0,
      "text": "even numbers. Or odd numbers"
    },
    {
      "index": 191,
      "start_time": 1307770.0,
      "end_time": 1316809.0,
      "text": "Right? These are functions that are invertible. Is that true?"
    },
    {
      "index": 192,
      "start_time": 1316810.0,
      "end_time": 1326170.0,
      "text": "No, but if this is a set of even numbers, right, so let&#39;s say this is a"
    },
    {
      "index": 193,
      "start_time": 1326170.0,
      "end_time": 1332920.0,
      "text": "set of even numbers (not the set of all numbers, just a set of even numbers) and this"
    },
    {
      "index": 194,
      "start_time": 1332920.0,
      "end_time": 1340270.0,
      "text": "is the set of all numbers, and then I have one-to-one correspondence between"
    },
    {
      "index": 195,
      "start_time": 1340270.0,
      "end_time": 1347351.0,
      "text": "even numbers and all numbers, right?"
    },
    {
      "index": 196,
      "start_time": 1347350.0,
      "end_time": 1351009.0,
      "text": "That&#39;s because they are infinite and for infinite sets you can do tricks like"
    },
    {
      "index": 197,
      "start_time": 1351010.0,
      "end_time": 1357250.0,
      "text": "these, but if this is a natural number and this is, say, you know"
    },
    {
      "index": 198,
      "start_time": 1357250.0,
      "end_time": 1365011.0,
      "text": "real numbers, right? Real numbers."
    },
    {
      "index": 199,
      "start_time": 1365010.0,
      "end_time": 1373620.0,
      "text": "Now you know that there is no correspondence like this right? Do you know that?"
    },
    {
      "index": 200,
      "start_time": 1373620.0,
      "end_time": 1378550.0,
      "text": "There&#39;s a good argument, that [...]"
    },
    {
      "index": 201,
      "start_time": 1378550.0,
      "end_time": 1386140.0,
      "text": "But that&#39;s just a side remark, right. So just to make you aware of the fact that"
    },
    {
      "index": 202,
      "start_time": 1386140.0,
      "end_time": 1403560.0,
      "text": "isomorphisms kinda tell you that these two things are for some intents and purposes identical"
    },
    {
      "index": 203,
      "start_time": 1403560.0,
      "end_time": 1408840.0,
      "text": "But most functions are not isomorphisms, right?"
    },
    {
      "index": 204,
      "start_time": 1408840.0,
      "end_time": 1416830.0,
      "text": "Most in a sense of, I dunno, most functions that we deal with are not"
    },
    {
      "index": 205,
      "start_time": 1416830.0,
      "end_time": 1425890.0,
      "text": "isomorphisms and there are two reasons for a function not to be an isomorphism,"
    },
    {
      "index": 206,
      "start_time": 1425890.0,
      "end_time": 1434350.0,
      "text": "Ok? So you have to have good reasons not to be an isomorphism. One reason is because"
    },
    {
      "index": 207,
      "start_time": 1434350.0,
      "end_time": 1443290.0,
      "text": "the function can collapse elements of a set, right? So it takes multiple"
    },
    {
      "index": 208,
      "start_time": 1443290.0,
      "end_time": 1450559.0,
      "text": "multiple elements of this set are mapped to a single element of this set, so let me be"
    },
    {
      "index": 209,
      "start_time": 1450560.0,
      "end_time": 1458211.0,
      "text": "more precise here, just focus on one thing"
    },
    {
      "index": 210,
      "start_time": 1458210.0,
      "end_time": 1470269.0,
      "text": "so you have some x_1 and you have some x_2, and function f maps both of these elements to the same y."
    },
    {
      "index": 211,
      "start_time": 1470270.0,
      "end_time": 1482190.0,
      "text": "Ok? For instance, let&#39;s see, a function `isEven`, which returns a boolean, right?"
    },
    {
      "index": 212,
      "start_time": 1482190.0,
      "end_time": 1492530.0,
      "text": "So `isEven` maps every even number into this one element of the boolean called true."
    },
    {
      "index": 213,
      "start_time": 1492530.0,
      "end_time": 1499821.0,
      "text": "All even numbers are mapped to true, all odd numbers are mapped false so lots,"
    },
    {
      "index": 214,
      "start_time": 1499820.0,
      "end_time": 1505970.0,
      "text": "lots of numbers are mapped into one value. So we have this kind of gluing"
    },
    {
      "index": 215,
      "start_time": 1505970.0,
      "end_time": 1513559.0,
      "text": "going so that&#39;s one reason for this function not to be invertible. There&#39;s"
    },
    {
      "index": 216,
      "start_time": 1513560.0,
      "end_time": 1522981.0,
      "text": "another reason for it not to be invertible and that it doesn&#39;t–"
    },
    {
      "index": 217,
      "start_time": 1522980.0,
      "end_time": 1534300.0,
      "text": "that its image does not fill the whole codomain, right? So you have a function in which"
    },
    {
      "index": 218,
      "start_time": 1534300.0,
      "end_time": 1542490.0,
      "text": "No, so this is the codomain but there are some points here, this is the image"
    },
    {
      "index": 219,
      "start_time": 1542490.0,
      "end_time": 1548640.0,
      "text": "of function f, there are some points outside of the image that"
    },
    {
      "index": 220,
      "start_time": 1548640.0,
      "end_time": 1552750.0,
      "text": "just don&#39;t correspond to any x&#39;s here, right?"
    },
    {
      "index": 221,
      "start_time": 1552750.0,
      "end_time": 1558180.0,
      "text": "So if you would want to invert this function you would have to to create a"
    },
    {
      "index": 222,
      "start_time": 1558180.0,
      "end_time": 1564750.0,
      "text": "function g and what&#39;s the value of g on this point right? maybe you can invert"
    },
    {
      "index": 223,
      "start_time": 1564750.0,
      "end_time": 1570870.0,
      "text": "for these points you can say okay this x is mapped to this y"
    },
    {
      "index": 224,
      "start_time": 1570870.0,
      "end_time": 1576480.0,
      "text": "ok maybe I can invert it, if I don&#39;t have this gluing right? Then maybe I can invert it,"
    },
    {
      "index": 225,
      "start_time": 1576480.0,
      "end_time": 1583020.0,
      "text": "but I don&#39;t know what to do with this guy, what&#39;s should g be on this? No idea."
    },
    {
      "index": 226,
      "start_time": 1583020.0,
      "end_time": 1592020.0,
      "text": "Yes?  &gt; Isn&#39;t it possible to have an inverse relation on this [...] or do we not care about those?"
    },
    {
      "index": 227,
      "start_time": 1592020.0,
      "end_time": 1601010.0,
      "text": "Yes, yes, yes and in fact, you know at some point people have this,"
    },
    {
      "index": 228,
      "start_time": 1601010.0,
      "end_time": 1608120.0,
      "text": "instead of inverting functions what you could say is that the counter image of"
    },
    {
      "index": 229,
      "start_time": 1608120.0,
      "end_time": 1611030.0,
      "text": "this y, right, it would–"
    },
    {
      "index": 230,
      "start_time": 1611030.0,
      "end_time": 1618200.0,
      "text": "Ok, in this case, right, it will be some bunch of points here, right? And this bunch of"
    },
    {
      "index": 231,
      "start_time": 1618200.0,
      "end_time": 1622670.0,
      "text": "points that are mapped to the same point."
    },
    {
      "index": 232,
      "start_time": 1622670.0,
      "end_time": 1631070.0,
      "text": "It&#39;s called a fibre ok? And fibration is a very interesting topic in category theory."
    },
    {
      "index": 233,
      "start_time": 1631070.0,
      "end_time": 1637430.0,
      "text": "Because then you can build a set of fibers here and you can say &quot;Okay, on"
    },
    {
      "index": 234,
      "start_time": 1637430.0,
      "end_time": 1648809.0,
      "text": "a set of fibres this thing is invertible&quot;. I&#39;m getting really really ahead now, ok"
    },
    {
      "index": 235,
      "start_time": 1648810.0,
      "end_time": 1653611.0,
      "text": "So there are these two reasons for a non-invertibility, so I like to think of this"
    },
    {
      "index": 236,
      "start_time": 1653610.0,
      "end_time": 1657179.0,
      "text": "like a function, if you think of a function as something directional"
    },
    {
      "index": 237,
      "start_time": 1657180.0,
      "end_time": 1663660.0,
      "text": "something, a process that takes place in time, a function that&#39;s not invertible"
    },
    {
      "index": 238,
      "start_time": 1663660.0,
      "end_time": 1669871.0,
      "text": "is something that increases entropy, right? It boils an egg and you"
    },
    {
      "index": 239,
      "start_time": 1669870.0,
      "end_time": 1677190.0,
      "text": "cannot un-boil an egg, right? So these kind of things make, you know, make this thing"
    },
    {
      "index": 240,
      "start_time": 1677190.0,
      "end_time": 1681990.0,
      "text": "non-invertible. And it&#39;s very important because these two things, these two"
    },
    {
      "index": 241,
      "start_time": 1681990.0,
      "end_time": 1691559.0,
      "text": "phenomena here that make it non-invertible, they correspond to a very"
    },
    {
      "index": 242,
      "start_time": 1691560.0,
      "end_time": 1697500.0,
      "text": "interesting thought process that we use to solve problems."
    },
    {
      "index": 243,
      "start_time": 1697500.0,
      "end_time": 1704400.0,
      "text": "This corresponds to abstraction, this means, you know &quot;I really don&#39;t care which"
    },
    {
      "index": 244,
      "start_time": 1704400.0,
      "end_time": 1709650.0,
      "text": "&quot;of these points I came from&quot;. I&#39;m only interested in one property there, so I&#39;m"
    },
    {
      "index": 245,
      "start_time": 1709650.0,
      "end_time": 1713880.0,
      "text": "abstracting, I&#39;m throwing away some information about whether it was x_1 or"
    },
    {
      "index": 246,
      "start_time": 1713880.0,
      "end_time": 1719910.0,
      "text": "x_2 and I&#39;m left with just one piece of information. For instance I&#39;m throwing away"
    },
    {
      "index": 247,
      "start_time": 1719910.0,
      "end_time": 1727680.0,
      "text": "information about what was the exact number that I mapped, i&#39;m just extracting the"
    },
    {
      "index": 248,
      "start_time": 1727680.0,
      "end_time": 1730441.0,
      "text": "information whether it was even or odd."
    },
    {
      "index": 249,
      "start_time": 1730440.0,
      "end_time": 1738539.0,
      "text": "Ok? So I&#39;m sifting information, right? And I cannot invert it, I cannot say &quot;Oh, it"
    },
    {
      "index": 250,
      "start_time": 1738540.0,
      "end_time": 1745201.0,
      "text": "&quot;was an even number so it must be two, must be zero.&quot; No, right I don&#39;t know how"
    },
    {
      "index": 251,
      "start_time": 1745200.0,
      "end_time": 1752700.0,
      "text": "I came to this conclusion, but I have abstracted a bunch of information and now"
    },
    {
      "index": 252,
      "start_time": 1752700.0,
      "end_time": 1757350.0,
      "text": "I have just this one piece of information that I care about."
    },
    {
      "index": 253,
      "start_time": 1757350.0,
      "end_time": 1764399.0,
      "text": "Ok? So this is the process of abstraction. This on the other hand, is the process of"
    },
    {
      "index": 254,
      "start_time": 1764400.0,
      "end_time": 1771601.0,
      "text": "modelling, ok? I&#39;m modeling this set inside this bigger set, or maybe it&#39;s not"
    },
    {
      "index": 255,
      "start_time": 1771600.0,
      "end_time": 1774659.0,
      "text": "bigger. right, but since it has this,"
    },
    {
      "index": 256,
      "start_time": 1774660.0,
      "end_time": 1782310.0,
      "text": "this environment, right. So I&#39;m saying &quot;okay I&#39;m recognizing the pattern that&#39;s"
    },
    {
      "index": 257,
      "start_time": 1782310.0,
      "end_time": 1787350.0,
      "text": "&quot;defined by this set inside this second set.&quot;"
    },
    {
      "index": 258,
      "start_time": 1787350.0,
      "end_time": 1798051.0,
      "text": "So I&#39;m mapping it, so I&#39;m sort of, like injecting this right here, right? This is some"
    },
    {
      "index": 259,
      "start_time": 1798050.0,
      "end_time": 1805970.0,
      "text": "stick figure or something, and I see the same stick figure here."
    },
    {
      "index": 260,
      "start_time": 1805970.0,
      "end_time": 1812570.0,
      "text": "Ok? So you know this is maybe a human sitting in a cave, and this is the"
    },
    {
      "index": 261,
      "start_time": 1812570.0,
      "end_time": 1819770.0,
      "text": "shadow on the wall of the cave. I&#39;m embedding it in here."
    },
    {
      "index": 262,
      "start_time": 1819770.0,
      "end_time": 1824450.0,
      "text": "And I&#39;m abstracting maybe also, right? Because this is a"
    },
    {
      "index": 263,
      "start_time": 1824450.0,
      "end_time": 1827780.0,
      "text": "three-dimensional guy, this is a two-dimensional shadow and doesn&#39;t"
    },
    {
      "index": 264,
      "start_time": 1827780.0,
      "end_time": 1833090.0,
      "text": "have, you know, so I&#39;m doing both abstraction and modelling. And then"
    },
    {
      "index": 265,
      "start_time": 1833090.0,
      "end_time": 1835610.0,
      "text": "somebody comes and recognizes this"
    },
    {
      "index": 266,
      "start_time": 1835610.0,
      "end_time": 1838790.0,
      "text": "&quot;Hey you just drew a person!&quot;"
    },
    {
      "index": 267,
      "start_time": 1838790.0,
      "end_time": 1847070.0,
      "text": "Oh! The first human being drew the person on the wall and they are excited. So they"
    },
    {
      "index": 268,
      "start_time": 1847070.0,
      "end_time": 1854820.0,
      "text": "just discovered category theory."
    },
    {
      "index": 269,
      "start_time": 1854820.0,
      "end_time": 1859740.0,
      "text": "Ok so mathematicians of course have names for these things, right? But they"
    },
    {
      "index": 270,
      "start_time": 1859740.0,
      "end_time": 1866130.0,
      "text": "their names are like the inverse what I described so, like, they say"
    },
    {
      "index": 271,
      "start_time": 1866130.0,
      "end_time": 1882930.0,
      "text": "&quot;If a function does not collapse things then its called injective, or injection&quot;"
    },
    {
      "index": 272,
      "start_time": 1882930.0,
      "end_time": 1886020.0,
      "text": "An injective function does not collapse"
    },
    {
      "index": 273,
      "start_time": 1886020.0,
      "end_time": 1894120.0,
      "text": "things ok? So if you have two different x&#39;s, x_1 and x_2, and you map them with a"
    },
    {
      "index": 274,
      "start_time": 1894120.0,
      "end_time": 1902160.0,
      "text": "function then you will always get y_1 and y_2, they will be different so if x_1 is"
    },
    {
      "index": 275,
      "start_time": 1902160.0,
      "end_time": 1903990.0,
      "text": "different from x_2 and–"
    },
    {
      "index": 276,
      "start_time": 1903990.0,
      "end_time": 1911280.0,
      "text": "ok let me write fx_1 and fx_2. So if these guys are different, then these guys"
    },
    {
      "index": 277,
      "start_time": 1911280.0,
      "end_time": 1915810.0,
      "text": "are different too. Which means it&#39;s not collapsing anything, right?"
    },
    {
      "index": 278,
      "start_time": 1915810.0,
      "end_time": 1921660.0,
      "text": "It&#39;s just injecting the thing as is, right? The whole thing with all the"
    },
    {
      "index": 279,
      "start_time": 1921660.0,
      "end_time": 1926670.0,
      "text": "points in here get transported to this other set."
    },
    {
      "index": 280,
      "start_time": 1926670.0,
      "end_time": 1935520.0,
      "text": "No shrinking, no forgetting, no abstraction so thats an injective function."
    },
    {
      "index": 281,
      "start_time": 1935520.0,
      "end_time": 1939530.0,
      "text": "It just injects."
    },
    {
      "index": 282,
      "start_time": 1939530.0,
      "end_time": 1947600.0,
      "text": "And this thing also they have a name for the opposite of this, namely, if the"
    },
    {
      "index": 283,
      "start_time": 1947600.0,
      "end_time": 1956330.0,
      "text": "function covers the whole codomain, right, the image is equal to the codomain, then"
    },
    {
      "index": 284,
      "start_time": 1956330.0,
      "end_time": 1963820.0,
      "text": "it&#39;s called surjective."
    },
    {
      "index": 285,
      "start_time": 1963820.0,
      "end_time": 1970480.0,
      "text": "And that&#39;s from I don&#39;t know French or Latin &quot;sur-&quot; means &quot;on&quot; right so it&#39;s &quot;onto&quot;."
    },
    {
      "index": 286,
      "start_time": 1970480.0,
      "end_time": 1977590.0,
      "text": "It&#39;s a function onto the other. So this one is a counterexample for a"
    },
    {
      "index": 287,
      "start_time": 1977590.0,
      "end_time": 1982240.0,
      "text": "surjection right? That&#39;s not a surjection because it has this terra"
    },
    {
      "index": 288,
      "start_time": 1982240.0,
      "end_time": 1990070.0,
      "text": "incognita here. A surjection doesn&#39;t have this, a surjection covers the whole thing right?"
    },
    {
      "index": 289,
      "start_time": 1990070.0,
      "end_time": 1995620.0,
      "text": "And in particular in set theory, you know, if you have a function that&#39;s both"
    },
    {
      "index": 290,
      "start_time": 1995620.0,
      "end_time": 2001770.0,
      "text": "injective and surjective at the same time it&#39;s actually an isomorphism, you"
    },
    {
      "index": 291,
      "start_time": 2001770.0,
      "end_time": 2010410.0,
      "text": "can invert ok? So that&#39;s a good thing to know. But now you might say &quot;Okay,"
    },
    {
      "index": 292,
      "start_time": 2010410.0,
      "end_time": 2015930.0,
      "text": "&quot;so we know something about set theory, that there are injective functions and"
    },
    {
      "index": 293,
      "start_time": 2015930.0,
      "end_time": 2025860.0,
      "text": "&quot;surjective functions&quot;. Now if we define this in terms of elements, right I said"
    },
    {
      "index": 294,
      "start_time": 2025860.0,
      "end_time": 2029490.0,
      "text": "elements here, right?"
    },
    {
      "index": 295,
      "start_time": 2029490.0,
      "end_time": 2039270.0,
      "text": "And surjected it means that for all ys in the second set, y"
    },
    {
      "index": 296,
      "start_time": 2039270.0,
      "end_time": 2048840.0,
      "text": "equals f_x right? There exists an x. For all y&#39;s there exists an x, that y is equal to f_x."
    },
    {
      "index": 297,
      "start_time": 2048840.0000000002,
      "end_time": 2058560.0000000002,
      "text": "That&#39;s in terms of elements of a set. Like, there is no thing outside."
    },
    {
      "index": 298,
      "start_time": 2058560.0,
      "end_time": 2069540.0,
      "text": "Every element that I pick in this set has a counter-image, ok? So I have"
    },
    {
      "index": 299,
      "start_time": 2069540.0,
      "end_time": 2080280.0,
      "text": "defined something in terms of elements. And now if I go to category theory, you know, the Set category,"
    },
    {
      "index": 300,
      "start_time": 2080280.0000000002,
      "end_time": 2093310.0000000002,
      "text": "how do I talk about injections and surjections, right? If I cannot look at the elements."
    },
    {
      "index": 301,
      "start_time": 2093310.0,
      "end_time": 2102610.0,
      "text": "Turns out I can, but it&#39;s a tricky business because I have to express this"
    },
    {
      "index": 302,
      "start_time": 2102610.0,
      "end_time": 2110740.0,
      "text": "stuff now only in terms of morphisms, right, of other morphism so I have to,"
    },
    {
      "index": 303,
      "start_time": 2110740.0,
      "end_time": 2117430.0,
      "text": "like, turns out I have to talk about all the other objects in the category, all of"
    },
    {
      "index": 304,
      "start_time": 2117430.0,
      "end_time": 2121990.0,
      "text": "them, in order to define this one property."
    },
    {
      "index": 305,
      "start_time": 2121990.0,
      "end_time": 2126880.0,
      "text": "And this is very very characteristic to category theory, if you want to"
    },
    {
      "index": 306,
      "start_time": 2126880.0,
      "end_time": 2136180.0,
      "text": "define a property of an object or an arrow, you define it with respect to"
    },
    {
      "index": 307,
      "start_time": 2136180.0,
      "end_time": 2144880.0,
      "text": "essentially everything else, ok? So this is a very holistic approach, right? You"
    },
    {
      "index": 308,
      "start_time": 2144880.0,
      "end_time": 2150370.0,
      "text": "cannot just focus on one little thing because no matter how good your"
    },
    {
      "index": 309,
      "start_time": 2150370.0,
      "end_time": 2161819.0,
      "text": "microscope is you cannot look inside this little point, right? Where a is, right?"
    },
    {
      "index": 310,
      "start_time": 2161820.0,
      "end_time": 2168391.0,
      "text": "And here&#39;s b. Because in category theory this is a point, here it&#39;s a big thing I can look at it"
    },
    {
      "index": 311,
      "start_time": 2168390.0,
      "end_time": 2173489.0,
      "text": "using a microscope, so if my microscopes don&#39;t work, maybe my"
    },
    {
      "index": 312,
      "start_time": 2173490.0,
      "end_time": 2179881.0,
      "text": "telescopes will work. I&#39;ll be looking at the whole universe and I will say"
    },
    {
      "index": 313,
      "start_time": 2179880.0,
      "end_time": 2185489.0,
      "text": "&quot;this little guy is in a relationship with the universe&quot; and the"
    },
    {
      "index": 314,
      "start_time": 2185490.0,
      "end_time": 2191520.0,
      "text": "relationship of this guy with the universe is such that I can say"
    },
    {
      "index": 315,
      "start_time": 2191520.0,
      "end_time": 2199290.0,
      "text": "something of this type, like it&#39;s sort of  injective or surjective, except that in"
    },
    {
      "index": 316,
      "start_time": 2199290.0,
      "end_time": 2209131.0,
      "text": "category theory, we don&#39;t like Latin, ok? We use Greek. So instead of saying something"
    },
    {
      "index": 317,
      "start_time": 2209130.0,
      "end_time": 2219479.0,
      "text": "is surjective, you know &quot;sur-&quot;, &quot;onto&quot; and in Greek it&#39;s &quot;epi-&quot;, right?"
    },
    {
      "index": 318,
      "start_time": 2219480.0,
      "end_time": 2225450.0,
      "text": "so we&#39;ll say that something is surjective it&#39;s called &quot;epic&quot;"
    },
    {
      "index": 319,
      "start_time": 2225450.0,
      "end_time": 2236291.0,
      "text": "ok and something that&#39;s injective  it&#39;s called &quot;monic&quot;."
    },
    {
      "index": 320,
      "start_time": 2236290.0,
      "end_time": 2246750.0,
      "text": "Or monomorphism, monic thingy, or monomorphism"
    },
    {
      "index": 321,
      "start_time": 2246750.0,
      "end_time": 2256010.0,
      "text": "and it&#39;s can be called epimorphism."
    },
    {
      "index": 322,
      "start_time": 2256010.0,
      "end_time": 2265250.0,
      "text": "I&#39;m getting outside of my area."
    },
    {
      "index": 323,
      "start_time": 2265250.0,
      "end_time": 2273980.0,
      "text": "Or an epic morphism okay? So epimorphism and surjective function: it&#39;s"
    },
    {
      "index": 324,
      "start_time": 2273980.0,
      "end_time": 2282200.0,
      "text": "the same thing when you consider just set theory, right? And injective and"
    },
    {
      "index": 325,
      "start_time": 2282200.0,
      "end_time": 2287840.0,
      "text": "monic is the same in set theory. But these things are defined for any"
    },
    {
      "index": 326,
      "start_time": 2287840.0,
      "end_time": 2295430.0,
      "text": "category, so they are much more general. So how would we define this stuff, ok, let me"
    },
    {
      "index": 327,
      "start_time": 2295430.0,
      "end_time": 2305630.0,
      "text": "erase this maybe, we remember this, it&#39;s an easy thing."
    },
    {
      "index": 328,
      "start_time": 2305630.0,
      "end_time": 2313640.0,
      "text": "How would we define, let&#39;s say an epimorphism? I think that&#39;s easier."
    },
    {
      "index": 329,
      "start_time": 2313640.0,
      "end_time": 2324349.0,
      "text": "So we have a function from A to B, sorry not a function, a morphism,"
    },
    {
      "index": 330,
      "start_time": 2324350.0,
      "end_time": 2330320.0,
      "text": "ok but let&#39;s let&#39;s, first thing about the function but let&#39;s try to define"
    },
    {
      "index": 331,
      "start_time": 2330320.0,
      "end_time": 2339320.0,
      "text": "this property of a function that&#39;s surjective in such a way that we don&#39;t talk about elements."
    },
    {
      "index": 332,
      "start_time": 2339320.0,
      "end_time": 2347870.0,
      "text": "Ok so first we&#39;ll start with a set, but we&#39;ll try to find the property of"
    },
    {
      "index": 333,
      "start_time": 2347870.0,
      "end_time": 2359901.0,
      "text": "a surjective function that can be expressed purely in terms of other functions"
    },
    {
      "index": 334,
      "start_time": 2359900.0,
      "end_time": 2365420.0,
      "text": "So let&#39;s first think about– if it&#39;s not surjective what does it mean? If it&#39;s not"
    },
    {
      "index": 335,
      "start_time": 2365420.0,
      "end_time": 2373309.0,
      "text": "surjective it means that there are guys here that are not in the image, right? so"
    },
    {
      "index": 336,
      "start_time": 2373310.0,
      "end_time": 2383330.0,
      "text": "suppose that I take another function called g from this set, so this is my set A, this is my set B"
    },
    {
      "index": 337,
      "start_time": 2383330.0,
      "end_time": 2393171.0,
      "text": "let&#39;s say I take a set C, whatever set, right, and the function g from B to C. So"
    },
    {
      "index": 338,
      "start_time": 2393170.0,
      "end_time": 2400069.0,
      "text": "as you can see function g will have values for elements that are in this terra"
    },
    {
      "index": 339,
      "start_time": 2400070.0,
      "end_time": 2408110.0,
      "text": "incognita and also for these elements that are in the image of f, right? But if I"
    },
    {
      "index": 340,
      "start_time": 2408110.0,
      "end_time": 2415040.0,
      "text": "compose these two, and here&#39;s the trick, I have to talk about composition because"
    },
    {
      "index": 341,
      "start_time": 2415040.0,
      "end_time": 2420381.0,
      "text": "composition is the only thing i have at my disposal in a category. So I better"
    },
    {
      "index": 342,
      "start_time": 2420380.0,
      "end_time": 2425750.0,
      "text": "talk in terms of composition, right? So if I talk in terms of composition, if I"
    },
    {
      "index": 343,
      "start_time": 2425750.0,
      "end_time": 2433069.0,
      "text": "compose this function f with g then look what happens: this x will go inside the"
    },
    {
      "index": 344,
      "start_time": 2433070.0,
      "end_time": 2443350.0,
      "text": "image and g will take it to some– so this is, lets say y, this is some z, right"
    },
    {
      "index": 345,
      "start_time": 2443350.0,
      "end_time": 2453491.0,
      "text": "So g after f will actually not probe this"
    },
    {
      "index": 346,
      "start_time": 2453490.0,
      "end_time": 2465670.0,
      "text": "terra incognita, right? Even though g maps everything, inside composition it will"
    },
    {
      "index": 347,
      "start_time": 2465670.0,
      "end_time": 2477640.0,
      "text": "actually only act on this, right? Inside the composition. Because it&#39;s acting on"
    },
    {
      "index": 348,
      "start_time": 2477640.0,
      "end_time": 2486490.0,
      "text": "y&#39;s and these y&#39;s were obtained by acting on x&#39;s using f."
    },
    {
      "index": 349,
      "start_time": 2486490.0,
      "end_time": 2495310.0,
      "text": "That&#39;s how a composition of functions is defined in Set. Aha. So if I take two"
    },
    {
      "index": 350,
      "start_time": 2495310.0,
      "end_time": 2503380.0,
      "text": "such functions, g_1 let&#39;s say, and another function g_2, and these functions only"
    },
    {
      "index": 351,
      "start_time": 2503380.0,
      "end_time": 2512049.0,
      "text": "differ here, so g_1, maps this guy"
    },
    {
      "index": 352,
      "start_time": 2512050.0,
      "end_time": 2521830.0,
      "text": "into this point and g_2 maps this guy then g_1 is different from g_2 right?"
    },
    {
      "index": 353,
      "start_time": 2521830.0,
      "end_time": 2532030.0,
      "text": "They map points differently, or actually  what i want to say is the same"
    },
    {
      "index": 354,
      "start_time": 2532030.0,
      "end_time": 2537310.0,
      "text": "point is mapped by g_1 and g_2 to something different, right?"
    },
    {
      "index": 355,
      "start_time": 2537310.0,
      "end_time": 2543790.0,
      "text": "That&#39;s the difference. The same point is mapped to different points, that means g_1"
    },
    {
      "index": 356,
      "start_time": 2543790.0,
      "end_time": 2554350.0,
      "text": "and g_2 are different functions. But if they only differ outside, in this halo, the"
    },
    {
      "index": 357,
      "start_time": 2554350.0,
      "end_time": 2566961.0,
      "text": "composition with f will be the same. So the composition g1 after f"
    },
    {
      "index": 358,
      "start_time": 2566960.0,
      "end_time": 2577420.0,
      "text": "will be the same as g_2 after f, even though g_1 is different from g_2. So"
    },
    {
      "index": 359,
      "start_time": 2577420.0,
      "end_time": 2589760.0,
      "text": "the converse of this is if for every g_1 and g_2"
    },
    {
      "index": 360,
      "start_time": 2589760.0,
      "end_time": 2599089.0,
      "text": "If g_1 after f equals g_2 after f"
    },
    {
      "index": 361,
      "start_time": 2599090.0,
      "end_time": 2605111.0,
      "text": "It follows that g_1 is equal to g_2"
    },
    {
      "index": 362,
      "start_time": 2605110.0,
      "end_time": 2612910.0,
      "text": "for every such combination then, I can say this function is surjective, right I&#39;m"
    },
    {
      "index": 363,
      "start_time": 2612910.0,
      "end_time": 2623980.0,
      "text": "just like reversing the logic. If, for any object C and any pair of functions"
    },
    {
      "index": 364,
      "start_time": 2623980.0,
      "end_time": 2635290.0,
      "text": "g1 and g2 from B to C, if g_1 after f is the same as g_2 after f, then"
    },
    {
      "index": 365,
      "start_time": 2635290.0,
      "end_time": 2642010.0,
      "text": "g_1 must be equal to g_2. If this is true, then the function is surjective. And look at what"
    },
    {
      "index": 366,
      "start_time": 2642010.0,
      "end_time": 2656320.0,
      "text": "happened, now I have expressed this purely in terms of categorical terms"
    },
    {
      "index": 367,
      "start_time": 2656320.0,
      "end_time": 2665920.0,
      "text": "And maybe I should put one more, for every c for all c&#39;s, for all objects"
    },
    {
      "index": 368,
      "start_time": 2665920.0,
      "end_time": 2681580.0,
      "text": "c&#39;s for all morphisms g_1 g_2 that go from B to C if from g_1 f equals g_2 f"
    },
    {
      "index": 369,
      "start_time": 2681580.0,
      "end_time": 2689170.0,
      "text": "it follows that g_1 is equal to g_2, then this is an epimorphism. And this"
    },
    {
      "index": 370,
      "start_time": 2689170.0,
      "end_time": 2695470.0,
      "text": "definition will work for any category. In the category of Set, this is just exactly the"
    },
    {
      "index": 371,
      "start_time": 2695470.0,
      "end_time": 2702280.0,
      "text": "same as a surjective function, but in any category I can define something like"
    },
    {
      "index": 372,
      "start_time": 2702280.0,
      "end_time": 2708130.0,
      "text": "this because I&#39;m only using composition. But notice that I&#39;m using"
    },
    {
      "index": 373,
      "start_time": 2708130.0,
      "end_time": 2717010.0,
      "text": "quantifiers &quot;for all&quot;. So I have to consider all objects in my category all"
    },
    {
      "index": 374,
      "start_time": 2717010.0,
      "end_time": 2727240.0,
      "text": "c&#39;s, and all possible pairs of morphisms from B to C, right? So I&#39;m really,"
    },
    {
      "index": 375,
      "start_time": 2727240.0,
      "end_time": 2736480.0,
      "text": "really looking at the whole universe just to define this one property of f. And"
    },
    {
      "index": 376,
      "start_time": 2736480.0,
      "end_time": 2742690.0,
      "text": "the way to remember this property, one way of looking at this, is that if i have"
    },
    {
      "index": 377,
      "start_time": 2742690.0,
      "end_time": 2750070.0,
      "text": "this kind of relation it means that i can i can cancel something on the"
    },
    {
      "index": 378,
      "start_time": 2750070.0,
      "end_time": 2756290.0,
      "text": "right, it means if I have g_1 after f equals"
    },
    {
      "index": 379,
      "start_time": 2756290.0,
      "end_time": 2765980.0,
      "text": "g_2 after f, then I can cancel f. And what do I get? g_1 equals g_2. Right? This is this is"
    },
    {
      "index": 380,
      "start_time": 2765980.0,
      "end_time": 2775980.0,
      "text": "actually a good point for a break"
    }
  ]
}