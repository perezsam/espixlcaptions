{
  "video_id": "X1RVYt2QKQE",
  "title": "Introduction to Kotlin (Google I/O '17)",
  "es": 0,
  "json": [
    {
      "index": 1,
      "start_time": 5990.0,
      "end_time": 7448.0,
      "text": "ROMAIN GUY: Good morning, everyone."
    },
    {
      "index": 2,
      "start_time": 7448.0,
      "end_time": 11192.0,
      "text": "[APPLAUSE]"
    },
    {
      "index": 3,
      "start_time": 11192.0,
      "end_time": 13460.0,
      "text": "Wait, don&#39;t cheer us."
    },
    {
      "index": 4,
      "start_time": 13460.0,
      "end_time": 15040.0,
      "text": "Cheer the next speakers."
    },
    {
      "index": 5,
      "start_time": 15040.0,
      "end_time": 18210.0,
      "text": "So I&#39;m Romain Guy, representing the Platform team on Android,"
    },
    {
      "index": 6,
      "start_time": 18210.0,
      "end_time": 20880.0,
      "text": "and this is Tor Norbye representing the Tools team."
    },
    {
      "index": 7,
      "start_time": 20880.0,
      "end_time": 22205.0,
      "text": "But you&#39;re not here for us."
    },
    {
      "index": 8,
      "start_time": 22205.0,
      "end_time": 23830.0,
      "text": "You are here for very special speakers."
    },
    {
      "index": 9,
      "start_time": 23830.0,
      "end_time": 25204.0,
      "text": "TOR NORBYE: Yeah, so Romain and I"
    },
    {
      "index": 10,
      "start_time": 25204.0,
      "end_time": 27992.0,
      "text": "have been incredibly excited about this official"
    },
    {
      "index": 11,
      "start_time": 27992.0,
      "end_time": 28950.0,
      "text": "announcement of Kotlin."
    },
    {
      "index": 12,
      "start_time": 28950.0,
      "end_time": 31650.0,
      "text": "We both love Kotlin, in case you hadn&#39;t noticed already."
    },
    {
      "index": 13,
      "start_time": 31650.0,
      "end_time": 35060.0,
      "text": "And we don&#39;t take any more time from the speakers of honor."
    },
    {
      "index": 14,
      "start_time": 35060.0,
      "end_time": 37096.0,
      "text": "So without further ado, here they are."
    },
    {
      "index": 15,
      "start_time": 37096.0,
      "end_time": 51500.0,
      "text": "[APPLAUSE]"
    },
    {
      "index": 16,
      "start_time": 51500.0,
      "end_time": 54070.0,
      "text": "HADI HARIRI: Hello, everyone."
    },
    {
      "index": 17,
      "start_time": 54070.0,
      "end_time": 56220.0,
      "text": "Aw, that&#39;s nice."
    },
    {
      "index": 18,
      "start_time": 56220.0,
      "end_time": 59040.0,
      "text": "So I was thinking the other day, the first time that I ever"
    },
    {
      "index": 19,
      "start_time": 59040.0,
      "end_time": 63330.0,
      "text": "did a talk on Kotlin, it was like 4 and 1/2 years ago."
    },
    {
      "index": 20,
      "start_time": 63330.0,
      "end_time": 68580.0,
      "text": "And they gave me a room for 900 people and 7 people showed up."
    },
    {
      "index": 21,
      "start_time": 68580.0,
      "end_time": 71240.0,
      "text": "So it&#39;s kind of nice to see more of you show up today."
    },
    {
      "index": 22,
      "start_time": 71240.0,
      "end_time": 72218.0,
      "text": "Thank you."
    },
    {
      "index": 23,
      "start_time": 72218.0,
      "end_time": 76430.0,
      "text": "[APPLAUSE]"
    },
    {
      "index": 24,
      "start_time": 76430.0,
      "end_time": 80010.0,
      "text": "Anyway I&#39;ve got roughly around 30 minutes."
    },
    {
      "index": 25,
      "start_time": 80010.0,
      "end_time": 82930.0,
      "text": "Actually, a little bit less."
    },
    {
      "index": 26,
      "start_time": 82930.0,
      "end_time": 85844.0,
      "text": "28 minutes to give you a whirlwind tour of Kotlin,"
    },
    {
      "index": 27,
      "start_time": 85844.0,
      "end_time": 87760.0,
      "text": "so I&#39;m not going to cover the entire language."
    },
    {
      "index": 28,
      "start_time": 87760.0,
      "end_time": 91790.0,
      "text": "I&#39;m going to try show you as much as I possibly can"
    },
    {
      "index": 29,
      "start_time": 91790.0,
      "end_time": 94220.0,
      "text": "and how you can use it and where it provides you"
    },
    {
      "index": 30,
      "start_time": 94220.0,
      "end_time": 95410.0,
      "text": "with some benefits, OK?"
    },
    {
      "index": 31,
      "start_time": 95410.0,
      "end_time": 97890.0,
      "text": "So I&#39;m going to try and do it all with live coding,"
    },
    {
      "index": 32,
      "start_time": 97890.0,
      "end_time": 101710.0,
      "text": "so if it all goes terribly wrong, there&#39;s a Google video--"
    },
    {
      "index": 33,
      "start_time": 101710.0,
      "end_time": 104290.0,
      "text": "I mean there&#39;s a YouTube video of this somewhere as well."
    },
    {
      "index": 34,
      "start_time": 104290.0,
      "end_time": 105950.0,
      "text": "So you can watch that."
    },
    {
      "index": 35,
      "start_time": 105950.0,
      "end_time": 108200.0,
      "text": "OK, so we&#39;re going to start with something very simple"
    },
    {
      "index": 36,
      "start_time": 108200.0,
      "end_time": 110580.0,
      "text": "that you&#39;ve already seen, data class."
    },
    {
      "index": 37,
      "start_time": 110580.0,
      "end_time": 114480.0,
      "text": "And I&#39;m in a file called main."
    },
    {
      "index": 38,
      "start_time": 114480.0,
      "end_time": 117250.0,
      "text": "So data class, I&#39;m going to create a new type called money,"
    },
    {
      "index": 39,
      "start_time": 117250.0,
      "end_time": 119830.0,
      "text": "and it&#39;s going to happen amounts which is of type Int."
    },
    {
      "index": 40,
      "start_time": 119830.0,
      "end_time": 121710.0,
      "text": "I know, don&#39;t say anything for now."
    },
    {
      "index": 41,
      "start_time": 121710.0,
      "end_time": 123870.0,
      "text": "And it&#39;s going to have a currency of type string."
    },
    {
      "index": 42,
      "start_time": 123870.0,
      "end_time": 124370.0,
      "text": "OK?"
    },
    {
      "index": 43,
      "start_time": 126880.0,
      "end_time": 129180.0,
      "text": "And this is both properties, and they&#39;re"
    },
    {
      "index": 44,
      "start_time": 129180.0,
      "end_time": 130860.0,
      "text": "going to be read only properties."
    },
    {
      "index": 45,
      "start_time": 130860.00000000001,
      "end_time": 133530.0,
      "text": "So this is something that you&#39;re already familiar with."
    },
    {
      "index": 46,
      "start_time": 133530.0,
      "end_time": 134920.0,
      "text": "It&#39;s essentially a data class."
    },
    {
      "index": 47,
      "start_time": 134920.0,
      "end_time": 137260.0,
      "text": "Let&#39;s go ahead and compare that to a Java one"
    },
    {
      "index": 48,
      "start_time": 137260.0,
      "end_time": 140740.0,
      "text": "that I have done earlier."
    },
    {
      "index": 49,
      "start_time": 140740.0,
      "end_time": 143040.0,
      "text": "So split vertically."
    },
    {
      "index": 50,
      "start_time": 143040.0,
      "end_time": 145400.0,
      "text": "And let&#39;s get the Java money up-- actually,"
    },
    {
      "index": 51,
      "start_time": 145400.0,
      "end_time": 148600.0,
      "text": "let&#39;s go down this side."
    },
    {
      "index": 52,
      "start_time": 148600.0,
      "end_time": 151480.0,
      "text": "Java money-- so there you go."
    },
    {
      "index": 53,
      "start_time": 151480.0,
      "end_time": 155450.0,
      "text": "That&#39;s kind of the equivalent of what I&#39;ve just written, right."
    },
    {
      "index": 54,
      "start_time": 155450.0,
      "end_time": 157340.0,
      "text": "A JavaBean essentially, a data class"
    },
    {
      "index": 55,
      "start_time": 157340.0,
      "end_time": 159010.0,
      "text": "that provides two getters."
    },
    {
      "index": 56,
      "start_time": 159010.0,
      "end_time": 161870.0,
      "text": "They&#39;re immutable, so they&#39;re read only."
    },
    {
      "index": 57,
      "start_time": 161870.0,
      "end_time": 164300.0,
      "text": "And this data modifier over here, what that&#39;s doing"
    },
    {
      "index": 58,
      "start_time": 164300.0,
      "end_time": 166341.0,
      "text": "is essentially giving me a whole bunch of things,"
    },
    {
      "index": 59,
      "start_time": 166341.0,
      "end_time": 169460.0,
      "text": "like the to string, it&#39;s giving me the clone,"
    },
    {
      "index": 60,
      "start_time": 169460.0,
      "end_time": 173340.0,
      "text": "which in Kotlin it&#39;s called copy, it&#39;s doing the equals,"
    },
    {
      "index": 61,
      "start_time": 173340.0,
      "end_time": 174470.0,
      "text": "it&#39;s doing the hashCode."
    },
    {
      "index": 62,
      "start_time": 174470.0,
      "end_time": 176164.0,
      "text": "Now you say, OK, well that&#39;s great."
    },
    {
      "index": 63,
      "start_time": 176164.0,
      "end_time": 177580.0,
      "text": "Brilliant, but why do I need that?"
    },
    {
      "index": 64,
      "start_time": 177580.0,
      "end_time": 180960.0,
      "text": "Because any good IDE is going to generate that for me."
    },
    {
      "index": 65,
      "start_time": 180960.0,
      "end_time": 181794.0,
      "text": "It is true, it does."
    },
    {
      "index": 66,
      "start_time": 181794.0,
      "end_time": 183543.0,
      "text": "But the problem is that that&#39;s code you&#39;re"
    },
    {
      "index": 67,
      "start_time": 183543.0,
      "end_time": 184630.0,
      "text": "going to have to maintain."
    },
    {
      "index": 68,
      "start_time": 184630.0,
      "end_time": 186010.0,
      "text": "And every time you add a new property,"
    },
    {
      "index": 69,
      "start_time": 186010.0,
      "end_time": 188080.0,
      "text": "you&#39;re going to have to go back and change that code."
    },
    {
      "index": 70,
      "start_time": 188080.0,
      "end_time": 190246.0,
      "text": "And the other issue that you&#39;re going to have is you"
    },
    {
      "index": 71,
      "start_time": 190246.0,
      "end_time": 191950.0,
      "text": "don&#39;t know, in fact, if that code is"
    },
    {
      "index": 72,
      "start_time": 191950.0,
      "end_time": 194920.0,
      "text": "the standard stuff that Kotl--"
    },
    {
      "index": 73,
      "start_time": 194920.0,
      "end_time": 197850.0,
      "text": "that IDE has generated for you, or you&#39;ve"
    },
    {
      "index": 74,
      "start_time": 197850.0,
      "end_time": 198850.0,
      "text": "tweaked it a little bit."
    },
    {
      "index": 75,
      "start_time": 198850.0,
      "end_time": 199820.0,
      "text": "OK?"
    },
    {
      "index": 76,
      "start_time": 199820.0,
      "end_time": 203220.0,
      "text": "So it&#39;s not just about saving on typing on the first line."
    },
    {
      "index": 77,
      "start_time": 203220.0,
      "end_time": 204250.0,
      "text": "Right."
    },
    {
      "index": 78,
      "start_time": 204250.0,
      "end_time": 205750.0,
      "text": "Now what I&#39;m going to do is go ahead"
    },
    {
      "index": 79,
      "start_time": 205750.0,
      "end_time": 207180.0,
      "text": "and create a function main."
    },
    {
      "index": 80,
      "start_time": 207180.0,
      "end_time": 209370.0,
      "text": "Let&#39;s close this guy over here."
    },
    {
      "index": 81,
      "start_time": 209370.0,
      "end_time": 211360.0,
      "text": "And this is the top entry point of Kotlin,"
    },
    {
      "index": 82,
      "start_time": 211360.0,
      "end_time": 215880.0,
      "text": "so you have a public static void main in a class."
    },
    {
      "index": 83,
      "start_time": 215880.0,
      "end_time": 217280.0,
      "text": "You don&#39;t need that in Kotlin."
    },
    {
      "index": 84,
      "start_time": 217280.0,
      "end_time": 219730.0,
      "text": "So in Kotlin, you can put everything in the top level."
    },
    {
      "index": 85,
      "start_time": 219730.0,
      "end_time": 222360.0,
      "text": "It&#39;s kind of like JavaScript in a good way."
    },
    {
      "index": 86,
      "start_time": 222360.0,
      "end_time": 226825.0,
      "text": "And so you don&#39;t have to--"
    },
    {
      "index": 87,
      "start_time": 226825.0,
      "end_time": 229630.0,
      "text": "and I want to reiterate, every function and everything"
    },
    {
      "index": 88,
      "start_time": 229630.0,
      "end_time": 231840.0,
      "text": "that I&#39;ll show you today, I&#39;m going to just add it"
    },
    {
      "index": 89,
      "start_time": 231840.0,
      "end_time": 233920.0,
      "text": "in the file as a top level thing,"
    },
    {
      "index": 90,
      "start_time": 233920.0,
      "end_time": 236700.0,
      "text": "but that doesn&#39;t mean that you don&#39;t have any more member"
    },
    {
      "index": 91,
      "start_time": 236700.0,
      "end_time": 237300.0,
      "text": "functions."
    },
    {
      "index": 92,
      "start_time": 237300.0,
      "end_time": 239420.0,
      "text": "Anything, any class, even a data class"
    },
    {
      "index": 93,
      "start_time": 239420.0,
      "end_time": 240900.0,
      "text": "can have member functions."
    },
    {
      "index": 94,
      "start_time": 240900.0,
      "end_time": 242460.0,
      "text": "But for brevity and for the purpose"
    },
    {
      "index": 95,
      "start_time": 242460.0,
      "end_time": 243890.0,
      "text": "of what I&#39;m showing you, I&#39;m just"
    },
    {
      "index": 96,
      "start_time": 243890.0,
      "end_time": 246490.0,
      "text": "going to put it as top level, OK?"
    },
    {
      "index": 97,
      "start_time": 246490.0,
      "end_time": 248920.0,
      "text": "So I&#39;m going to create a new instance of money."
    },
    {
      "index": 98,
      "start_time": 248920.0,
      "end_time": 251430.0,
      "text": "We&#39;re going to call it, for example, tickets."
    },
    {
      "index": 99,
      "start_time": 251430.0,
      "end_time": 256579.0,
      "text": "And I&#39;ll say Money 100, and it&#39;s going to be dollars, right?"
    },
    {
      "index": 100,
      "start_time": 256579.0,
      "end_time": 260240.0,
      "text": "And I&#39;ll get into the explicit type here,"
    },
    {
      "index": 101,
      "start_time": 260240.0,
      "end_time": 262610.0,
      "text": "but essentially here what I&#39;m doing is type inference."
    },
    {
      "index": 102,
      "start_time": 262610.0,
      "end_time": 264550.0,
      "text": "So Kotlin is very strong in type inference,"
    },
    {
      "index": 103,
      "start_time": 264550.0,
      "end_time": 266820.0,
      "text": "and as much as it can infer, it will for you."
    },
    {
      "index": 104,
      "start_time": 266820.0,
      "end_time": 269350.0,
      "text": "So you don&#39;t have to explicitly tell the type."
    },
    {
      "index": 105,
      "start_time": 269350.0,
      "end_time": 272940.0,
      "text": "And then I&#39;ll say, for example, popcorn."
    },
    {
      "index": 106,
      "start_time": 272940.0,
      "end_time": 277695.0,
      "text": "Let&#39;s say tickets, copy, right?"
    },
    {
      "index": 107,
      "start_time": 277695.0,
      "end_time": 279320.0,
      "text": "So what that&#39;s going to do is basically"
    },
    {
      "index": 108,
      "start_time": 279320.0,
      "end_time": 284550.0,
      "text": "copy the previous one for me, and all of the properties."
    },
    {
      "index": 109,
      "start_time": 284550.0,
      "end_time": 287530.0,
      "text": "So if I don&#39;t pass any parameters in,"
    },
    {
      "index": 110,
      "start_time": 287530.0,
      "end_time": 290570.0,
      "text": "it&#39;s going to just take the same values as it has before, OK."
    },
    {
      "index": 111,
      "start_time": 290570.0,
      "end_time": 292420.0,
      "text": "So I can pass in a new parameter and say,"
    },
    {
      "index": 112,
      "start_time": 292420.0,
      "end_time": 294670.0,
      "text": "you know, in Spain, for example, popcorn"
    },
    {
      "index": 113,
      "start_time": 294670.0,
      "end_time": 297450.0,
      "text": "is seven times the price of the entry of the cinema,"
    },
    {
      "index": 114,
      "start_time": 297450.0,
      "end_time": 299720.0,
      "text": "so that&#39;s going to be like 500 euros."
    },
    {
      "index": 115,
      "start_time": 299720.0,
      "end_time": 301650.0,
      "text": "Right?"
    },
    {
      "index": 116,
      "start_time": 301650.0,
      "end_time": 304900.0,
      "text": "And now I can do things like, for instance,"
    },
    {
      "index": 117,
      "start_time": 304900.0,
      "end_time": 311240.0,
      "text": "if tickets is not equal to popcorn,"
    },
    {
      "index": 118,
      "start_time": 311240.0,
      "end_time": 317040.0,
      "text": "then println &quot;they are different!&quot;"
    },
    {
      "index": 119,
      "start_time": 317040.0,
      "end_time": 320247.0,
      "text": "So what this is doing is a property comparison one by one."
    },
    {
      "index": 120,
      "start_time": 320247.0,
      "end_time": 321830.0,
      "text": "It is not doing a point of comparison."
    },
    {
      "index": 121,
      "start_time": 321830.0,
      "end_time": 325670.0,
      "text": "For point of comparisons, we have the triple equal, right?"
    },
    {
      "index": 122,
      "start_time": 325670.0,
      "end_time": 327370.0,
      "text": "Different to JavaScript, there isn&#39;t"
    },
    {
      "index": 123,
      "start_time": 327370.0,
      "end_time": 331120.0,
      "text": "a chart of 600 different positions you have to remember."
    },
    {
      "index": 124,
      "start_time": 331120.0,
      "end_time": 333552.0,
      "text": "And this, by the way, is font ligature,"
    },
    {
      "index": 125,
      "start_time": 333552.0,
      "end_time": 335010.0,
      "text": "so don&#39;t get confused with that, we"
    },
    {
      "index": 126,
      "start_time": 335010.0,
      "end_time": 336910.0,
      "text": "didn&#39;t introduce a new symbol."
    },
    {
      "index": 127,
      "start_time": 336910.0,
      "end_time": 338190.0,
      "text": "OK."
    },
    {
      "index": 128,
      "start_time": 338190.0,
      "end_time": 342710.0,
      "text": "So I can go ahead and just run this,"
    },
    {
      "index": 129,
      "start_time": 342710.0,
      "end_time": 344410.0,
      "text": "and I get they are different."
    },
    {
      "index": 130,
      "start_time": 344410.0,
      "end_time": 348890.0,
      "text": "And if I change this to 100 and I put this as dollars"
    },
    {
      "index": 131,
      "start_time": 348890.0,
      "end_time": 352500.0,
      "text": "and I run this, it&#39;s going to say to you that nothing,"
    },
    {
      "index": 132,
      "start_time": 352500.0,
      "end_time": 353690.0,
      "text": "because they are the same."
    },
    {
      "index": 133,
      "start_time": 353690.0,
      "end_time": 354604.0,
      "text": "OK?"
    },
    {
      "index": 134,
      "start_time": 354604.0,
      "end_time": 356520.0,
      "text": "Now one of the features we keep boosting about"
    },
    {
      "index": 135,
      "start_time": 356520.0,
      "end_time": 358940.0,
      "text": "is the interop between Java and Kotlin."
    },
    {
      "index": 136,
      "start_time": 358940.0,
      "end_time": 362360.0,
      "text": "So we have this Java money one over here,"
    },
    {
      "index": 137,
      "start_time": 362360.0,
      "end_time": 365100.0,
      "text": "so I&#39;m going to go ahead and create an instance of it."
    },
    {
      "index": 138,
      "start_time": 365100.0,
      "end_time": 371260.0,
      "text": "I&#39;ll say javaMoney equals javaMoney, and it will be 100"
    },
    {
      "index": 139,
      "start_time": 371260.0,
      "end_time": 373130.0,
      "text": "and it&#39;ll be dollars."
    },
    {
      "index": 140,
      "start_time": 373130.0,
      "end_time": 376420.0,
      "text": "And then if I do javaMoney, you can see"
    },
    {
      "index": 141,
      "start_time": 376420.0,
      "end_time": 378920.0,
      "text": "that I don&#39;t have any getters."
    },
    {
      "index": 142,
      "start_time": 378920.0,
      "end_time": 382690.0,
      "text": "Well, I do have, actually, a getter, so I can do get amount,"
    },
    {
      "index": 143,
      "start_time": 382690.0,
      "end_time": 385450.0,
      "text": "but if I write getAmount, complete it,"
    },
    {
      "index": 144,
      "start_time": 385450.0,
      "end_time": 388040.0,
      "text": "the IDE&#39;s already going to replace that for property,"
    },
    {
      "index": 145,
      "start_time": 388040.0,
      "end_time": 390550.0,
      "text": "because we don&#39;t have really like getters and setters,"
    },
    {
      "index": 146,
      "start_time": 390550.0,
      "end_time": 392790.0,
      "text": "we just have properties."
    },
    {
      "index": 147,
      "start_time": 392790.0,
      "end_time": 396270.0,
      "text": "So that&#39;s consuming Java from Kotlin."
    },
    {
      "index": 148,
      "start_time": 396270.0,
      "end_time": 399420.0,
      "text": "And if I go over to the Java over here, and let&#39;s"
    },
    {
      "index": 149,
      "start_time": 399420.0,
      "end_time": 401490.0,
      "text": "go ahead and create a public statics void main,"
    },
    {
      "index": 150,
      "start_time": 401490.0,
      "end_time": 402389.0,
      "text": "and I&#39;ll do--"
    },
    {
      "index": 151,
      "start_time": 402389.0,
      "end_time": 404180.0,
      "text": "so let&#39;s see, I&#39;ve got to declare the type."
    },
    {
      "index": 152,
      "start_time": 404180.0,
      "end_time": 413410.0,
      "text": "Money equals new money, 100, and dollars, and--"
    },
    {
      "index": 153,
      "start_time": 413410.0,
      "end_time": 414060.0,
      "text": "OK."
    },
    {
      "index": 154,
      "start_time": 414060.0,
      "end_time": 417250.0,
      "text": "That&#39;s the other thing."
    },
    {
      "index": 155,
      "start_time": 417250.0,
      "end_time": 419910.0,
      "text": "Semicolons in Kotlin are optional."
    },
    {
      "index": 156,
      "start_time": 419910.0,
      "end_time": 421510.0,
      "text": "And the reason they&#39;re optional is"
    },
    {
      "index": 157,
      "start_time": 421510.0,
      "end_time": 423572.0,
      "text": "so that you can have endless arguments over"
    },
    {
      "index": 158,
      "start_time": 423572.0,
      "end_time": 425030.0,
      "text": "whether you should use them or not."
    },
    {
      "index": 159,
      "start_time": 427692.0,
      "end_time": 429650.0,
      "text": "We are trying to compete with JavaScript there."
    },
    {
      "index": 160,
      "start_time": 429650.0,
      "end_time": 431920.0,
      "text": "OK, so money.getAmount."
    },
    {
      "index": 161,
      "start_time": 431920.0,
      "end_time": 435047.0,
      "text": "So now I&#39;m using a Java type-- sorry, a Kotlin type from Java,"
    },
    {
      "index": 162,
      "start_time": 435047.0,
      "end_time": 437130.0,
      "text": "so I&#39;m getting the getters and the setters, right?"
    },
    {
      "index": 163,
      "start_time": 437130.0,
      "end_time": 442110.0,
      "text": "So idiomatic depending on how you are using it."
    },
    {
      "index": 164,
      "start_time": 442110.0,
      "end_time": 445050.0,
      "text": "And that&#39;s just different Java files, different Kotlin files"
    },
    {
      "index": 165,
      "start_time": 445050.0,
      "end_time": 448880.0,
      "text": "in a single project, working seamlessly without any issues."
    },
    {
      "index": 166,
      "start_time": 448880.0,
      "end_time": 452760.0,
      "text": "Right, so now let&#39;s go ahead and create some functions."
    },
    {
      "index": 167,
      "start_time": 452760.0,
      "end_time": 455210.0,
      "text": "So I&#39;m going to create a function called sendPayment."
    },
    {
      "index": 168,
      "start_time": 455210.0,
      "end_time": 456930.0,
      "text": "That takes a money--"
    },
    {
      "index": 169,
      "start_time": 456930.0,
      "end_time": 461879.0,
      "text": "and Money-- and it&#39;s going to println the money out."
    },
    {
      "index": 170,
      "start_time": 461879.0,
      "end_time": 463670.0,
      "text": "And of course we have string interpolation,"
    },
    {
      "index": 171,
      "start_time": 463670.0,
      "end_time": 468095.0,
      "text": "so I could say, sending money.amount."
    },
    {
      "index": 172,
      "start_time": 468095.0,
      "end_time": 470470.0,
      "text": "And you don&#39;t have to put these curly braces if it&#39;s just"
    },
    {
      "index": 173,
      "start_time": 470470.0,
      "end_time": 471800.0,
      "text": "a single property that you&#39;re passing in,"
    },
    {
      "index": 174,
      "start_time": 471800.0,
      "end_time": 473207.0,
      "text": "as we&#39;ll just see in a moment."
    },
    {
      "index": 175,
      "start_time": 473207.0,
      "end_time": 475040.0,
      "text": "So now I can call this and say, for example,"
    },
    {
      "index": 176,
      "start_time": 475040.0,
      "end_time": 478290.0,
      "text": "sendPayment, tickets, right?"
    },
    {
      "index": 177,
      "start_time": 478290.0,
      "end_time": 481400.0,
      "text": "Now Kotlin, we also have--"
    },
    {
      "index": 178,
      "start_time": 481400.0,
      "end_time": 485090.0,
      "text": "notice one thing here, I&#39;m not defining the return type."
    },
    {
      "index": 179,
      "start_time": 485090.0,
      "end_time": 487790.0,
      "text": "By default it&#39;s unit, which is kind of like void,"
    },
    {
      "index": 180,
      "start_time": 487790.0,
      "end_time": 488480.0,
      "text": "but it&#39;s not."
    },
    {
      "index": 181,
      "start_time": 488480.0,
      "end_time": 492505.0,
      "text": "It&#39;s actually a object which is essentially a singleton,"
    },
    {
      "index": 182,
      "start_time": 492505.0,
      "end_time": 495120.0,
      "text": "a single instance of an object."
    },
    {
      "index": 183,
      "start_time": 495120.0,
      "end_time": 498010.0,
      "text": "And if it is a unit, you don&#39;t have to put it there, right?"
    },
    {
      "index": 184,
      "start_time": 498010.0,
      "end_time": 501350.0,
      "text": "So I&#39;m going to add a new parameter here"
    },
    {
      "index": 185,
      "start_time": 501350.0,
      "end_time": 503600.0,
      "text": "and I&#39;m going to say, for example, with message."
    },
    {
      "index": 186,
      "start_time": 503600.0,
      "end_time": 505700.0,
      "text": "And this is gone to have string, and you"
    },
    {
      "index": 187,
      "start_time": 505700.0,
      "end_time": 507980.0,
      "text": "can have default parameters."
    },
    {
      "index": 188,
      "start_time": 507980.0,
      "end_time": 510499.0,
      "text": "So here, notice that there&#39;s no compilation error because I"
    },
    {
      "index": 189,
      "start_time": 510499.0,
      "end_time": 511540.0,
      "text": "made a default parameter."
    },
    {
      "index": 190,
      "start_time": 511540.0,
      "end_time": 514039.0,
      "text": "This saves you a lot in times of overloaded function,"
    },
    {
      "index": 191,
      "start_time": 514039.0,
      "end_time": 515580.0,
      "text": "overloaded member functions, right?"
    },
    {
      "index": 192,
      "start_time": 515580.00000000006,
      "end_time": 517870.00000000006,
      "text": "I can just have default parameters"
    },
    {
      "index": 193,
      "start_time": 517870.0,
      "end_time": 518870.0,
      "text": "and then do what I want."
    },
    {
      "index": 194,
      "start_time": 518870.0,
      "end_time": 520429.0,
      "text": "And you can have multiple default parameters."
    },
    {
      "index": 195,
      "start_time": 520429.0,
      "end_time": 522512.0,
      "text": "And since you can have multiple default parameters"
    },
    {
      "index": 196,
      "start_time": 522511.99999999994,
      "end_time": 527420.0,
      "text": "and you can alternate which one you want to pass in,"
    },
    {
      "index": 197,
      "start_time": 527420.0,
      "end_time": 529630.0,
      "text": "you can also do names parameters."
    },
    {
      "index": 198,
      "start_time": 529630.0,
      "end_time": 536300.0,
      "text": "So, in fact, I could say message equals &quot;Good luck!&quot;"
    },
    {
      "index": 199,
      "start_time": 536300.0,
      "end_time": 539430.0,
      "text": "and money equals tickets."
    },
    {
      "index": 200,
      "start_time": 539430.0,
      "end_time": 542660.0,
      "text": "And this is kind of useful as well when you are using--"
    },
    {
      "index": 201,
      "start_time": 542660.0,
      "end_time": 545740.0,
      "text": "you&#39;re talking to legacy code, for example, some"
    },
    {
      "index": 202,
      "start_time": 545740.0,
      "end_time": 549000.0,
      "text": "function that you can&#39;t modify, and it&#39;s got 600 parameters,"
    },
    {
      "index": 203,
      "start_time": 549000.0,
      "end_time": 553100.0,
      "text": "and they&#39;re probably 500 of them are true and false Booleans,"
    },
    {
      "index": 204,
      "start_time": 553100.0,
      "end_time": 556760.0,
      "text": "it kind of gives you some insight into what parameters"
    },
    {
      "index": 205,
      "start_time": 556760.0,
      "end_time": 558190.0,
      "text": "I&#39;m passing in in every position."
    },
    {
      "index": 206,
      "start_time": 562400.0,
      "end_time": 564000.0,
      "text": "Oh yeah."
    },
    {
      "index": 207,
      "start_time": 564000.0,
      "end_time": 565710.0,
      "text": "I love it when people crap--"
    },
    {
      "index": 208,
      "start_time": 565710.0,
      "end_time": 566430.0,
      "text": "clap."
    },
    {
      "index": 209,
      "start_time": 566430.0,
      "end_time": 571630.0,
      "text": "[LAUGHTER]"
    },
    {
      "index": 210,
      "start_time": 571630.0,
      "end_time": 577640.0,
      "text": "And I&#39;m thinking to myself, well this is going well."
    },
    {
      "index": 211,
      "start_time": 577640.0,
      "end_time": 580740.0,
      "text": "Anyway, right, let&#39;s go."
    },
    {
      "index": 212,
      "start_time": 580740.0,
      "end_time": 583660.0,
      "text": "Edit that out, like adult supervision."
    },
    {
      "index": 213,
      "start_time": 583660.0,
      "end_time": 584454.0,
      "text": "Right."
    },
    {
      "index": 214,
      "start_time": 584454.0,
      "end_time": 586120.0,
      "text": "One other thing with Kotlin is that when"
    },
    {
      "index": 215,
      "start_time": 586120.0,
      "end_time": 589160.0,
      "text": "we have functions that are really, really easy,"
    },
    {
      "index": 216,
      "start_time": 589160.0,
      "end_time": 592120.0,
      "text": "like essentially returning a single value,"
    },
    {
      "index": 217,
      "start_time": 592120.0,
      "end_time": 596150.0,
      "text": "you can just do single expression functions."
    },
    {
      "index": 218,
      "start_time": 596150.0,
      "end_time": 599130.0,
      "text": "So I omit the return type explicitly,"
    },
    {
      "index": 219,
      "start_time": 599130.0,
      "end_time": 602740.0,
      "text": "I omit the curly braces, and I just return the actual function"
    },
    {
      "index": 220,
      "start_time": 602740.0,
      "end_time": 603500.0,
      "text": "that I want to do."
    },
    {
      "index": 221,
      "start_time": 603500.0,
      "end_time": 604830.0,
      "text": "OK?"
    },
    {
      "index": 222,
      "start_time": 604830.0,
      "end_time": 608760.0,
      "text": "So, in fact, the concept of expression"
    },
    {
      "index": 223,
      "start_time": 608760.0,
      "end_time": 610150.0,
      "text": "comes in many places in Kotlin."
    },
    {
      "index": 224,
      "start_time": 610150.0,
      "end_time": 612066.0,
      "text": "So for instance, let&#39;s create another function"
    },
    {
      "index": 225,
      "start_time": 612066.0,
      "end_time": 615380.0,
      "text": "that&#39;s called convert ToDollars. convertToDollars,"
    },
    {
      "index": 226,
      "start_time": 615380.0,
      "end_time": 619080.0,
      "text": "and this is going to take a money."
    },
    {
      "index": 227,
      "start_time": 619080.0,
      "end_time": 622100.0,
      "text": "Money, and it&#39;s going to return Money."
    },
    {
      "index": 228,
      "start_time": 622100.0,
      "end_time": 623600.0,
      "text": "And then what we&#39;re going to do here"
    },
    {
      "index": 229,
      "start_time": 623600.0,
      "end_time": 627310.0,
      "text": "is a when statement, so that&#39;s essentially case, right."
    },
    {
      "index": 230,
      "start_time": 627310.0,
      "end_time": 632670.0,
      "text": "So when money_currency is dollars,"
    },
    {
      "index": 231,
      "start_time": 632670.0,
      "end_time": 638297.0,
      "text": "then we&#39;ll do return money as is, right, because I"
    },
    {
      "index": 232,
      "start_time": 638297.0,
      "end_time": 639380.0,
      "text": "don&#39;t need to do anything."
    },
    {
      "index": 233,
      "start_time": 639380.0,
      "end_time": 643490.0,
      "text": "And if it&#39;s EUR, then what I&#39;m going to do is return,"
    },
    {
      "index": 234,
      "start_time": 643490.0,
      "end_time": 650682.0,
      "text": "we&#39;re going to do money.amount times--"
    },
    {
      "index": 235,
      "start_time": 650682.0,
      "end_time": 652390.0,
      "text": "sorry, I&#39;ve got to create a new instance."
    },
    {
      "index": 236,
      "start_time": 652390.0,
      "end_time": 659810.0,
      "text": "Money, and then it&#39;s going to be money.amount times BigDecimal"
    },
    {
      "index": 237,
      "start_time": 659810.0,
      "end_time": 664830.0,
      "text": "1.10, and then that&#39;s going to be dollars."
    },
    {
      "index": 238,
      "start_time": 664830.0,
      "end_time": 669300.0,
      "text": "And else, throw IllegalArgumentException,"
    },
    {
      "index": 239,
      "start_time": 669300.0,
      "end_time": 675140.0,
      "text": "&quot;not the currency you&#39;re interested in!&quot;"
    },
    {
      "index": 240,
      "start_time": 675140.0,
      "end_time": 678590.0,
      "text": "So this you can actually treat a when as an expression."
    },
    {
      "index": 241,
      "start_time": 678590.0,
      "end_time": 682240.0,
      "text": "So I can remove this return over here, remove this return over"
    },
    {
      "index": 242,
      "start_time": 682240.0,
      "end_time": 685480.0,
      "text": "here, put it just here, and then this just"
    },
    {
      "index": 243,
      "start_time": 685480.0,
      "end_time": 689060.0,
      "text": "makes the when always return an expression."
    },
    {
      "index": 244,
      "start_time": 689060.0,
      "end_time": 693440.0,
      "text": "And in fact, you can even remove the return here,"
    },
    {
      "index": 245,
      "start_time": 693440.0,
      "end_time": 697760.0,
      "text": "remove the Money here, and remove that there,"
    },
    {
      "index": 246,
      "start_time": 697760.0,
      "end_time": 699350.0,
      "text": "and you get a single expression."
    },
    {
      "index": 247,
      "start_time": 699350.0,
      "end_time": 700150.0,
      "text": "OK?"
    },
    {
      "index": 248,
      "start_time": 700150.0,
      "end_time": 701460.0,
      "text": "Single expression function."
    },
    {
      "index": 249,
      "start_time": 701460.0,
      "end_time": 702910.0,
      "text": "Now one thing that you notice here"
    },
    {
      "index": 250,
      "start_time": 702910.0,
      "end_time": 706330.0,
      "text": "that this is giving me an error because this is--"
    },
    {
      "index": 251,
      "start_time": 706330.0,
      "end_time": 709060.0,
      "text": "I&#39;m trying to operate a BigDecimal with an int,"
    },
    {
      "index": 252,
      "start_time": 709060.0,
      "end_time": 711210.0,
      "text": "so we&#39;re going to go and refactor this,"
    },
    {
      "index": 253,
      "start_time": 711210.0,
      "end_time": 714300.0,
      "text": "and we&#39;re going to call it BigDecimal, OK."
    },
    {
      "index": 254,
      "start_time": 714300.0,
      "end_time": 717700.0,
      "text": "Now talking about BigDecimal, oh, here we go."
    },
    {
      "index": 255,
      "start_time": 717700.0,
      "end_time": 726430.0,
      "text": "BigDecimal, BigDecimal 100 and BigDecimal--"
    },
    {
      "index": 256,
      "start_time": 726430.0,
      "end_time": 728670.0,
      "text": "I love typing BigDecimal."
    },
    {
      "index": 257,
      "start_time": 728670.0,
      "end_time": 731510.0,
      "text": "I love it."
    },
    {
      "index": 258,
      "start_time": 731510.0,
      "end_time": 734330.0,
      "text": "So we&#39;ve got this over here."
    },
    {
      "index": 259,
      "start_time": 734330.0,
      "end_time": 737120.0,
      "text": "Now if you look at, actually, BigDecimal--"
    },
    {
      "index": 260,
      "start_time": 737120.0,
      "end_time": 740140.0,
      "text": "so if I create a new BigDecimal, we&#39;ll call it bd1"
    },
    {
      "index": 261,
      "start_time": 740140.0,
      "end_time": 743170.0,
      "text": "equals BigDecimal 100."
    },
    {
      "index": 262,
      "start_time": 743170.0,
      "end_time": 745790.0,
      "text": "You can see the bd1 gives me a whole bunch of functions"
    },
    {
      "index": 263,
      "start_time": 745790.0,
      "end_time": 748260.0,
      "text": "like divide, multiply, all of these things."
    },
    {
      "index": 264,
      "start_time": 748260.0,
      "end_time": 750780.0,
      "text": "What if I wanted to do something like a percent?"
    },
    {
      "index": 265,
      "start_time": 750780.0,
      "end_time": 753660.0,
      "text": "I wanted a percentage of BigDecimal."
    },
    {
      "index": 266,
      "start_time": 753660.0,
      "end_time": 757370.0,
      "text": "Now normally you would, basically,"
    },
    {
      "index": 267,
      "start_time": 757370.0,
      "end_time": 759597.0,
      "text": "inherit from that and then create your own version"
    },
    {
      "index": 268,
      "start_time": 759597.0,
      "end_time": 761430.0,
      "text": "and have all of these things, but in Kotlin,"
    },
    {
      "index": 269,
      "start_time": 761430.0,
      "end_time": 762600.0,
      "text": "one of the features that we&#39;ve added--"
    },
    {
      "index": 270,
      "start_time": 762600.0,
      "end_time": 763760.0,
      "text": "and if you&#39;re familiar with C#--"
    },
    {
      "index": 271,
      "start_time": 763760.0,
      "end_time": 765760.0,
      "text": "is called extension functions, which essentially"
    },
    {
      "index": 272,
      "start_time": 765760.0,
      "end_time": 768700.0,
      "text": "means that you can take any class, any type, and extend it."
    },
    {
      "index": 273,
      "start_time": 768700.0,
      "end_time": 770957.0,
      "text": "So I can take a function of BigDecimal,"
    },
    {
      "index": 274,
      "start_time": 770957.0,
      "end_time": 773040.0,
      "text": "I put the name of the class that I want to extend,"
    },
    {
      "index": 275,
      "start_time": 773040.0,
      "end_time": 775005.0,
      "text": "and I say I want to do a percent."
    },
    {
      "index": 276,
      "start_time": 775005.0,
      "end_time": 776380.0,
      "text": "And what is the percentage that I"
    },
    {
      "index": 277,
      "start_time": 776380.0,
      "end_time": 780810.0,
      "text": "want to do, for example, an integer, and then it would be,"
    },
    {
      "index": 278,
      "start_time": 780810.0,
      "end_time": 781540.0,
      "text": "let&#39;s see."
    },
    {
      "index": 279,
      "start_time": 781540.0,
      "end_time": 783950.0,
      "text": "So given that this is an extension function,"
    },
    {
      "index": 280,
      "start_time": 783950.0,
      "end_time": 787891.0,
      "text": "it&#39;s going to have an instance of that class, of that object,"
    },
    {
      "index": 281,
      "start_time": 787891.0,
      "end_time": 788390.0,
      "text": "right."
    },
    {
      "index": 282,
      "start_time": 788390.0,
      "end_time": 790700.0,
      "text": "So I can use that, reference that with this."
    },
    {
      "index": 283,
      "start_time": 790700.0,
      "end_time": 795919.0,
      "text": "And I say this multiplied by the percentage--"
    },
    {
      "index": 284,
      "start_time": 795919.0,
      "end_time": 798210.0,
      "text": "and then this has got to to be wrapped in a big decimal"
    },
    {
      "index": 285,
      "start_time": 798210.0,
      "end_time": 799180.0,
      "text": "again--"
    },
    {
      "index": 286,
      "start_time": 799180.0,
      "end_time": 800810.0,
      "text": "percentage."
    },
    {
      "index": 287,
      "start_time": 800810.0,
      "end_time": 804870.0,
      "text": "And then that divide--"
    },
    {
      "index": 288,
      "start_time": 804870.0,
      "end_time": 809350.0,
      "text": "and then another BigDecimal 100."
    },
    {
      "index": 289,
      "start_time": 809350.0,
      "end_time": 813290.0,
      "text": "And what&#39;s wrong with this, that should be percentage."
    },
    {
      "index": 290,
      "start_time": 813290.0,
      "end_time": 816120.0,
      "text": "So percent-- age."
    },
    {
      "index": 291,
      "start_time": 816120.0,
      "end_time": 822240.0,
      "text": "OK, so now what happens is that on bd1, I have percentage."
    },
    {
      "index": 292,
      "start_time": 822240.0,
      "end_time": 823170.0,
      "text": "OK."
    },
    {
      "index": 293,
      "start_time": 823170.0,
      "end_time": 826250.0,
      "text": "And I could do percent 7, and that would give me"
    },
    {
      "index": 294,
      "start_time": 826250.0,
      "end_time": 827360.0,
      "text": "a certain percent."
    },
    {
      "index": 295,
      "start_time": 827360.0,
      "end_time": 829890.0,
      "text": "And that extension function gets included anywhere where"
    },
    {
      "index": 296,
      "start_time": 829890.0,
      "end_time": 831760.0,
      "text": "it is defined in the package."
    },
    {
      "index": 297,
      "start_time": 831760.0,
      "end_time": 835560.0,
      "text": "So here in this case, I have it in com.jetbrains.gio"
    },
    {
      "index": 298,
      "start_time": 835560.0,
      "end_time": 837307.0,
      "text": "and that will get included there."
    },
    {
      "index": 299,
      "start_time": 837307.0,
      "end_time": 838890.0,
      "text": "So you can create extension functions,"
    },
    {
      "index": 300,
      "start_time": 838890.0,
      "end_time": 840560.0,
      "text": "and we&#39;ll see that the standard library actually"
    },
    {
      "index": 301,
      "start_time": 840560.0,
      "end_time": 842669.0,
      "text": "consists of a whole bunch of extension functions."
    },
    {
      "index": 302,
      "start_time": 842669.0,
      "end_time": 844210.0,
      "text": "Now we&#39;ll take this one step further,"
    },
    {
      "index": 303,
      "start_time": 844210.0,
      "end_time": 846670.0,
      "text": "because I can actually extend everything."
    },
    {
      "index": 304,
      "start_time": 846670.0,
      "end_time": 848890.0,
      "text": "So let&#39;s go ahead and extend an integer."
    },
    {
      "index": 305,
      "start_time": 848890.0,
      "end_time": 851720.0,
      "text": "So I&#39;ll say fun Int."
    },
    {
      "index": 306,
      "start_time": 851720.0,
      "end_time": 855760.0,
      "text": "percentOf and here will do the reverse."
    },
    {
      "index": 307,
      "start_time": 855760.0,
      "end_time": 859120.0,
      "text": "So I want like 10 percent of something, right."
    },
    {
      "index": 308,
      "start_time": 859120.0,
      "end_time": 862600.0,
      "text": "So I&#39;ll say money, for instance, I want 10 percent of money."
    },
    {
      "index": 309,
      "start_time": 862600.0,
      "end_time": 866460.0,
      "text": "And that&#39;s going to return the--"
    },
    {
      "index": 310,
      "start_time": 866460.0,
      "end_time": 870250.0,
      "text": "let&#39;s see, it&#39;s going to return money."
    },
    {
      "index": 311,
      "start_time": 870250.0,
      "end_time": 874480.0,
      "text": "Then it will be amount.multiply and then here it&#39;s going"
    },
    {
      "index": 312,
      "start_time": 874480.0,
      "end_time": 877760.0,
      "text": "to reference the actual instance, so it will be this--"
    },
    {
      "index": 313,
      "start_time": 877760.0,
      "end_time": 882720.0,
      "text": "and again, this has to be wrapped in BigDecimal,"
    },
    {
      "index": 314,
      "start_time": 882720.0,
      "end_time": 886970.0,
      "text": "and then divide by 100."
    },
    {
      "index": 315,
      "start_time": 886970.0,
      "end_time": 887510.0,
      "text": "OK."
    },
    {
      "index": 316,
      "start_time": 887510.0,
      "end_time": 890330.0,
      "text": "And I think I got that in the right order."
    },
    {
      "index": 317,
      "start_time": 890330.0,
      "end_time": 892690.0,
      "text": "If the implementation is wrong, doesn&#39;t matter."
    },
    {
      "index": 318,
      "start_time": 892690.0,
      "end_time": 893480.0,
      "text": "Who cares."
    },
    {
      "index": 319,
      "start_time": 893480.0,
      "end_time": 897440.0,
      "text": "Anyway, so now what I can do is something like this."
    },
    {
      "index": 320,
      "start_time": 897440.0,
      "end_time": 905410.0,
      "text": "Seven percentOf BigDecimal 100."
    },
    {
      "index": 321,
      "start_time": 905410.0,
      "end_time": 905910.0,
      "text": "OK?"
    },
    {
      "index": 322,
      "start_time": 905910.0,
      "end_time": 906630.0,
      "text": "Oh no, sorry."
    },
    {
      "index": 323,
      "start_time": 906630.0,
      "end_time": 907620.0,
      "text": "Money."
    },
    {
      "index": 324,
      "start_time": 907620.0,
      "end_time": 911030.0,
      "text": "So I can do Money-- no, don&#39;t clap yet."
    },
    {
      "index": 325,
      "start_time": 911030.0,
      "end_time": 912100.0,
      "text": "Money."
    },
    {
      "index": 326,
      "start_time": 912100.0,
      "end_time": 913720.0,
      "text": "Oh, let&#39;s just take the money I have."
    },
    {
      "index": 327,
      "start_time": 913720.0,
      "end_time": 915090.0,
      "text": "7.percentOf(popcorn)."
    },
    {
      "index": 328,
      "start_time": 915090.0,
      "end_time": 916420.0,
      "text": "OK, nice?"
    },
    {
      "index": 329,
      "start_time": 920350.0,
      "end_time": 922150.0,
      "text": "Let&#39;s do a little bit nicer."
    },
    {
      "index": 330,
      "start_time": 922150.0,
      "end_time": 924690.0,
      "text": "What I want to do is, in fact, something like this."
    },
    {
      "index": 331,
      "start_time": 924690.0,
      "end_time": 928720.0,
      "text": "I want to do 7 percentOf popcorn."
    },
    {
      "index": 332,
      "start_time": 928720.0,
      "end_time": 929662.0,
      "text": "That would be nice."
    },
    {
      "index": 333,
      "start_time": 929662.0,
      "end_time": 930870.0,
      "text": "And you can actually do that."
    },
    {
      "index": 334,
      "start_time": 930870.0,
      "end_time": 932420.0,
      "text": "You see that little wiggly there?"
    },
    {
      "index": 335,
      "start_time": 932420.0,
      "end_time": 933340.0,
      "text": "Squiggly?"
    },
    {
      "index": 336,
      "start_time": 933340.0,
      "end_time": 935090.0,
      "text": "Alt, Enter, add &#39;infix&#39;."
    },
    {
      "index": 337,
      "start_time": 935090.0,
      "end_time": 936050.0,
      "text": "There you go."
    },
    {
      "index": 338,
      "start_time": 936050.0,
      "end_time": 940840.0,
      "text": "OK so any extension function that has a single parameter"
    },
    {
      "index": 339,
      "start_time": 940840.0,
      "end_time": 942839.0,
      "text": "can be called an infix notation."
    },
    {
      "index": 340,
      "start_time": 942839.0,
      "end_time": 944380.0,
      "text": "And what I&#39;ve done is essentially add"
    },
    {
      "index": 341,
      "start_time": 944380.0,
      "end_time": 945512.0,
      "text": "the infix over there."
    },
    {
      "index": 342,
      "start_time": 945512.0,
      "end_time": 946970.0,
      "text": "And this is some of the things that"
    },
    {
      "index": 343,
      "start_time": 946970.0,
      "end_time": 950390.0,
      "text": "allow you know, with Kotlin, to kind of create the whole DSL"
    },
    {
      "index": 344,
      "start_time": 950390.0,
      "end_time": 952350.0,
      "text": "approach to things."
    },
    {
      "index": 345,
      "start_time": 952350.0,
      "end_time": 953050.0,
      "text": "Right."
    },
    {
      "index": 346,
      "start_time": 953050.0,
      "end_time": 957320.0,
      "text": "So one thing that I hated doing here is all of this BigDecimal."
    },
    {
      "index": 347,
      "start_time": 957320.0,
      "end_time": 959210.0,
      "text": "That&#39;s a pain."
    },
    {
      "index": 348,
      "start_time": 959210.0,
      "end_time": 962600.0,
      "text": "And in Kotlin, when you want to create a value of type long,"
    },
    {
      "index": 349,
      "start_time": 962600.0,
      "end_time": 965334.0,
      "text": "you can say long 100L, and that will be of type long."
    },
    {
      "index": 350,
      "start_time": 965334.0,
      "end_time": 966750.0,
      "text": "And it would be awesome if I could"
    },
    {
      "index": 351,
      "start_time": 966750.0,
      "end_time": 972940.0,
      "text": "do like, bd2 equals 100BD, but you can&#39;t, and we"
    },
    {
      "index": 352,
      "start_time": 972940.0,
      "end_time": 974050.0,
      "text": "don&#39;t have that built in."
    },
    {
      "index": 353,
      "start_time": 974050.0,
      "end_time": 976910.0,
      "text": "But what we do have in Kotlin is called extension properties."
    },
    {
      "index": 354,
      "start_time": 976910.0,
      "end_time": 979050.0,
      "text": "So they&#39;re exactly like extension functions,"
    },
    {
      "index": 355,
      "start_time": 979050.0,
      "end_time": 981750.0,
      "text": "except they extend with properties."
    },
    {
      "index": 356,
      "start_time": 981750.0,
      "end_time": 986950.0,
      "text": "So I could do something like .bd, right?"
    },
    {
      "index": 357,
      "start_time": 986950.0,
      "end_time": 990587.0,
      "text": "And now-- or let&#39;s, so now--"
    },
    {
      "index": 358,
      "start_time": 990587.0,
      "end_time": 993170.0,
      "text": "see, it even says, do you want to create an extension property"
    },
    {
      "index": 359,
      "start_time": 993170.0,
      "end_time": 994420.0,
      "text": "on type integer?"
    },
    {
      "index": 360,
      "start_time": 994420.0,
      "end_time": 995430.0,
      "text": "Yes."
    },
    {
      "index": 361,
      "start_time": 995430.0,
      "end_time": 999260.0,
      "text": "So this is going to return a BigDecimal."
    },
    {
      "index": 362,
      "start_time": 999260.0,
      "end_time": 1008330.0,
      "text": "And then here, I&#39;m going to do return BigDecimal, and this,"
    },
    {
      "index": 363,
      "start_time": 1008330.0,
      "end_time": 1009570.0,
      "text": "which is the instance."
    },
    {
      "index": 364,
      "start_time": 1009570.0,
      "end_time": 1011740.0,
      "text": "And I can, in fact, convert this to an expression"
    },
    {
      "index": 365,
      "start_time": 1011740.0,
      "end_time": 1013700.0,
      "text": "to make it easier."
    },
    {
      "index": 366,
      "start_time": 1013700.0,
      "end_time": 1014670.0,
      "text": "So there you go."
    },
    {
      "index": 367,
      "start_time": 1014670.0,
      "end_time": 1017330.0,
      "text": "Now I have 100.bd."
    },
    {
      "index": 368,
      "start_time": 1017330.0,
      "end_time": 1018930.0,
      "text": "So when I&#39;m passing that in, it looks"
    },
    {
      "index": 369,
      "start_time": 1018930.0,
      "end_time": 1023599.0,
      "text": "much nicer than BigDecimal, I could just do 100.bd."
    },
    {
      "index": 370,
      "start_time": 1023600.0,
      "end_time": 1024100.0,
      "text": "OK?"
    },
    {
      "index": 371,
      "start_time": 1030960.0,
      "end_time": 1033160.0,
      "text": "And one other thing around functions that you can do"
    },
    {
      "index": 372,
      "start_time": 1033160.0000000001,
      "end_time": 1036560.0000000001,
      "text": "is, there are certain operators that you can extend."
    },
    {
      "index": 373,
      "start_time": 1036560.0,
      "end_time": 1039141.0,
      "text": "So you can extend, for example, the plus operator."
    },
    {
      "index": 374,
      "start_time": 1039140.0000000001,
      "end_time": 1041598.0000000001,
      "text": "And what I&#39;m going to do is I&#39;m not going to type this out,"
    },
    {
      "index": 375,
      "start_time": 1041599.9999999999,
      "end_time": 1042974.9999999999,
      "text": "I&#39;ve just got a nice little thing"
    },
    {
      "index": 376,
      "start_time": 1042970.0,
      "end_time": 1044716.0,
      "text": "that has done that for me."
    },
    {
      "index": 377,
      "start_time": 1044720.0,
      "end_time": 1046760.0,
      "text": "See how fast I am at typing?"
    },
    {
      "index": 378,
      "start_time": 1046760.0,
      "end_time": 1049130.0,
      "text": "So what I&#39;ve essentially done is now override"
    },
    {
      "index": 379,
      "start_time": 1049130.0,
      "end_time": 1050890.0,
      "text": "the plus operator for money."
    },
    {
      "index": 380,
      "start_time": 1050890.0,
      "end_time": 1058960.0,
      "text": "So now I can say costs equals tickets plus popcorn, right."
    },
    {
      "index": 381,
      "start_time": 1058960.0,
      "end_time": 1061960.0,
      "text": "And that allows me to add to monetary amounts."
    },
    {
      "index": 382,
      "start_time": 1061960.0,
      "end_time": 1064410.0,
      "text": "OK, you could do that with plus, minus, multiply."
    },
    {
      "index": 383,
      "start_time": 1064410.0,
      "end_time": 1066820.0,
      "text": "A bunch of built-in conventions that you"
    },
    {
      "index": 384,
      "start_time": 1066820.0,
      "end_time": 1070970.0,
      "text": "can follow for certain operators that allow you to do that."
    },
    {
      "index": 385,
      "start_time": 1070970.0,
      "end_time": 1071690.0,
      "text": "OK."
    },
    {
      "index": 386,
      "start_time": 1071690.0,
      "end_time": 1074330.0,
      "text": "So we&#39;ve been creating a whole bunch of types here."
    },
    {
      "index": 387,
      "start_time": 1074330.0,
      "end_time": 1078140.0,
      "text": "And let me go ahead and delete all the stuff so we can focus."
    },
    {
      "index": 388,
      "start_time": 1078140.0,
      "end_time": 1079890.0,
      "text": "We&#39;ve been creating a bunch of types here."
    },
    {
      "index": 389,
      "start_time": 1079890.0,
      "end_time": 1082056.0,
      "text": "Notice that in any of these types that I&#39;ve created,"
    },
    {
      "index": 390,
      "start_time": 1082060.0,
      "end_time": 1085224.0,
      "text": "I&#39;ve never actually specified the type, and you can."
    },
    {
      "index": 391,
      "start_time": 1085220.0,
      "end_time": 1090700.0,
      "text": "So I can do, for instance, val train costs,"
    },
    {
      "index": 392,
      "start_time": 1090700.0,
      "end_time": 1094520.0,
      "text": "for example, train is of type Money"
    },
    {
      "index": 393,
      "start_time": 1094520.0,
      "end_time": 1098500.0,
      "text": "and then initialize it to some new value, right."
    },
    {
      "index": 394,
      "start_time": 1098500.0,
      "end_time": 1102360.0,
      "text": "100.bd, and then dollars."
    },
    {
      "index": 395,
      "start_time": 1102360.0,
      "end_time": 1105439.0,
      "text": "Now if I go ahead and do train=null,"
    },
    {
      "index": 396,
      "start_time": 1105440.0,
      "end_time": 1106731.0,
      "text": "it&#39;s going to give me an error."
    },
    {
      "index": 397,
      "start_time": 1106730.0,
      "end_time": 1108646.0,
      "text": "And it&#39;s going to give me actually two errors."
    },
    {
      "index": 398,
      "start_time": 1108650.0,
      "end_time": 1111194.0,
      "text": "One of them is because that&#39;s immutable variable."
    },
    {
      "index": 399,
      "start_time": 1111190.0,
      "end_time": 1112320.0,
      "text": "So I can fix that."
    },
    {
      "index": 400,
      "start_time": 1112320.0,
      "end_time": 1114180.0,
      "text": "I&#39;ve now made this mutable."
    },
    {
      "index": 401,
      "start_time": 1114180.0,
      "end_time": 1116210.0,
      "text": "You see that the IDE underlines it,"
    },
    {
      "index": 402,
      "start_time": 1116210.0,
      "end_time": 1119510.0,
      "text": "so it wants to point it out that this is really something"
    },
    {
      "index": 403,
      "start_time": 1119510.0,
      "end_time": 1120860.0,
      "text": "you&#39;re going to shy away from."
    },
    {
      "index": 404,
      "start_time": 1120860.0,
      "end_time": 1123150.0,
      "text": "We don&#39;t enforce immutability in Kotlin,"
    },
    {
      "index": 405,
      "start_time": 1123150.0,
      "end_time": 1124657.0,
      "text": "but we kind of do recommend it."
    },
    {
      "index": 406,
      "start_time": 1124660.0,
      "end_time": 1126243.0,
      "text": "Like all of the lists and all of these"
    },
    {
      "index": 407,
      "start_time": 1126240.0,
      "end_time": 1129470.0,
      "text": "things are immutable by default."
    },
    {
      "index": 408,
      "start_time": 1129470.0,
      "end_time": 1133380.0,
      "text": "So I can&#39;t assign null in Kotlin because Kotlin"
    },
    {
      "index": 409,
      "start_time": 1133380.0,
      "end_time": 1135460.0,
      "text": "tries to get rid of the null pointer exception"
    },
    {
      "index": 410,
      "start_time": 1135460.0,
      "end_time": 1138730.0,
      "text": "by saying that types aren&#39;t nullible by default, right."
    },
    {
      "index": 411,
      "start_time": 1138730.0,
      "end_time": 1140390.0,
      "text": "But there are times when you want"
    },
    {
      "index": 412,
      "start_time": 1140390.0,
      "end_time": 1142990.0,
      "text": "to have a type that is nullable for whatever reason,"
    },
    {
      "index": 413,
      "start_time": 1142990.0,
      "end_time": 1144230.0,
      "text": "you&#39;re bored."
    },
    {
      "index": 414,
      "start_time": 1144230.0,
      "end_time": 1147240.0,
      "text": "And you can add a question mark, and then that"
    },
    {
      "index": 415,
      "start_time": 1147240.0,
      "end_time": 1150965.0,
      "text": "will give you the ability to assign null to that type."
    },
    {
      "index": 416,
      "start_time": 1150960.0,
      "end_time": 1152835.0,
      "text": "Now normally when you&#39;re working with Kotlin,"
    },
    {
      "index": 417,
      "start_time": 1152840.0,
      "end_time": 1153900.0,
      "text": "you probably don&#39;t want to do this."
    },
    {
      "index": 418,
      "start_time": 1153900.0,
      "end_time": 1155858.0,
      "text": "You probably don&#39;t want to have nullable types,"
    },
    {
      "index": 419,
      "start_time": 1155860.0,
      "end_time": 1161612.0,
      "text": "but since we&#39;re interopping with Java, Java can be null."
    },
    {
      "index": 420,
      "start_time": 1161610.0,
      "end_time": 1165480.0,
      "text": "So if I create a function here that is, for instance,"
    },
    {
      "index": 421,
      "start_time": 1165480.0,
      "end_time": 1172150.0,
      "text": "fun javaMoney, and that takes money of type JavaMoney"
    },
    {
      "index": 422,
      "start_time": 1172150.0,
      "end_time": 1174100.0,
      "text": "and does whatever with it."
    },
    {
      "index": 423,
      "start_time": 1174100.0,
      "end_time": 1184020.0,
      "text": "So let&#39;s say I do println money.amount is valid."
    },
    {
      "index": 424,
      "start_time": 1184020.0,
      "end_time": 1187060.0,
      "text": "So this can be null."
    },
    {
      "index": 425,
      "start_time": 1187060.0,
      "end_time": 1189252.0,
      "text": "It could, if it&#39;s called by an instance"
    },
    {
      "index": 426,
      "start_time": 1189250.0,
      "end_time": 1191208.0,
      "text": "that a function that, for example, is returning"
    },
    {
      "index": 427,
      "start_time": 1191210.0,
      "end_time": 1192550.0,
      "text": "this type, it could be null."
    },
    {
      "index": 428,
      "start_time": 1192550.0,
      "end_time": 1195370.0,
      "text": "And you can indicate that by adding the question mark."
    },
    {
      "index": 429,
      "start_time": 1195370.0,
      "end_time": 1198060.0,
      "text": "When you do that, you can see that the IDE"
    },
    {
      "index": 430,
      "start_time": 1198060.0,
      "end_time": 1199790.0,
      "text": "is going to give you error."
    },
    {
      "index": 431,
      "start_time": 1199790.0,
      "end_time": 1202570.0,
      "text": "It says only safe operators, or the double exclamation mark"
    },
    {
      "index": 432,
      "start_time": 1202570.0,
      "end_time": 1204260.0,
      "text": "are valid here, because it&#39;s essentially"
    },
    {
      "index": 433,
      "start_time": 1204260.0,
      "end_time": 1206718.0,
      "text": "saying you&#39;re going to run into a null reference exception."
    },
    {
      "index": 434,
      "start_time": 1206720.0,
      "end_time": 1208592.0,
      "text": "So there&#39;s two ways you can solve this."
    },
    {
      "index": 435,
      "start_time": 1208590.0,
      "end_time": 1212200.0,
      "text": "First of all, you can say, for example, money, not null."
    },
    {
      "index": 436,
      "start_time": 1212200.0,
      "end_time": 1217840.0,
      "text": "And then do a if not null, then go ahead and operate with it."
    },
    {
      "index": 437,
      "start_time": 1217840.0,
      "end_time": 1220410.0,
      "text": "Put this one upstairs in there."
    },
    {
      "index": 438,
      "start_time": 1220410.0,
      "end_time": 1221340.0,
      "text": "OK."
    },
    {
      "index": 439,
      "start_time": 1221340.0,
      "end_time": 1222460.0,
      "text": "That&#39;s one way."
    },
    {
      "index": 440,
      "start_time": 1222460.0,
      "end_time": 1226980.0,
      "text": "Or the shorter way is just to use the safe operator or Elvis"
    },
    {
      "index": 441,
      "start_time": 1226980.0,
      "end_time": 1228740.0,
      "text": "operator, which is over here."
    },
    {
      "index": 442,
      "start_time": 1228740.0,
      "end_time": 1233330.0,
      "text": "So now we just say if money is not null, then do something."
    },
    {
      "index": 443,
      "start_time": 1233330.0,
      "end_time": 1236270.0,
      "text": "Now if you want to have fun, you can also do that."
    },
    {
      "index": 444,
      "start_time": 1236270.0,
      "end_time": 1238490.0,
      "text": "And that says, I know it&#39;s null, but I want"
    },
    {
      "index": 445,
      "start_time": 1238490.0,
      "end_time": 1239990.0,
      "text": "to shoot myself in the foot."
    },
    {
      "index": 446,
      "start_time": 1239990.0,
      "end_time": 1241505.0,
      "text": "OK?"
    },
    {
      "index": 447,
      "start_time": 1241510.0,
      "end_time": 1243135.0,
      "text": "And you&#39;ve got to be careful with that,"
    },
    {
      "index": 448,
      "start_time": 1243130.0,
      "end_time": 1245480.0,
      "text": "because a lot of times when people start with Kotlin,"
    },
    {
      "index": 449,
      "start_time": 1245480.0,
      "end_time": 1247876.0,
      "text": "they get all of this little squigglies over here,"
    },
    {
      "index": 450,
      "start_time": 1247880.0,
      "end_time": 1249254.0,
      "text": "and they&#39;re like, well I actually"
    },
    {
      "index": 451,
      "start_time": 1249250.0,
      "end_time": 1250810.0,
      "text": "don&#39;t know if it&#39;s going to be null because I really"
    },
    {
      "index": 452,
      "start_time": 1250810.0,
      "end_time": 1252397.0,
      "text": "want it to not being null."
    },
    {
      "index": 453,
      "start_time": 1252400.0,
      "end_time": 1254733.0,
      "text": "So I&#39;m not going to handle the case where it&#39;s not null,"
    },
    {
      "index": 454,
      "start_time": 1254730.0,
      "end_time": 1255894.0,
      "text": "so I&#39;ll just do that."
    },
    {
      "index": 455,
      "start_time": 1255890.0,
      "end_time": 1258306.0,
      "text": "And then they run the app and they&#39;re like, wait a minute,"
    },
    {
      "index": 456,
      "start_time": 1258310.0,
      "end_time": 1260940.0,
      "text": "you set Kotlin got rid of null reference exceptions."
    },
    {
      "index": 457,
      "start_time": 1260940.0,
      "end_time": 1261440.0,
      "text": "Yes."
    },
    {
      "index": 458,
      "start_time": 1264210.0,
      "end_time": 1266380.0,
      "text": "OK."
    },
    {
      "index": 459,
      "start_time": 1266380.0,
      "end_time": 1267030.0,
      "text": "What else."
    },
    {
      "index": 460,
      "start_time": 1267030.0,
      "end_time": 1267610.0,
      "text": "Right."
    },
    {
      "index": 461,
      "start_time": 1267610.0,
      "end_time": 1269270.0,
      "text": "So let&#39;s switch to some other stuff,"
    },
    {
      "index": 462,
      "start_time": 1269270.0,
      "end_time": 1271176.0,
      "text": "like higher order functions."
    },
    {
      "index": 463,
      "start_time": 1271180.0,
      "end_time": 1273554.0,
      "text": "Now you&#39;re all familiar with a high order function, which"
    },
    {
      "index": 464,
      "start_time": 1273550.0,
      "end_time": 1275810.0,
      "text": "is basically a function that takes a function"
    },
    {
      "index": 465,
      "start_time": 1275810.0,
      "end_time": 1278420.0,
      "text": "or returns a function, and we have those in Kotlin."
    },
    {
      "index": 466,
      "start_time": 1278420.0,
      "end_time": 1282550.0,
      "text": "So we can say findEmails users List of User,"
    },
    {
      "index": 467,
      "start_time": 1282550.0,
      "end_time": 1285150.0,
      "text": "and then I&#39;ll create a new function, which is a predicate."
    },
    {
      "index": 468,
      "start_time": 1285150.0,
      "end_time": 1287040.0,
      "text": "So I&#39;m passing in a function here, right,"
    },
    {
      "index": 469,
      "start_time": 1287040.0,
      "end_time": 1290650.0,
      "text": "a function that takes a string and returns a Boolean."
    },
    {
      "index": 470,
      "start_time": 1290650.0,
      "end_time": 1291670.0,
      "text": "OK?"
    },
    {
      "index": 471,
      "start_time": 1291670.0,
      "end_time": 1294971.0,
      "text": "And then this probably is going to return a list of users."
    },
    {
      "index": 472,
      "start_time": 1294970.0,
      "end_time": 1296469.0,
      "text": "So essentially what I&#39;m doing is I&#39;m"
    },
    {
      "index": 473,
      "start_time": 1296470.0,
      "end_time": 1298050.0,
      "text": "filtering on a list of users."
    },
    {
      "index": 474,
      "start_time": 1298050.0,
      "end_time": 1299410.0,
      "text": "Right."
    },
    {
      "index": 475,
      "start_time": 1299410.0,
      "end_time": 1303050.0,
      "text": "So I&#39;ll do this later."
    },
    {
      "index": 476,
      "start_time": 1303050.0,
      "end_time": 1305670.0,
      "text": "To do later."
    },
    {
      "index": 477,
      "start_time": 1305670.0,
      "end_time": 1306810.0,
      "text": "OK."
    },
    {
      "index": 478,
      "start_time": 1306810.0,
      "end_time": 1308450.0,
      "text": "This to do, by the way, is built in."
    },
    {
      "index": 479,
      "start_time": 1308450.0,
      "end_time": 1311180.0,
      "text": "You can use it instead of not implemented exception--"
    },
    {
      "index": 480,
      "start_time": 1311180.0,
      "end_time": 1312241.0,
      "text": "non implemented error."
    },
    {
      "index": 481,
      "start_time": 1312240.0,
      "end_time": 1314489.0,
      "text": "And it does a additional thing that we won&#39;t get into,"
    },
    {
      "index": 482,
      "start_time": 1314490.0,
      "end_time": 1318020.0,
      "text": "but nothing is actually very nice in Kotlin,"
    },
    {
      "index": 483,
      "start_time": 1318020.0,
      "end_time": 1319235.0,
      "text": "but we won&#39;t cover that now."
    },
    {
      "index": 484,
      "start_time": 1321910.0,
      "end_time": 1323300.0,
      "text": "It&#39;s nothing to worry about."
    },
    {
      "index": 485,
      "start_time": 1326390.0,
      "end_time": 1327280.0,
      "text": "I just made that up."
    },
    {
      "index": 486,
      "start_time": 1327280.0,
      "end_time": 1328620.0,
      "text": "OK."
    },
    {
      "index": 487,
      "start_time": 1328620.0,
      "end_time": 1329970.0,
      "text": "OK, thank you."
    },
    {
      "index": 488,
      "start_time": 1329970.0,
      "end_time": 1333770.0,
      "text": "So now how do I use this?"
    },
    {
      "index": 489,
      "start_time": 1333770.0,
      "end_time": 1337490.0,
      "text": "I can do findEmails, right, and I&#39;ll say--"
    },
    {
      "index": 490,
      "start_time": 1337490.0,
      "end_time": 1339970.0,
      "text": "I actually have a user, let&#39;s create some users here."
    },
    {
      "index": 491,
      "start_time": 1339970.0,
      "end_time": 1342060.0,
      "text": "So usersFromJSONFile."
    },
    {
      "index": 492,
      "start_time": 1342060.0,
      "end_time": 1344640.0,
      "text": "And I have some uses over here, so users.json."
    },
    {
      "index": 493,
      "start_time": 1344640.0,
      "end_time": 1348350.0,
      "text": "So this is actually a function that I have ready,"
    },
    {
      "index": 494,
      "start_time": 1348350.0,
      "end_time": 1351570.0,
      "text": "which is basically using json to read some users from a file."
    },
    {
      "index": 495,
      "start_time": 1351570.0,
      "end_time": 1352946.0,
      "text": "And this is a typical data classs"
    },
    {
      "index": 496,
      "start_time": 1352950.0,
      "end_time": 1354783.0,
      "text": "that you&#39;ve already seen, the only new thing"
    },
    {
      "index": 497,
      "start_time": 1354780.0,
      "end_time": 1359022.0,
      "text": "here is that this also got an enum class with a property"
    },
    {
      "index": 498,
      "start_time": 1359020.0,
      "end_time": 1359519.0,
      "text": "Role."
    },
    {
      "index": 499,
      "start_time": 1359520.0,
      "end_time": 1360770.0,
      "text": "OK?"
    },
    {
      "index": 500,
      "start_time": 1360770.0,
      "end_time": 1363600.0,
      "text": "So now I can do like users, and then I&#39;ll"
    },
    {
      "index": 501,
      "start_time": 1363600.0,
      "end_time": 1365120.0,
      "text": "pass in that function."
    },
    {
      "index": 502,
      "start_time": 1365120.0,
      "end_time": 1366920.0,
      "text": "Now I can pass in the name function"
    },
    {
      "index": 503,
      "start_time": 1366920.0,
      "end_time": 1368760.0,
      "text": "by using the column column reference,"
    },
    {
      "index": 504,
      "start_time": 1368760.0,
      "end_time": 1370380.0,
      "text": "or a can pass in a lambda."
    },
    {
      "index": 505,
      "start_time": 1370380.0,
      "end_time": 1372690.0,
      "text": "And in Kotlin, lambda follows this syntax."
    },
    {
      "index": 506,
      "start_time": 1372690.0,
      "end_time": 1377510.0,
      "text": "You pass in the parameter name, and then you say, for example,"
    },
    {
      "index": 507,
      "start_time": 1377510.0,
      "end_time": 1381090.0,
      "text": "the parameter name ends with right .com."
    },
    {
      "index": 508,
      "start_time": 1381090.0,
      "end_time": 1384880.0,
      "text": "So I&#39;m getting a list of users that end with .com."
    },
    {
      "index": 509,
      "start_time": 1384880.0,
      "end_time": 1388880.0,
      "text": "Now when you have a single parameter in Kotlin,"
    },
    {
      "index": 510,
      "start_time": 1388880.0,
      "end_time": 1392180.0,
      "text": "you can actually omit having to explicitly mention"
    },
    {
      "index": 511,
      "start_time": 1392180.0,
      "end_time": 1394980.0,
      "text": "it and replace it with it."
    },
    {
      "index": 512,
      "start_time": 1394980.0,
      "end_time": 1397277.0,
      "text": "So similar to Groovy, you can just use it."
    },
    {
      "index": 513,
      "start_time": 1397280.0,
      "end_time": 1399113.0,
      "text": "The other thing that you can doing in Kotlin"
    },
    {
      "index": 514,
      "start_time": 1399110.0,
      "end_time": 1402710.0,
      "text": "is when the last parameter to a function is another function,"
    },
    {
      "index": 515,
      "start_time": 1402710.0,
      "end_time": 1408220.0,
      "text": "you can actually not include it in the brackets."
    },
    {
      "index": 516,
      "start_time": 1408220.0,
      "end_time": 1411615.0,
      "text": "So it feels a little bit like it&#39;s outside."
    },
    {
      "index": 517,
      "start_time": 1411610.0,
      "end_time": 1413735.0,
      "text": "And this is, again, one of the characteristics that"
    },
    {
      "index": 518,
      "start_time": 1413740.0,
      "end_time": 1416220.0,
      "text": "allow us to create nice DSLs, and you can even"
    },
    {
      "index": 519,
      "start_time": 1416220.0,
      "end_time": 1417770.0,
      "text": "do this like multi-line."
    },
    {
      "index": 520,
      "start_time": 1417770.0,
      "end_time": 1420140.0,
      "text": "So if you look at findEmails now, in a sense"
    },
    {
      "index": 521,
      "start_time": 1420140.0,
      "end_time": 1423900.0,
      "text": "it could actually feel like it&#39;s part of the language,"
    },
    {
      "index": 522,
      "start_time": 1423900.0,
      "end_time": 1425620.0,
      "text": "but it isn&#39;t, it&#39;s actually a function."
    },
    {
      "index": 523,
      "start_time": 1425620.0,
      "end_time": 1431080.0,
      "text": "And when we implemented aasynchronous programming with"
    },
    {
      "index": 524,
      "start_time": 1431080.0,
      "end_time": 1433630.0,
      "text": "coroutines, we didn&#39;t like-- you know,"
    },
    {
      "index": 525,
      "start_time": 1433630.0,
      "end_time": 1436000.0,
      "text": "if you&#39;re familiar with C#, C# does their sync or wait,"
    },
    {
      "index": 526,
      "start_time": 1436000.0,
      "end_time": 1437560.0,
      "text": "there are keywords in the language."
    },
    {
      "index": 527,
      "start_time": 1437560.0,
      "end_time": 1438935.0,
      "text": "In Kotlin, there are not, they&#39;re"
    },
    {
      "index": 528,
      "start_time": 1438940.0,
      "end_time": 1440665.0,
      "text": "essentially just functions."
    },
    {
      "index": 529,
      "start_time": 1440660.0,
      "end_time": 1442150.0,
      "text": "So that gives you the flexibility"
    },
    {
      "index": 530,
      "start_time": 1442150.0,
      "end_time": 1446170.0,
      "text": "of deciding how you want to do different things."
    },
    {
      "index": 531,
      "start_time": 1446170.0,
      "end_time": 1448140.0,
      "text": "Now you don&#39;t have to do all of these things,"
    },
    {
      "index": 532,
      "start_time": 1448140.0,
      "end_time": 1449848.0,
      "text": "because all of these things are built-in."
    },
    {
      "index": 533,
      "start_time": 1449850.0,
      "end_time": 1452222.0,
      "text": "So, for example, if I say dotComUsers,"
    },
    {
      "index": 534,
      "start_time": 1452220.0,
      "end_time": 1456480.0,
      "text": "I say users.filter, and you can see that as I complete this,"
    },
    {
      "index": 535,
      "start_time": 1456480.0,
      "end_time": 1459120.0,
      "text": "it actually opts for the version of including out"
    },
    {
      "index": 536,
      "start_time": 1459120.0,
      "end_time": 1460210.0,
      "text": "of the parameter."
    },
    {
      "index": 537,
      "start_time": 1460210.0,
      "end_time": 1466880.0,
      "text": "So I can say the email.endsWith .com."
    },
    {
      "index": 538,
      "start_time": 1466880.0,
      "end_time": 1472340.0,
      "text": "And then I can go and sort by it.id."
    },
    {
      "index": 539,
      "start_time": 1472340.0,
      "end_time": 1475030.0,
      "text": "And then let&#39;s go ahead and do, for example,"
    },
    {
      "index": 540,
      "start_time": 1475030.0,
      "end_time": 1484520.0,
      "text": "map that to a pair of it.email and it.username."
    },
    {
      "index": 541,
      "start_time": 1484520.0,
      "end_time": 1485057.0,
      "text": "OK?"
    },
    {
      "index": 542,
      "start_time": 1485060.0,
      "end_time": 1486643.0,
      "text": "So all of these functions are actually"
    },
    {
      "index": 543,
      "start_time": 1486640.0,
      "end_time": 1488266.0,
      "text": "built in in that small standard library"
    },
    {
      "index": 544,
      "start_time": 1488270.0,
      "end_time": 1490644.0,
      "text": "that ships, that you&#39;re not going to problems on Android,"
    },
    {
      "index": 545,
      "start_time": 1490640.0,
      "end_time": 1491310.0,
      "text": "it&#39;s very small."
    },
    {
      "index": 546,
      "start_time": 1491310.0,
      "end_time": 1494360.0,
      "text": "And they&#39;re all in, essentially, extension functions"
    },
    {
      "index": 547,
      "start_time": 1494360.0,
      "end_time": 1498180.0,
      "text": "on top of collections, generic collections."
    },
    {
      "index": 548,
      "start_time": 1498180.0,
      "end_time": 1501510.0,
      "text": "So you have all of those functional things that"
    },
    {
      "index": 549,
      "start_time": 1501510.0,
      "end_time": 1505470.0,
      "text": "are very in fashion these days."
    },
    {
      "index": 550,
      "start_time": 1505470.0,
      "end_time": 1510380.0,
      "text": "And so this obviously gives you a pair,"
    },
    {
      "index": 551,
      "start_time": 1510380.0,
      "end_time": 1512960.0,
      "text": "and in fact, you can do this even nicer, if instead"
    },
    {
      "index": 552,
      "start_time": 1512960.0,
      "end_time": 1517760.0,
      "text": "of doing pair, it, to."
    },
    {
      "index": 553,
      "start_time": 1517760.0,
      "end_time": 1519730.0,
      "text": "So a map, email, to username."
    },
    {
      "index": 554,
      "start_time": 1519730.0,
      "end_time": 1520800.0,
      "text": "And guess what it is?"
    },
    {
      "index": 555,
      "start_time": 1520800.0,
      "end_time": 1525460.0,
      "text": "It&#39;s just an infix function that creates a pair."
    },
    {
      "index": 556,
      "start_time": 1525460.0,
      "end_time": 1527102.0,
      "text": "OK.?"
    },
    {
      "index": 557,
      "start_time": 1527100.0,
      "end_time": 1529058.0,
      "text": "Now sometimes I don&#39;t go through the whole map."
    },
    {
      "index": 558,
      "start_time": 1529060.0,
      "end_time": 1533060.0,
      "text": "I just want to, for example, say get back a single element."
    },
    {
      "index": 559,
      "start_time": 1533060.0,
      "end_time": 1537690.0,
      "text": "And what you can also do is destructure classes,"
    },
    {
      "index": 560,
      "start_time": 1537690.0,
      "end_time": 1539470.0,
      "text": "data classes in Kotlin."
    },
    {
      "index": 561,
      "start_time": 1539470.0,
      "end_time": 1544030.0,
      "text": "So I could do something like id, username, and email."
    },
    {
      "index": 562,
      "start_time": 1544030.0,
      "end_time": 1547670.0,
      "text": "OK and then I can just use the ID."
    },
    {
      "index": 563,
      "start_time": 1547670.0,
      "end_time": 1550000.0,
      "text": "And this is great, but then the IDE complains and says,"
    },
    {
      "index": 564,
      "start_time": 1550000.0,
      "end_time": 1551557.0,
      "text": "well this variable is never used."
    },
    {
      "index": 565,
      "start_time": 1551560.0,
      "end_time": 1553143.0,
      "text": "In that case, you can actually replace"
    },
    {
      "index": 566,
      "start_time": 1553140.0,
      "end_time": 1556880.0,
      "text": "that with an underscore."
    },
    {
      "index": 567,
      "start_time": 1556880.0,
      "end_time": 1558180.0,
      "text": "So there you go."
    },
    {
      "index": 568,
      "start_time": 1558180.0,
      "end_time": 1560015.0,
      "text": "And you can destructure the values you want."
    },
    {
      "index": 569,
      "start_time": 1560020.0,
      "end_time": 1562645.0,
      "text": "Anything that you don&#39;t want to use, replace with an underscore"
    },
    {
      "index": 570,
      "start_time": 1562640.0,
      "end_time": 1564690.0,
      "text": "and you&#39;re good to go."
    },
    {
      "index": 571,
      "start_time": 1564690.0,
      "end_time": 1565900.0,
      "text": "Right."
    },
    {
      "index": 572,
      "start_time": 1565900.0,
      "end_time": 1567920.0,
      "text": "So what else can I show you?"
    },
    {
      "index": 573,
      "start_time": 1567920.0,
      "end_time": 1568640.0,
      "text": "OK."
    },
    {
      "index": 574,
      "start_time": 1568640.0,
      "end_time": 1571170.0,
      "text": "So I&#39;ve got some other code here."
    },
    {
      "index": 575,
      "start_time": 1571170.0,
      "end_time": 1573850.0,
      "text": "If you&#39;re familiar with the concept of algebraic data"
    },
    {
      "index": 576,
      "start_time": 1573850.0,
      "end_time": 1576872.0,
      "text": "types, it&#39;s essentially a type that"
    },
    {
      "index": 577,
      "start_time": 1576870.0,
      "end_time": 1579328.0,
      "text": "can be of one type or another, like for instance a Boolean."
    },
    {
      "index": 578,
      "start_time": 1579330.0,
      "end_time": 1581710.0,
      "text": "Now in Kotlin, the way that we do that is with coclasses."
    },
    {
      "index": 579,
      "start_time": 1581710.0,
      "end_time": 1583250.0,
      "text": "But before I get into that, let me"
    },
    {
      "index": 580,
      "start_time": 1583250.0,
      "end_time": 1585190.0,
      "text": "go ahead and do an open here."
    },
    {
      "index": 581,
      "start_time": 1585190.0,
      "end_time": 1588470.0,
      "text": "Notice the first thing here, that user result"
    },
    {
      "index": 582,
      "start_time": 1588470.0,
      "end_time": 1589730.0,
      "text": "is giving me an error."
    },
    {
      "index": 583,
      "start_time": 1589730.0,
      "end_time": 1592320.0,
      "text": "Because by default in Kotlin, you cannot inherit from"
    },
    {
      "index": 584,
      "start_time": 1592320.0,
      "end_time": 1592940.0,
      "text": "classes."
    },
    {
      "index": 585,
      "start_time": 1592940.0,
      "end_time": 1594851.0,
      "text": "So all classes are essentially final."
    },
    {
      "index": 586,
      "start_time": 1594850.0,
      "end_time": 1596349.0,
      "text": "If you want to inherit from classes,"
    },
    {
      "index": 587,
      "start_time": 1596350.0,
      "end_time": 1600870.0,
      "text": "you have to use the open modifier, right?"
    },
    {
      "index": 588,
      "start_time": 1600870.0,
      "end_time": 1603650.0,
      "text": "Now I&#39;ve used the sealed, and the sealed"
    },
    {
      "index": 589,
      "start_time": 1603650.0,
      "end_time": 1606010.0,
      "text": "is essentially saying that this is the hierarchy"
    },
    {
      "index": 590,
      "start_time": 1606010.0,
      "end_time": 1608510.0,
      "text": "that user result has."
    },
    {
      "index": 591,
      "start_time": 1608510.0,
      "end_time": 1610540.0,
      "text": "Like, there&#39;s not going to be any other class"
    },
    {
      "index": 592,
      "start_time": 1610540.0,
      "end_time": 1614210.0,
      "text": "anywhere that is going to inherit from user result."
    },
    {
      "index": 593,
      "start_time": 1614210.0,
      "end_time": 1616360.0,
      "text": "Everything that&#39;s going to inherit from user result"
    },
    {
      "index": 594,
      "start_time": 1616360.0,
      "end_time": 1619950.0,
      "text": "has to be in the same file, or you can make these, of course,"
    },
    {
      "index": 595,
      "start_time": 1619950.0,
      "end_time": 1621000.0,
      "text": "subclasses."
    },
    {
      "index": 596,
      "start_time": 1621000.0,
      "end_time": 1626070.0,
      "text": "So I could move this up there and this would be a subclass,"
    },
    {
      "index": 597,
      "start_time": 1626070.0,
      "end_time": 1630000.0,
      "text": "but then I would have to prefix it with user result."
    },
    {
      "index": 598,
      "start_time": 1630000.0,
      "end_time": 1630860.0,
      "text": "OK."
    },
    {
      "index": 599,
      "start_time": 1630860.0,
      "end_time": 1636830.0,
      "text": "Now I&#39;ve just created it as a class outside,"
    },
    {
      "index": 600,
      "start_time": 1636830.0,
      "end_time": 1640320.0,
      "text": "So why would I want to do this?"
    },
    {
      "index": 601,
      "start_time": 1640320.0,
      "end_time": 1641452.0,
      "text": "Because it looks good."
    },
    {
      "index": 602,
      "start_time": 1641450.0,
      "end_time": 1642440.0,
      "text": "No."
    },
    {
      "index": 603,
      "start_time": 1642440.0,
      "end_time": 1644398.0,
      "text": "Well, this is actually good because when you&#39;re"
    },
    {
      "index": 604,
      "start_time": 1644400.0,
      "end_time": 1647940.0,
      "text": "doing some things, it&#39;s often like your invoking a function"
    },
    {
      "index": 605,
      "start_time": 1647940.0,
      "end_time": 1650110.0,
      "text": "and you&#39;re like, OK, well if it&#39;s successful,"
    },
    {
      "index": 606,
      "start_time": 1650110.0,
      "end_time": 1651300.0,
      "text": "I want it to return a value."
    },
    {
      "index": 607,
      "start_time": 1651300.0,
      "end_time": 1653320.0,
      "text": "If it&#39;s null, I&#39;m going to pass in a message."
    },
    {
      "index": 608,
      "start_time": 1653320.0,
      "end_time": 1656530.0,
      "text": "And then you get this type that contains the values that you"
    },
    {
      "index": 609,
      "start_time": 1656530.0,
      "end_time": 1658094.0,
      "text": "want to return when it&#39;s successful,"
    },
    {
      "index": 610,
      "start_time": 1658090.0,
      "end_time": 1660506.0,
      "text": "it contains the types that you want to return when there&#39;s"
    },
    {
      "index": 611,
      "start_time": 1660510.0,
      "end_time": 1662343.0,
      "text": "a message, and then you&#39;ve got to figure out"
    },
    {
      "index": 612,
      "start_time": 1662340.0,
      "end_time": 1665737.0,
      "text": "the semantics of which properties are applied"
    },
    {
      "index": 613,
      "start_time": 1665740.0,
      "end_time": 1668050.0,
      "text": "to an error situation, which properties are applied"
    },
    {
      "index": 614,
      "start_time": 1668050.0,
      "end_time": 1671832.0,
      "text": "to non-error situation, or you can just throw an exception."
    },
    {
      "index": 615,
      "start_time": 1671830.0,
      "end_time": 1673538.0,
      "text": "In this case, you can use a function that"
    },
    {
      "index": 616,
      "start_time": 1673540.0,
      "end_time": 1674960.0,
      "text": "basically returns two types."
    },
    {
      "index": 617,
      "start_time": 1674960.0,
      "end_time": 1678070.0,
      "text": "And then based on the result, do different things."
    },
    {
      "index": 618,
      "start_time": 1678070.0,
      "end_time": 1681460.0,
      "text": "So here I say, for instance, when--"
    },
    {
      "index": 619,
      "start_time": 1681460.0,
      "end_time": 1688500.0,
      "text": "let&#39;s create an instant val, result equals userresult--"
    },
    {
      "index": 620,
      "start_time": 1688500.0,
      "end_time": 1690830.0,
      "text": "sorry, retrieveusers."
    },
    {
      "index": 621,
      "start_time": 1690830.0,
      "end_time": 1697490.0,
      "text": "So now I can do when result is success,"
    },
    {
      "index": 622,
      "start_time": 1697490.0,
      "end_time": 1699880.0,
      "text": "then we&#39;re going to do, for instance, well we&#39;re"
    },
    {
      "index": 623,
      "start_time": 1699880.0,
      "end_time": 1701255.0,
      "text": "going to get the result, and then"
    },
    {
      "index": 624,
      "start_time": 1701260.0,
      "end_time": 1711295.0,
      "text": "we&#39;re going to do users forEach println the name."
    },
    {
      "index": 625,
      "start_time": 1711290.0,
      "end_time": 1713120.0,
      "text": "OK?"
    },
    {
      "index": 626,
      "start_time": 1713120.0,
      "end_time": 1715320.0,
      "text": "username."
    },
    {
      "index": 627,
      "start_time": 1715320.0,
      "end_time": 1719550.0,
      "text": "And then we&#39;re going to do a failure."
    },
    {
      "index": 628,
      "start_time": 1719550.0,
      "end_time": 1724370.0,
      "text": "Result println result.message."
    },
    {
      "index": 629,
      "start_time": 1724370.0,
      "end_time": 1726090.0,
      "text": "OK?"
    },
    {
      "index": 630,
      "start_time": 1726090.0,
      "end_time": 1729390.0,
      "text": "So now based on the result, based"
    },
    {
      "index": 631,
      "start_time": 1729390.0,
      "end_time": 1732570.0,
      "text": "on the type that is returned to me, I can do different things."
    },
    {
      "index": 632,
      "start_time": 1732570.0,
      "end_time": 1735290.0,
      "text": "I notice one thing over here, that this has gone green."
    },
    {
      "index": 633,
      "start_time": 1735290.0,
      "end_time": 1736560.0,
      "text": "I don&#39;t know if you see it on the big screen,"
    },
    {
      "index": 634,
      "start_time": 1736560.0,
      "end_time": 1737680.0,
      "text": "but this has gone green."
    },
    {
      "index": 635,
      "start_time": 1737680.0,
      "end_time": 1738960.0,
      "text": "And this is a Smart cast."
    },
    {
      "index": 636,
      "start_time": 1738960.0,
      "end_time": 1740918.0,
      "text": "So that&#39;s another thing that we have in Kotlin,"
    },
    {
      "index": 637,
      "start_time": 1740920.0,
      "end_time": 1744404.0,
      "text": "and you saw that when I was doing the null check,"
    },
    {
      "index": 638,
      "start_time": 1744400.0,
      "end_time": 1746858.0,
      "text": "that is said this is not null, because it is Smart casting."
    },
    {
      "index": 639,
      "start_time": 1746860.0,
      "end_time": 1750010.0,
      "text": "So you don&#39;t have to explicitly come over here again and say,"
    },
    {
      "index": 640,
      "start_time": 1750010.0,
      "end_time": 1754480.0,
      "text": "oh, I know that this is of type success, let me go ahead"
    },
    {
      "index": 641,
      "start_time": 1754480.0,
      "end_time": 1757650.0,
      "text": "and cast this to type success, to then access the property."
    },
    {
      "index": 642,
      "start_time": 1757650.0,
      "end_time": 1759510.0,
      "text": "The compiler will do that for you, that&#39;s"
    },
    {
      "index": 643,
      "start_time": 1759510.0,
      "end_time": 1762260.0,
      "text": "what the smart casting is."
    },
    {
      "index": 644,
      "start_time": 1762260.0,
      "end_time": 1763170.0,
      "text": "Right."
    },
    {
      "index": 645,
      "start_time": 1763170.0,
      "end_time": 1765790.0,
      "text": "And last but not least, before hand it off to Andrey"
    },
    {
      "index": 646,
      "start_time": 1765790.0,
      "end_time": 1768510.0,
      "text": "quickly just mention, also, that a lot of the things you&#39;ve"
    },
    {
      "index": 647,
      "start_time": 1768510.0,
      "end_time": 1771490.0,
      "text": "been seeing with the filter map, all of those things,"
    },
    {
      "index": 648,
      "start_time": 1771490.0,
      "end_time": 1776700.0,
      "text": "those are essentially eager evaluation."
    },
    {
      "index": 649,
      "start_time": 1776700.0,
      "end_time": 1779470.0,
      "text": "But we also have the ability to do lazy evaluation."
    },
    {
      "index": 650,
      "start_time": 1779470.0,
      "end_time": 1783250.0,
      "text": "So I can do val, for example, sorry, generateSequence,"
    },
    {
      "index": 651,
      "start_time": 1783250.0,
      "end_time": 1786320.0,
      "text": "and then have something, for instance, 1."
    },
    {
      "index": 652,
      "start_time": 1786320.0,
      "end_time": 1797280.0,
      "text": "And then here, we&#39;ll do it times 10, and then we&#39;ll do values."
    },
    {
      "index": 653,
      "start_time": 1797280.0,
      "end_time": 1807740.0,
      "text": "Now I&#39;ll say values.take(10), and then forEach println it."
    },
    {
      "index": 654,
      "start_time": 1807740.0,
      "end_time": 1810220.0,
      "text": "Now this is essentially creating a sequence,"
    },
    {
      "index": 655,
      "start_time": 1810220.0,
      "end_time": 1811529.0,
      "text": "a generator that is infinite."
    },
    {
      "index": 656,
      "start_time": 1811530.0,
      "end_time": 1812571.0,
      "text": "It&#39;s never going to stop."
    },
    {
      "index": 657,
      "start_time": 1812570.0,
      "end_time": 1814720.0,
      "text": "It&#39;s going to start at one and multiply by 10."
    },
    {
      "index": 658,
      "start_time": 1814720.0,
      "end_time": 1818320.0,
      "text": "But what I&#39;m saying here is that I just want to take 10 elements"
    },
    {
      "index": 659,
      "start_time": 1818320.0,
      "end_time": 1819800.0,
      "text": "and then print them out."
    },
    {
      "index": 660,
      "start_time": 1819800.0,
      "end_time": 1823140.0,
      "text": "And what it will do is basically consume that until it hits 10."
    },
    {
      "index": 661,
      "start_time": 1823140.0,
      "end_time": 1825170.0,
      "text": "It prints out-- go away--"
    },
    {
      "index": 662,
      "start_time": 1828830.0,
      "end_time": 1833060.0,
      "text": "it prints out a beautiful Christmas tree"
    },
    {
      "index": 663,
      "start_time": 1833060.0,
      "end_time": 1835420.0,
      "text": "that&#39;s one-sided."
    },
    {
      "index": 664,
      "start_time": 1835420.0,
      "end_time": 1839100.0,
      "text": "OK, pyramid, whatever, and stops there."
    },
    {
      "index": 665,
      "start_time": 1839100.0,
      "end_time": 1841260.0,
      "text": "And anything that you have, like for example,"
    },
    {
      "index": 666,
      "start_time": 1841260.0,
      "end_time": 1848670.0,
      "text": "the users that we had, users from Jason, users.json,"
    },
    {
      "index": 667,
      "start_time": 1848670.0,
      "end_time": 1851750.0,
      "text": "you can say asSequence and convert it into lazy evaluation"
    },
    {
      "index": 668,
      "start_time": 1851750.0,
      "end_time": 1852250.0,
      "text": "as well."
    },
    {
      "index": 669,
      "start_time": 1852250.0,
      "end_time": 1853094.0,
      "text": "OK?"
    },
    {
      "index": 670,
      "start_time": 1853090.0,
      "end_time": 1855006.0,
      "text": "That&#39;s all we have the time to show you today."
    },
    {
      "index": 671,
      "start_time": 1855010.0,
      "end_time": 1858000.0,
      "text": "Obviously, there&#39;s way more to the language."
    },
    {
      "index": 672,
      "start_time": 1858000.0,
      "end_time": 1859941.0,
      "text": "Go online, learn everything about it,"
    },
    {
      "index": 673,
      "start_time": 1859940.0,
      "end_time": 1860939.0,
      "text": "and thank you very much."
    },
    {
      "index": 674,
      "start_time": 1860940.0,
      "end_time": 1862260.0,
      "text": "And I&#39;ll hand it off to Andrey."
    },
    {
      "index": 675,
      "start_time": 1866400.0,
      "end_time": 1868170.0,
      "text": "ANDRY BRESLAV: Thank you, Hadi."
    },
    {
      "index": 676,
      "start_time": 1868170.0,
      "end_time": 1869720.0,
      "text": "Hello, everybody."
    },
    {
      "index": 677,
      "start_time": 1869720.0,
      "end_time": 1875120.0,
      "text": "So as you&#39;ve seen Kotlin already has many things in store,"
    },
    {
      "index": 678,
      "start_time": 1875120.0,
      "end_time": 1878090.0,
      "text": "but I am the nasty person who adds new futures before you"
    },
    {
      "index": 679,
      "start_time": 1878090.0,
      "end_time": 1879960.0,
      "text": "learn the existing ones."
    },
    {
      "index": 680,
      "start_time": 1879960.0,
      "end_time": 1882140.0,
      "text": "So I&#39;ll be tell you stories now, but I&#39;ll"
    },
    {
      "index": 681,
      "start_time": 1882140.0,
      "end_time": 1883936.0,
      "text": "need to find a clicker."
    },
    {
      "index": 682,
      "start_time": 1883940.0,
      "end_time": 1885794.0,
      "text": "Do I have a clicker?"
    },
    {
      "index": 683,
      "start_time": 1885790.0,
      "end_time": 1887280.0,
      "text": "No, OK."
    },
    {
      "index": 684,
      "start_time": 1887280.0,
      "end_time": 1891240.0,
      "text": "OK, so I&#39;ll be telling stories without a clicker."
    },
    {
      "index": 685,
      "start_time": 1891240.0,
      "end_time": 1893860.0,
      "text": "So my job here is to tell you about what"
    },
    {
      "index": 686,
      "start_time": 1893860.0,
      "end_time": 1896440.0,
      "text": "we&#39;re going to have in the future versions of Kotlin--"
    },
    {
      "index": 687,
      "start_time": 1896440.0,
      "end_time": 1897440.0,
      "text": "oh, thank you very much."
    },
    {
      "index": 688,
      "start_time": 1900440.0,
      "end_time": 1904440.0,
      "text": "And the first big thing we&#39;re working on now"
    },
    {
      "index": 689,
      "start_time": 1904440.0,
      "end_time": 1907990.0,
      "text": "is platforms, supporting different platforms."
    },
    {
      "index": 690,
      "start_time": 1907990.0,
      "end_time": 1912030.0,
      "text": "So historically, Kotlin compiles to JVM bytecode,"
    },
    {
      "index": 691,
      "start_time": 1912030.0,
      "end_time": 1914500.0,
      "text": "same as the Java programming language."
    },
    {
      "index": 692,
      "start_time": 1914500.0,
      "end_time": 1917450.0,
      "text": "So we can run a server on the desktop"
    },
    {
      "index": 693,
      "start_time": 1917450.0,
      "end_time": 1920850.0,
      "text": "and of course on Android."
    },
    {
      "index": 694,
      "start_time": 1920850.0,
      "end_time": 1923610.0,
      "text": "And it&#39;s just the same bytecode everywhere,"
    },
    {
      "index": 695,
      "start_time": 1923610.0,
      "end_time": 1925630.0,
      "text": "this is why we can run old versions of Android"
    },
    {
      "index": 696,
      "start_time": 1925630.0,
      "end_time": 1927220.0,
      "text": "as well as new ones."
    },
    {
      "index": 697,
      "start_time": 1927220.0,
      "end_time": 1930280.0,
      "text": "But the story doesn&#39;t end there, because we"
    },
    {
      "index": 698,
      "start_time": 1930280.0,
      "end_time": 1931410.0,
      "text": "are adding new platforms."
    },
    {
      "index": 699,
      "start_time": 1931410.0,
      "end_time": 1935270.0,
      "text": "And recently, we&#39;ve added--"
    },
    {
      "index": 700,
      "start_time": 1935270.0,
      "end_time": 1939320.0,
      "text": "but God doesn&#39;t like platforms--"
    },
    {
      "index": 701,
      "start_time": 1939320.0,
      "end_time": 1941330.0,
      "text": "recently we added JavaScript, which"
    },
    {
      "index": 702,
      "start_time": 1941330.0,
      "end_time": 1944680.0,
      "text": "means Kotlin can now compile to JavaScript code and run"
    },
    {
      "index": 703,
      "start_time": 1944680.0,
      "end_time": 1947420.0,
      "text": "in the browser or on node.js."
    },
    {
      "index": 704,
      "start_time": 1947420.0,
      "end_time": 1952370.0,
      "text": "So now we support three, major, very popular virtual machines,"
    },
    {
      "index": 705,
      "start_time": 1952370.0,
      "end_time": 1956700.0,
      "text": "JVM, Android Dalvik, and JavaScript VMs."
    },
    {
      "index": 706,
      "start_time": 1956700.0,
      "end_time": 1958460.0,
      "text": "But there are many US cases where"
    },
    {
      "index": 707,
      "start_time": 1958460.0,
      "end_time": 1961020.0,
      "text": "a virtual machine is not practical or is simply"
    },
    {
      "index": 708,
      "start_time": 1961020.0,
      "end_time": 1962750.0,
      "text": "unavailable."
    },
    {
      "index": 709,
      "start_time": 1962750.0,
      "end_time": 1966360.0,
      "text": "For example, for iOS, virtual machines"
    },
    {
      "index": 710,
      "start_time": 1966360.0,
      "end_time": 1967630.0,
      "text": "are severely restricted."
    },
    {
      "index": 711,
      "start_time": 1967630.0,
      "end_time": 1969780.0,
      "text": "You can&#39;t do dynamic code generation,"
    },
    {
      "index": 712,
      "start_time": 1969780.0,
      "end_time": 1972920.0,
      "text": "or for a small embedded system, a VM doesn&#39;t fit in."
    },
    {
      "index": 713,
      "start_time": 1972920.0,
      "end_time": 1975560.0,
      "text": "Or for, say, a Linux command line tool,"
    },
    {
      "index": 714,
      "start_time": 1975560.0,
      "end_time": 1979170.0,
      "text": "the VM will be a starting tool for too long."
    },
    {
      "index": 715,
      "start_time": 1979170.0,
      "end_time": 1981650.0,
      "text": "So it&#39;s a no go there, and that&#39;s"
    },
    {
      "index": 716,
      "start_time": 1981650.0,
      "end_time": 1984330.0,
      "text": "why we&#39;re working on something called Kotlin/Native,"
    },
    {
      "index": 717,
      "start_time": 1984330.0,
      "end_time": 1988220.0,
      "text": "it&#39;s currently available as a technology preview."
    },
    {
      "index": 718,
      "start_time": 1988220.0,
      "end_time": 1991710.0,
      "text": "And there, we basically use LVM to compile Kotlin down"
    },
    {
      "index": 719,
      "start_time": 1991710.0,
      "end_time": 1994320.0,
      "text": "to a native code, to stand along binaries that"
    },
    {
      "index": 720,
      "start_time": 1994320.0,
      "end_time": 1995710.0,
      "text": "can run on different platforms."
    },
    {
      "index": 721,
      "start_time": 1995710.0,
      "end_time": 1999000.0,
      "text": "Currently, we support iOS, Linux, and Mac,"
    },
    {
      "index": 722,
      "start_time": 1999000.0,
      "end_time": 2001410.0,
      "text": "and Windows is in the works."
    },
    {
      "index": 723,
      "start_time": 2001410.0,
      "end_time": 2006920.0,
      "text": "So this is taking us to this vision with Kotlin,"
    },
    {
      "index": 724,
      "start_time": 2006920.0,
      "end_time": 2010010.0,
      "text": "when it can run inside every component"
    },
    {
      "index": 725,
      "start_time": 2010010.0,
      "end_time": 2014010.0,
      "text": "of a modern application, on any platform you like."
    },
    {
      "index": 726,
      "start_time": 2014010.0,
      "end_time": 2016120.0,
      "text": "So think full stack web applications"
    },
    {
      "index": 727,
      "start_time": 2016120.0,
      "end_time": 2020070.0,
      "text": "with the server and the client both written in Kotlin,"
    },
    {
      "index": 728,
      "start_time": 2020070.0,
      "end_time": 2024220.0,
      "text": "or think reuse code between mobile platforms, Android"
    },
    {
      "index": 729,
      "start_time": 2024220.0,
      "end_time": 2025650.0,
      "text": "and iOS for example."
    },
    {
      "index": 730,
      "start_time": 2025650.0,
      "end_time": 2028780.0,
      "text": "Or mix the two previous use cases"
    },
    {
      "index": 731,
      "start_time": 2028780.0,
      "end_time": 2031280.0,
      "text": "and get like a real multiplatform scenario."
    },
    {
      "index": 732,
      "start_time": 2031280.0,
      "end_time": 2034970.0,
      "text": "So our vision for Kotlin is having"
    },
    {
      "index": 733,
      "start_time": 2034970.0,
      "end_time": 2037270.0,
      "text": "different models in the same project"
    },
    {
      "index": 734,
      "start_time": 2037270.0,
      "end_time": 2040270.0,
      "text": "compile to a different platforms."
    },
    {
      "index": 735,
      "start_time": 2040270.0,
      "end_time": 2042770.0,
      "text": "And of course, you we want to share code there, right?"
    },
    {
      "index": 736,
      "start_time": 2042770.0,
      "end_time": 2045190.0,
      "text": "Because if you support so many different things,"
    },
    {
      "index": 737,
      "start_time": 2045190.0,
      "end_time": 2047650.0,
      "text": "you want to run the same code in different places."
    },
    {
      "index": 738,
      "start_time": 2047650.0,
      "end_time": 2050920.0,
      "text": "And we&#39;re working on making that possible."
    },
    {
      "index": 739,
      "start_time": 2050920.0,
      "end_time": 2053179.0,
      "text": "But there is a very important thing,"
    },
    {
      "index": 740,
      "start_time": 2053179.9999999998,
      "end_time": 2056540.9999999998,
      "text": "because previously, many projects"
    },
    {
      "index": 741,
      "start_time": 2056540.0,
      "end_time": 2058610.0,
      "text": "tried to unify platforms."
    },
    {
      "index": 742,
      "start_time": 2058610.0000000002,
      "end_time": 2061330.0000000002,
      "text": "And this often ends up being like the least common"
    },
    {
      "index": 743,
      "start_time": 2061330.0,
      "end_time": 2064550.0,
      "text": "denominator, when you take only things that"
    },
    {
      "index": 744,
      "start_time": 2064550.0000000002,
      "end_time": 2067320.0000000002,
      "text": "are available on all platforms, you are basically"
    },
    {
      "index": 745,
      "start_time": 2067320.0000000002,
      "end_time": 2069659.0000000002,
      "text": "stuck with a minimal interface, and that&#39;s something"
    },
    {
      "index": 746,
      "start_time": 2069659.9999999998,
      "end_time": 2071239.9999999998,
      "text": "we don&#39;t want to have there."
    },
    {
      "index": 747,
      "start_time": 2071239.9999999998,
      "end_time": 2073630.9999999998,
      "text": "So we want you to be able to use all"
    },
    {
      "index": 748,
      "start_time": 2073630.0,
      "end_time": 2075929.0,
      "text": "the platform-specific fancy APIs like the newest"
    },
    {
      "index": 749,
      "start_time": 2075929.9999999998,
      "end_time": 2080050.9999999998,
      "text": "version of Android or something else as much as you like."
    },
    {
      "index": 750,
      "start_time": 2080050.0000000002,
      "end_time": 2081730.0000000002,
      "text": "And if you want to share some code,"
    },
    {
      "index": 751,
      "start_time": 2081730.0,
      "end_time": 2086860.0,
      "text": "only then you have to resort to some common APIs."
    },
    {
      "index": 752,
      "start_time": 2086860.0000000002,
      "end_time": 2089830.0000000002,
      "text": "So the idea there is that you have a common model with lots"
    },
    {
      "index": 753,
      "start_time": 2089830.0,
      "end_time": 2093380.0,
      "text": "of business logic and stuff, and it can work side by side"
    },
    {
      "index": 754,
      "start_time": 2093380.0,
      "end_time": 2096540.0,
      "text": "with a platform specific model written also in Kotlin,"
    },
    {
      "index": 755,
      "start_time": 2096540.0,
      "end_time": 2098910.0,
      "text": "and those two can talk to each other."
    },
    {
      "index": 756,
      "start_time": 2098910.0,
      "end_time": 2101790.0,
      "text": "So when you need, you leverage the platform API,"
    },
    {
      "index": 757,
      "start_time": 2101790.0,
      "end_time": 2104820.0,
      "text": "and when you need, you use the Kotlin code."
    },
    {
      "index": 758,
      "start_time": 2104820.0,
      "end_time": 2110420.0,
      "text": "So take away here, our future is multiplatform."
    },
    {
      "index": 759,
      "start_time": 2110420.0,
      "end_time": 2111450.0,
      "text": "Next-- oh."
    },
    {
      "index": 760,
      "start_time": 2117020.0,
      "end_time": 2120490.0,
      "text": "Next big thing is couroutines."
    },
    {
      "index": 761,
      "start_time": 2120490.0,
      "end_time": 2123690.0,
      "text": "So the rationale there is pretty straightforward,"
    },
    {
      "index": 762,
      "start_time": 2123690.0,
      "end_time": 2126860.0,
      "text": "everybody needs to write asynchronous code, right?"
    },
    {
      "index": 763,
      "start_time": 2126860.0,
      "end_time": 2131410.0,
      "text": "Because the world is too big now for sequential execution."
    },
    {
      "index": 764,
      "start_time": 2131410.0,
      "end_time": 2136510.0,
      "text": "And it&#39;s our reality, but it&#39;s hard, right?"
    },
    {
      "index": 765,
      "start_time": 2136510.0,
      "end_time": 2139970.0,
      "text": "Who has written asynchronous code?"
    },
    {
      "index": 766,
      "start_time": 2139970.0,
      "end_time": 2141970.0,
      "text": "Quite so many hands."
    },
    {
      "index": 767,
      "start_time": 2141970.0,
      "end_time": 2146210.0,
      "text": "Those of you who don&#39;t actually will be doing this very soon."
    },
    {
      "index": 768,
      "start_time": 2146210.0,
      "end_time": 2148419.0,
      "text": "And the problem is, it&#39;s rather hard, actually,"
    },
    {
      "index": 769,
      "start_time": 2148420.0,
      "end_time": 2149461.0,
      "text": "to write sequential code."
    },
    {
      "index": 770,
      "start_time": 2149460.0,
      "end_time": 2152120.0,
      "text": "Or it was hard before languages learned"
    },
    {
      "index": 771,
      "start_time": 2152120.0,
      "end_time": 2156190.0,
      "text": "to support you in doing that, because a language can help you"
    },
    {
      "index": 772,
      "start_time": 2156190.0,
      "end_time": 2157240.0,
      "text": "there a lot."
    },
    {
      "index": 773,
      "start_time": 2157240.0,
      "end_time": 2160040.0,
      "text": "So basically what we have with coroutines in Kotlin,"
    },
    {
      "index": 774,
      "start_time": 2160040.0,
      "end_time": 2162420.0,
      "text": "you&#39;re right asynchronous code the same way"
    },
    {
      "index": 775,
      "start_time": 2162420.0,
      "end_time": 2163916.0,
      "text": "you write synchronous code."
    },
    {
      "index": 776,
      "start_time": 2163920.0,
      "end_time": 2165544.0,
      "text": "So what do you use in synchronous code?"
    },
    {
      "index": 777,
      "start_time": 2165540.0,
      "end_time": 2168490.0,
      "text": "Loops, ifs, breaks and continues,"
    },
    {
      "index": 778,
      "start_time": 2168490.0,
      "end_time": 2169640.0,
      "text": "things like that, right?"
    },
    {
      "index": 779,
      "start_time": 2169640.0,
      "end_time": 2173130.0,
      "text": "And it&#39;s the same things you&#39;re using with coroutines"
    },
    {
      "index": 780,
      "start_time": 2173130.0,
      "end_time": 2178390.0,
      "text": "for asynchronous code, so that the language keeps track"
    },
    {
      "index": 781,
      "start_time": 2178390.0,
      "end_time": 2181550.0,
      "text": "of everything and you don&#39;t have to express an intricate control"
    },
    {
      "index": 782,
      "start_time": 2181550.0,
      "end_time": 2185650.0,
      "text": "flow for a synchronous computation in your code."
    },
    {
      "index": 783,
      "start_time": 2185650.0,
      "end_time": 2189760.0,
      "text": "No call backs, no fancy functional structures,"
    },
    {
      "index": 784,
      "start_time": 2189760.0,
      "end_time": 2194220.0,
      "text": "it&#39;s just plain old sequential-looking code."
    },
    {
      "index": 785,
      "start_time": 2194220.0,
      "end_time": 2195400.0,
      "text": "And isn&#39;t it cool?"
    },
    {
      "index": 786,
      "start_time": 2199180.0,
      "end_time": 2200630.0,
      "text": "Thank you."
    },
    {
      "index": 787,
      "start_time": 2200630.0,
      "end_time": 2204740.0,
      "text": "So the idea with coroutines is that you basically"
    },
    {
      "index": 788,
      "start_time": 2204740.0,
      "end_time": 2208310.0,
      "text": "have the same abstraction for asynchronous and synchronous."
    },
    {
      "index": 789,
      "start_time": 2208310.0,
      "end_time": 2211400.0,
      "text": "And also, it&#39;s a nice metaphor to think of them"
    },
    {
      "index": 790,
      "start_time": 2211400.0,
      "end_time": 2214630.0,
      "text": "as almost free of threads."
    },
    {
      "index": 791,
      "start_time": 2214630.0,
      "end_time": 2219037.0,
      "text": "Like here is the only code example I&#39;m showing you."
    },
    {
      "index": 792,
      "start_time": 2219040.0,
      "end_time": 2221123.0,
      "text": "Basically, very many things that are traditionally"
    },
    {
      "index": 793,
      "start_time": 2221120.0,
      "end_time": 2223310.0,
      "text": "done with threads can be done with coroutines,"
    },
    {
      "index": 794,
      "start_time": 2223310.0,
      "end_time": 2225130.0,
      "text": "but coroutines are extremely cheap."
    },
    {
      "index": 795,
      "start_time": 2225130.0,
      "end_time": 2228040.0,
      "text": "So here on the slide, I have a code that"
    },
    {
      "index": 796,
      "start_time": 2228040.0,
      "end_time": 2229980.0,
      "text": "creates 100,000 coroutines."
    },
    {
      "index": 797,
      "start_time": 2229980.0,
      "end_time": 2231070.0,
      "text": "Think about that."
    },
    {
      "index": 798,
      "start_time": 2231070.0,
      "end_time": 2235490.0,
      "text": "100,000 coroutines existing in parallel, and each one of them"
    },
    {
      "index": 799,
      "start_time": 2235490.0,
      "end_time": 2238790.0,
      "text": "waits for one second and returns one."
    },
    {
      "index": 800,
      "start_time": 2238790.0,
      "end_time": 2244150.0,
      "text": "So this program completes in, completes in one"
    },
    {
      "index": 801,
      "start_time": 2244150.0,
      "end_time": 2248470.0,
      "text": "second, almost one second, because all the coroutines wait"
    },
    {
      "index": 802,
      "start_time": 2248470.0,
      "end_time": 2250250.0,
      "text": "in parallel, of course."
    },
    {
      "index": 803,
      "start_time": 2250250.0,
      "end_time": 2255150.0,
      "text": "But if you tried to do this with threads, it just doesn&#39;t work."
    },
    {
      "index": 804,
      "start_time": 2255150.0,
      "end_time": 2258050.0,
      "text": "100,000 threads don&#39;t fit into memory."
    },
    {
      "index": 805,
      "start_time": 2258050.0,
      "end_time": 2259200.0,
      "text": "That&#39;s it."
    },
    {
      "index": 806,
      "start_time": 2259200.0,
      "end_time": 2262540.0,
      "text": "So with coroutines, it&#39;s a win-win situation."
    },
    {
      "index": 807,
      "start_time": 2262540.0,
      "end_time": 2266100.0,
      "text": "You get lots of performance, so it&#39;s very efficient,"
    },
    {
      "index": 808,
      "start_time": 2266100.0,
      "end_time": 2267930.0,
      "text": "and the code is simple."
    },
    {
      "index": 809,
      "start_time": 2267930.0,
      "end_time": 2271380.0,
      "text": "So take away here, check out coroutines,"
    },
    {
      "index": 810,
      "start_time": 2271380.0,
      "end_time": 2274070.0,
      "text": "because our future will likely to even more asynchronous"
    },
    {
      "index": 811,
      "start_time": 2274070.0,
      "end_time": 2274875.0,
      "text": "than our present."
    },
    {
      "index": 812,
      "start_time": 2277580.0,
      "end_time": 2279850.0,
      "text": "So I&#39;m almost done, and if you want"
    },
    {
      "index": 813,
      "start_time": 2279850.0,
      "end_time": 2282710.0,
      "text": "to learn more about Kotlin, check out our website."
    },
    {
      "index": 814,
      "start_time": 2282710.0,
      "end_time": 2284960.0,
      "text": "We have a section for Android."
    },
    {
      "index": 815,
      "start_time": 2284960.0,
      "end_time": 2288900.0,
      "text": "And also, we&#39;ll have a question and answer session right"
    },
    {
      "index": 816,
      "start_time": 2288900.0,
      "end_time": 2294250.0,
      "text": "after this talk, so come over to the Developer sandbox,"
    },
    {
      "index": 817,
      "start_time": 2294250.0,
      "end_time": 2298180.0,
      "text": "section C. Myself and Hadi will be answering questions there."
    },
    {
      "index": 818,
      "start_time": 2298180.0,
      "end_time": 2300740.0,
      "text": "So thank you very much for your attention."
    }
  ]
}