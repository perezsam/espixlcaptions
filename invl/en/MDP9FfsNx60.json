{
  "video_id": "MDP9FfsNx60",
  "title": "Deep Learning Frameworks Compared",
  "es": 0,
  "json": [
    {
      "index": 1,
      "start_time": 0.0,
      "end_time": 4380.0,
      "text": "hello world it&#39;s Siraj in this video we&#39;re going to compare the most popular deep"
    },
    {
      "index": 2,
      "start_time": 4380.0,
      "end_time": 7529.0,
      "text": "learning frameworks out there right now to see what works best"
    },
    {
      "index": 3,
      "start_time": 7529.0,
      "end_time": 11340.0,
      "text": "the deep-learning space is exploding with frameworks right now ,it&#39;s like every"
    },
    {
      "index": 4,
      "start_time": 11340.0,
      "end_time": 15599.0,
      "text": "single week some major tech company decides to open source their own deep"
    },
    {
      "index": 5,
      "start_time": 15599.0,
      "end_time": 18210.0,
      "text": "learning library and that&#39;s not including the dozens of deep learning"
    },
    {
      "index": 6,
      "start_time": 18210.0,
      "end_time": 23189.0,
      "text": "frameworks being released every single week on github by cowboy developers how"
    },
    {
      "index": 7,
      "start_time": 23189.0,
      "end_time": 24390.0,
      "text": "*how many layers you have?*"
    },
    {
      "index": 8,
      "start_time": 24390.0,
      "end_time": 27900.0,
      "text": "let&#39;s start off with scikit-learn  scikit it was made to provide an easy-to-use"
    },
    {
      "index": 9,
      "start_time": 27900.0,
      "end_time": 31380.0,
      "text": "interface for developers to use off-the-shelf general-purpose machine"
    },
    {
      "index": 10,
      "start_time": 31380.0,
      "end_time": 36180.0,
      "text": "learning algorithms for both supervised and unsupervised learning , scikit provides"
    },
    {
      "index": 11,
      "start_time": 36180.0,
      "end_time": 39750.0,
      "text": "functions that like you apply classic machine learning algorithms like support"
    },
    {
      "index": 12,
      "start_time": 39750.0,
      "end_time": 44550.0,
      "text": "vector machines logistic regressions and k nearest neighbor very easily but the"
    },
    {
      "index": 13,
      "start_time": 44550.0,
      "end_time": 48210.0,
      "text": "one type of machine learning algorithm he doesn&#39;t let you implement is a neural"
    },
    {
      "index": 14,
      "start_time": 48210.0,
      "end_time": 52260.0,
      "text": "network it doesn&#39;t provide GPU support either which is what helps neural"
    },
    {
      "index": 15,
      "start_time": 52260.0,
      "end_time": 54660.0,
      "text": "networks scale , since like two months ago"
    },
    {
      "index": 16,
      "start_time": 54660.0,
      "end_time": 57809.0,
      "text": "pretty much every single general-purpose algorithm that psyche learned"
    },
    {
      "index": 17,
      "start_time": 57809.0,
      "end_time": 62129.0,
      "text": "implemented has since been implemented in tensorflow sidekick you just got"
    },
    {
      "index": 18,
      "start_time": 62129.0,
      "end_time": 65820.0,
      "text": "LEARNED , there&#39;s also caffe which was basically the first mainstream"
    },
    {
      "index": 19,
      "start_time": 65820.0,
      "end_time": 70229.0,
      "text": "production grade deep learning library started in 2014, the cafe isn&#39;t"
    },
    {
      "index": 20,
      "start_time": 70229.0,
      "end_time": 74580.0,
      "text": "very flexible think of a neural network as a computational graph in cafe each"
    },
    {
      "index": 21,
      "start_time": 74580.0,
      "end_time": 78600.0,
      "text": "note is considered a layer so if you want new layer types you define the full"
    },
    {
      "index": 22,
      "start_time": 78600.0,
      "end_time": 82020.0,
      "text": "forward backward and gradient updates these layers are building blocks that"
    },
    {
      "index": 23,
      "start_time": 82020.0,
      "end_time": 85770.0,
      "text": "are unnecessarily big there&#39;s an endless list of them that you can pick from"
    },
    {
      "index": 24,
      "start_time": 85770.0,
      "end_time": 90420.0,
      "text": "intensive flow each note is considered a tensor operation like matrix add,"
    },
    {
      "index": 25,
      "start_time": 90420.0,
      "end_time": 94890.0,
      "text": "matrix multiply or convolution and a layer can be defined as a composition of"
    },
    {
      "index": 26,
      "start_time": 94890.0,
      "end_time": 98939.0,
      "text": "those operations so tender flows building blocks are smaller which allows"
    },
    {
      "index": 27,
      "start_time": 98939.0,
      "end_time": 103439.0,
      "text": "for more modularity ,cafe also requires a lot of unnecessary verbosity if you want"
    },
    {
      "index": 28,
      "start_time": 103439.0,
      "end_time": 107369.0,
      "text": "to support both the CPU and the GPU you need to implement extra functions for"
    },
    {
      "index": 29,
      "start_time": 107369.0,
      "end_time": 111630.0,
      "text": "each and you have to define your model using a plain text editor that is just"
    },
    {
      "index": 30,
      "start_time": 111630.0,
      "end_time": 115020.0,
      "text": "ghetto model should be defined programmatically because it&#39;s better for"
    },
    {
      "index": 31,
      "start_time": 115020.0,
      "end_time": 119700.0,
      "text": "modularity between different components , also caffe main architect now works on"
    },
    {
      "index": 32,
      "start_time": 119700.0,
      "end_time": 123480.0,
      "text": "the tensorflow team we&#39;re all out of caffe"
    },
    {
      "index": 33,
      "start_time": 123480.0,
      "end_time": 127660.0,
      "text": "speaking of modularity let&#39;s talk about keras : Keras has been the go-to"
    },
    {
      "index": 34,
      "start_time": 127660.0,
      "end_time": 131020.0,
      "text": "source to get started with deep learning for a while because it provides a very"
    },
    {
      "index": 35,
      "start_time": 131020.00000000001,
      "end_time": 135520.0,
      "text": "high level API to build deep learning models Kera sits on top of the other"
    },
    {
      "index": 36,
      "start_time": 135520.0,
      "end_time": 138849.0,
      "text": "deep learning libraries like Theano and tensorflow it uses an"
    },
    {
      "index": 37,
      "start_time": 138849.0,
      "end_time": 143440.0,
      "text": "object-oriented design so everything is considered an object be that layers"
    },
    {
      "index": 38,
      "start_time": 143440.0,
      "end_time": 147670.0,
      "text": "models optimizers and all the parameters of the model can be access object"
    },
    {
      "index": 39,
      "start_time": 147670.0,
      "end_time": 151690.0,
      "text": "properties like model.layers[3].output will give you the output tensor"
    },
    {
      "index": 40,
      "start_time": 151690.0,
      "end_time": 155560.0,
      "text": "for the third layer in the model and  model.layers[3].weights is a list"
    },
    {
      "index": 41,
      "start_time": 155560.0,
      "end_time": 158620.0,
      "text": "of symbolic weight tensors this is a cleaner interface as opposed to the"
    },
    {
      "index": 42,
      "start_time": 158620.0,
      "end_time": 162190.0,
      "text": "functional approach of making layers function that create weights when being"
    },
    {
      "index": 43,
      "start_time": 162190.0,
      "end_time": 166600.0,
      "text": "called great documentation it&#39;s all gucci yes i&#39;m bringing that back but"
    },
    {
      "index": 44,
      "start_time": 166600.0,
      "end_time": 171100.0,
      "text": "because it&#39;s so general-purpose it lacks on the side of performance Keras has been"
    },
    {
      "index": 45,
      "start_time": 171100.0,
      "end_time": 174940.0,
      "text": "known to have performance issues when used with a tensorflow backend since"
    },
    {
      "index": 46,
      "start_time": 174940.0,
      "end_time": 178600.0,
      "text": "it&#39;s not really optimized for it but it does work pretty well with the Theano"
    },
    {
      "index": 47,
      "start_time": 178600.0,
      "end_time": 181840.0,
      "text": "backend , the two frameworks that are neck-and-neck right now in the race to"
    },
    {
      "index": 48,
      "start_time": 181840.0,
      "end_time": 186459.0,
      "text": "be the best library for both research and Industry are tensorflow and Theano"
    },
    {
      "index": 49,
      "start_time": 186459.0,
      "end_time": 190480.0,
      "text": "Theano currently outperforms tensorflow on a single GPU potential flow"
    },
    {
      "index": 50,
      "start_time": 190480.0,
      "end_time": 195400.0,
      "text": "outperforms piano for parallel execution across multiple gpus , Theano has got more"
    },
    {
      "index": 51,
      "start_time": 195400.0,
      "end_time": 198730.0,
      "text": "documentation because it&#39;s been around for a while and it&#39;s got native windows"
    },
    {
      "index": 52,
      "start_time": 198730.0,
      "end_time": 204400.0,
      "text": "support which tensorflow doesn&#39;t yet dammit windows in terms of syntax let&#39;s"
    },
    {
      "index": 53,
      "start_time": 204400.0,
      "end_time": 206650.0,
      "text": "just take a look at some code to see some differences"
    },
    {
      "index": 54,
      "start_time": 206650.0,
      "end_time": 209700.0,
      "text": "we&#39;re going to compare two scripts in tensorflow and beyond"
    },
    {
      "index": 55,
      "start_time": 209700.0,
      "end_time": 213000.0,
      "text": "they both do the same thing initializing phony data and then learn the line of"
    },
    {
      "index": 56,
      "start_time": 213000.0,
      "end_time": 216180.0,
      "text": "best fit for that data is it can predict future data points let&#39;s look at the"
    },
    {
      "index": 57,
      "start_time": 216180.0,
      "end_time": 219910.0,
      "text": "first step in both tensorflow and Theano for generating the data pretty much the"
    },
    {
      "index": 58,
      "start_time": 219910.0,
      "end_time": 223060.0,
      "text": "same way using numpy arrays so there&#39;s not really a difference there"
    },
    {
      "index": 59,
      "start_time": 223060.0,
      "end_time": 226420.0,
      "text": "let&#39;s look at the model initialization parts ,this is the basic &quot;y=mx+b&quot;"
    },
    {
      "index": 60,
      "start_time": 226420.0,
      "end_time": 230739.0,
      "text": "formula in tensorflow it doesn&#39;t require any special treatment of the x"
    },
    {
      "index": 61,
      "start_time": 230739.0,
      "end_time": 231700.0,
      "text": "and y variables"
    },
    {
      "index": 62,
      "start_time": 231700.0,
      "end_time": 235299.0,
      "text": "they&#39;re just they&#39;re natively but Theano we have to specifically say that"
    },
    {
      "index": 63,
      "start_time": 235299.0,
      "end_time": 238840.0,
      "text": "the variables are symbolic inputs to the function the tensorflow syntax for"
    },
    {
      "index": 64,
      "start_time": 238840.0,
      "end_time": 242530.0,
      "text": "defining the B&amp;W variables is cleaner than we implement our gradient descent"
    },
    {
      "index": 65,
      "start_time": 242530.0,
      "end_time": 245829.0,
      "text": "function which is what helps us learn or trying to minimize the mean squared"
    },
    {
      "index": 66,
      "start_time": 245829.0,
      "end_time": 249459.0,
      "text": "error over time which is what makes our model more accurate as we train the"
    },
    {
      "index": 67,
      "start_time": 249459.0,
      "end_time": 252579.0,
      "text": "syntax for defining what we&#39;re minimizing is pretty similar then we"
    },
    {
      "index": 68,
      "start_time": 252579.0,
      "end_time": 255820.0,
      "text": "look at the actual optimizer which helps us do that will notice a difference in"
    },
    {
      "index": 69,
      "start_time": 255820.0,
      "end_time": 256760.0,
      "text": "syntax again"
    },
    {
      "index": 70,
      "start_time": 256760.0,
      "end_time": 259580.0,
      "text": "the flow just gives you access to a bunch of optimizers right out-of-the-box"
    },
    {
      "index": 71,
      "start_time": 259579.99999999997,
      "end_time": 263000.0,
      "text": "things like gradient descent or Adam Theano makes you do this from scratch"
    },
    {
      "index": 72,
      "start_time": 263000.0,
      "end_time": 266720.0,
      "text": "then we have our training function which is again more verbose see the trend here"
    },
    {
      "index": 73,
      "start_time": 266720.0,
      "end_time": 270860.0,
      "text": "theano so far is making us implement more code than tensorflow so it seems to"
    },
    {
      "index": 74,
      "start_time": 270860.0,
      "end_time": 274460.0,
      "text": "give us more fine-grained control but at the cost of readability finally we&#39;ll"
    },
    {
      "index": 75,
      "start_time": 274460.0,
      "end_time": 277730.0,
      "text": "get to the actual training part itself they look pretty identical but"
    },
    {
      "index": 76,
      "start_time": 277730.0,
      "end_time": 281030.0,
      "text": "tensorflow methodology of encapsulating the computational graph feels conceptually"
    },
    {
      "index": 77,
      "start_time": 281030.0,
      "end_time": 285380.0,
      "text": "cleaner than pianos tensorflow is just growing so fast that it seems inevitable"
    },
    {
      "index": 78,
      "start_time": 285380.0,
      "end_time": 289760.0,
      "text": "that whatever feature it lacks right now because of how new it is it will gain"
    },
    {
      "index": 79,
      "start_time": 289760.0,
      "end_time": 290960.0,
      "text": "very rapidly"
    },
    {
      "index": 80,
      "start_time": 290960.0,
      "end_time": 293720.0,
      "text": "I mean just look at the amount of activity happening in the tension flow"
    },
    {
      "index": 81,
      "start_time": 293720.0,
      "end_time": 297890.0,
      "text": "repo versus the Theano repo on get up right now and while keras serves as an"
    },
    {
      "index": 82,
      "start_time": 297890.0,
      "end_time": 301310.0,
      "text": "easy use wrapper around different libraries it&#39;s not optimized for"
    },
    {
      "index": 83,
      "start_time": 301310.0,
      "end_time": 305030.0,
      "text": "tensorflow a better alternative you want to learn and get started"
    },
    {
      "index": 84,
      "start_time": 305030.0,
      "end_time": 309740.0,
      "text": "easily with deep learning is TF learn which is basically keras but optimized"
    },
    {
      "index": 85,
      "start_time": 309740.0,
      "end_time": 314000.0,
      "text": "for tensorflow so to sum things up the best library to use for research is"
    },
    {
      "index": 86,
      "start_time": 314000.0,
      "end_time": 317780.0,
      "text": "tensorflow the world-class researchers at both open AI and deep mine are now"
    },
    {
      "index": 87,
      "start_time": 317780.0,
      "end_time": 322880.0,
      "text": "using it for production best library to use is still tensorflow is it scaled"
    },
    {
      "index": 88,
      "start_time": 322880.0,
      "end_time": 327110.0,
      "text": "better across multiple GPUs and its closest competitor Theano .Lastly for"
    },
    {
      "index": 89,
      "start_time": 327110.0,
      "end_time": 330740.0,
      "text": "learning the best library to use is TF learn which is a high-level wrapper"
    },
    {
      "index": 90,
      "start_time": 330740.0,
      "end_time": 334610.0,
      "text": "around tensorflow that lets you get started really easily also shout out to"
    },
    {
      "index": 91,
      "start_time": 334610.0,
      "end_time": 338570.0,
      "text": "rahul do for being able to generate an upbeat midnight file badass of the"
    },
    {
      "index": 92,
      "start_time": 338570.0,
      "end_time": 341750.0,
      "text": "week please subscribe for more programming videos for now I&#39;ve got to"
    },
    {
      "index": 93,
      "start_time": 341750.0,
      "end_time": 351750.0,
      "text": "go worship tensorflow some more so thanks for watching"
    }
  ]
}