{
  "video_id": "FYrtnS3X_Lw",
  "title": "Javascript Closures explained( Beginners Tutorial)",
  "es": 0,
  "json": [
    {
      "index": 1,
      "start_time": 980.0,
      "end_time": 2179.0,
      "text": "Welcome to Lab :- 3"
    },
    {
      "index": 2,
      "start_time": 2680.0,
      "end_time": 4560.0,
      "text": "or lesson 3 of Learn"
    },
    {
      "index": 3,
      "start_time": 4960.0,
      "end_time": 7220.0,
      "text": "JavaScript Object Oriented Programming concepts."
    },
    {
      "index": 4,
      "start_time": 7840.0,
      "end_time": 12360.0,
      "text": "In the first lab we talked about what are JavaScript objects, in the 2nd lab we talked about"
    },
    {
      "index": 5,
      "start_time": 13460.0,
      "end_time": 14000.0,
      "text": "Prototype."
    },
    {
      "index": 6,
      "start_time": 14820.0,
      "end_time": 15540.0,
      "text": "In this lab"
    },
    {
      "index": 7,
      "start_time": 16900.0,
      "end_time": 18299.0,
      "text": "will talk about something called as"
    },
    {
      "index": 8,
      "start_time": 18720.0,
      "end_time": 20200.0,
      "text": "JavaScript Closures."
    },
    {
      "index": 9,
      "start_time": 21800.0,
      "end_time": 22580.0,
      "text": "In this 16 minutes of video"
    },
    {
      "index": 10,
      "start_time": 23740.0,
      "end_time": 25200.0,
      "text": "will first talk about"
    },
    {
      "index": 11,
      "start_time": 25580.0,
      "end_time": 27759.0,
      "text": "the basic concept of Closures in JavaScript."
    },
    {
      "index": 12,
      "start_time": 28640.0,
      "end_time": 30600.0,
      "text": "In the remaining part of the video"
    },
    {
      "index": 13,
      "start_time": 30500.0,
      "end_time": 32439.0,
      "text": "will talk about how JavaScript Closures"
    },
    {
      "index": 14,
      "start_time": 32720.0,
      "end_time": 33839.0,
      "text": "helps us to implement"
    },
    {
      "index": 15,
      "start_time": 34200.0,
      "end_time": 36600.0,
      "text": "proper Object Oriented Programming concept"
    },
    {
      "index": 16,
      "start_time": 36340.0,
      "end_time": 37360.0,
      "text": "in JavaScript Language."
    },
    {
      "index": 17,
      "start_time": 43320.0,
      "end_time": 44160.0,
      "text": "JavaScript Closures are"
    },
    {
      "index": 18,
      "start_time": 46300.0,
      "end_time": 47739.0,
      "text": "Stateful Functions."
    },
    {
      "index": 19,
      "start_time": 54860.0,
      "end_time": 55360.0,
      "text": "Means what?"
    },
    {
      "index": 20,
      "start_time": 57220.0,
      "end_time": 59000.0,
      "text": "When we create a function in JavaScript"
    },
    {
      "index": 21,
      "start_time": 59660.0,
      "end_time": 60800.0,
      "text": "by default it is"
    },
    {
      "index": 22,
      "start_time": 61800.0,
      "end_time": 61879.0,
      "text": "Stateless."
    },
    {
      "index": 23,
      "start_time": 63580.0,
      "end_time": 66600.0,
      "text": "Let us say, we create a function here called as Counter"
    },
    {
      "index": 24,
      "start_time": 68100.0,
      "end_time": 69640.0,
      "text": "and create a"
    },
    {
      "index": 25,
      "start_time": 70720.0,
      "end_time": 71360.0,
      "text": "variable"
    },
    {
      "index": 26,
      "start_time": 71880.0,
      "end_time": 73600.0,
      "text": "inside the function called as"
    },
    {
      "index": 27,
      "start_time": 74260.0,
      "end_time": 74900.0,
      "text": "counter."
    },
    {
      "index": 28,
      "start_time": 75460.0,
      "end_time": 76979.0,
      "text": "and increment the variable."
    },
    {
      "index": 29,
      "start_time": 84160.0,
      "end_time": 86390.0,
      "text": "If we call this function over here"
    },
    {
      "index": 30,
      "start_time": 97480.0,
      "end_time": 98380.0,
      "text": "if we run this"
    },
    {
      "index": 31,
      "start_time": 109220.0,
      "end_time": 111300.0,
      "text": "this is the first call, it shows 1."
    },
    {
      "index": 32,
      "start_time": 112520.0,
      "end_time": 113140.0,
      "text": "if click"
    },
    {
      "index": 33,
      "start_time": 113700.0,
      "end_time": 115980.0,
      "text": "again the second call show 1."
    },
    {
      "index": 34,
      "start_time": 116600.0,
      "end_time": 117160.0,
      "text": "In short"
    },
    {
      "index": 35,
      "start_time": 117980.0,
      "end_time": 119220.0,
      "text": "this call of the counter"
    },
    {
      "index": 36,
      "start_time": 120300.0,
      "end_time": 124600.0,
      "text": "has a different state than this call of the counter."
    },
    {
      "index": 37,
      "start_time": 129919.00000000001,
      "end_time": 132190.0,
      "text": "When a function or a method runs"
    },
    {
      "index": 38,
      "start_time": 132260.0,
      "end_time": 133959.0,
      "text": "it creates a running memory."
    },
    {
      "index": 39,
      "start_time": 134840.0,
      "end_time": 136720.0,
      "text": "All these variables like counter etc..."
    },
    {
      "index": 40,
      "start_time": 137260.0,
      "end_time": 139940.0,
      "text": "gets created on running memory called as Stack."
    },
    {
      "index": 41,
      "start_time": 140780.0,
      "end_time": 143600.0,
      "text": "The counter variable gets allocated on the Stack"
    },
    {
      "index": 42,
      "start_time": 143880.0,
      "end_time": 145320.0,
      "text": "It gets incremented,"
    },
    {
      "index": 43,
      "start_time": 145700.0,
      "end_time": 147179.0,
      "text": "displayed and then released."
    },
    {
      "index": 44,
      "start_time": 147580.0,
      "end_time": 148980.0,
      "text": "It happens for the first time."
    },
    {
      "index": 45,
      "start_time": 149620.0,
      "end_time": 153780.0,
      "text": "When we run for the second time a new running memory is created."
    },
    {
      "index": 46,
      "start_time": 154960.0,
      "end_time": 156800.0,
      "text": "The first one is then disallocated."
    },
    {
      "index": 47,
      "start_time": 158840.0,
      "end_time": 161000.0,
      "text": "On stack when any variable is created"
    },
    {
      "index": 48,
      "start_time": 161580.0,
      "end_time": 162720.0,
      "text": "the function is executed,"
    },
    {
      "index": 49,
      "start_time": 163360.0,
      "end_time": 165240.0,
      "text": "the variable is created then released."
    },
    {
      "index": 50,
      "start_time": 166460.0,
      "end_time": 167260.0,
      "text": "Lot of times"
    },
    {
      "index": 51,
      "start_time": 168600.0,
      "end_time": 169100.0,
      "text": "we want"
    },
    {
      "index": 52,
      "start_time": 171260.0,
      "end_time": 174400.0,
      "text": "the functions and the variable should stay in the memory."
    },
    {
      "index": 53,
      "start_time": 175380.0,
      "end_time": 176540.0,
      "text": "For example, we want"
    },
    {
      "index": 54,
      "start_time": 177600.0,
      "end_time": 179220.0,
      "text": "everytime we call the counter we want"
    },
    {
      "index": 55,
      "start_time": 179500.0,
      "end_time": 181600.0,
      "text": "the value to get incremented."
    },
    {
      "index": 56,
      "start_time": 181960.0,
      "end_time": 182660.0,
      "text": "In other words,"
    },
    {
      "index": 57,
      "start_time": 183640.0,
      "end_time": 186190.0,
      "text": "we want this variable to be remembered."
    },
    {
      "index": 58,
      "start_time": 187240.0,
      "end_time": 188960.0,
      "text": "One of the things which can come to our mind is"
    },
    {
      "index": 59,
      "start_time": 191200.0,
      "end_time": 193400.0,
      "text": "why don&#39;t we create a variable"
    },
    {
      "index": 60,
      "start_time": 194400.0,
      "end_time": 194540.0,
      "text": "globally?"
    },
    {
      "index": 61,
      "start_time": 202600.0,
      "end_time": 202780.0,
      "text": "If run this"
    },
    {
      "index": 62,
      "start_time": 206800.0,
      "end_time": 209540.0,
      "text": "the variable is created globally on the browser."
    },
    {
      "index": 63,
      "start_time": 216940.0,
      "end_time": 218600.0,
      "text": "What is the problem"
    },
    {
      "index": 64,
      "start_time": 218600.0,
      "end_time": 222380.0,
      "text": "with the approach of creating the variables globally."
    },
    {
      "index": 65,
      "start_time": 223660.0,
      "end_time": 226000.0,
      "text": "One of the rule of good programming is"
    },
    {
      "index": 66,
      "start_time": 227840.0,
      "end_time": 231960.0,
      "text": "modules, functions, methods. They should be self contained."
    },
    {
      "index": 67,
      "start_time": 232380.0,
      "end_time": 234780.0,
      "text": "They should be isolated self contained modules."
    },
    {
      "index": 68,
      "start_time": 235980.0,
      "end_time": 241399.0,
      "text": "If we going to have such kind of global variables and they are accessed by the counter function, we can have problems."
    },
    {
      "index": 69,
      "start_time": 242980.0,
      "end_time": 245940.0,
      "text": "If there is some other function called as MyCounter."
    },
    {
      "index": 70,
      "start_time": 248600.0,
      "end_time": 252540.0,
      "text": "It is also incrementing the same variable then we can have unwanted"
    },
    {
      "index": 71,
      "start_time": 253240.0,
      "end_time": 254740.0,
      "text": "errors or unwanted defects."
    },
    {
      "index": 72,
      "start_time": 256779.0,
      "end_time": 258820.0,
      "text": "When we talk about modular programming"
    },
    {
      "index": 73,
      "start_time": 259860.0,
      "end_time": 265320.0,
      "text": "we want the module to be self contained, they should be isolated, they should be a single unit."
    },
    {
      "index": 74,
      "start_time": 267880.0,
      "end_time": 269420.0,
      "text": "This variable should be private ."
    },
    {
      "index": 75,
      "start_time": 273280.0,
      "end_time": 275820.0,
      "text": "It should have a different instance all together."
    },
    {
      "index": 76,
      "start_time": 276640.0,
      "end_time": 279800.0,
      "text": "That&#39;s where JavaScript Closures comes into picture."
    },
    {
      "index": 77,
      "start_time": 281700.0,
      "end_time": 282200.0,
      "text": "Closures"
    },
    {
      "index": 78,
      "start_time": 282700.0,
      "end_time": 283780.0,
      "text": "helps us to achieve"
    },
    {
      "index": 79,
      "start_time": 284500.0,
      "end_time": 285140.0,
      "text": "isolated"
    },
    {
      "index": 80,
      "start_time": 285800.0,
      "end_time": 286440.0,
      "text": "stateful"
    },
    {
      "index": 81,
      "start_time": 286780.0,
      "end_time": 287340.0,
      "text": "functions."
    },
    {
      "index": 82,
      "start_time": 290860.0,
      "end_time": 291840.0,
      "text": "To write a closure"
    },
    {
      "index": 83,
      "start_time": 292240.0,
      "end_time": 294660.0,
      "text": "a Closure is a function inside a function."
    },
    {
      "index": 84,
      "start_time": 297900.0,
      "end_time": 300800.0,
      "text": "One function encloses an other function."
    },
    {
      "index": 85,
      "start_time": 301720.0,
      "end_time": 304660.0,
      "text": "Will create a method called as Increment."
    },
    {
      "index": 86,
      "start_time": 320900.0,
      "end_time": 322299.0,
      "text": "This method"
    },
    {
      "index": 87,
      "start_time": 324360.0,
      "end_time": 326400.0,
      "text": "will return back."
    },
    {
      "index": 88,
      "start_time": 332760.0,
      "end_time": 333599.0,
      "text": "A closure is"
    },
    {
      "index": 89,
      "start_time": 334900.0,
      "end_time": 335620.0,
      "text": "a function"
    },
    {
      "index": 90,
      "start_time": 336680.0,
      "end_time": 337720.0,
      "text": "inside a function."
    },
    {
      "index": 91,
      "start_time": 339840.0,
      "end_time": 340340.0,
      "text": "This"
    },
    {
      "index": 92,
      "start_time": 341200.0,
      "end_time": 341840.0,
      "text": "function"
    },
    {
      "index": 93,
      "start_time": 342880.0,
      "end_time": 343380.0,
      "text": "is"
    },
    {
      "index": 94,
      "start_time": 343920.0,
      "end_time": 344560.0,
      "text": "enclosed"
    },
    {
      "index": 95,
      "start_time": 348600.0,
      "end_time": 349100.0,
      "text": "inside"
    },
    {
      "index": 96,
      "start_time": 351600.0,
      "end_time": 351960.0,
      "text": "the other function."
    },
    {
      "index": 97,
      "start_time": 355760.0,
      "end_time": 356320.0,
      "text": "Say here"
    },
    {
      "index": 98,
      "start_time": 357460.0,
      "end_time": 359700.0,
      "text": "var x= Counter"
    },
    {
      "index": 99,
      "start_time": 362460.0,
      "end_time": 362960.0,
      "text": "then"
    },
    {
      "index": 100,
      "start_time": 363420.0,
      "end_time": 365400.0,
      "text": "x.Increment"
    },
    {
      "index": 101,
      "start_time": 366300.0,
      "end_time": 369100.0,
      "text": "Again we can create a different instance."
    },
    {
      "index": 102,
      "start_time": 370280.0,
      "end_time": 372359.0,
      "text": "or a different isolated memory."
    },
    {
      "index": 103,
      "start_time": 384520.0,
      "end_time": 387219.0,
      "text": "This is the first time we are calling and this is the second time."
    },
    {
      "index": 104,
      "start_time": 389620.0,
      "end_time": 392220.0,
      "text": "Both of them are different isolated memory."
    },
    {
      "index": 105,
      "start_time": 394800.0,
      "end_time": 395300.0,
      "text": "Here"
    },
    {
      "index": 106,
      "start_time": 396600.0,
      "end_time": 399220.0,
      "text": "it should show the value 1 and here it should show the value 2."
    },
    {
      "index": 107,
      "start_time": 400480.0,
      "end_time": 404200.0,
      "text": "Here it should the value 1 because this is a different  instance."
    },
    {
      "index": 108,
      "start_time": 418680.0,
      "end_time": 422240.0,
      "text": "In every call it is remembering the local variable."
    },
    {
      "index": 109,
      "start_time": 426380.0,
      "end_time": 428240.0,
      "text": "In reality when we are doing projects"
    },
    {
      "index": 110,
      "start_time": 428660.0,
      "end_time": 432420.0,
      "text": "what is the use of such isolated stateful functions or a closures."
    },
    {
      "index": 111,
      "start_time": 433420.0,
      "end_time": 435140.0,
      "text": "If we put in one single sentence"
    },
    {
      "index": 112,
      "start_time": 436000.0,
      "end_time": 436640.0,
      "text": "Closures"
    },
    {
      "index": 113,
      "start_time": 437180.0,
      "end_time": 443300.0,
      "text": "helps to implement Object Oriented Programming concept in JavaScript in a very neat way."
    },
    {
      "index": 114,
      "start_time": 447200.0,
      "end_time": 449599.0,
      "text": "How JavaScript Closures helps to achieve that."
    },
    {
      "index": 115,
      "start_time": 451480.0,
      "end_time": 452820.0,
      "text": "Cut this code out here"
    },
    {
      "index": 116,
      "start_time": 453260.0,
      "end_time": 456120.0,
      "text": "and paste it right down below to see the later."
    },
    {
      "index": 117,
      "start_time": 456820.0,
      "end_time": 457840.0,
      "text": "Put this as a comment."
    },
    {
      "index": 118,
      "start_time": 462400.0,
      "end_time": 467600.0,
      "text": "This code of Counter was only to understand the basic concept of Closures."
    },
    {
      "index": 119,
      "start_time": 469400.0,
      "end_time": 472990.0,
      "text": "How can we use this stateful function to create"
    },
    {
      "index": 120,
      "start_time": 472780.0,
      "end_time": 473280.0,
      "text": "proper"
    },
    {
      "index": 121,
      "start_time": 476520.0,
      "end_time": 478359.0,
      "text": "object oriented programming in JavaScript."
    },
    {
      "index": 122,
      "start_time": 481620.0,
      "end_time": 484360.0,
      "text": "Some of the principles of Object Oriented Programming is"
    },
    {
      "index": 123,
      "start_time": 486680.0,
      "end_time": 487560.0,
      "text": "Abstraction."
    },
    {
      "index": 124,
      "start_time": 488780.0,
      "end_time": 489859.0,
      "text": "Abstraction says"
    },
    {
      "index": 125,
      "start_time": 492560.0,
      "end_time": 494480.0,
      "text": "show only what is necessary."
    },
    {
      "index": 126,
      "start_time": 500120.0,
      "end_time": 502360.0,
      "text": "Second principle is Encapsulation."
    },
    {
      "index": 127,
      "start_time": 503320.0,
      "end_time": 503920.0,
      "text": "Encapsulation says"
    },
    {
      "index": 128,
      "start_time": 504640.0,
      "end_time": 506240.0,
      "text": "hide complexity."
    },
    {
      "index": 129,
      "start_time": 508560.0,
      "end_time": 509360.0,
      "text": "Then we have"
    },
    {
      "index": 130,
      "start_time": 510600.0,
      "end_time": 510800.0,
      "text": "Inheritance"
    },
    {
      "index": 131,
      "start_time": 514799.0,
      "end_time": 515599.0,
      "text": "Parent child"
    },
    {
      "index": 132,
      "start_time": 516600.0,
      "end_time": 517280.0,
      "text": "relationship."
    },
    {
      "index": 133,
      "start_time": 518380.0,
      "end_time": 520480.0,
      "text": "then we have Polymorphism"
    },
    {
      "index": 134,
      "start_time": 523299.0,
      "end_time": 523959.0,
      "text": "which says"
    },
    {
      "index": 135,
      "start_time": 525560.0,
      "end_time": 528619.0,
      "text": "depending on situations, the object will behave differently."
    },
    {
      "index": 136,
      "start_time": 540380.0,
      "end_time": 542260.0,
      "text": "How are these principles"
    },
    {
      "index": 137,
      "start_time": 542660.0,
      "end_time": 543420.0,
      "text": "implemented"
    },
    {
      "index": 138,
      "start_time": 543720.0,
      "end_time": 544540.0,
      "text": "by Closures."
    },
    {
      "index": 139,
      "start_time": 545300.0,
      "end_time": 548760.0,
      "text": "First will start with Abstraction and Encapsulation."
    },
    {
      "index": 140,
      "start_time": 549860.0,
      "end_time": 552220.0,
      "text": "Let us say we want to create"
    },
    {
      "index": 141,
      "start_time": 553560.0,
      "end_time": 554280.0,
      "text": "a Customer"
    },
    {
      "index": 142,
      "start_time": 555480.0,
      "end_time": 556400.0,
      "text": "object."
    },
    {
      "index": 143,
      "start_time": 557120.0,
      "end_time": 558280.0,
      "text": "In the Customer object"
    },
    {
      "index": 144,
      "start_time": 559660.0,
      "end_time": 560839.0,
      "text": "we have some properties"
    },
    {
      "index": 145,
      "start_time": 564200.0,
      "end_time": 565340.0,
      "text": "the CustomerName property,"
    },
    {
      "index": 146,
      "start_time": 572420.0,
      "end_time": 573680.0,
      "text": "CustomerCode property"
    },
    {
      "index": 147,
      "start_time": 577420.0,
      "end_time": 578140.0,
      "text": "we can have"
    },
    {
      "index": 148,
      "start_time": 578720.0,
      "end_time": 579220.0,
      "text": "some"
    },
    {
      "index": 149,
      "start_time": 579980.0,
      "end_time": 581800.0,
      "text": "Validate function"
    },
    {
      "index": 150,
      "start_time": 584280.0,
      "end_time": 584920.0,
      "text": "and so on."
    },
    {
      "index": 151,
      "start_time": 589220.0,
      "end_time": 590900.0,
      "text": "We have one function here"
    },
    {
      "index": 152,
      "start_time": 591700.0,
      "end_time": 592420.0,
      "text": "which says"
    },
    {
      "index": 153,
      "start_time": 594440.0,
      "end_time": 595160.0,
      "text": "DbConnect"
    },
    {
      "index": 154,
      "start_time": 595920.0,
      "end_time": 597199.0,
      "text": "this connects to database and"
    },
    {
      "index": 155,
      "start_time": 598240.0,
      "end_time": 599160.0,
      "text": "get some data."
    },
    {
      "index": 156,
      "start_time": 600620.0,
      "end_time": 601320.0,
      "text": "In the validate"
    },
    {
      "index": 157,
      "start_time": 601860.0,
      "end_time": 602360.0,
      "text": "method"
    },
    {
      "index": 158,
      "start_time": 602880.0,
      "end_time": 606980.0,
      "text": "we are calling the DbConnect  first then doing some"
    },
    {
      "index": 159,
      "start_time": 607780.0,
      "end_time": 608620.0,
      "text": "validations."
    },
    {
      "index": 160,
      "start_time": 612400.0,
      "end_time": 612900.0,
      "text": "By default"
    },
    {
      "index": 161,
      "start_time": 614240.0,
      "end_time": 614740.0,
      "text": "we have"
    },
    {
      "index": 162,
      "start_time": 615220.0,
      "end_time": 615720.0,
      "text": "made"
    },
    {
      "index": 163,
      "start_time": 616720.0,
      "end_time": 617220.0,
      "text": "all"
    },
    {
      "index": 164,
      "start_time": 617700.0,
      "end_time": 618420.0,
      "text": "the things"
    },
    {
      "index": 165,
      "start_time": 619980.0,
      "end_time": 622420.0,
      "text": "private. In other words, we have implemented"
    },
    {
      "index": 166,
      "start_time": 624400.0,
      "end_time": 625000.0,
      "text": "Encapsulation."
    },
    {
      "index": 167,
      "start_time": 627400.0,
      "end_time": 628980.0,
      "text": "Whatever is the complexity we have hidden it."
    },
    {
      "index": 168,
      "start_time": 630960.0,
      "end_time": 631700.0,
      "text": "Abstraction says"
    },
    {
      "index": 169,
      "start_time": 632800.0,
      "end_time": 637800.0,
      "text": "show only what is necessary. What is needed to be shown to the end user, we have to him the CustomerName property,"
    },
    {
      "index": 170,
      "start_time": 638500.0,
      "end_time": 639380.0,
      "text": "CustomerCode,"
    },
    {
      "index": 171,
      "start_time": 640500.0,
      "end_time": 641420.0,
      "text": "Validate method"
    },
    {
      "index": 172,
      "start_time": 641820.0,
      "end_time": 644840.0,
      "text": "but we don&#39;t want to show the DbConnect method."
    },
    {
      "index": 173,
      "start_time": 645400.0,
      "end_time": 645900.0,
      "text": "This is"
    },
    {
      "index": 174,
      "start_time": 646480.0,
      "end_time": 647260.0,
      "text": "Encapsulated"
    },
    {
      "index": 175,
      "start_time": 647880.0,
      "end_time": 648580.0,
      "text": "We don&#39;t want"
    },
    {
      "index": 176,
      "start_time": 649220.0,
      "end_time": 651300.0,
      "text": "the person who is consuming the component"
    },
    {
      "index": 177,
      "start_time": 652600.0,
      "end_time": 653740.0,
      "text": "to connect to DB."
    },
    {
      "index": 178,
      "start_time": 653880.0,
      "end_time": 655900.0,
      "text": "It is done internally by the validate function."
    },
    {
      "index": 179,
      "start_time": 656780.0,
      "end_time": 658439.0,
      "text": "Now will implement"
    },
    {
      "index": 180,
      "start_time": 661520.0,
      "end_time": 662400.0,
      "text": "Abstraction"
    },
    {
      "index": 181,
      "start_time": 663320.0,
      "end_time": 664200.0,
      "text": "In the return"
    },
    {
      "index": 182,
      "start_time": 669660.0,
      "end_time": 670280.0,
      "text": "we want"
    },
    {
      "index": 183,
      "start_time": 671000.0,
      "end_time": 672460.0,
      "text": "the CustomerName to be public."
    },
    {
      "index": 184,
      "start_time": 673200.0,
      "end_time": 674920.0,
      "text": "When we are making things public"
    },
    {
      "index": 185,
      "start_time": 675280.0,
      "end_time": 678100.0,
      "text": "will call them with some user name."
    },
    {
      "index": 186,
      "start_time": 678540.0,
      "end_time": 679420.0,
      "text": "Internally this is"
    },
    {
      "index": 187,
      "start_time": 680320.0,
      "end_time": 684180.0,
      "text": "_CustomeName but from outside we want people to call it by CustomerName."
    },
    {
      "index": 188,
      "start_time": 686280.0,
      "end_time": 686780.0,
      "text": "When"
    },
    {
      "index": 189,
      "start_time": 687660.0,
      "end_time": 690680.0,
      "text": "anybody sets a property to CustomerName or a value to CutomerName"
    },
    {
      "index": 190,
      "start_time": 691160.0,
      "end_time": 694600.0,
      "text": "internally it will store it in _CustomerName."
    },
    {
      "index": 191,
      "start_time": 697960.0,
      "end_time": 699720.0,
      "text": "If we call to CustomerCode"
    },
    {
      "index": 192,
      "start_time": 700220.0,
      "end_time": 702640.0,
      "text": "internally it will set to CustomerCode."
    },
    {
      "index": 193,
      "start_time": 703240.0,
      "end_time": 705400.0,
      "text": "In the same we if we call Validate"
    },
    {
      "index": 194,
      "start_time": 705860.0,
      "end_time": 707180.0,
      "text": "internally it will call"
    },
    {
      "index": 195,
      "start_time": 708140.0,
      "end_time": 708860.0,
      "text": "Validate."
    },
    {
      "index": 196,
      "start_time": 716100.0,
      "end_time": 716980.0,
      "text": "In the return"
    },
    {
      "index": 197,
      "start_time": 717580.0,
      "end_time": 719420.0,
      "text": "we have not given DbConnect"
    },
    {
      "index": 198,
      "start_time": 720600.0,
      "end_time": 721219.0,
      "text": "DbConnect cannot be call from"
    },
    {
      "index": 199,
      "start_time": 721420.0,
      "end_time": 722600.0,
      "text": "outside."
    },
    {
      "index": 200,
      "start_time": 724640.0,
      "end_time": 726000.0,
      "text": "Because of Closures"
    },
    {
      "index": 201,
      "start_time": 726240.0,
      "end_time": 727200.0,
      "text": "we can implement"
    },
    {
      "index": 202,
      "start_time": 727660.0,
      "end_time": 733500.0,
      "text": "proper Object Oriented Programming concept because this is a closure a self contained object"
    },
    {
      "index": 203,
      "start_time": 735960.0,
      "end_time": 737820.0,
      "text": "that&#39;s make the good module."
    },
    {
      "index": 204,
      "start_time": 740600.0,
      "end_time": 741790.0,
      "text": "We have a Customer,"
    },
    {
      "index": 205,
      "start_time": 741680.0,
      "end_time": 742579.0,
      "text": "an object here."
    },
    {
      "index": 206,
      "start_time": 743320.0,
      "end_time": 744680.0,
      "text": "These are the private"
    },
    {
      "index": 207,
      "start_time": 745400.0,
      "end_time": 745540.0,
      "text": "things"
    },
    {
      "index": 208,
      "start_time": 745820.0,
      "end_time": 746760.0,
      "text": "and these are"
    },
    {
      "index": 209,
      "start_time": 747320.0,
      "end_time": 751380.0,
      "text": "public or abstraction which we want"
    },
    {
      "index": 210,
      "start_time": 752260.0,
      "end_time": 755220.0,
      "text": "the developer who is consuming the component to know about it."
    },
    {
      "index": 211,
      "start_time": 767980.0,
      "end_time": 769400.0,
      "text": "We can start using"
    },
    {
      "index": 212,
      "start_time": 769620.0,
      "end_time": 772100.0,
      "text": "the self contained customer object."
    },
    {
      "index": 213,
      "start_time": 772540.0,
      "end_time": 774339.0,
      "text": "The self contained customer object"
    },
    {
      "index": 214,
      "start_time": 774740.0,
      "end_time": 775460.0,
      "text": "is clean"
    },
    {
      "index": 215,
      "start_time": 776600.0,
      "end_time": 776619.0,
      "text": "it is not"
    },
    {
      "index": 216,
      "start_time": 777600.0,
      "end_time": 779700.0,
      "text": "confusing with the Global Variables."
    },
    {
      "index": 217,
      "start_time": 780000.0,
      "end_time": 781480.0,
      "text": "It is completely isolated."
    },
    {
      "index": 218,
      "start_time": 800120.0,
      "end_time": 801900.0,
      "text": "We have a very beautiful object here"
    },
    {
      "index": 219,
      "start_time": 802360.0,
      "end_time": 804940.0,
      "text": "which is following abstraction, Encapsulation"
    },
    {
      "index": 220,
      "start_time": 806520.0,
      "end_time": 807960.0,
      "text": "it is self contained."
    },
    {
      "index": 221,
      "start_time": 820140.0,
      "end_time": 821699.0,
      "text": "To implement inheritance"
    },
    {
      "index": 222,
      "start_time": 825800.0,
      "end_time": 827620.0,
      "text": "we need to set"
    },
    {
      "index": 223,
      "start_time": 827940.0,
      "end_time": 830200.0,
      "text": "the prototype objects."
    },
    {
      "index": 224,
      "start_time": 835700.0,
      "end_time": 837800.0,
      "text": "For Abstraction, Encapsulation"
    },
    {
      "index": 225,
      "start_time": 838520.0,
      "end_time": 841720.0,
      "text": "will use Closures. This implemented by Closures."
    },
    {
      "index": 226,
      "start_time": 847200.0,
      "end_time": 848900.0,
      "text": "This is implemented by Prototype"
    },
    {
      "index": 227,
      "start_time": 850500.0,
      "end_time": 854800.0,
      "text": "We can do proper object oriented programming in JavaScript."
    },
    {
      "index": 228,
      "start_time": 856800.0,
      "end_time": 857540.0,
      "text": "Polymorphism"
    },
    {
      "index": 229,
      "start_time": 858900.0,
      "end_time": 862840.0,
      "text": "depending on situations the object should change the behavior."
    },
    {
      "index": 230,
      "start_time": 863160.0,
      "end_time": 864920.0,
      "text": "JavaScript is a dynamic language"
    },
    {
      "index": 231,
      "start_time": 865820.0,
      "end_time": 868400.0,
      "text": "there is not any polymorphism or rather"
    },
    {
      "index": 232,
      "start_time": 868560.0,
      "end_time": 870300.0,
      "text": "there is always polymorphism"
    },
    {
      "index": 233,
      "start_time": 872480.0,
      "end_time": 874460.0,
      "text": "Any variable can become of any data type."
    },
    {
      "index": 234,
      "start_time": 875620.0,
      "end_time": 880800.0,
      "text": "We can say var cust = new customer. This points to the"
    },
    {
      "index": 235,
      "start_time": 880760.0,
      "end_time": 882300.0,
      "text": "parent at some moment of time"
    },
    {
      "index": 236,
      "start_time": 882460.0,
      "end_time": 885140.0,
      "text": "and the same customer can appoint towards"
    },
    {
      "index": 237,
      "start_time": 887580.0,
      "end_time": 888420.0,
      "text": "Customer child."
    },
    {
      "index": 238,
      "start_time": 889860.0,
      "end_time": 891760.0,
      "text": "When we talk about polymorphism in JavaScript"
    },
    {
      "index": 239,
      "start_time": 892600.0,
      "end_time": 893100.0,
      "text": "it is"
    },
    {
      "index": 240,
      "start_time": 893260.0,
      "end_time": 894140.0,
      "text": "by default"
    },
    {
      "index": 241,
      "start_time": 894840.0,
      "end_time": 896420.0,
      "text": "the behavior of JavaScript."
    },
    {
      "index": 242,
      "start_time": 897360.0,
      "end_time": 898600.0,
      "text": "Because of closures"
    },
    {
      "index": 243,
      "start_time": 898880.0,
      "end_time": 899600.0,
      "text": "because of"
    },
    {
      "index": 244,
      "start_time": 900720.0,
      "end_time": 901880.0,
      "text": "self contained"
    },
    {
      "index": 245,
      "start_time": 902200.0,
      "end_time": 904360.0,
      "text": "function which is tied up to an environment"
    },
    {
      "index": 246,
      "start_time": 904840.0,
      "end_time": 905580.0,
      "text": "at that time"
    },
    {
      "index": 247,
      "start_time": 905880.0,
      "end_time": 908740.0,
      "text": "we are able to achieve proper object oriented programming concept."
    },
    {
      "index": 248,
      "start_time": 912800.0,
      "end_time": 918600.0,
      "text": "Closure is a function inside a function. This is Customer and the _Validate"
    },
    {
      "index": 249,
      "start_time": 918600.0,
      "end_time": 919840.0,
      "text": "is the closure inside it."
    },
    {
      "index": 250,
      "start_time": 921960.0,
      "end_time": 925960.0,
      "text": "Closures are isolated stateful functions. Because of that"
    },
    {
      "index": 251,
      "start_time": 926360.0,
      "end_time": 929560.0,
      "text": "we can implement abstraction, encapsulation,"
    },
    {
      "index": 252,
      "start_time": 929880.0,
      "end_time": 933800.0,
      "text": "we can implement proper object oriented programming concepts"
    },
    {
      "index": 253,
      "start_time": 933160.0,
      "end_time": 934600.0,
      "text": "using closers."
    },
    {
      "index": 254,
      "start_time": 936800.0,
      "end_time": 939240.0,
      "text": "In this video we were trying to understand what exactly are JavaScript Closures."
    },
    {
      "index": 255,
      "start_time": 939580.0,
      "end_time": 943400.0,
      "text": "In the next video  we are going to discuss about very very important thing called as"
    },
    {
      "index": 256,
      "start_time": 943300.0,
      "end_time": 946240.0,
      "text": "IIFE(Immediately Invoked Function Expression)."
    },
    {
      "index": 257,
      "start_time": 948300.0,
      "end_time": 950990.0,
      "text": "When we talk about good object oriented programming"
    },
    {
      "index": 258,
      "start_time": 950560.0,
      "end_time": 952400.0,
      "text": "one of the thing is we want to"
    },
    {
      "index": 259,
      "start_time": 954480.0,
      "end_time": 959440.0,
      "text": "put the components into modules like in C# and Java we have something called as namespaces."
    },
    {
      "index": 260,
      "start_time": 960400.0,
      "end_time": 961719.0,
      "text": "In the next video will talk about"
    },
    {
      "index": 261,
      "start_time": 961980.0,
      "end_time": 964100.0,
      "text": "how immediately invoke function expression"
    },
    {
      "index": 262,
      "start_time": 965240.0,
      "end_time": 967380.0,
      "text": "helps to implement namespaces"
    },
    {
      "index": 263,
      "start_time": 967860.0,
      "end_time": 968520.0,
      "text": "in JavaScript."
    },
    {
      "index": 264,
      "start_time": 969200.0,
      "end_time": 969880.0,
      "text": "Thank you very much"
    }
  ]
}