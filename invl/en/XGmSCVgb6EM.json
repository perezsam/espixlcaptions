{
  "video_id": "XGmSCVgb6EM",
  "title": "Trace Tutorial for ARM® Cortex-™ M",
  "es": 0,
  "json": [
    {
      "index": 1,
      "start_time": 0.0,
      "end_time": 3000.0,
      "text": "&gt;&gt;Hello and welcome to this Video-Tutorial"
    },
    {
      "index": 2,
      "start_time": 3000.0,
      "end_time": 9000.0,
      "text": "&gt;&gt;my name is Ralf Kopsch - I am Senior Support Engineer for  Keil Microcontroller Software Development Tools"
    },
    {
      "index": 3,
      "start_time": 9000.0,
      "end_time": 15000.0,
      "text": "&gt;&gt;Let me give you a brief overview of the  Cortex-M Trace functionality"
    },
    {
      "index": 4,
      "start_time": 15000.0,
      "end_time": 21000.0,
      "text": "&gt;&gt;an outstanding feature of ARM Cortex-M based microcontrollers and the Keil MDK-ARM toolset"
    },
    {
      "index": 5,
      "start_time": 21000.0,
      "end_time": 25000.0,
      "text": "&gt;&gt;The limits of Run-Stop Debugging are apparent  when testing time-critical control applications"
    },
    {
      "index": 6,
      "start_time": 25000.0,
      "end_time": 28000.0,
      "text": "&gt;&gt;like motor control or communication stacks"
    },
    {
      "index": 7,
      "start_time": 28000.0,
      "end_time": 33000.0,
      "text": "&gt;&gt;Single-stepping or breakpoints change the dynamic behavior"
    },
    {
      "index": 8,
      "start_time": 33000.0,
      "end_time": 38000.0,
      "text": "&gt;&gt;Frequently software problems can only be detected  in the active or running system"
    },
    {
      "index": 9,
      "start_time": 38000.0,
      "end_time": 41000.0,
      "text": "&gt;&gt;Trace lets you analyze the running system"
    },
    {
      "index": 10,
      "start_time": 41000.0,
      "end_time": 46000.0,
      "text": "&gt;&gt;ARM Cortex M processors integrate the CoreSight Debug &amp; Trace Logic"
    },
    {
      "index": 11,
      "start_time": 46000.0,
      "end_time": 49000.0,
      "text": "&gt;&gt;that offers the following features"
    },
    {
      "index": 12,
      "start_time": 49000.0,
      "end_time": 53000.0,
      "text": "&gt;&gt;The Breakpoint Unit allows run-stop debugging with  up to 8 breakpoints"
    },
    {
      "index": 13,
      "start_time": 53000.0,
      "end_time": 58000.0,
      "text": "&gt;&gt;Memory Access allows monitoring of variables  buffers and peripherals"
    },
    {
      "index": 14,
      "start_time": 58000.0,
      "end_time": 61000.0,
      "text": "&gt;&gt;while application code is running at full speed."
    },
    {
      "index": 15,
      "start_time": 61000.0,
      "end_time": 66000.0,
      "text": "&gt;&gt;Data Watchpoints trace memory accesses with data value  and program address"
    },
    {
      "index": 16,
      "start_time": 66000.0,
      "end_time": 69000.0,
      "text": "&gt;&gt;Optional program execution can be stopped"
    },
    {
      "index": 17,
      "start_time": 69000.0,
      "end_time": 75000.0,
      "text": "&gt;&gt;Exception- and Instrumented Trace communicate important  program events via debug channels"
    },
    {
      "index": 18,
      "start_time": 75000.0,
      "end_time": 82000.0,
      "text": "&gt;&gt;Instruction Trace streams the complete program execution for  recording and analysis"
    },
    {
      "index": 19,
      "start_time": 82000.0,
      "end_time": 87000.0,
      "text": "&gt;&gt;The various Trace types can be selectively enabled and  contain timing information"
    },
    {
      "index": 20,
      "start_time": 87000.0,
      "end_time": 92000.0,
      "text": "&gt;&gt;Let me exemplify the usage of these trace features in  the uVision Debugger"
    },
    {
      "index": 21,
      "start_time": 92000.0,
      "end_time": 98000.0,
      "text": "&gt;&gt;The Logic Analyzer uses Data Watchpoints and provides a  graphical display of variable changes"
    },
    {
      "index": 22,
      "start_time": 98000.0,
      "end_time": 102000.0,
      "text": "&gt;&gt;You may choose up to 4 variables and select different display"
    },
    {
      "index": 23,
      "start_time": 102000.0,
      "end_time": 106000.0,
      "text": "&gt;&gt;modes to show state changes or an analogue signal"
    },
    {
      "index": 24,
      "start_time": 106000.0,
      "end_time": 110000.0,
      "text": "&gt;&gt;Data Watchpoints allow also Trace Recording of memory accesses"
    },
    {
      "index": 25,
      "start_time": 110000.0,
      "end_time": 116000.0,
      "text": "&gt;&gt;ITM Trace communicates for example details about  interrupt execution"
    },
    {
      "index": 26,
      "start_time": 116000.0,
      "end_time": 118000.0,
      "text": "&gt;&gt;It shows how often interrupts are executed"
    },
    {
      "index": 27,
      "start_time": 118000.0,
      "end_time": 124000.0,
      "text": "&gt;&gt;and provides information about minimum and maximum  execution time of the interrupt function."
    },
    {
      "index": 28,
      "start_time": 124000.0,
      "end_time": 129000.0,
      "text": "&gt;&gt;ITM Trace displays also RTOS thread execution over time  in the Event Viewer"
    },
    {
      "index": 29,
      "start_time": 129000.0,
      "end_time": 133000.0,
      "text": "&gt;&gt;and may be used with code instrumentation"
    },
    {
      "index": 30,
      "start_time": 133000.0,
      "end_time": 136000.0,
      "text": "&gt;&gt;It even enables a printf-style debug output"
    },
    {
      "index": 31,
      "start_time": 136000.0,
      "end_time": 140000.0,
      "text": "&gt;&gt;The Performance Analyzer uses Instruction Trace"
    },
    {
      "index": 32,
      "start_time": 140000.0,
      "end_time": 144000.0,
      "text": "&gt;&gt;While your application is running you can identify  performance bottlenecks"
    },
    {
      "index": 33,
      "start_time": 144000.0,
      "end_time": 149000.0,
      "text": "&gt;&gt;and time-consuming hotspots in order to optimize the algorithms"
    },
    {
      "index": 34,
      "start_time": 149000.0,
      "end_time": 155000.0,
      "text": "&gt;&gt; Instruction Trace enables also Code Coverage to fulfill  certification requirements"
    },
    {
      "index": 35,
      "start_time": 155000.0,
      "end_time": 161000.0,
      "text": "&gt;&gt; and In-depth analysis of the execution history to identify  sporadic executions errors"
    },
    {
      "index": 36,
      "start_time": 161000.0,
      "end_time": 167000.0,
      "text": "&gt;&gt; In this application example most of the time is spend in  the getkey() function polling a status bit"
    },
    {
      "index": 37,
      "start_time": 167000.0,
      "end_time": 171000.0,
      "text": "&gt;&gt;Interrupt driven I/O may be used to eliminate this"
    },
    {
      "index": 38,
      "start_time": 171000.0,
      "end_time": 176000.0,
      "text": "&gt;&gt;Lets us explore the various physical connection interfaces  to the Trace Unit"
    },
    {
      "index": 39,
      "start_time": 176000.0,
      "end_time": 182000.0,
      "text": "&gt;&gt;Evaluation Kits frequently offer two standardized  debug connectors in a small 0.05” pitch"
    },
    {
      "index": 40,
      "start_time": 182000.0,
      "end_time": 189000.0,
      "text": "&gt;&gt;The 10-pin debug connector allows run-control and  serial wire trace output with the SWO pin"
    },
    {
      "index": 41,
      "start_time": 189000.0,
      "end_time": 195000.0,
      "text": "&gt;&gt;The 20-pin debug ETM connector is a superset of  the 10-pin connector"
    },
    {
      "index": 42,
      "start_time": 195000.0,
      "end_time": 199000.0,
      "text": "&gt;&gt;and offers full instruction trace output"
    },
    {
      "index": 43,
      "start_time": 199000.0,
      "end_time": 206000.0,
      "text": "&gt;&gt; Almost every Cortex-M3/M4 microcontroller device offers  the Serial Wire or SWO trace output"
    },
    {
      "index": 44,
      "start_time": 206000.0,
      "end_time": 211000.0,
      "text": "&gt;&gt;SWO delivers data watchpoints,exception and instrumented trace"
    },
    {
      "index": 45,
      "start_time": 211000.0,
      "end_time": 215000.0,
      "text": "&gt;&gt;However, SWO does not allow instruction trace"
    },
    {
      "index": 46,
      "start_time": 215000.0,
      "end_time": 220000.0,
      "text": "&gt;&gt;Many Cortex-M3/M4 microcontrollers have an additional  5-pin trace port interface"
    },
    {
      "index": 47,
      "start_time": 220000.0,
      "end_time": 223000.0,
      "text": "&gt;&gt;that delivers the full instruction trace stream"
    },
    {
      "index": 48,
      "start_time": 223000.0,
      "end_time": 229000.0,
      "text": "&gt;&gt;Trace information can be selectively enabled to adjust the  type of information that interests you"
    },
    {
      "index": 49,
      "start_time": 229000.0,
      "end_time": 233000.0,
      "text": "&gt;&gt; With Trace Port you can have the full range of  trace information"
    },
    {
      "index": 50,
      "start_time": 233000.0,
      "end_time": 238000.0,
      "text": "&gt;&gt;that includes data watchpoints, exceptions, instrumented  and instruction trace"
    },
    {
      "index": 51,
      "start_time": 238000.0,
      "end_time": 245000.0,
      "text": "&gt;&gt;Some Cortex-M3/M4 microcontrollers provide an ETB or  the Embedded Trace Buffer"
    },
    {
      "index": 52,
      "start_time": 245000.0,
      "end_time": 250000.0,
      "text": "&gt;&gt;ETB streams the trace information in an on-chip RAM"
    },
    {
      "index": 53,
      "start_time": 250000.0,
      "end_time": 253000.0,
      "text": "&gt;&gt;that can be read via the normal run-control interface."
    },
    {
      "index": 54,
      "start_time": 253000.0,
      "end_time": 257000.0,
      "text": "&gt;&gt;In this mode, no additional trace pins are required"
    },
    {
      "index": 55,
      "start_time": 257000.0,
      "end_time": 261000.0,
      "text": "&gt;&gt;but the amount of trace information is limited by the  on-chip RAM"
    },
    {
      "index": 56,
      "start_time": 261000.0,
      "end_time": 267000.0,
      "text": "&gt;&gt;Therefore it is important that your debugger offers  triggering of trace information based on program conditions"
    },
    {
      "index": 57,
      "start_time": 267000.0,
      "end_time": 271000.0,
      "text": "&gt;&gt;Even the smallest ARM processor, the Cortex-M0+"
    },
    {
      "index": 58,
      "start_time": 271000.0,
      "end_time": 276000.0,
      "text": "&gt;&gt; offers trace via the MTB or the Micro Trace Buffer"
    },
    {
      "index": 59,
      "start_time": 276000.0,
      "end_time": 284000.0,
      "text": "&gt;&gt;Besides run-control debugging the Cortex-M0+ provides  instruction trace that is streamed to an on-chip RAM"
    },
    {
      "index": 60,
      "start_time": 284000.0,
      "end_time": 289000.0,
      "text": "&gt;&gt;This solution is a good compromise for small-form  factor devices that have pin-limitations"
    },
    {
      "index": 61,
      "start_time": 289000.0,
      "end_time": 295000.0,
      "text": "&gt;&gt;since MTB trace can be read even via the 2-pin  SWD debug interface"
    },
    {
      "index": 62,
      "start_time": 295000.0,
      "end_time": 300000.0,
      "text": "&gt;&gt;Now let’s take a look to ARM’s debug adapter and  development tools"
    },
    {
      "index": 63,
      "start_time": 300000.0,
      "end_time": 304000.0,
      "text": "&gt;&gt;A full-featured trace solution requires the  following components"
    },
    {
      "index": 64,
      "start_time": 304000.0,
      "end_time": 309000.0,
      "text": "&gt;&gt;MDK-ARM that includes uVision the integrated  development environment"
    },
    {
      "index": 65,
      "start_time": 309000.0,
      "end_time": 312000.0,
      "text": "&gt;&gt;with a Debugger and various trace analysis features"
    },
    {
      "index": 66,
      "start_time": 312000.0,
      "end_time": 315000.0,
      "text": "&gt;&gt;ULINKpro which connects to your target hardware"
    },
    {
      "index": 67,
      "start_time": 315000.0,
      "end_time": 320000.0,
      "text": "&gt;&gt;and streams the complete trace information to your  development workstation"
    },
    {
      "index": 68,
      "start_time": 320000.0,
      "end_time": 325000.0,
      "text": "&gt;&gt;ULINKpro connects via 10-pin or 20-pin debug connectors  to the target hardware"
    },
    {
      "index": 69,
      "start_time": 325000.0,
      "end_time": 331000.0,
      "text": "&gt;&gt;Remember that only the 20-pin Debug/ETM connector  provides the full instruction trace stream"
    },
    {
      "index": 70,
      "start_time": 331000.0,
      "end_time": 338000.0,
      "text": "&gt;&gt;The ULINKpro is the ARM Debug and Trace adapter that is  specifically designed for Cortex-M microcontrollers."
    },
    {
      "index": 71,
      "start_time": 338000.0,
      "end_time": 356000.0,
      "text": "&gt;&gt;It offers connectivity to all Cortex-M microcontrollers  and supports all trace variants"
    },
    {
      "index": 72,
      "start_time": 356000.0,
      "end_time": 360000.0,
      "text": "&gt;&gt;Full instruction trace with ULINKpro’s  streaming trace technology"
    },
    {
      "index": 73,
      "start_time": 360000.0,
      "end_time": 365000.0,
      "text": "&gt;&gt;that records the complete program execution and  overcomes trace buffer limitations"
    },
    {
      "index": 74,
      "start_time": 365000.0,
      "end_time": 368000.0,
      "text": "&gt;&gt;It is required for non-intrusive program analysis"
    },
    {
      "index": 75,
      "start_time": 368000.0,
      "end_time": 373000.0,
      "text": "&gt;&gt;and provides full code coverage and  performance analysis without compromises"
    },
    {
      "index": 76,
      "start_time": 373000.0,
      "end_time": 380000.0,
      "text": "&gt;&gt;The ULINKpro debug and trace adapter is used with  the Keil MDK-ARM® microcontroller development kit"
    },
    {
      "index": 77,
      "start_time": 380000.0,
      "end_time": 386000.0,
      "text": "&gt;&gt;Please refer to keil.com  for detailed information about  the usage of this powerful trace solution"
    },
    {
      "index": 78,
      "start_time": 386000.0,
      "end_time": 389000.0,
      "text": "&gt;&gt;Thank you for your attention!"
    },
    {
      "index": 79,
      "start_time": 389000.0,
      "end_time": 399000.0,
      "text": "&gt;&gt;In case of further questions please contact our  Sales- and Support team"
    }
  ]
}