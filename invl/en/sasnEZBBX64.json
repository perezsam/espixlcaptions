{
  "video_id": "sasnEZBBX64",
  "title": "Gray Code | Gray to Binary code conversion | Binary to Gray code conversion | DE.07",
  "es": 0,
  "json": [
    {
      "index": 1,
      "start_time": 12170.0,
      "end_time": 15750.0,
      "text": "The previous video discussed about the BCD and X3 codes."
    },
    {
      "index": 2,
      "start_time": 15750.0,
      "end_time": 19430.0,
      "text": "U can check the links in the description to check that video."
    },
    {
      "index": 3,
      "start_time": 19430.0,
      "end_time": 24300.0,
      "text": "In this video we will talk about the gray code, its applications and the conversion"
    },
    {
      "index": 4,
      "start_time": 24300.0,
      "end_time": 27610.0,
      "text": "from gray to binary and binary to gray."
    },
    {
      "index": 5,
      "start_time": 27610.0,
      "end_time": 33800.0,
      "text": "This code is also known as the reflective code because of its peculiar arrangement or"
    },
    {
      "index": 6,
      "start_time": 33800.0,
      "end_time": 34150.0,
      "text": "representation."
    },
    {
      "index": 7,
      "start_time": 34150.0,
      "end_time": 39460.0,
      "text": "This code is named after Frank Gray and the successive numbers differ only by the single"
    },
    {
      "index": 8,
      "start_time": 39460.0,
      "end_time": 40760.0,
      "text": "bit."
    },
    {
      "index": 9,
      "start_time": 40760.0,
      "end_time": 42980.0,
      "text": "Let us take a look at how to construct this code."
    },
    {
      "index": 10,
      "start_time": 44400.0,
      "end_time": 50860.0,
      "text": "If it consists of only one bit we can represent two numbers i.e) 0 and 1."
    },
    {
      "index": 11,
      "start_time": 51440.0,
      "end_time": 55990.0,
      "text": "On adding one more bit, 4 numbers can be represented."
    },
    {
      "index": 12,
      "start_time": 55720.0,
      "end_time": 60879.0,
      "text": "To write the numbers in ascending order using Gray code, we use something called mirror"
    },
    {
      "index": 13,
      "start_time": 60880.0,
      "end_time": 61420.0,
      "text": "technique."
    },
    {
      "index": 14,
      "start_time": 62260.0,
      "end_time": 64860.0,
      "text": "Let us try it to write the numbers 0 to 3."
    },
    {
      "index": 15,
      "start_time": 65680.0,
      "end_time": 71800.0,
      "text": "0 is represented as 00 and 1 as 01."
    },
    {
      "index": 16,
      "start_time": 71980.0,
      "end_time": 79980.0,
      "text": "Now the next two digits are obtained by changing MSB from 0 to 1 and placing a mirror at LSB."
    },
    {
      "index": 17,
      "start_time": 80880.0,
      "end_time": 85390.0,
      "text": "This will give us 11 for 2 and 10 for 3."
    },
    {
      "index": 18,
      "start_time": 86380.0,
      "end_time": 91899.0,
      "text": "If we look at the numbers, we can see that each successive number is different from the"
    },
    {
      "index": 19,
      "start_time": 91900.0,
      "end_time": 94260.0,
      "text": "previous bit by only one bit."
    },
    {
      "index": 20,
      "start_time": 94800.0,
      "end_time": 101240.0,
      "text": "By adding one more bit, that is three bits altogether, we can represent 8 numbers."
    },
    {
      "index": 21,
      "start_time": 101980.0,
      "end_time": 103740.0,
      "text": "Let us try the mirroring technique."
    },
    {
      "index": 22,
      "start_time": 104440.0,
      "end_time": 111719.0,
      "text": "Every time the bits end, add 1 as MSB and place mirror below the remaining bits to get"
    },
    {
      "index": 23,
      "start_time": 111720.0,
      "end_time": 115240.0,
      "text": "its reflection and one gets the decimal numbers"
    },
    {
      "index": 24,
      "start_time": 115980.0,
      "end_time": 119380.0,
      "text": "So now we understand why it is called as reflective code."
    },
    {
      "index": 25,
      "start_time": 120360.0,
      "end_time": 122980.0,
      "text": "This code was developed as error checking code."
    },
    {
      "index": 26,
      "start_time": 123480.0,
      "end_time": 129600.0,
      "text": "As each successive numbers differ only by a single bit, this code finds use in error"
    },
    {
      "index": 27,
      "start_time": 129720.0,
      "end_time": 133200.0,
      "text": "checking and corrections in digital  communications."
    },
    {
      "index": 28,
      "start_time": 134000.0,
      "end_time": 139200.0,
      "text": "Now let us try converting binary numbers to Gray code."
    },
    {
      "index": 29,
      "start_time": 139210.0,
      "end_time": 146209.0,
      "text": "For this we must know the XOR operation which has been covered in the other lecture of this"
    },
    {
      "index": 30,
      "start_time": 146209.0,
      "end_time": 146800.0,
      "text": "series."
    },
    {
      "index": 31,
      "start_time": 147690.0,
      "end_time": 153340.0,
      "text": "You can find the link to that video in the description below or the suggested card in"
    },
    {
      "index": 32,
      "start_time": 153340.0,
      "end_time": 155280.0,
      "text": "the top right corner of the video."
    },
    {
      "index": 33,
      "start_time": 156360.0,
      "end_time": 160180.0,
      "text": "The MSB of gray code will be same as MSB of binary."
    },
    {
      "index": 34,
      "start_time": 161140.0,
      "end_time": 168299.0,
      "text": "The next lower bit of gray code is obtained by taking X-or of MSB and next lower"
    },
    {
      "index": 35,
      "start_time": 168300.0,
      "end_time": 170200.0,
      "text": "bit of binary number."
    },
    {
      "index": 36,
      "start_time": 170920.0,
      "end_time": 176320.0,
      "text": "The process of XORing continues till all the binary bits are converted to gray code."
    },
    {
      "index": 37,
      "start_time": 186740.0,
      "end_time": 188860.0,
      "text": "Let us try with an example."
    },
    {
      "index": 38,
      "start_time": 188970.0,
      "end_time": 192220.0,
      "text": "We will convert 1010 to gray code."
    },
    {
      "index": 39,
      "start_time": 192240.0,
      "end_time": 197560.0,
      "text": "The MSB 1 is copied as it is to give MSB of gray code."
    },
    {
      "index": 40,
      "start_time": 198460.0,
      "end_time": 206660.0,
      "text": "Next bit of Gray code is obtained by taking X-OR of 1 and 0 which gives 1, X-ORing 0 and"
    },
    {
      "index": 41,
      "start_time": 206810.0,
      "end_time": 212280.0,
      "text": "1 gives 1 and X-ORing 1 and 0 gives 1."
    },
    {
      "index": 42,
      "start_time": 212280.0,
      "end_time": 216540.0,
      "text": "So the obtained gray code is 1111."
    },
    {
      "index": 43,
      "start_time": 218280.0,
      "end_time": 221310.0,
      "text": "We continue with understanding gray to binary conversion."
    },
    {
      "index": 44,
      "start_time": 222200.0,
      "end_time": 226820.0,
      "text": "The MSB of gray is copied as it is to give MSB of binary."
    },
    {
      "index": 45,
      "start_time": 227500.0,
      "end_time": 233340.0,
      "text": "The next binary bits are obtained by X-ORing the existing binary bit with GRAY bits."
    },
    {
      "index": 46,
      "start_time": 237280.0,
      "end_time": 241400.0,
      "text": "We will convert 1010 from GRAY to binary."
    },
    {
      "index": 47,
      "start_time": 242180.0,
      "end_time": 243720.0,
      "text": "The MSB will be 1."
    },
    {
      "index": 48,
      "start_time": 244720.0,
      "end_time": 249460.0,
      "text": "Now we will X-OR the MSB of binary with the next lower bit of GRAY"
    },
    {
      "index": 49,
      "start_time": 250280.0,
      "end_time": 252780.0,
      "text": "X-ORing 1 and 0 will produce 1."
    },
    {
      "index": 50,
      "start_time": 253860.0,
      "end_time": 260180.0,
      "text": "This 1 on X-ORing with 1 will give 0 and X-ORing 0 with 0 will produce 0."
    },
    {
      "index": 51,
      "start_time": 260940.0,
      "end_time": 268580.0,
      "text": "So the binary equivalent is 1100 for GRAY code 1010."
    },
    {
      "index": 52,
      "start_time": 270960.0,
      "end_time": 275560.0,
      "text": "The next video in this series will discuss the error detection techniques and error detection"
    },
    {
      "index": 53,
      "start_time": 275560.0,
      "end_time": 276600.0,
      "text": "codes."
    }
  ]
}